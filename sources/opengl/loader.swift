/*
    THIS FILE IS GENERATED. ALL MODIFICATIONS MAY BE LOST!

    Copyright 2017, Kelvin Ma (“taylorswift”), kelvin13ma@gmail.com

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

let ss0:String = "Available in extension '3DFX_tbuffer'", 
    ss1:String = "Available in extension 'AMD_debug_output'", 
    ss2:String = "Available in extension 'AMD_draw_buffers_blend'", 
    ss3:String = "Available in extension 'AMD_gpu_shader_int64'", 
    ss4:String = "Available in extension 'AMD_interleaved_elements'", 
    ss5:String = "Available in extension 'AMD_multi_draw_indirect'", 
    ss6:String = "Available in extension 'AMD_name_gen_delete'", 
    ss7:String = "Available in extension 'AMD_occlusion_query_event'", 
    ss8:String = "Available in extension 'AMD_performance_monitor'", 
    ss9:String = "Available in extension 'AMD_sample_positions'", 
    ss10:String = "Available in extension 'AMD_sparse_texture'", 
    ss11:String = "Available in extension 'AMD_stencil_operation_extended'", 
    ss12:String = "Available in extension 'AMD_vertex_shader_tessellator'", 
    ss13:String = "Available in extension 'ANGLE_framebuffer_blit'", 
    ss14:String = "Available in extension 'ANGLE_framebuffer_multisample'", 
    ss15:String = "Available in extension 'ANGLE_instanced_arrays'", 
    ss16:String = "Available in extension 'ANGLE_translated_shader_source'", 
    ss17:String = "Available in extension 'APPLE_copy_texture_levels'", 
    ss18:String = "Available in extension 'APPLE_element_array'", 
    ss19:String = "Available in extension 'APPLE_fence'", 
    ss20:String = "Available in extension 'APPLE_flush_buffer_range'", 
    ss21:String = "Available in extension 'APPLE_framebuffer_multisample'", 
    ss22:String = "Available in extension 'APPLE_object_purgeable'", 
    ss23:String = "Available in extension 'APPLE_sync'", 
    ss24:String = "Available in extension 'APPLE_texture_range'", 
    ss25:String = "Available in extension 'APPLE_vertex_array_object'", 
    ss26:String = "Available in extension 'APPLE_vertex_array_range'", 
    ss27:String = "Available in extension 'APPLE_vertex_program_evaluators'", 
    ss28:String = "Available in extension 'ARB_base_instance'", 
    ss29:String = "Available in extension 'ARB_bindless_texture'", 
    ss30:String = "Available in extension 'ARB_blend_func_extended'", 
    ss31:String = "Available in extension 'ARB_buffer_storage'", 
    ss32:String = "Available in extension 'ARB_cl_event'", 
    ss33:String = "Available in extension 'ARB_clear_buffer_object'", 
    ss34:String = "Available in extension 'ARB_clear_texture'", 
    ss35:String = "Available in extension 'ARB_clip_control'", 
    ss36:String = "Available in extension 'ARB_color_buffer_float'", 
    ss37:String = "Available in extension 'ARB_compute_shader'", 
    ss38:String = "Available in extension 'ARB_compute_variable_group_size'", 
    ss39:String = "Available in extension 'ARB_copy_buffer'", 
    ss40:String = "Available in extension 'ARB_copy_image'", 
    ss41:String = "Available in extension 'ARB_debug_output'", 
    ss42:String = "Available in extension 'ARB_direct_state_access'", 
    ss43:String = "Available in extension 'ARB_draw_buffers_blend'", 
    ss44:String = "Available in extension 'ARB_draw_buffers'", 
    ss45:String = "Available in extension 'ARB_draw_elements_base_vertex'", 
    ss46:String = "Available in extension 'ARB_draw_indirect'", 
    ss47:String = "Available in extension 'ARB_draw_instanced'", 
    ss48:String = "Available in extension 'ARB_ES2_compatibility'", 
    ss49:String = "Available in extension 'ARB_ES3_1_compatibility'", 
    ss50:String = "Available in extension 'ARB_ES3_2_compatibility'", 
    ss51:String = "Available in extension 'ARB_fragment_program'", 
    ss52:String = "Available in extension 'ARB_framebuffer_no_attachments'", 
    ss53:String = "Available in extension 'ARB_framebuffer_object'", 
    ss54:String = "Available in extension 'ARB_geometry_shader4'", 
    ss55:String = "Available in extension 'ARB_get_program_binary'", 
    ss56:String = "Available in extension 'ARB_get_texture_sub_image'", 
    ss57:String = "Available in extension 'ARB_gpu_shader_fp64'", 
    ss58:String = "Available in extension 'ARB_gpu_shader_int64'", 
    ss59:String = "Available in extension 'ARB_imaging'", 
    ss60:String = "Available in extension 'ARB_indirect_parameters'", 
    ss61:String = "Available in extension 'ARB_instanced_arrays'", 
    ss62:String = "Available in extension 'ARB_internalformat_query'", 
    ss63:String = "Available in extension 'ARB_internalformat_query2'", 
    ss64:String = "Available in extension 'ARB_invalidate_subdata'", 
    ss65:String = "Available in extension 'ARB_map_buffer_range'", 
    ss66:String = "Available in extension 'ARB_matrix_palette'", 
    ss67:String = "Available in extension 'ARB_multi_bind'", 
    ss68:String = "Available in extension 'ARB_multi_draw_indirect'", 
    ss69:String = "Available in extension 'ARB_multisample'", 
    ss70:String = "Available in extension 'ARB_multitexture'", 
    ss71:String = "Available in extension 'ARB_occlusion_query'", 
    ss72:String = "Available in extension 'ARB_parallel_shader_compile'", 
    ss73:String = "Available in extension 'ARB_point_parameters'", 
    ss74:String = "Available in extension 'ARB_program_interface_query'", 
    ss75:String = "Available in extension 'ARB_provoking_vertex'", 
    ss76:String = "Available in extension 'ARB_robustness'", 
    ss77:String = "Available in extension 'ARB_sample_locations'", 
    ss78:String = "Available in extension 'ARB_sample_shading'", 
    ss79:String = "Available in extension 'ARB_sampler_objects'", 
    ss80:String = "Available in extension 'ARB_separate_shader_objects'", 
    ss81:String = "Available in extension 'ARB_shader_atomic_counters'", 
    ss82:String = "Available in extension 'ARB_shader_image_load_store'", 
    ss83:String = "Available in extension 'ARB_shader_objects'", 
    ss84:String = "Available in extension 'ARB_shader_storage_buffer_object'", 
    ss85:String = "Available in extension 'ARB_shader_subroutine'", 
    ss86:String = "Available in extension 'ARB_shading_language_include'", 
    ss87:String = "Available in extension 'ARB_sparse_buffer'", 
    ss88:String = "Available in extension 'ARB_sparse_texture'", 
    ss89:String = "Available in extension 'ARB_sync'", 
    ss90:String = "Available in extension 'ARB_tessellation_shader'", 
    ss91:String = "Available in extension 'ARB_texture_barrier'", 
    ss92:String = "Available in extension 'ARB_texture_buffer_object'", 
    ss93:String = "Available in extension 'ARB_texture_buffer_range'", 
    ss94:String = "Available in extension 'ARB_texture_compression'", 
    ss95:String = "Available in extension 'ARB_texture_multisample'", 
    ss96:String = "Available in extension 'ARB_texture_storage_multisample'", 
    ss97:String = "Available in extension 'ARB_texture_storage'", 
    ss98:String = "Available in extension 'ARB_texture_view'", 
    ss99:String = "Available in extension 'ARB_timer_query'", 
    ss100:String = "Available in extension 'ARB_transform_feedback_instanced'", 
    ss101:String = "Available in extension 'ARB_transform_feedback2'", 
    ss102:String = "Available in extension 'ARB_transform_feedback3'", 
    ss103:String = "Available in extension 'ARB_transpose_matrix'", 
    ss104:String = "Available in extension 'ARB_uniform_buffer_object'", 
    ss105:String = "Available in extension 'ARB_vertex_array_object'", 
    ss106:String = "Available in extension 'ARB_vertex_attrib_64bit'", 
    ss107:String = "Available in extension 'ARB_vertex_attrib_binding'", 
    ss108:String = "Available in extension 'ARB_vertex_blend'", 
    ss109:String = "Available in extension 'ARB_vertex_buffer_object'", 
    ss110:String = "Available in extension 'ARB_vertex_program'", 
    ss111:String = "Available in extension 'ARB_vertex_shader'", 
    ss112:String = "Available in extension 'ARB_vertex_type_2_10_10_10_rev'", 
    ss113:String = "Available in extension 'ARB_viewport_array'", 
    ss114:String = "Available in extension 'ARB_window_pos'", 
    ss115:String = "Available in extension 'ATI_draw_buffers'", 
    ss116:String = "Available in extension 'ATI_element_array'", 
    ss117:String = "Available in extension 'ATI_envmap_bumpmap'", 
    ss118:String = "Available in extension 'ATI_fragment_shader'", 
    ss119:String = "Available in extension 'ATI_map_object_buffer'", 
    ss120:String = "Available in extension 'ATI_pn_triangles'", 
    ss121:String = "Available in extension 'ATI_separate_stencil'", 
    ss122:String = "Available in extension 'ATI_vertex_array_object'", 
    ss123:String = "Available in extension 'ATI_vertex_attrib_array_object'", 
    ss124:String = "Available in extension 'ATI_vertex_streams'", 
    ss125:String = "Available in extension 'EXT_base_instance'", 
    ss126:String = "Available in extension 'EXT_bindable_uniform'", 
    ss127:String = "Available in extension 'EXT_blend_color'", 
    ss128:String = "Available in extension 'EXT_blend_equation_separate'", 
    ss129:String = "Available in extension 'EXT_blend_func_extended'", 
    ss130:String = "Available in extension 'EXT_blend_func_separate'", 
    ss131:String = "Available in extension 'EXT_blend_minmax'", 
    ss132:String = "Available in extension 'EXT_buffer_storage'", 
    ss133:String = "Available in extension 'EXT_color_subtable'", 
    ss134:String = "Available in extension 'EXT_compiled_vertex_array'", 
    ss135:String = "Available in extension 'EXT_convolution'", 
    ss136:String = "Available in extension 'EXT_coordinate_frame'", 
    ss137:String = "Available in extension 'EXT_copy_image'", 
    ss138:String = "Available in extension 'EXT_copy_texture'", 
    ss139:String = "Available in extension 'EXT_cull_vertex'", 
    ss140:String = "Available in extension 'EXT_debug_label'", 
    ss141:String = "Available in extension 'EXT_debug_marker'", 
    ss142:String = "Available in extension 'EXT_depth_bounds_test'", 
    ss143:String = "Available in extension 'EXT_direct_state_access'", 
    ss144:String = "Available in extension 'EXT_discard_framebuffer'", 
    ss145:String = "Available in extension 'EXT_disjoint_timer_query'", 
    ss146:String = "Available in extension 'EXT_draw_buffers_indexed'", 
    ss147:String = "Available in extension 'EXT_draw_buffers'", 
    ss148:String = "Available in extension 'EXT_draw_buffers2'", 
    ss149:String = "Available in extension 'EXT_draw_elements_base_vertex'", 
    ss150:String = "Available in extension 'EXT_draw_instanced'", 
    ss151:String = "Available in extension 'EXT_draw_range_elements'", 
    ss152:String = "Available in extension 'EXT_fog_coord'", 
    ss153:String = "Available in extension 'EXT_framebuffer_blit'", 
    ss154:String = "Available in extension 'EXT_framebuffer_multisample'", 
    ss155:String = "Available in extension 'EXT_framebuffer_object'", 
    ss156:String = "Available in extension 'EXT_geometry_shader'", 
    ss157:String = "Available in extension 'EXT_geometry_shader4'", 
    ss158:String = "Available in extension 'EXT_gpu_program_parameters'", 
    ss159:String = "Available in extension 'EXT_gpu_shader4'", 
    ss160:String = "Available in extension 'EXT_histogram'", 
    ss161:String = "Available in extension 'EXT_index_func'", 
    ss162:String = "Available in extension 'EXT_index_material'", 
    ss163:String = "Available in extension 'EXT_instanced_arrays'", 
    ss164:String = "Available in extension 'EXT_light_texture'", 
    ss165:String = "Available in extension 'EXT_map_buffer_range'", 
    ss166:String = "Available in extension 'EXT_multi_draw_arrays'", 
    ss167:String = "Available in extension 'EXT_multi_draw_indirect'", 
    ss168:String = "Available in extension 'EXT_multisample'", 
    ss169:String = "Available in extension 'EXT_multisampled_render_to_texture'", 
    ss170:String = "Available in extension 'EXT_multiview_draw_buffers'", 
    ss171:String = "Available in extension 'EXT_occlusion_query_boolean'", 
    ss172:String = "Available in extension 'EXT_paletted_texture'", 
    ss173:String = "Available in extension 'EXT_pixel_transform'", 
    ss174:String = "Available in extension 'EXT_point_parameters'", 
    ss175:String = "Available in extension 'EXT_polygon_offset_clamp'", 
    ss176:String = "Available in extension 'EXT_polygon_offset'", 
    ss177:String = "Available in extension 'EXT_primitive_bounding_box'", 
    ss178:String = "Available in extension 'EXT_provoking_vertex'", 
    ss179:String = "Available in extension 'EXT_raster_multisample'", 
    ss180:String = "Available in extension 'EXT_robustness'", 
    ss181:String = "Available in extension 'EXT_secondary_color'", 
    ss182:String = "Available in extension 'EXT_separate_shader_objects'", 
    ss183:String = "Available in extension 'EXT_shader_image_load_store'", 
    ss184:String = "Available in extension 'EXT_sparse_texture'", 
    ss185:String = "Available in extension 'EXT_stencil_clear_tag'", 
    ss186:String = "Available in extension 'EXT_stencil_two_side'", 
    ss187:String = "Available in extension 'EXT_subtexture'", 
    ss188:String = "Available in extension 'EXT_tessellation_shader'", 
    ss189:String = "Available in extension 'EXT_texture_array'", 
    ss190:String = "Available in extension 'EXT_texture_border_clamp'", 
    ss191:String = "Available in extension 'EXT_texture_buffer_object'", 
    ss192:String = "Available in extension 'EXT_texture_buffer'", 
    ss193:String = "Available in extension 'EXT_texture_filter_minmax'", 
    ss194:String = "Available in extension 'EXT_texture_integer'", 
    ss195:String = "Available in extension 'EXT_texture_object'", 
    ss196:String = "Available in extension 'EXT_texture_perturb_normal'", 
    ss197:String = "Available in extension 'EXT_texture_storage'", 
    ss198:String = "Available in extension 'EXT_texture_view'", 
    ss199:String = "Available in extension 'EXT_texture3D'", 
    ss200:String = "Available in extension 'EXT_timer_query'", 
    ss201:String = "Available in extension 'EXT_transform_feedback'", 
    ss202:String = "Available in extension 'EXT_vertex_array'", 
    ss203:String = "Available in extension 'EXT_vertex_attrib_64bit'", 
    ss204:String = "Available in extension 'EXT_vertex_shader'", 
    ss205:String = "Available in extension 'EXT_vertex_weighting'", 
    ss206:String = "Available in extension 'EXT_x11_sync_object'", 
    ss207:String = "Available in extension 'GREMEDY_frame_terminator'", 
    ss208:String = "Available in extension 'GREMEDY_string_marker'", 
    ss209:String = "Available in extension 'HP_image_transform'", 
    ss210:String = "Available in extension 'IBM_multimode_draw_arrays'", 
    ss211:String = "Available in extension 'IBM_static_data'", 
    ss212:String = "Available in extension 'IBM_vertex_array_lists'", 
    ss213:String = "Available in extension 'IMG_multisampled_render_to_texture'", 
    ss214:String = "Available in extension 'IMG_user_clip_plane'", 
    ss215:String = "Available in extension 'INGR_blend_func_separate'", 
    ss216:String = "Available in extension 'INTEL_framebuffer_CMAA'", 
    ss217:String = "Available in extension 'INTEL_map_texture'", 
    ss218:String = "Available in extension 'INTEL_parallel_arrays'", 
    ss219:String = "Available in extension 'INTEL_performance_query'", 
    ss220:String = "Available in extension 'KHR_blend_equation_advanced'", 
    ss221:String = "Available in extension 'KHR_debug'", 
    ss222:String = "Available in extension 'KHR_robustness'", 
    ss223:String = "Available in extension 'MESA_resize_buffers'", 
    ss224:String = "Available in extension 'MESA_window_pos'", 
    ss225:String = "Available in extension 'NV_bindless_multi_draw_indirect_count'", 
    ss226:String = "Available in extension 'NV_bindless_multi_draw_indirect'", 
    ss227:String = "Available in extension 'NV_bindless_texture'", 
    ss228:String = "Available in extension 'NV_blend_equation_advanced'", 
    ss229:String = "Available in extension 'NV_command_list'", 
    ss230:String = "Available in extension 'NV_conditional_render'", 
    ss231:String = "Available in extension 'NV_conservative_raster_dilate'", 
    ss232:String = "Available in extension 'NV_conservative_raster'", 
    ss233:String = "Available in extension 'NV_copy_buffer'", 
    ss234:String = "Available in extension 'NV_copy_image'", 
    ss235:String = "Available in extension 'NV_coverage_sample'", 
    ss236:String = "Available in extension 'NV_depth_buffer_float'", 
    ss237:String = "Available in extension 'NV_draw_buffers'", 
    ss238:String = "Available in extension 'NV_draw_instanced'", 
    ss239:String = "Available in extension 'NV_draw_texture'", 
    ss240:String = "Available in extension 'NV_evaluators'", 
    ss241:String = "Available in extension 'NV_explicit_multisample'", 
    ss242:String = "Available in extension 'NV_fence'", 
    ss243:String = "Available in extension 'NV_fragment_coverage_to_color'", 
    ss244:String = "Available in extension 'NV_fragment_program'", 
    ss245:String = "Available in extension 'NV_framebuffer_blit'", 
    ss246:String = "Available in extension 'NV_framebuffer_mixed_samples'", 
    ss247:String = "Available in extension 'NV_framebuffer_multisample_coverage'", 
    ss248:String = "Available in extension 'NV_framebuffer_multisample'", 
    ss249:String = "Available in extension 'NV_geometry_program4'", 
    ss250:String = "Available in extension 'NV_gpu_program4'", 
    ss251:String = "Available in extension 'NV_gpu_program5'", 
    ss252:String = "Available in extension 'NV_gpu_shader5'", 
    ss253:String = "Available in extension 'NV_half_float'", 
    ss254:String = "Available in extension 'NV_instanced_arrays'", 
    ss255:String = "Available in extension 'NV_internalformat_sample_query'", 
    ss256:String = "Available in extension 'NV_non_square_matrices'", 
    ss257:String = "Available in extension 'NV_occlusion_query'", 
    ss258:String = "Available in extension 'NV_parameter_buffer_object'", 
    ss259:String = "Available in extension 'NV_path_rendering'", 
    ss260:String = "Available in extension 'NV_pixel_data_range'", 
    ss261:String = "Available in extension 'NV_point_sprite'", 
    ss262:String = "Available in extension 'NV_polygon_mode'", 
    ss263:String = "Available in extension 'NV_present_video'", 
    ss264:String = "Available in extension 'NV_primitive_restart'", 
    ss265:String = "Available in extension 'NV_read_buffer'", 
    ss266:String = "Available in extension 'NV_register_combiners'", 
    ss267:String = "Available in extension 'NV_register_combiners2'", 
    ss268:String = "Available in extension 'NV_sample_locations'", 
    ss269:String = "Available in extension 'NV_shader_buffer_load'", 
    ss270:String = "Available in extension 'NV_texture_barrier'", 
    ss271:String = "Available in extension 'NV_texture_multisample'", 
    ss272:String = "Available in extension 'NV_transform_feedback'", 
    ss273:String = "Available in extension 'NV_transform_feedback2'", 
    ss274:String = "Available in extension 'NV_vdpau_interop'", 
    ss275:String = "Available in extension 'NV_vertex_array_range'", 
    ss276:String = "Available in extension 'NV_vertex_attrib_integer_64bit'", 
    ss277:String = "Available in extension 'NV_vertex_buffer_unified_memory'", 
    ss278:String = "Available in extension 'NV_vertex_program'", 
    ss279:String = "Available in extension 'NV_vertex_program4'", 
    ss280:String = "Available in extension 'NV_video_capture'", 
    ss281:String = "Available in extension 'NV_viewport_array'", 
    ss282:String = "Available in extension 'NVX_conditional_render'", 
    ss283:String = "Available in extension 'OES_blend_equation_separate'", 
    ss284:String = "Available in extension 'OES_blend_func_separate'", 
    ss285:String = "Available in extension 'OES_blend_subtract'", 
    ss286:String = "Available in extension 'OES_byte_coordinates'", 
    ss287:String = "Available in extension 'OES_copy_image'", 
    ss288:String = "Available in extension 'OES_draw_buffers_indexed'", 
    ss289:String = "Available in extension 'OES_draw_elements_base_vertex'", 
    ss290:String = "Available in extension 'OES_draw_texture'", 
    ss291:String = "Available in extension 'OES_EGL_image'", 
    ss292:String = "Available in extension 'OES_fixed_point'", 
    ss293:String = "Available in extension 'OES_framebuffer_object'", 
    ss294:String = "Available in extension 'OES_geometry_shader'", 
    ss295:String = "Available in extension 'OES_get_program_binary'", 
    ss296:String = "Available in extension 'OES_mapbuffer'", 
    ss297:String = "Available in extension 'OES_matrix_palette'", 
    ss298:String = "Available in extension 'OES_point_size_array'", 
    ss299:String = "Available in extension 'OES_primitive_bounding_box'", 
    ss300:String = "Available in extension 'OES_query_matrix'", 
    ss301:String = "Available in extension 'OES_sample_shading'", 
    ss302:String = "Available in extension 'OES_single_precision'", 
    ss303:String = "Available in extension 'OES_tessellation_shader'", 
    ss304:String = "Available in extension 'OES_texture_3D'", 
    ss305:String = "Available in extension 'OES_texture_border_clamp'", 
    ss306:String = "Available in extension 'OES_texture_buffer'", 
    ss307:String = "Available in extension 'OES_texture_cube_map'", 
    ss308:String = "Available in extension 'OES_texture_storage_multisample_2d_array'", 
    ss309:String = "Available in extension 'OES_texture_view'", 
    ss310:String = "Available in extension 'OES_vertex_array_object'", 
    ss311:String = "Available in extension 'OVR_multiview_multisampled_render_to_texture'", 
    ss312:String = "Available in extension 'OVR_multiview'", 
    ss313:String = "Available in extension 'PGI_misc_hints'", 
    ss314:String = "Available in extension 'QCOM_alpha_test'", 
    ss315:String = "Available in extension 'QCOM_driver_control'", 
    ss316:String = "Available in extension 'QCOM_extended_get'", 
    ss317:String = "Available in extension 'QCOM_extended_get2'", 
    ss318:String = "Available in extension 'QCOM_tiled_rendering'", 
    ss319:String = "Available in extension 'SGI_color_table'", 
    ss320:String = "Available in extension 'SGIS_detail_texture'", 
    ss321:String = "Available in extension 'SGIS_fog_function'", 
    ss322:String = "Available in extension 'SGIS_multisample'", 
    ss323:String = "Available in extension 'SGIS_pixel_texture'", 
    ss324:String = "Available in extension 'SGIS_point_parameters'", 
    ss325:String = "Available in extension 'SGIS_sharpen_texture'", 
    ss326:String = "Available in extension 'SGIS_texture_color_mask'", 
    ss327:String = "Available in extension 'SGIS_texture_filter4'", 
    ss328:String = "Available in extension 'SGIS_texture4D'", 
    ss329:String = "Available in extension 'SGIX_async'", 
    ss330:String = "Available in extension 'SGIX_flush_raster'", 
    ss331:String = "Available in extension 'SGIX_fragment_lighting'", 
    ss332:String = "Available in extension 'SGIX_framezoom'", 
    ss333:String = "Available in extension 'SGIX_igloo_interface'", 
    ss334:String = "Available in extension 'SGIX_instruments'", 
    ss335:String = "Available in extension 'SGIX_list_priority'", 
    ss336:String = "Available in extension 'SGIX_pixel_texture'", 
    ss337:String = "Available in extension 'SGIX_polynomial_ffd'", 
    ss338:String = "Available in extension 'SGIX_reference_plane'", 
    ss339:String = "Available in extension 'SGIX_sprite'", 
    ss340:String = "Available in extension 'SGIX_tag_sample_buffer'", 
    ss341:String = "Available in extension 'SUN_global_alpha'", 
    ss342:String = "Available in extension 'SUN_mesh_array'", 
    ss343:String = "Available in extension 'SUN_triangle_list'", 
    ss344:String = "Available in extension 'SUN_vertex'", 
    ss345:String = "Available in extension 'SUNX_constant_data'", 
    ss346:String = "Available since OpenGL 1.0", 
    ss347:String = "Available since OpenGL 1.1", 
    ss348:String = "Available since OpenGL 1.2", 
    ss349:String = "Available since OpenGL 1.3", 
    ss350:String = "Available since OpenGL 1.4", 
    ss351:String = "Available since OpenGL 1.5", 
    ss352:String = "Available since OpenGL 2.0", 
    ss353:String = "Available since OpenGL 2.1", 
    ss354:String = "Available since OpenGL 3.0", 
    ss355:String = "Available since OpenGL 3.1", 
    ss356:String = "Available since OpenGL 3.2", 
    ss357:String = "Available since OpenGL 3.3", 
    ss358:String = "Available since OpenGL 4.0", 
    ss359:String = "Available since OpenGL 4.1", 
    ss360:String = "Available since OpenGL 4.2", 
    ss361:String = "Available since OpenGL 4.3", 
    ss362:String = "Available since OpenGL 4.4", 
    ss363:String = "Available since OpenGL 4.5", 
    ss364:String = "Available since OpenGL ES 1.0", 
    ss365:String = "Available since OpenGL ES 2.0", 
    ss366:String = "Available since OpenGL ES 3.0", 
    ss367:String = "Available since OpenGL ES 3.1", 
    ss368:String = "Available since OpenGL ES 3.2", 
    ss369:String = "Unavailable since OpenGL 3.2"

// OpenGL function loaders; functions are loaded lazily and replace
// themselves with their loaded versions on first call
var fp_glAccum:@convention(c) (GL.Enum, GL.Float) -> () = load_glAccum
func load_glAccum(op:GL.Enum, value:GL.Float)
{
    fp_glAccum = unsafeBitCast(get_fp("glAccum", support: [ss346, ss369]), to: Swift.type(of: fp_glAccum))
    fp_glAccum(op, value)
}
public
func glAccum(op:GL.Enum, value:GL.Float)
{
    fp_glAccum(op, value)
}
public
func glAccum(_ op:GL.Enum, _ value:GL.Float)
{
    fp_glAccum(op, value)
}

var fp_glAccumxOES:@convention(c) (GL.Enum, GL.Fixed) -> () = load_glAccumxOES
func load_glAccumxOES(op:GL.Enum, value:GL.Fixed)
{
    fp_glAccumxOES = unsafeBitCast(get_fp("glAccumxOES", support: [ss292]), to: Swift.type(of: fp_glAccumxOES))
    fp_glAccumxOES(op, value)
}
public
func glAccumxOES(op:GL.Enum, value:GL.Fixed)
{
    fp_glAccumxOES(op, value)
}
public
func glAccumxOES(_ op:GL.Enum, _ value:GL.Fixed)
{
    fp_glAccumxOES(op, value)
}

var fp_glActiveProgramEXT:@convention(c) (GL.UInt) -> () = load_glActiveProgramEXT
func load_glActiveProgramEXT(program:GL.UInt)
{
    fp_glActiveProgramEXT = unsafeBitCast(get_fp("glActiveProgramEXT", support: [ss182]), to: Swift.type(of: fp_glActiveProgramEXT))
    fp_glActiveProgramEXT(program)
}
public
func glActiveProgramEXT(program:GL.UInt)
{
    fp_glActiveProgramEXT(program)
}
public
func glActiveProgramEXT(_ program:GL.UInt)
{
    fp_glActiveProgramEXT(program)
}

var fp_glActiveShaderProgram:@convention(c) (GL.UInt, GL.UInt) -> () = load_glActiveShaderProgram
func load_glActiveShaderProgram(pipeline:GL.UInt, program:GL.UInt)
{
    fp_glActiveShaderProgram = unsafeBitCast(get_fp("glActiveShaderProgram", support: [ss359, ss367, ss80]), to: Swift.type(of: fp_glActiveShaderProgram))
    fp_glActiveShaderProgram(pipeline, program)
}
public
func glActiveShaderProgram(pipeline:GL.UInt, program:GL.UInt)
{
    fp_glActiveShaderProgram(pipeline, program)
}
public
func glActiveShaderProgram(_ pipeline:GL.UInt, _ program:GL.UInt)
{
    fp_glActiveShaderProgram(pipeline, program)
}

var fp_glActiveShaderProgramEXT:@convention(c) (GL.UInt, GL.UInt) -> () = load_glActiveShaderProgramEXT
func load_glActiveShaderProgramEXT(pipeline:GL.UInt, program:GL.UInt)
{
    fp_glActiveShaderProgramEXT = unsafeBitCast(get_fp("glActiveShaderProgramEXT", support: [ss182]), to: Swift.type(of: fp_glActiveShaderProgramEXT))
    fp_glActiveShaderProgramEXT(pipeline, program)
}
public
func glActiveShaderProgramEXT(pipeline:GL.UInt, program:GL.UInt)
{
    fp_glActiveShaderProgramEXT(pipeline, program)
}
public
func glActiveShaderProgramEXT(_ pipeline:GL.UInt, _ program:GL.UInt)
{
    fp_glActiveShaderProgramEXT(pipeline, program)
}

var fp_glActiveStencilFaceEXT:@convention(c) (GL.Enum) -> () = load_glActiveStencilFaceEXT
func load_glActiveStencilFaceEXT(face:GL.Enum)
{
    fp_glActiveStencilFaceEXT = unsafeBitCast(get_fp("glActiveStencilFaceEXT", support: [ss186]), to: Swift.type(of: fp_glActiveStencilFaceEXT))
    fp_glActiveStencilFaceEXT(face)
}
public
func glActiveStencilFaceEXT(face:GL.Enum)
{
    fp_glActiveStencilFaceEXT(face)
}
public
func glActiveStencilFaceEXT(_ face:GL.Enum)
{
    fp_glActiveStencilFaceEXT(face)
}

var fp_glActiveTexture:@convention(c) (GL.Enum) -> () = load_glActiveTexture
func load_glActiveTexture(texture:GL.Enum)
{
    fp_glActiveTexture = unsafeBitCast(get_fp("glActiveTexture", support: [ss349, ss365]), to: Swift.type(of: fp_glActiveTexture))
    fp_glActiveTexture(texture)
}
public
func glActiveTexture(texture:GL.Enum)
{
    fp_glActiveTexture(texture)
}
public
func glActiveTexture(_ texture:GL.Enum)
{
    fp_glActiveTexture(texture)
}

var fp_glActiveTextureARB:@convention(c) (GL.Enum) -> () = load_glActiveTextureARB
func load_glActiveTextureARB(texture:GL.Enum)
{
    fp_glActiveTextureARB = unsafeBitCast(get_fp("glActiveTextureARB", support: [ss70]), to: Swift.type(of: fp_glActiveTextureARB))
    fp_glActiveTextureARB(texture)
}
public
func glActiveTextureARB(texture:GL.Enum)
{
    fp_glActiveTextureARB(texture)
}
public
func glActiveTextureARB(_ texture:GL.Enum)
{
    fp_glActiveTextureARB(texture)
}

var fp_glActiveVaryingNV:@convention(c) (GL.UInt, UnsafePointer<GL.Char>?) -> () = load_glActiveVaryingNV
func load_glActiveVaryingNV(program:GL.UInt, name:UnsafePointer<GL.Char>?)
{
    fp_glActiveVaryingNV = unsafeBitCast(get_fp("glActiveVaryingNV", support: [ss272]), to: Swift.type(of: fp_glActiveVaryingNV))
    fp_glActiveVaryingNV(program, name)
}
public
func glActiveVaryingNV(program:GL.UInt, name:UnsafePointer<GL.Char>?)
{
    fp_glActiveVaryingNV(program, name)
}
public
func glActiveVaryingNV(_ program:GL.UInt, _ name:UnsafePointer<GL.Char>?)
{
    fp_glActiveVaryingNV(program, name)
}

var fp_glAlphaFragmentOp1ATI:@convention(c) (GL.Enum, GL.UInt, GL.UInt, GL.UInt, GL.UInt, GL.UInt) -> () = load_glAlphaFragmentOp1ATI
func load_glAlphaFragmentOp1ATI(op:GL.Enum, dst:GL.UInt, dstMod:GL.UInt, arg1:GL.UInt, arg1Rep:GL.UInt, arg1Mod:GL.UInt)
{
    fp_glAlphaFragmentOp1ATI = unsafeBitCast(get_fp("glAlphaFragmentOp1ATI", support: [ss118]), to: Swift.type(of: fp_glAlphaFragmentOp1ATI))
    fp_glAlphaFragmentOp1ATI(op, dst, dstMod, arg1, arg1Rep, arg1Mod)
}
public
func glAlphaFragmentOp1ATI(op:GL.Enum, dst:GL.UInt, dstMod:GL.UInt, arg1:GL.UInt, arg1Rep:GL.UInt, arg1Mod:GL.UInt)
{
    fp_glAlphaFragmentOp1ATI(op, dst, dstMod, arg1, arg1Rep, arg1Mod)
}
public
func glAlphaFragmentOp1ATI(_ op:GL.Enum, _ dst:GL.UInt, _ dstMod:GL.UInt, _ arg1:GL.UInt, _ arg1Rep:GL.UInt, _ arg1Mod:GL.UInt)
{
    fp_glAlphaFragmentOp1ATI(op, dst, dstMod, arg1, arg1Rep, arg1Mod)
}

var fp_glAlphaFragmentOp2ATI:@convention(c) (GL.Enum, GL.UInt, GL.UInt, GL.UInt, GL.UInt, GL.UInt, GL.UInt, GL.UInt, GL.UInt) -> () = load_glAlphaFragmentOp2ATI
func load_glAlphaFragmentOp2ATI(op:GL.Enum, dst:GL.UInt, dstMod:GL.UInt, arg1:GL.UInt, arg1Rep:GL.UInt, arg1Mod:GL.UInt, arg2:GL.UInt, arg2Rep:GL.UInt, arg2Mod:GL.UInt)
{
    fp_glAlphaFragmentOp2ATI = unsafeBitCast(get_fp("glAlphaFragmentOp2ATI", support: [ss118]), to: Swift.type(of: fp_glAlphaFragmentOp2ATI))
    fp_glAlphaFragmentOp2ATI(op, dst, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod)
}
public
func glAlphaFragmentOp2ATI(op:GL.Enum, dst:GL.UInt, dstMod:GL.UInt, arg1:GL.UInt, arg1Rep:GL.UInt, arg1Mod:GL.UInt, arg2:GL.UInt, arg2Rep:GL.UInt, arg2Mod:GL.UInt)
{
    fp_glAlphaFragmentOp2ATI(op, dst, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod)
}
public
func glAlphaFragmentOp2ATI(_ op:GL.Enum, _ dst:GL.UInt, _ dstMod:GL.UInt, _ arg1:GL.UInt, _ arg1Rep:GL.UInt, _ arg1Mod:GL.UInt, _ arg2:GL.UInt, _ arg2Rep:GL.UInt, _ arg2Mod:GL.UInt)
{
    fp_glAlphaFragmentOp2ATI(op, dst, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod)
}

var fp_glAlphaFragmentOp3ATI:@convention(c) (GL.Enum, GL.UInt, GL.UInt, GL.UInt, GL.UInt, GL.UInt, GL.UInt, GL.UInt, GL.UInt, GL.UInt, GL.UInt, GL.UInt) -> () = load_glAlphaFragmentOp3ATI
func load_glAlphaFragmentOp3ATI(op:GL.Enum, dst:GL.UInt, dstMod:GL.UInt, arg1:GL.UInt, arg1Rep:GL.UInt, arg1Mod:GL.UInt, arg2:GL.UInt, arg2Rep:GL.UInt, arg2Mod:GL.UInt, arg3:GL.UInt, arg3Rep:GL.UInt, arg3Mod:GL.UInt)
{
    fp_glAlphaFragmentOp3ATI = unsafeBitCast(get_fp("glAlphaFragmentOp3ATI", support: [ss118]), to: Swift.type(of: fp_glAlphaFragmentOp3ATI))
    fp_glAlphaFragmentOp3ATI(op, dst, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod, arg3, arg3Rep, arg3Mod)
}
public
func glAlphaFragmentOp3ATI(op:GL.Enum, dst:GL.UInt, dstMod:GL.UInt, arg1:GL.UInt, arg1Rep:GL.UInt, arg1Mod:GL.UInt, arg2:GL.UInt, arg2Rep:GL.UInt, arg2Mod:GL.UInt, arg3:GL.UInt, arg3Rep:GL.UInt, arg3Mod:GL.UInt)
{
    fp_glAlphaFragmentOp3ATI(op, dst, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod, arg3, arg3Rep, arg3Mod)
}
public
func glAlphaFragmentOp3ATI(_ op:GL.Enum, _ dst:GL.UInt, _ dstMod:GL.UInt, _ arg1:GL.UInt, _ arg1Rep:GL.UInt, _ arg1Mod:GL.UInt, _ arg2:GL.UInt, _ arg2Rep:GL.UInt, _ arg2Mod:GL.UInt, _ arg3:GL.UInt, _ arg3Rep:GL.UInt, _ arg3Mod:GL.UInt)
{
    fp_glAlphaFragmentOp3ATI(op, dst, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod, arg3, arg3Rep, arg3Mod)
}

var fp_glAlphaFunc:@convention(c) (GL.Enum, GL.Float) -> () = load_glAlphaFunc
func load_glAlphaFunc(f:GL.Enum, ref:GL.Float)
{
    fp_glAlphaFunc = unsafeBitCast(get_fp("glAlphaFunc", support: [ss346, ss369, ss364]), to: Swift.type(of: fp_glAlphaFunc))
    fp_glAlphaFunc(f, ref)
}
public
func glAlphaFunc(f:GL.Enum, ref:GL.Float)
{
    fp_glAlphaFunc(f, ref)
}
public
func glAlphaFunc(_ f:GL.Enum, _ ref:GL.Float)
{
    fp_glAlphaFunc(f, ref)
}

var fp_glAlphaFuncQCOM:@convention(c) (GL.Enum, GL.ClampFloat) -> () = load_glAlphaFuncQCOM
func load_glAlphaFuncQCOM(f:GL.Enum, ref:GL.ClampFloat)
{
    fp_glAlphaFuncQCOM = unsafeBitCast(get_fp("glAlphaFuncQCOM", support: [ss314]), to: Swift.type(of: fp_glAlphaFuncQCOM))
    fp_glAlphaFuncQCOM(f, ref)
}
public
func glAlphaFuncQCOM(f:GL.Enum, ref:GL.ClampFloat)
{
    fp_glAlphaFuncQCOM(f, ref)
}
public
func glAlphaFuncQCOM(_ f:GL.Enum, _ ref:GL.ClampFloat)
{
    fp_glAlphaFuncQCOM(f, ref)
}

var fp_glAlphaFuncx:@convention(c) (GL.Enum, GL.Fixed) -> () = load_glAlphaFuncx
func load_glAlphaFuncx(f:GL.Enum, ref:GL.Fixed)
{
    fp_glAlphaFuncx = unsafeBitCast(get_fp("glAlphaFuncx", support: [ss364]), to: Swift.type(of: fp_glAlphaFuncx))
    fp_glAlphaFuncx(f, ref)
}
public
func glAlphaFuncx(f:GL.Enum, ref:GL.Fixed)
{
    fp_glAlphaFuncx(f, ref)
}
public
func glAlphaFuncx(_ f:GL.Enum, _ ref:GL.Fixed)
{
    fp_glAlphaFuncx(f, ref)
}

var fp_glAlphaFuncxOES:@convention(c) (GL.Enum, GL.Fixed) -> () = load_glAlphaFuncxOES
func load_glAlphaFuncxOES(f:GL.Enum, ref:GL.Fixed)
{
    fp_glAlphaFuncxOES = unsafeBitCast(get_fp("glAlphaFuncxOES", support: [ss292]), to: Swift.type(of: fp_glAlphaFuncxOES))
    fp_glAlphaFuncxOES(f, ref)
}
public
func glAlphaFuncxOES(f:GL.Enum, ref:GL.Fixed)
{
    fp_glAlphaFuncxOES(f, ref)
}
public
func glAlphaFuncxOES(_ f:GL.Enum, _ ref:GL.Fixed)
{
    fp_glAlphaFuncxOES(f, ref)
}

var fp_glApplyFramebufferAttachmentCMAAINTEL:@convention(c) () -> () = load_glApplyFramebufferAttachmentCMAAINTEL
func load_glApplyFramebufferAttachmentCMAAINTEL()
{
    fp_glApplyFramebufferAttachmentCMAAINTEL = unsafeBitCast(get_fp("glApplyFramebufferAttachmentCMAAINTEL", support: [ss216]), to: Swift.type(of: fp_glApplyFramebufferAttachmentCMAAINTEL))
    fp_glApplyFramebufferAttachmentCMAAINTEL()
}
public
func glApplyFramebufferAttachmentCMAAINTEL()
{
    fp_glApplyFramebufferAttachmentCMAAINTEL()
}

var fp_glApplyTextureEXT:@convention(c) (GL.Enum) -> () = load_glApplyTextureEXT
func load_glApplyTextureEXT(mode:GL.Enum)
{
    fp_glApplyTextureEXT = unsafeBitCast(get_fp("glApplyTextureEXT", support: [ss164]), to: Swift.type(of: fp_glApplyTextureEXT))
    fp_glApplyTextureEXT(mode)
}
public
func glApplyTextureEXT(mode:GL.Enum)
{
    fp_glApplyTextureEXT(mode)
}
public
func glApplyTextureEXT(_ mode:GL.Enum)
{
    fp_glApplyTextureEXT(mode)
}

var fp_glAreProgramsResidentNV:@convention(c) (GL.Size, UnsafePointer<GL.UInt>?, UnsafeMutablePointer<GL.Bool>?) -> GL.Bool = load_glAreProgramsResidentNV
func load_glAreProgramsResidentNV(n:GL.Size, programs:UnsafePointer<GL.UInt>?, residences:UnsafeMutablePointer<GL.Bool>?) -> GL.Bool
{
    fp_glAreProgramsResidentNV = unsafeBitCast(get_fp("glAreProgramsResidentNV", support: [ss278]), to: Swift.type(of: fp_glAreProgramsResidentNV))
    return fp_glAreProgramsResidentNV(n, programs, residences)
}
public
func glAreProgramsResidentNV(n:GL.Size, programs:UnsafePointer<GL.UInt>?, residences:UnsafeMutablePointer<GL.Bool>?) -> GL.Bool
{
    return fp_glAreProgramsResidentNV(n, programs, residences)
}
public
func glAreProgramsResidentNV(_ n:GL.Size, _ programs:UnsafePointer<GL.UInt>?, _ residences:UnsafeMutablePointer<GL.Bool>?) -> GL.Bool
{
    return fp_glAreProgramsResidentNV(n, programs, residences)
}

var fp_glAreTexturesResident:@convention(c) (GL.Size, UnsafePointer<GL.UInt>?, UnsafeMutablePointer<GL.Bool>?) -> GL.Bool = load_glAreTexturesResident
func load_glAreTexturesResident(n:GL.Size, textures:UnsafePointer<GL.UInt>?, residences:UnsafeMutablePointer<GL.Bool>?) -> GL.Bool
{
    fp_glAreTexturesResident = unsafeBitCast(get_fp("glAreTexturesResident", support: [ss347, ss369]), to: Swift.type(of: fp_glAreTexturesResident))
    return fp_glAreTexturesResident(n, textures, residences)
}
public
func glAreTexturesResident(n:GL.Size, textures:UnsafePointer<GL.UInt>?, residences:UnsafeMutablePointer<GL.Bool>?) -> GL.Bool
{
    return fp_glAreTexturesResident(n, textures, residences)
}
public
func glAreTexturesResident(_ n:GL.Size, _ textures:UnsafePointer<GL.UInt>?, _ residences:UnsafeMutablePointer<GL.Bool>?) -> GL.Bool
{
    return fp_glAreTexturesResident(n, textures, residences)
}

var fp_glAreTexturesResidentEXT:@convention(c) (GL.Size, UnsafePointer<GL.UInt>?, UnsafeMutablePointer<GL.Bool>?) -> GL.Bool = load_glAreTexturesResidentEXT
func load_glAreTexturesResidentEXT(n:GL.Size, textures:UnsafePointer<GL.UInt>?, residences:UnsafeMutablePointer<GL.Bool>?) -> GL.Bool
{
    fp_glAreTexturesResidentEXT = unsafeBitCast(get_fp("glAreTexturesResidentEXT", support: [ss195]), to: Swift.type(of: fp_glAreTexturesResidentEXT))
    return fp_glAreTexturesResidentEXT(n, textures, residences)
}
public
func glAreTexturesResidentEXT(n:GL.Size, textures:UnsafePointer<GL.UInt>?, residences:UnsafeMutablePointer<GL.Bool>?) -> GL.Bool
{
    return fp_glAreTexturesResidentEXT(n, textures, residences)
}
public
func glAreTexturesResidentEXT(_ n:GL.Size, _ textures:UnsafePointer<GL.UInt>?, _ residences:UnsafeMutablePointer<GL.Bool>?) -> GL.Bool
{
    return fp_glAreTexturesResidentEXT(n, textures, residences)
}

var fp_glArrayElement:@convention(c) (GL.Int) -> () = load_glArrayElement
func load_glArrayElement(i:GL.Int)
{
    fp_glArrayElement = unsafeBitCast(get_fp("glArrayElement", support: [ss347, ss369]), to: Swift.type(of: fp_glArrayElement))
    fp_glArrayElement(i)
}
public
func glArrayElement(i:GL.Int)
{
    fp_glArrayElement(i)
}
public
func glArrayElement(_ i:GL.Int)
{
    fp_glArrayElement(i)
}

var fp_glArrayElementEXT:@convention(c) (GL.Int) -> () = load_glArrayElementEXT
func load_glArrayElementEXT(i:GL.Int)
{
    fp_glArrayElementEXT = unsafeBitCast(get_fp("glArrayElementEXT", support: [ss202]), to: Swift.type(of: fp_glArrayElementEXT))
    fp_glArrayElementEXT(i)
}
public
func glArrayElementEXT(i:GL.Int)
{
    fp_glArrayElementEXT(i)
}
public
func glArrayElementEXT(_ i:GL.Int)
{
    fp_glArrayElementEXT(i)
}

var fp_glArrayObjectATI:@convention(c) (GL.Enum, GL.Int, GL.Enum, GL.Size, GL.UInt, GL.UInt) -> () = load_glArrayObjectATI
func load_glArrayObjectATI(array:GL.Enum, size:GL.Int, type:GL.Enum, stride:GL.Size, buffer:GL.UInt, offset:GL.UInt)
{
    fp_glArrayObjectATI = unsafeBitCast(get_fp("glArrayObjectATI", support: [ss122]), to: Swift.type(of: fp_glArrayObjectATI))
    fp_glArrayObjectATI(array, size, type, stride, buffer, offset)
}
public
func glArrayObjectATI(array:GL.Enum, size:GL.Int, type:GL.Enum, stride:GL.Size, buffer:GL.UInt, offset:GL.UInt)
{
    fp_glArrayObjectATI(array, size, type, stride, buffer, offset)
}
public
func glArrayObjectATI(_ array:GL.Enum, _ size:GL.Int, _ type:GL.Enum, _ stride:GL.Size, _ buffer:GL.UInt, _ offset:GL.UInt)
{
    fp_glArrayObjectATI(array, size, type, stride, buffer, offset)
}

var fp_glAsyncMarkerSGIX:@convention(c) (GL.UInt) -> () = load_glAsyncMarkerSGIX
func load_glAsyncMarkerSGIX(marker:GL.UInt)
{
    fp_glAsyncMarkerSGIX = unsafeBitCast(get_fp("glAsyncMarkerSGIX", support: [ss329]), to: Swift.type(of: fp_glAsyncMarkerSGIX))
    fp_glAsyncMarkerSGIX(marker)
}
public
func glAsyncMarkerSGIX(marker:GL.UInt)
{
    fp_glAsyncMarkerSGIX(marker)
}
public
func glAsyncMarkerSGIX(_ marker:GL.UInt)
{
    fp_glAsyncMarkerSGIX(marker)
}

var fp_glAttachObjectARB:@convention(c) (GL.HandleARB, GL.HandleARB) -> () = load_glAttachObjectARB
func load_glAttachObjectARB(containerObj:GL.HandleARB, obj:GL.HandleARB)
{
    fp_glAttachObjectARB = unsafeBitCast(get_fp("glAttachObjectARB", support: [ss83]), to: Swift.type(of: fp_glAttachObjectARB))
    fp_glAttachObjectARB(containerObj, obj)
}
public
func glAttachObjectARB(containerObj:GL.HandleARB, obj:GL.HandleARB)
{
    fp_glAttachObjectARB(containerObj, obj)
}
public
func glAttachObjectARB(_ containerObj:GL.HandleARB, _ obj:GL.HandleARB)
{
    fp_glAttachObjectARB(containerObj, obj)
}

var fp_glAttachShader:@convention(c) (GL.UInt, GL.UInt) -> () = load_glAttachShader
func load_glAttachShader(program:GL.UInt, shader:GL.UInt)
{
    fp_glAttachShader = unsafeBitCast(get_fp("glAttachShader", support: [ss352, ss365]), to: Swift.type(of: fp_glAttachShader))
    fp_glAttachShader(program, shader)
}
public
func glAttachShader(program:GL.UInt, shader:GL.UInt)
{
    fp_glAttachShader(program, shader)
}
public
func glAttachShader(_ program:GL.UInt, _ shader:GL.UInt)
{
    fp_glAttachShader(program, shader)
}

var fp_glBegin:@convention(c) (GL.Enum) -> () = load_glBegin
func load_glBegin(mode:GL.Enum)
{
    fp_glBegin = unsafeBitCast(get_fp("glBegin", support: [ss346, ss369]), to: Swift.type(of: fp_glBegin))
    fp_glBegin(mode)
}
public
func glBegin(mode:GL.Enum)
{
    fp_glBegin(mode)
}
public
func glBegin(_ mode:GL.Enum)
{
    fp_glBegin(mode)
}

var fp_glBeginConditionalRender:@convention(c) (GL.UInt, GL.Enum) -> () = load_glBeginConditionalRender
func load_glBeginConditionalRender(id:GL.UInt, mode:GL.Enum)
{
    fp_glBeginConditionalRender = unsafeBitCast(get_fp("glBeginConditionalRender", support: [ss354]), to: Swift.type(of: fp_glBeginConditionalRender))
    fp_glBeginConditionalRender(id, mode)
}
public
func glBeginConditionalRender(id:GL.UInt, mode:GL.Enum)
{
    fp_glBeginConditionalRender(id, mode)
}
public
func glBeginConditionalRender(_ id:GL.UInt, _ mode:GL.Enum)
{
    fp_glBeginConditionalRender(id, mode)
}

var fp_glBeginConditionalRenderNV:@convention(c) (GL.UInt, GL.Enum) -> () = load_glBeginConditionalRenderNV
func load_glBeginConditionalRenderNV(id:GL.UInt, mode:GL.Enum)
{
    fp_glBeginConditionalRenderNV = unsafeBitCast(get_fp("glBeginConditionalRenderNV", support: [ss230]), to: Swift.type(of: fp_glBeginConditionalRenderNV))
    fp_glBeginConditionalRenderNV(id, mode)
}
public
func glBeginConditionalRenderNV(id:GL.UInt, mode:GL.Enum)
{
    fp_glBeginConditionalRenderNV(id, mode)
}
public
func glBeginConditionalRenderNV(_ id:GL.UInt, _ mode:GL.Enum)
{
    fp_glBeginConditionalRenderNV(id, mode)
}

var fp_glBeginConditionalRenderNVX:@convention(c) (GL.UInt) -> () = load_glBeginConditionalRenderNVX
func load_glBeginConditionalRenderNVX(id:GL.UInt)
{
    fp_glBeginConditionalRenderNVX = unsafeBitCast(get_fp("glBeginConditionalRenderNVX", support: [ss282]), to: Swift.type(of: fp_glBeginConditionalRenderNVX))
    fp_glBeginConditionalRenderNVX(id)
}
public
func glBeginConditionalRenderNVX(id:GL.UInt)
{
    fp_glBeginConditionalRenderNVX(id)
}
public
func glBeginConditionalRenderNVX(_ id:GL.UInt)
{
    fp_glBeginConditionalRenderNVX(id)
}

var fp_glBeginFragmentShaderATI:@convention(c) () -> () = load_glBeginFragmentShaderATI
func load_glBeginFragmentShaderATI()
{
    fp_glBeginFragmentShaderATI = unsafeBitCast(get_fp("glBeginFragmentShaderATI", support: [ss118]), to: Swift.type(of: fp_glBeginFragmentShaderATI))
    fp_glBeginFragmentShaderATI()
}
public
func glBeginFragmentShaderATI()
{
    fp_glBeginFragmentShaderATI()
}

var fp_glBeginOcclusionQueryNV:@convention(c) (GL.UInt) -> () = load_glBeginOcclusionQueryNV
func load_glBeginOcclusionQueryNV(id:GL.UInt)
{
    fp_glBeginOcclusionQueryNV = unsafeBitCast(get_fp("glBeginOcclusionQueryNV", support: [ss257]), to: Swift.type(of: fp_glBeginOcclusionQueryNV))
    fp_glBeginOcclusionQueryNV(id)
}
public
func glBeginOcclusionQueryNV(id:GL.UInt)
{
    fp_glBeginOcclusionQueryNV(id)
}
public
func glBeginOcclusionQueryNV(_ id:GL.UInt)
{
    fp_glBeginOcclusionQueryNV(id)
}

var fp_glBeginPerfMonitorAMD:@convention(c) (GL.UInt) -> () = load_glBeginPerfMonitorAMD
func load_glBeginPerfMonitorAMD(monitor:GL.UInt)
{
    fp_glBeginPerfMonitorAMD = unsafeBitCast(get_fp("glBeginPerfMonitorAMD", support: [ss8]), to: Swift.type(of: fp_glBeginPerfMonitorAMD))
    fp_glBeginPerfMonitorAMD(monitor)
}
public
func glBeginPerfMonitorAMD(monitor:GL.UInt)
{
    fp_glBeginPerfMonitorAMD(monitor)
}
public
func glBeginPerfMonitorAMD(_ monitor:GL.UInt)
{
    fp_glBeginPerfMonitorAMD(monitor)
}

var fp_glBeginPerfQueryINTEL:@convention(c) (GL.UInt) -> () = load_glBeginPerfQueryINTEL
func load_glBeginPerfQueryINTEL(queryHandle:GL.UInt)
{
    fp_glBeginPerfQueryINTEL = unsafeBitCast(get_fp("glBeginPerfQueryINTEL", support: [ss219]), to: Swift.type(of: fp_glBeginPerfQueryINTEL))
    fp_glBeginPerfQueryINTEL(queryHandle)
}
public
func glBeginPerfQueryINTEL(queryHandle:GL.UInt)
{
    fp_glBeginPerfQueryINTEL(queryHandle)
}
public
func glBeginPerfQueryINTEL(_ queryHandle:GL.UInt)
{
    fp_glBeginPerfQueryINTEL(queryHandle)
}

var fp_glBeginQuery:@convention(c) (GL.Enum, GL.UInt) -> () = load_glBeginQuery
func load_glBeginQuery(target:GL.Enum, id:GL.UInt)
{
    fp_glBeginQuery = unsafeBitCast(get_fp("glBeginQuery", support: [ss351, ss366]), to: Swift.type(of: fp_glBeginQuery))
    fp_glBeginQuery(target, id)
}
public
func glBeginQuery(target:GL.Enum, id:GL.UInt)
{
    fp_glBeginQuery(target, id)
}
public
func glBeginQuery(_ target:GL.Enum, _ id:GL.UInt)
{
    fp_glBeginQuery(target, id)
}

var fp_glBeginQueryARB:@convention(c) (GL.Enum, GL.UInt) -> () = load_glBeginQueryARB
func load_glBeginQueryARB(target:GL.Enum, id:GL.UInt)
{
    fp_glBeginQueryARB = unsafeBitCast(get_fp("glBeginQueryARB", support: [ss71]), to: Swift.type(of: fp_glBeginQueryARB))
    fp_glBeginQueryARB(target, id)
}
public
func glBeginQueryARB(target:GL.Enum, id:GL.UInt)
{
    fp_glBeginQueryARB(target, id)
}
public
func glBeginQueryARB(_ target:GL.Enum, _ id:GL.UInt)
{
    fp_glBeginQueryARB(target, id)
}

var fp_glBeginQueryEXT:@convention(c) (GL.Enum, GL.UInt) -> () = load_glBeginQueryEXT
func load_glBeginQueryEXT(target:GL.Enum, id:GL.UInt)
{
    fp_glBeginQueryEXT = unsafeBitCast(get_fp("glBeginQueryEXT", support: [ss145, ss171]), to: Swift.type(of: fp_glBeginQueryEXT))
    fp_glBeginQueryEXT(target, id)
}
public
func glBeginQueryEXT(target:GL.Enum, id:GL.UInt)
{
    fp_glBeginQueryEXT(target, id)
}
public
func glBeginQueryEXT(_ target:GL.Enum, _ id:GL.UInt)
{
    fp_glBeginQueryEXT(target, id)
}

var fp_glBeginQueryIndexed:@convention(c) (GL.Enum, GL.UInt, GL.UInt) -> () = load_glBeginQueryIndexed
func load_glBeginQueryIndexed(target:GL.Enum, index:GL.UInt, id:GL.UInt)
{
    fp_glBeginQueryIndexed = unsafeBitCast(get_fp("glBeginQueryIndexed", support: [ss358, ss102]), to: Swift.type(of: fp_glBeginQueryIndexed))
    fp_glBeginQueryIndexed(target, index, id)
}
public
func glBeginQueryIndexed(target:GL.Enum, index:GL.UInt, id:GL.UInt)
{
    fp_glBeginQueryIndexed(target, index, id)
}
public
func glBeginQueryIndexed(_ target:GL.Enum, _ index:GL.UInt, _ id:GL.UInt)
{
    fp_glBeginQueryIndexed(target, index, id)
}

var fp_glBeginTransformFeedback:@convention(c) (GL.Enum) -> () = load_glBeginTransformFeedback
func load_glBeginTransformFeedback(primitiveMode:GL.Enum)
{
    fp_glBeginTransformFeedback = unsafeBitCast(get_fp("glBeginTransformFeedback", support: [ss354, ss366]), to: Swift.type(of: fp_glBeginTransformFeedback))
    fp_glBeginTransformFeedback(primitiveMode)
}
public
func glBeginTransformFeedback(primitiveMode:GL.Enum)
{
    fp_glBeginTransformFeedback(primitiveMode)
}
public
func glBeginTransformFeedback(_ primitiveMode:GL.Enum)
{
    fp_glBeginTransformFeedback(primitiveMode)
}

var fp_glBeginTransformFeedbackEXT:@convention(c) (GL.Enum) -> () = load_glBeginTransformFeedbackEXT
func load_glBeginTransformFeedbackEXT(primitiveMode:GL.Enum)
{
    fp_glBeginTransformFeedbackEXT = unsafeBitCast(get_fp("glBeginTransformFeedbackEXT", support: [ss201]), to: Swift.type(of: fp_glBeginTransformFeedbackEXT))
    fp_glBeginTransformFeedbackEXT(primitiveMode)
}
public
func glBeginTransformFeedbackEXT(primitiveMode:GL.Enum)
{
    fp_glBeginTransformFeedbackEXT(primitiveMode)
}
public
func glBeginTransformFeedbackEXT(_ primitiveMode:GL.Enum)
{
    fp_glBeginTransformFeedbackEXT(primitiveMode)
}

var fp_glBeginTransformFeedbackNV:@convention(c) (GL.Enum) -> () = load_glBeginTransformFeedbackNV
func load_glBeginTransformFeedbackNV(primitiveMode:GL.Enum)
{
    fp_glBeginTransformFeedbackNV = unsafeBitCast(get_fp("glBeginTransformFeedbackNV", support: [ss272]), to: Swift.type(of: fp_glBeginTransformFeedbackNV))
    fp_glBeginTransformFeedbackNV(primitiveMode)
}
public
func glBeginTransformFeedbackNV(primitiveMode:GL.Enum)
{
    fp_glBeginTransformFeedbackNV(primitiveMode)
}
public
func glBeginTransformFeedbackNV(_ primitiveMode:GL.Enum)
{
    fp_glBeginTransformFeedbackNV(primitiveMode)
}

var fp_glBeginVertexShaderEXT:@convention(c) () -> () = load_glBeginVertexShaderEXT
func load_glBeginVertexShaderEXT()
{
    fp_glBeginVertexShaderEXT = unsafeBitCast(get_fp("glBeginVertexShaderEXT", support: [ss204]), to: Swift.type(of: fp_glBeginVertexShaderEXT))
    fp_glBeginVertexShaderEXT()
}
public
func glBeginVertexShaderEXT()
{
    fp_glBeginVertexShaderEXT()
}

var fp_glBeginVideoCaptureNV:@convention(c) (GL.UInt) -> () = load_glBeginVideoCaptureNV
func load_glBeginVideoCaptureNV(video_capture_slot:GL.UInt)
{
    fp_glBeginVideoCaptureNV = unsafeBitCast(get_fp("glBeginVideoCaptureNV", support: [ss280]), to: Swift.type(of: fp_glBeginVideoCaptureNV))
    fp_glBeginVideoCaptureNV(video_capture_slot)
}
public
func glBeginVideoCaptureNV(video_capture_slot:GL.UInt)
{
    fp_glBeginVideoCaptureNV(video_capture_slot)
}
public
func glBeginVideoCaptureNV(_ video_capture_slot:GL.UInt)
{
    fp_glBeginVideoCaptureNV(video_capture_slot)
}

var fp_glBindAttribLocation:@convention(c) (GL.UInt, GL.UInt, UnsafePointer<GL.Char>?) -> () = load_glBindAttribLocation
func load_glBindAttribLocation(program:GL.UInt, index:GL.UInt, name:UnsafePointer<GL.Char>?)
{
    fp_glBindAttribLocation = unsafeBitCast(get_fp("glBindAttribLocation", support: [ss352, ss365]), to: Swift.type(of: fp_glBindAttribLocation))
    fp_glBindAttribLocation(program, index, name)
}
public
func glBindAttribLocation(program:GL.UInt, index:GL.UInt, name:UnsafePointer<GL.Char>?)
{
    fp_glBindAttribLocation(program, index, name)
}
public
func glBindAttribLocation(_ program:GL.UInt, _ index:GL.UInt, _ name:UnsafePointer<GL.Char>?)
{
    fp_glBindAttribLocation(program, index, name)
}

var fp_glBindAttribLocationARB:@convention(c) (GL.HandleARB, GL.UInt, UnsafePointer<GL.CharARB>?) -> () = load_glBindAttribLocationARB
func load_glBindAttribLocationARB(programObj:GL.HandleARB, index:GL.UInt, name:UnsafePointer<GL.CharARB>?)
{
    fp_glBindAttribLocationARB = unsafeBitCast(get_fp("glBindAttribLocationARB", support: [ss111]), to: Swift.type(of: fp_glBindAttribLocationARB))
    fp_glBindAttribLocationARB(programObj, index, name)
}
public
func glBindAttribLocationARB(programObj:GL.HandleARB, index:GL.UInt, name:UnsafePointer<GL.CharARB>?)
{
    fp_glBindAttribLocationARB(programObj, index, name)
}
public
func glBindAttribLocationARB(_ programObj:GL.HandleARB, _ index:GL.UInt, _ name:UnsafePointer<GL.CharARB>?)
{
    fp_glBindAttribLocationARB(programObj, index, name)
}

var fp_glBindBuffer:@convention(c) (GL.Enum, GL.UInt) -> () = load_glBindBuffer
func load_glBindBuffer(target:GL.Enum, buffer:GL.UInt)
{
    fp_glBindBuffer = unsafeBitCast(get_fp("glBindBuffer", support: [ss351, ss365]), to: Swift.type(of: fp_glBindBuffer))
    fp_glBindBuffer(target, buffer)
}
public
func glBindBuffer(target:GL.Enum, buffer:GL.UInt)
{
    fp_glBindBuffer(target, buffer)
}
public
func glBindBuffer(_ target:GL.Enum, _ buffer:GL.UInt)
{
    fp_glBindBuffer(target, buffer)
}

var fp_glBindBufferARB:@convention(c) (GL.Enum, GL.UInt) -> () = load_glBindBufferARB
func load_glBindBufferARB(target:GL.Enum, buffer:GL.UInt)
{
    fp_glBindBufferARB = unsafeBitCast(get_fp("glBindBufferARB", support: [ss109]), to: Swift.type(of: fp_glBindBufferARB))
    fp_glBindBufferARB(target, buffer)
}
public
func glBindBufferARB(target:GL.Enum, buffer:GL.UInt)
{
    fp_glBindBufferARB(target, buffer)
}
public
func glBindBufferARB(_ target:GL.Enum, _ buffer:GL.UInt)
{
    fp_glBindBufferARB(target, buffer)
}

var fp_glBindBufferBase:@convention(c) (GL.Enum, GL.UInt, GL.UInt) -> () = load_glBindBufferBase
func load_glBindBufferBase(target:GL.Enum, index:GL.UInt, buffer:GL.UInt)
{
    fp_glBindBufferBase = unsafeBitCast(get_fp("glBindBufferBase", support: [ss354, ss355, ss366, ss104]), to: Swift.type(of: fp_glBindBufferBase))
    fp_glBindBufferBase(target, index, buffer)
}
public
func glBindBufferBase(target:GL.Enum, index:GL.UInt, buffer:GL.UInt)
{
    fp_glBindBufferBase(target, index, buffer)
}
public
func glBindBufferBase(_ target:GL.Enum, _ index:GL.UInt, _ buffer:GL.UInt)
{
    fp_glBindBufferBase(target, index, buffer)
}

var fp_glBindBufferBaseEXT:@convention(c) (GL.Enum, GL.UInt, GL.UInt) -> () = load_glBindBufferBaseEXT
func load_glBindBufferBaseEXT(target:GL.Enum, index:GL.UInt, buffer:GL.UInt)
{
    fp_glBindBufferBaseEXT = unsafeBitCast(get_fp("glBindBufferBaseEXT", support: [ss201]), to: Swift.type(of: fp_glBindBufferBaseEXT))
    fp_glBindBufferBaseEXT(target, index, buffer)
}
public
func glBindBufferBaseEXT(target:GL.Enum, index:GL.UInt, buffer:GL.UInt)
{
    fp_glBindBufferBaseEXT(target, index, buffer)
}
public
func glBindBufferBaseEXT(_ target:GL.Enum, _ index:GL.UInt, _ buffer:GL.UInt)
{
    fp_glBindBufferBaseEXT(target, index, buffer)
}

var fp_glBindBufferBaseNV:@convention(c) (GL.Enum, GL.UInt, GL.UInt) -> () = load_glBindBufferBaseNV
func load_glBindBufferBaseNV(target:GL.Enum, index:GL.UInt, buffer:GL.UInt)
{
    fp_glBindBufferBaseNV = unsafeBitCast(get_fp("glBindBufferBaseNV", support: [ss272]), to: Swift.type(of: fp_glBindBufferBaseNV))
    fp_glBindBufferBaseNV(target, index, buffer)
}
public
func glBindBufferBaseNV(target:GL.Enum, index:GL.UInt, buffer:GL.UInt)
{
    fp_glBindBufferBaseNV(target, index, buffer)
}
public
func glBindBufferBaseNV(_ target:GL.Enum, _ index:GL.UInt, _ buffer:GL.UInt)
{
    fp_glBindBufferBaseNV(target, index, buffer)
}

var fp_glBindBufferOffsetEXT:@convention(c) (GL.Enum, GL.UInt, GL.UInt, GL.IntPointer) -> () = load_glBindBufferOffsetEXT
func load_glBindBufferOffsetEXT(target:GL.Enum, index:GL.UInt, buffer:GL.UInt, offset:GL.IntPointer)
{
    fp_glBindBufferOffsetEXT = unsafeBitCast(get_fp("glBindBufferOffsetEXT", support: [ss201]), to: Swift.type(of: fp_glBindBufferOffsetEXT))
    fp_glBindBufferOffsetEXT(target, index, buffer, offset)
}
public
func glBindBufferOffsetEXT(target:GL.Enum, index:GL.UInt, buffer:GL.UInt, offset:GL.IntPointer)
{
    fp_glBindBufferOffsetEXT(target, index, buffer, offset)
}
public
func glBindBufferOffsetEXT(_ target:GL.Enum, _ index:GL.UInt, _ buffer:GL.UInt, _ offset:GL.IntPointer)
{
    fp_glBindBufferOffsetEXT(target, index, buffer, offset)
}

var fp_glBindBufferOffsetNV:@convention(c) (GL.Enum, GL.UInt, GL.UInt, GL.IntPointer) -> () = load_glBindBufferOffsetNV
func load_glBindBufferOffsetNV(target:GL.Enum, index:GL.UInt, buffer:GL.UInt, offset:GL.IntPointer)
{
    fp_glBindBufferOffsetNV = unsafeBitCast(get_fp("glBindBufferOffsetNV", support: [ss272]), to: Swift.type(of: fp_glBindBufferOffsetNV))
    fp_glBindBufferOffsetNV(target, index, buffer, offset)
}
public
func glBindBufferOffsetNV(target:GL.Enum, index:GL.UInt, buffer:GL.UInt, offset:GL.IntPointer)
{
    fp_glBindBufferOffsetNV(target, index, buffer, offset)
}
public
func glBindBufferOffsetNV(_ target:GL.Enum, _ index:GL.UInt, _ buffer:GL.UInt, _ offset:GL.IntPointer)
{
    fp_glBindBufferOffsetNV(target, index, buffer, offset)
}

var fp_glBindBufferRange:@convention(c) (GL.Enum, GL.UInt, GL.UInt, GL.IntPointer, GL.SizePointer) -> () = load_glBindBufferRange
func load_glBindBufferRange(target:GL.Enum, index:GL.UInt, buffer:GL.UInt, offset:GL.IntPointer, size:GL.SizePointer)
{
    fp_glBindBufferRange = unsafeBitCast(get_fp("glBindBufferRange", support: [ss354, ss355, ss366, ss104]), to: Swift.type(of: fp_glBindBufferRange))
    fp_glBindBufferRange(target, index, buffer, offset, size)
}
public
func glBindBufferRange(target:GL.Enum, index:GL.UInt, buffer:GL.UInt, offset:GL.IntPointer, size:GL.SizePointer)
{
    fp_glBindBufferRange(target, index, buffer, offset, size)
}
public
func glBindBufferRange(_ target:GL.Enum, _ index:GL.UInt, _ buffer:GL.UInt, _ offset:GL.IntPointer, _ size:GL.SizePointer)
{
    fp_glBindBufferRange(target, index, buffer, offset, size)
}

var fp_glBindBufferRangeEXT:@convention(c) (GL.Enum, GL.UInt, GL.UInt, GL.IntPointer, GL.SizePointer) -> () = load_glBindBufferRangeEXT
func load_glBindBufferRangeEXT(target:GL.Enum, index:GL.UInt, buffer:GL.UInt, offset:GL.IntPointer, size:GL.SizePointer)
{
    fp_glBindBufferRangeEXT = unsafeBitCast(get_fp("glBindBufferRangeEXT", support: [ss201]), to: Swift.type(of: fp_glBindBufferRangeEXT))
    fp_glBindBufferRangeEXT(target, index, buffer, offset, size)
}
public
func glBindBufferRangeEXT(target:GL.Enum, index:GL.UInt, buffer:GL.UInt, offset:GL.IntPointer, size:GL.SizePointer)
{
    fp_glBindBufferRangeEXT(target, index, buffer, offset, size)
}
public
func glBindBufferRangeEXT(_ target:GL.Enum, _ index:GL.UInt, _ buffer:GL.UInt, _ offset:GL.IntPointer, _ size:GL.SizePointer)
{
    fp_glBindBufferRangeEXT(target, index, buffer, offset, size)
}

var fp_glBindBufferRangeNV:@convention(c) (GL.Enum, GL.UInt, GL.UInt, GL.IntPointer, GL.SizePointer) -> () = load_glBindBufferRangeNV
func load_glBindBufferRangeNV(target:GL.Enum, index:GL.UInt, buffer:GL.UInt, offset:GL.IntPointer, size:GL.SizePointer)
{
    fp_glBindBufferRangeNV = unsafeBitCast(get_fp("glBindBufferRangeNV", support: [ss272]), to: Swift.type(of: fp_glBindBufferRangeNV))
    fp_glBindBufferRangeNV(target, index, buffer, offset, size)
}
public
func glBindBufferRangeNV(target:GL.Enum, index:GL.UInt, buffer:GL.UInt, offset:GL.IntPointer, size:GL.SizePointer)
{
    fp_glBindBufferRangeNV(target, index, buffer, offset, size)
}
public
func glBindBufferRangeNV(_ target:GL.Enum, _ index:GL.UInt, _ buffer:GL.UInt, _ offset:GL.IntPointer, _ size:GL.SizePointer)
{
    fp_glBindBufferRangeNV(target, index, buffer, offset, size)
}

var fp_glBindBuffersBase:@convention(c) (GL.Enum, GL.UInt, GL.Size, UnsafePointer<GL.UInt>?) -> () = load_glBindBuffersBase
func load_glBindBuffersBase(target:GL.Enum, first:GL.UInt, count:GL.Size, buffers:UnsafePointer<GL.UInt>?)
{
    fp_glBindBuffersBase = unsafeBitCast(get_fp("glBindBuffersBase", support: [ss362, ss67]), to: Swift.type(of: fp_glBindBuffersBase))
    fp_glBindBuffersBase(target, first, count, buffers)
}
public
func glBindBuffersBase(target:GL.Enum, first:GL.UInt, count:GL.Size, buffers:UnsafePointer<GL.UInt>?)
{
    fp_glBindBuffersBase(target, first, count, buffers)
}
public
func glBindBuffersBase(_ target:GL.Enum, _ first:GL.UInt, _ count:GL.Size, _ buffers:UnsafePointer<GL.UInt>?)
{
    fp_glBindBuffersBase(target, first, count, buffers)
}

var fp_glBindBuffersRange:@convention(c) (GL.Enum, GL.UInt, GL.Size, UnsafePointer<GL.UInt>?, UnsafePointer<GL.IntPointer>?, UnsafePointer<GL.SizePointer>?) -> () = load_glBindBuffersRange
func load_glBindBuffersRange(target:GL.Enum, first:GL.UInt, count:GL.Size, buffers:UnsafePointer<GL.UInt>?, offsets:UnsafePointer<GL.IntPointer>?, sizes:UnsafePointer<GL.SizePointer>?)
{
    fp_glBindBuffersRange = unsafeBitCast(get_fp("glBindBuffersRange", support: [ss362, ss67]), to: Swift.type(of: fp_glBindBuffersRange))
    fp_glBindBuffersRange(target, first, count, buffers, offsets, sizes)
}
public
func glBindBuffersRange(target:GL.Enum, first:GL.UInt, count:GL.Size, buffers:UnsafePointer<GL.UInt>?, offsets:UnsafePointer<GL.IntPointer>?, sizes:UnsafePointer<GL.SizePointer>?)
{
    fp_glBindBuffersRange(target, first, count, buffers, offsets, sizes)
}
public
func glBindBuffersRange(_ target:GL.Enum, _ first:GL.UInt, _ count:GL.Size, _ buffers:UnsafePointer<GL.UInt>?, _ offsets:UnsafePointer<GL.IntPointer>?, _ sizes:UnsafePointer<GL.SizePointer>?)
{
    fp_glBindBuffersRange(target, first, count, buffers, offsets, sizes)
}

var fp_glBindFragDataLocation:@convention(c) (GL.UInt, GL.UInt, UnsafePointer<GL.Char>?) -> () = load_glBindFragDataLocation
func load_glBindFragDataLocation(program:GL.UInt, color:GL.UInt, name:UnsafePointer<GL.Char>?)
{
    fp_glBindFragDataLocation = unsafeBitCast(get_fp("glBindFragDataLocation", support: [ss354]), to: Swift.type(of: fp_glBindFragDataLocation))
    fp_glBindFragDataLocation(program, color, name)
}
public
func glBindFragDataLocation(program:GL.UInt, color:GL.UInt, name:UnsafePointer<GL.Char>?)
{
    fp_glBindFragDataLocation(program, color, name)
}
public
func glBindFragDataLocation(_ program:GL.UInt, _ color:GL.UInt, _ name:UnsafePointer<GL.Char>?)
{
    fp_glBindFragDataLocation(program, color, name)
}

var fp_glBindFragDataLocationEXT:@convention(c) (GL.UInt, GL.UInt, UnsafePointer<GL.Char>?) -> () = load_glBindFragDataLocationEXT
func load_glBindFragDataLocationEXT(program:GL.UInt, color:GL.UInt, name:UnsafePointer<GL.Char>?)
{
    fp_glBindFragDataLocationEXT = unsafeBitCast(get_fp("glBindFragDataLocationEXT", support: [ss129, ss159]), to: Swift.type(of: fp_glBindFragDataLocationEXT))
    fp_glBindFragDataLocationEXT(program, color, name)
}
public
func glBindFragDataLocationEXT(program:GL.UInt, color:GL.UInt, name:UnsafePointer<GL.Char>?)
{
    fp_glBindFragDataLocationEXT(program, color, name)
}
public
func glBindFragDataLocationEXT(_ program:GL.UInt, _ color:GL.UInt, _ name:UnsafePointer<GL.Char>?)
{
    fp_glBindFragDataLocationEXT(program, color, name)
}

var fp_glBindFragDataLocationIndexed:@convention(c) (GL.UInt, GL.UInt, GL.UInt, UnsafePointer<GL.Char>?) -> () = load_glBindFragDataLocationIndexed
func load_glBindFragDataLocationIndexed(program:GL.UInt, colorNumber:GL.UInt, index:GL.UInt, name:UnsafePointer<GL.Char>?)
{
    fp_glBindFragDataLocationIndexed = unsafeBitCast(get_fp("glBindFragDataLocationIndexed", support: [ss357, ss30]), to: Swift.type(of: fp_glBindFragDataLocationIndexed))
    fp_glBindFragDataLocationIndexed(program, colorNumber, index, name)
}
public
func glBindFragDataLocationIndexed(program:GL.UInt, colorNumber:GL.UInt, index:GL.UInt, name:UnsafePointer<GL.Char>?)
{
    fp_glBindFragDataLocationIndexed(program, colorNumber, index, name)
}
public
func glBindFragDataLocationIndexed(_ program:GL.UInt, _ colorNumber:GL.UInt, _ index:GL.UInt, _ name:UnsafePointer<GL.Char>?)
{
    fp_glBindFragDataLocationIndexed(program, colorNumber, index, name)
}

var fp_glBindFragDataLocationIndexedEXT:@convention(c) (GL.UInt, GL.UInt, GL.UInt, UnsafePointer<GL.Char>?) -> () = load_glBindFragDataLocationIndexedEXT
func load_glBindFragDataLocationIndexedEXT(program:GL.UInt, colorNumber:GL.UInt, index:GL.UInt, name:UnsafePointer<GL.Char>?)
{
    fp_glBindFragDataLocationIndexedEXT = unsafeBitCast(get_fp("glBindFragDataLocationIndexedEXT", support: [ss129]), to: Swift.type(of: fp_glBindFragDataLocationIndexedEXT))
    fp_glBindFragDataLocationIndexedEXT(program, colorNumber, index, name)
}
public
func glBindFragDataLocationIndexedEXT(program:GL.UInt, colorNumber:GL.UInt, index:GL.UInt, name:UnsafePointer<GL.Char>?)
{
    fp_glBindFragDataLocationIndexedEXT(program, colorNumber, index, name)
}
public
func glBindFragDataLocationIndexedEXT(_ program:GL.UInt, _ colorNumber:GL.UInt, _ index:GL.UInt, _ name:UnsafePointer<GL.Char>?)
{
    fp_glBindFragDataLocationIndexedEXT(program, colorNumber, index, name)
}

var fp_glBindFragmentShaderATI:@convention(c) (GL.UInt) -> () = load_glBindFragmentShaderATI
func load_glBindFragmentShaderATI(id:GL.UInt)
{
    fp_glBindFragmentShaderATI = unsafeBitCast(get_fp("glBindFragmentShaderATI", support: [ss118]), to: Swift.type(of: fp_glBindFragmentShaderATI))
    fp_glBindFragmentShaderATI(id)
}
public
func glBindFragmentShaderATI(id:GL.UInt)
{
    fp_glBindFragmentShaderATI(id)
}
public
func glBindFragmentShaderATI(_ id:GL.UInt)
{
    fp_glBindFragmentShaderATI(id)
}

var fp_glBindFramebuffer:@convention(c) (GL.Enum, GL.UInt) -> () = load_glBindFramebuffer
func load_glBindFramebuffer(target:GL.Enum, framebuffer:GL.UInt)
{
    fp_glBindFramebuffer = unsafeBitCast(get_fp("glBindFramebuffer", support: [ss354, ss365, ss53]), to: Swift.type(of: fp_glBindFramebuffer))
    fp_glBindFramebuffer(target, framebuffer)
}
public
func glBindFramebuffer(target:GL.Enum, framebuffer:GL.UInt)
{
    fp_glBindFramebuffer(target, framebuffer)
}
public
func glBindFramebuffer(_ target:GL.Enum, _ framebuffer:GL.UInt)
{
    fp_glBindFramebuffer(target, framebuffer)
}

var fp_glBindFramebufferEXT:@convention(c) (GL.Enum, GL.UInt) -> () = load_glBindFramebufferEXT
func load_glBindFramebufferEXT(target:GL.Enum, framebuffer:GL.UInt)
{
    fp_glBindFramebufferEXT = unsafeBitCast(get_fp("glBindFramebufferEXT", support: [ss155]), to: Swift.type(of: fp_glBindFramebufferEXT))
    fp_glBindFramebufferEXT(target, framebuffer)
}
public
func glBindFramebufferEXT(target:GL.Enum, framebuffer:GL.UInt)
{
    fp_glBindFramebufferEXT(target, framebuffer)
}
public
func glBindFramebufferEXT(_ target:GL.Enum, _ framebuffer:GL.UInt)
{
    fp_glBindFramebufferEXT(target, framebuffer)
}

var fp_glBindFramebufferOES:@convention(c) (GL.Enum, GL.UInt) -> () = load_glBindFramebufferOES
func load_glBindFramebufferOES(target:GL.Enum, framebuffer:GL.UInt)
{
    fp_glBindFramebufferOES = unsafeBitCast(get_fp("glBindFramebufferOES", support: [ss293]), to: Swift.type(of: fp_glBindFramebufferOES))
    fp_glBindFramebufferOES(target, framebuffer)
}
public
func glBindFramebufferOES(target:GL.Enum, framebuffer:GL.UInt)
{
    fp_glBindFramebufferOES(target, framebuffer)
}
public
func glBindFramebufferOES(_ target:GL.Enum, _ framebuffer:GL.UInt)
{
    fp_glBindFramebufferOES(target, framebuffer)
}

var fp_glBindImageTexture:@convention(c) (GL.UInt, GL.UInt, GL.Int, GL.Bool, GL.Int, GL.Enum, GL.Enum) -> () = load_glBindImageTexture
func load_glBindImageTexture(unit:GL.UInt, texture:GL.UInt, level:GL.Int, layered:GL.Bool, layer:GL.Int, access:GL.Enum, format:GL.Enum)
{
    fp_glBindImageTexture = unsafeBitCast(get_fp("glBindImageTexture", support: [ss360, ss367, ss82]), to: Swift.type(of: fp_glBindImageTexture))
    fp_glBindImageTexture(unit, texture, level, layered, layer, access, format)
}
public
func glBindImageTexture(unit:GL.UInt, texture:GL.UInt, level:GL.Int, layered:GL.Bool, layer:GL.Int, access:GL.Enum, format:GL.Enum)
{
    fp_glBindImageTexture(unit, texture, level, layered, layer, access, format)
}
public
func glBindImageTexture(_ unit:GL.UInt, _ texture:GL.UInt, _ level:GL.Int, _ layered:GL.Bool, _ layer:GL.Int, _ access:GL.Enum, _ format:GL.Enum)
{
    fp_glBindImageTexture(unit, texture, level, layered, layer, access, format)
}

var fp_glBindImageTextureEXT:@convention(c) (GL.UInt, GL.UInt, GL.Int, GL.Bool, GL.Int, GL.Enum, GL.Int) -> () = load_glBindImageTextureEXT
func load_glBindImageTextureEXT(index:GL.UInt, texture:GL.UInt, level:GL.Int, layered:GL.Bool, layer:GL.Int, access:GL.Enum, format:GL.Int)
{
    fp_glBindImageTextureEXT = unsafeBitCast(get_fp("glBindImageTextureEXT", support: [ss183]), to: Swift.type(of: fp_glBindImageTextureEXT))
    fp_glBindImageTextureEXT(index, texture, level, layered, layer, access, format)
}
public
func glBindImageTextureEXT(index:GL.UInt, texture:GL.UInt, level:GL.Int, layered:GL.Bool, layer:GL.Int, access:GL.Enum, format:GL.Int)
{
    fp_glBindImageTextureEXT(index, texture, level, layered, layer, access, format)
}
public
func glBindImageTextureEXT(_ index:GL.UInt, _ texture:GL.UInt, _ level:GL.Int, _ layered:GL.Bool, _ layer:GL.Int, _ access:GL.Enum, _ format:GL.Int)
{
    fp_glBindImageTextureEXT(index, texture, level, layered, layer, access, format)
}

var fp_glBindImageTextures:@convention(c) (GL.UInt, GL.Size, UnsafePointer<GL.UInt>?) -> () = load_glBindImageTextures
func load_glBindImageTextures(first:GL.UInt, count:GL.Size, textures:UnsafePointer<GL.UInt>?)
{
    fp_glBindImageTextures = unsafeBitCast(get_fp("glBindImageTextures", support: [ss362, ss67]), to: Swift.type(of: fp_glBindImageTextures))
    fp_glBindImageTextures(first, count, textures)
}
public
func glBindImageTextures(first:GL.UInt, count:GL.Size, textures:UnsafePointer<GL.UInt>?)
{
    fp_glBindImageTextures(first, count, textures)
}
public
func glBindImageTextures(_ first:GL.UInt, _ count:GL.Size, _ textures:UnsafePointer<GL.UInt>?)
{
    fp_glBindImageTextures(first, count, textures)
}

var fp_glBindLightParameterEXT:@convention(c) (GL.Enum, GL.Enum) -> GL.UInt = load_glBindLightParameterEXT
func load_glBindLightParameterEXT(light:GL.Enum, value:GL.Enum) -> GL.UInt
{
    fp_glBindLightParameterEXT = unsafeBitCast(get_fp("glBindLightParameterEXT", support: [ss204]), to: Swift.type(of: fp_glBindLightParameterEXT))
    return fp_glBindLightParameterEXT(light, value)
}
public
func glBindLightParameterEXT(light:GL.Enum, value:GL.Enum) -> GL.UInt
{
    return fp_glBindLightParameterEXT(light, value)
}
public
func glBindLightParameterEXT(_ light:GL.Enum, _ value:GL.Enum) -> GL.UInt
{
    return fp_glBindLightParameterEXT(light, value)
}

var fp_glBindMaterialParameterEXT:@convention(c) (GL.Enum, GL.Enum) -> GL.UInt = load_glBindMaterialParameterEXT
func load_glBindMaterialParameterEXT(face:GL.Enum, value:GL.Enum) -> GL.UInt
{
    fp_glBindMaterialParameterEXT = unsafeBitCast(get_fp("glBindMaterialParameterEXT", support: [ss204]), to: Swift.type(of: fp_glBindMaterialParameterEXT))
    return fp_glBindMaterialParameterEXT(face, value)
}
public
func glBindMaterialParameterEXT(face:GL.Enum, value:GL.Enum) -> GL.UInt
{
    return fp_glBindMaterialParameterEXT(face, value)
}
public
func glBindMaterialParameterEXT(_ face:GL.Enum, _ value:GL.Enum) -> GL.UInt
{
    return fp_glBindMaterialParameterEXT(face, value)
}

var fp_glBindMultiTextureEXT:@convention(c) (GL.Enum, GL.Enum, GL.UInt) -> () = load_glBindMultiTextureEXT
func load_glBindMultiTextureEXT(texunit:GL.Enum, target:GL.Enum, texture:GL.UInt)
{
    fp_glBindMultiTextureEXT = unsafeBitCast(get_fp("glBindMultiTextureEXT", support: [ss143]), to: Swift.type(of: fp_glBindMultiTextureEXT))
    fp_glBindMultiTextureEXT(texunit, target, texture)
}
public
func glBindMultiTextureEXT(texunit:GL.Enum, target:GL.Enum, texture:GL.UInt)
{
    fp_glBindMultiTextureEXT(texunit, target, texture)
}
public
func glBindMultiTextureEXT(_ texunit:GL.Enum, _ target:GL.Enum, _ texture:GL.UInt)
{
    fp_glBindMultiTextureEXT(texunit, target, texture)
}

var fp_glBindParameterEXT:@convention(c) (GL.Enum) -> GL.UInt = load_glBindParameterEXT
func load_glBindParameterEXT(value:GL.Enum) -> GL.UInt
{
    fp_glBindParameterEXT = unsafeBitCast(get_fp("glBindParameterEXT", support: [ss204]), to: Swift.type(of: fp_glBindParameterEXT))
    return fp_glBindParameterEXT(value)
}
public
func glBindParameterEXT(value:GL.Enum) -> GL.UInt
{
    return fp_glBindParameterEXT(value)
}
public
func glBindParameterEXT(_ value:GL.Enum) -> GL.UInt
{
    return fp_glBindParameterEXT(value)
}

var fp_glBindProgramARB:@convention(c) (GL.Enum, GL.UInt) -> () = load_glBindProgramARB
func load_glBindProgramARB(target:GL.Enum, program:GL.UInt)
{
    fp_glBindProgramARB = unsafeBitCast(get_fp("glBindProgramARB", support: [ss51, ss110]), to: Swift.type(of: fp_glBindProgramARB))
    fp_glBindProgramARB(target, program)
}
public
func glBindProgramARB(target:GL.Enum, program:GL.UInt)
{
    fp_glBindProgramARB(target, program)
}
public
func glBindProgramARB(_ target:GL.Enum, _ program:GL.UInt)
{
    fp_glBindProgramARB(target, program)
}

var fp_glBindProgramNV:@convention(c) (GL.Enum, GL.UInt) -> () = load_glBindProgramNV
func load_glBindProgramNV(target:GL.Enum, id:GL.UInt)
{
    fp_glBindProgramNV = unsafeBitCast(get_fp("glBindProgramNV", support: [ss278]), to: Swift.type(of: fp_glBindProgramNV))
    fp_glBindProgramNV(target, id)
}
public
func glBindProgramNV(target:GL.Enum, id:GL.UInt)
{
    fp_glBindProgramNV(target, id)
}
public
func glBindProgramNV(_ target:GL.Enum, _ id:GL.UInt)
{
    fp_glBindProgramNV(target, id)
}

var fp_glBindProgramPipeline:@convention(c) (GL.UInt) -> () = load_glBindProgramPipeline
func load_glBindProgramPipeline(pipeline:GL.UInt)
{
    fp_glBindProgramPipeline = unsafeBitCast(get_fp("glBindProgramPipeline", support: [ss359, ss367, ss80]), to: Swift.type(of: fp_glBindProgramPipeline))
    fp_glBindProgramPipeline(pipeline)
}
public
func glBindProgramPipeline(pipeline:GL.UInt)
{
    fp_glBindProgramPipeline(pipeline)
}
public
func glBindProgramPipeline(_ pipeline:GL.UInt)
{
    fp_glBindProgramPipeline(pipeline)
}

var fp_glBindProgramPipelineEXT:@convention(c) (GL.UInt) -> () = load_glBindProgramPipelineEXT
func load_glBindProgramPipelineEXT(pipeline:GL.UInt)
{
    fp_glBindProgramPipelineEXT = unsafeBitCast(get_fp("glBindProgramPipelineEXT", support: [ss182]), to: Swift.type(of: fp_glBindProgramPipelineEXT))
    fp_glBindProgramPipelineEXT(pipeline)
}
public
func glBindProgramPipelineEXT(pipeline:GL.UInt)
{
    fp_glBindProgramPipelineEXT(pipeline)
}
public
func glBindProgramPipelineEXT(_ pipeline:GL.UInt)
{
    fp_glBindProgramPipelineEXT(pipeline)
}

var fp_glBindRenderbuffer:@convention(c) (GL.Enum, GL.UInt) -> () = load_glBindRenderbuffer
func load_glBindRenderbuffer(target:GL.Enum, renderbuffer:GL.UInt)
{
    fp_glBindRenderbuffer = unsafeBitCast(get_fp("glBindRenderbuffer", support: [ss354, ss365, ss53]), to: Swift.type(of: fp_glBindRenderbuffer))
    fp_glBindRenderbuffer(target, renderbuffer)
}
public
func glBindRenderbuffer(target:GL.Enum, renderbuffer:GL.UInt)
{
    fp_glBindRenderbuffer(target, renderbuffer)
}
public
func glBindRenderbuffer(_ target:GL.Enum, _ renderbuffer:GL.UInt)
{
    fp_glBindRenderbuffer(target, renderbuffer)
}

var fp_glBindRenderbufferEXT:@convention(c) (GL.Enum, GL.UInt) -> () = load_glBindRenderbufferEXT
func load_glBindRenderbufferEXT(target:GL.Enum, renderbuffer:GL.UInt)
{
    fp_glBindRenderbufferEXT = unsafeBitCast(get_fp("glBindRenderbufferEXT", support: [ss155]), to: Swift.type(of: fp_glBindRenderbufferEXT))
    fp_glBindRenderbufferEXT(target, renderbuffer)
}
public
func glBindRenderbufferEXT(target:GL.Enum, renderbuffer:GL.UInt)
{
    fp_glBindRenderbufferEXT(target, renderbuffer)
}
public
func glBindRenderbufferEXT(_ target:GL.Enum, _ renderbuffer:GL.UInt)
{
    fp_glBindRenderbufferEXT(target, renderbuffer)
}

var fp_glBindRenderbufferOES:@convention(c) (GL.Enum, GL.UInt) -> () = load_glBindRenderbufferOES
func load_glBindRenderbufferOES(target:GL.Enum, renderbuffer:GL.UInt)
{
    fp_glBindRenderbufferOES = unsafeBitCast(get_fp("glBindRenderbufferOES", support: [ss293]), to: Swift.type(of: fp_glBindRenderbufferOES))
    fp_glBindRenderbufferOES(target, renderbuffer)
}
public
func glBindRenderbufferOES(target:GL.Enum, renderbuffer:GL.UInt)
{
    fp_glBindRenderbufferOES(target, renderbuffer)
}
public
func glBindRenderbufferOES(_ target:GL.Enum, _ renderbuffer:GL.UInt)
{
    fp_glBindRenderbufferOES(target, renderbuffer)
}

var fp_glBindSampler:@convention(c) (GL.UInt, GL.UInt) -> () = load_glBindSampler
func load_glBindSampler(unit:GL.UInt, sampler:GL.UInt)
{
    fp_glBindSampler = unsafeBitCast(get_fp("glBindSampler", support: [ss357, ss366, ss79]), to: Swift.type(of: fp_glBindSampler))
    fp_glBindSampler(unit, sampler)
}
public
func glBindSampler(unit:GL.UInt, sampler:GL.UInt)
{
    fp_glBindSampler(unit, sampler)
}
public
func glBindSampler(_ unit:GL.UInt, _ sampler:GL.UInt)
{
    fp_glBindSampler(unit, sampler)
}

var fp_glBindSamplers:@convention(c) (GL.UInt, GL.Size, UnsafePointer<GL.UInt>?) -> () = load_glBindSamplers
func load_glBindSamplers(first:GL.UInt, count:GL.Size, samplers:UnsafePointer<GL.UInt>?)
{
    fp_glBindSamplers = unsafeBitCast(get_fp("glBindSamplers", support: [ss362, ss67]), to: Swift.type(of: fp_glBindSamplers))
    fp_glBindSamplers(first, count, samplers)
}
public
func glBindSamplers(first:GL.UInt, count:GL.Size, samplers:UnsafePointer<GL.UInt>?)
{
    fp_glBindSamplers(first, count, samplers)
}
public
func glBindSamplers(_ first:GL.UInt, _ count:GL.Size, _ samplers:UnsafePointer<GL.UInt>?)
{
    fp_glBindSamplers(first, count, samplers)
}

var fp_glBindTexGenParameterEXT:@convention(c) (GL.Enum, GL.Enum, GL.Enum) -> GL.UInt = load_glBindTexGenParameterEXT
func load_glBindTexGenParameterEXT(unit:GL.Enum, coord:GL.Enum, value:GL.Enum) -> GL.UInt
{
    fp_glBindTexGenParameterEXT = unsafeBitCast(get_fp("glBindTexGenParameterEXT", support: [ss204]), to: Swift.type(of: fp_glBindTexGenParameterEXT))
    return fp_glBindTexGenParameterEXT(unit, coord, value)
}
public
func glBindTexGenParameterEXT(unit:GL.Enum, coord:GL.Enum, value:GL.Enum) -> GL.UInt
{
    return fp_glBindTexGenParameterEXT(unit, coord, value)
}
public
func glBindTexGenParameterEXT(_ unit:GL.Enum, _ coord:GL.Enum, _ value:GL.Enum) -> GL.UInt
{
    return fp_glBindTexGenParameterEXT(unit, coord, value)
}

var fp_glBindTexture:@convention(c) (GL.Enum, GL.UInt) -> () = load_glBindTexture
func load_glBindTexture(target:GL.Enum, texture:GL.UInt)
{
    fp_glBindTexture = unsafeBitCast(get_fp("glBindTexture", support: [ss347, ss365]), to: Swift.type(of: fp_glBindTexture))
    fp_glBindTexture(target, texture)
}
public
func glBindTexture(target:GL.Enum, texture:GL.UInt)
{
    fp_glBindTexture(target, texture)
}
public
func glBindTexture(_ target:GL.Enum, _ texture:GL.UInt)
{
    fp_glBindTexture(target, texture)
}

var fp_glBindTextureEXT:@convention(c) (GL.Enum, GL.UInt) -> () = load_glBindTextureEXT
func load_glBindTextureEXT(target:GL.Enum, texture:GL.UInt)
{
    fp_glBindTextureEXT = unsafeBitCast(get_fp("glBindTextureEXT", support: [ss195]), to: Swift.type(of: fp_glBindTextureEXT))
    fp_glBindTextureEXT(target, texture)
}
public
func glBindTextureEXT(target:GL.Enum, texture:GL.UInt)
{
    fp_glBindTextureEXT(target, texture)
}
public
func glBindTextureEXT(_ target:GL.Enum, _ texture:GL.UInt)
{
    fp_glBindTextureEXT(target, texture)
}

var fp_glBindTextureUnit:@convention(c) (GL.UInt, GL.UInt) -> () = load_glBindTextureUnit
func load_glBindTextureUnit(unit:GL.UInt, texture:GL.UInt)
{
    fp_glBindTextureUnit = unsafeBitCast(get_fp("glBindTextureUnit", support: [ss363, ss42]), to: Swift.type(of: fp_glBindTextureUnit))
    fp_glBindTextureUnit(unit, texture)
}
public
func glBindTextureUnit(unit:GL.UInt, texture:GL.UInt)
{
    fp_glBindTextureUnit(unit, texture)
}
public
func glBindTextureUnit(_ unit:GL.UInt, _ texture:GL.UInt)
{
    fp_glBindTextureUnit(unit, texture)
}

var fp_glBindTextureUnitParameterEXT:@convention(c) (GL.Enum, GL.Enum) -> GL.UInt = load_glBindTextureUnitParameterEXT
func load_glBindTextureUnitParameterEXT(unit:GL.Enum, value:GL.Enum) -> GL.UInt
{
    fp_glBindTextureUnitParameterEXT = unsafeBitCast(get_fp("glBindTextureUnitParameterEXT", support: [ss204]), to: Swift.type(of: fp_glBindTextureUnitParameterEXT))
    return fp_glBindTextureUnitParameterEXT(unit, value)
}
public
func glBindTextureUnitParameterEXT(unit:GL.Enum, value:GL.Enum) -> GL.UInt
{
    return fp_glBindTextureUnitParameterEXT(unit, value)
}
public
func glBindTextureUnitParameterEXT(_ unit:GL.Enum, _ value:GL.Enum) -> GL.UInt
{
    return fp_glBindTextureUnitParameterEXT(unit, value)
}

var fp_glBindTextures:@convention(c) (GL.UInt, GL.Size, UnsafePointer<GL.UInt>?) -> () = load_glBindTextures
func load_glBindTextures(first:GL.UInt, count:GL.Size, textures:UnsafePointer<GL.UInt>?)
{
    fp_glBindTextures = unsafeBitCast(get_fp("glBindTextures", support: [ss362, ss67]), to: Swift.type(of: fp_glBindTextures))
    fp_glBindTextures(first, count, textures)
}
public
func glBindTextures(first:GL.UInt, count:GL.Size, textures:UnsafePointer<GL.UInt>?)
{
    fp_glBindTextures(first, count, textures)
}
public
func glBindTextures(_ first:GL.UInt, _ count:GL.Size, _ textures:UnsafePointer<GL.UInt>?)
{
    fp_glBindTextures(first, count, textures)
}

var fp_glBindTransformFeedback:@convention(c) (GL.Enum, GL.UInt) -> () = load_glBindTransformFeedback
func load_glBindTransformFeedback(target:GL.Enum, id:GL.UInt)
{
    fp_glBindTransformFeedback = unsafeBitCast(get_fp("glBindTransformFeedback", support: [ss358, ss366, ss101]), to: Swift.type(of: fp_glBindTransformFeedback))
    fp_glBindTransformFeedback(target, id)
}
public
func glBindTransformFeedback(target:GL.Enum, id:GL.UInt)
{
    fp_glBindTransformFeedback(target, id)
}
public
func glBindTransformFeedback(_ target:GL.Enum, _ id:GL.UInt)
{
    fp_glBindTransformFeedback(target, id)
}

var fp_glBindTransformFeedbackNV:@convention(c) (GL.Enum, GL.UInt) -> () = load_glBindTransformFeedbackNV
func load_glBindTransformFeedbackNV(target:GL.Enum, id:GL.UInt)
{
    fp_glBindTransformFeedbackNV = unsafeBitCast(get_fp("glBindTransformFeedbackNV", support: [ss273]), to: Swift.type(of: fp_glBindTransformFeedbackNV))
    fp_glBindTransformFeedbackNV(target, id)
}
public
func glBindTransformFeedbackNV(target:GL.Enum, id:GL.UInt)
{
    fp_glBindTransformFeedbackNV(target, id)
}
public
func glBindTransformFeedbackNV(_ target:GL.Enum, _ id:GL.UInt)
{
    fp_glBindTransformFeedbackNV(target, id)
}

var fp_glBindVertexArray:@convention(c) (GL.UInt) -> () = load_glBindVertexArray
func load_glBindVertexArray(array:GL.UInt)
{
    fp_glBindVertexArray = unsafeBitCast(get_fp("glBindVertexArray", support: [ss354, ss366, ss105]), to: Swift.type(of: fp_glBindVertexArray))
    fp_glBindVertexArray(array)
}
public
func glBindVertexArray(array:GL.UInt)
{
    fp_glBindVertexArray(array)
}
public
func glBindVertexArray(_ array:GL.UInt)
{
    fp_glBindVertexArray(array)
}

var fp_glBindVertexArrayAPPLE:@convention(c) (GL.UInt) -> () = load_glBindVertexArrayAPPLE
func load_glBindVertexArrayAPPLE(array:GL.UInt)
{
    fp_glBindVertexArrayAPPLE = unsafeBitCast(get_fp("glBindVertexArrayAPPLE", support: [ss25]), to: Swift.type(of: fp_glBindVertexArrayAPPLE))
    fp_glBindVertexArrayAPPLE(array)
}
public
func glBindVertexArrayAPPLE(array:GL.UInt)
{
    fp_glBindVertexArrayAPPLE(array)
}
public
func glBindVertexArrayAPPLE(_ array:GL.UInt)
{
    fp_glBindVertexArrayAPPLE(array)
}

var fp_glBindVertexArrayOES:@convention(c) (GL.UInt) -> () = load_glBindVertexArrayOES
func load_glBindVertexArrayOES(array:GL.UInt)
{
    fp_glBindVertexArrayOES = unsafeBitCast(get_fp("glBindVertexArrayOES", support: [ss310]), to: Swift.type(of: fp_glBindVertexArrayOES))
    fp_glBindVertexArrayOES(array)
}
public
func glBindVertexArrayOES(array:GL.UInt)
{
    fp_glBindVertexArrayOES(array)
}
public
func glBindVertexArrayOES(_ array:GL.UInt)
{
    fp_glBindVertexArrayOES(array)
}

var fp_glBindVertexBuffer:@convention(c) (GL.UInt, GL.UInt, GL.IntPointer, GL.Size) -> () = load_glBindVertexBuffer
func load_glBindVertexBuffer(bindingindex:GL.UInt, buffer:GL.UInt, offset:GL.IntPointer, stride:GL.Size)
{
    fp_glBindVertexBuffer = unsafeBitCast(get_fp("glBindVertexBuffer", support: [ss361, ss367, ss107]), to: Swift.type(of: fp_glBindVertexBuffer))
    fp_glBindVertexBuffer(bindingindex, buffer, offset, stride)
}
public
func glBindVertexBuffer(bindingindex:GL.UInt, buffer:GL.UInt, offset:GL.IntPointer, stride:GL.Size)
{
    fp_glBindVertexBuffer(bindingindex, buffer, offset, stride)
}
public
func glBindVertexBuffer(_ bindingindex:GL.UInt, _ buffer:GL.UInt, _ offset:GL.IntPointer, _ stride:GL.Size)
{
    fp_glBindVertexBuffer(bindingindex, buffer, offset, stride)
}

var fp_glBindVertexBuffers:@convention(c) (GL.UInt, GL.Size, UnsafePointer<GL.UInt>?, UnsafePointer<GL.IntPointer>?, UnsafePointer<GL.Size>?) -> () = load_glBindVertexBuffers
func load_glBindVertexBuffers(first:GL.UInt, count:GL.Size, buffers:UnsafePointer<GL.UInt>?, offsets:UnsafePointer<GL.IntPointer>?, strides:UnsafePointer<GL.Size>?)
{
    fp_glBindVertexBuffers = unsafeBitCast(get_fp("glBindVertexBuffers", support: [ss362, ss67]), to: Swift.type(of: fp_glBindVertexBuffers))
    fp_glBindVertexBuffers(first, count, buffers, offsets, strides)
}
public
func glBindVertexBuffers(first:GL.UInt, count:GL.Size, buffers:UnsafePointer<GL.UInt>?, offsets:UnsafePointer<GL.IntPointer>?, strides:UnsafePointer<GL.Size>?)
{
    fp_glBindVertexBuffers(first, count, buffers, offsets, strides)
}
public
func glBindVertexBuffers(_ first:GL.UInt, _ count:GL.Size, _ buffers:UnsafePointer<GL.UInt>?, _ offsets:UnsafePointer<GL.IntPointer>?, _ strides:UnsafePointer<GL.Size>?)
{
    fp_glBindVertexBuffers(first, count, buffers, offsets, strides)
}

var fp_glBindVertexShaderEXT:@convention(c) (GL.UInt) -> () = load_glBindVertexShaderEXT
func load_glBindVertexShaderEXT(id:GL.UInt)
{
    fp_glBindVertexShaderEXT = unsafeBitCast(get_fp("glBindVertexShaderEXT", support: [ss204]), to: Swift.type(of: fp_glBindVertexShaderEXT))
    fp_glBindVertexShaderEXT(id)
}
public
func glBindVertexShaderEXT(id:GL.UInt)
{
    fp_glBindVertexShaderEXT(id)
}
public
func glBindVertexShaderEXT(_ id:GL.UInt)
{
    fp_glBindVertexShaderEXT(id)
}

var fp_glBindVideoCaptureStreamBufferNV:@convention(c) (GL.UInt, GL.UInt, GL.Enum, GL.IntPointerARB) -> () = load_glBindVideoCaptureStreamBufferNV
func load_glBindVideoCaptureStreamBufferNV(video_capture_slot:GL.UInt, stream:GL.UInt, frame_region:GL.Enum, offset:GL.IntPointerARB)
{
    fp_glBindVideoCaptureStreamBufferNV = unsafeBitCast(get_fp("glBindVideoCaptureStreamBufferNV", support: [ss280]), to: Swift.type(of: fp_glBindVideoCaptureStreamBufferNV))
    fp_glBindVideoCaptureStreamBufferNV(video_capture_slot, stream, frame_region, offset)
}
public
func glBindVideoCaptureStreamBufferNV(video_capture_slot:GL.UInt, stream:GL.UInt, frame_region:GL.Enum, offset:GL.IntPointerARB)
{
    fp_glBindVideoCaptureStreamBufferNV(video_capture_slot, stream, frame_region, offset)
}
public
func glBindVideoCaptureStreamBufferNV(_ video_capture_slot:GL.UInt, _ stream:GL.UInt, _ frame_region:GL.Enum, _ offset:GL.IntPointerARB)
{
    fp_glBindVideoCaptureStreamBufferNV(video_capture_slot, stream, frame_region, offset)
}

var fp_glBindVideoCaptureStreamTextureNV:@convention(c) (GL.UInt, GL.UInt, GL.Enum, GL.Enum, GL.UInt) -> () = load_glBindVideoCaptureStreamTextureNV
func load_glBindVideoCaptureStreamTextureNV(video_capture_slot:GL.UInt, stream:GL.UInt, frame_region:GL.Enum, target:GL.Enum, texture:GL.UInt)
{
    fp_glBindVideoCaptureStreamTextureNV = unsafeBitCast(get_fp("glBindVideoCaptureStreamTextureNV", support: [ss280]), to: Swift.type(of: fp_glBindVideoCaptureStreamTextureNV))
    fp_glBindVideoCaptureStreamTextureNV(video_capture_slot, stream, frame_region, target, texture)
}
public
func glBindVideoCaptureStreamTextureNV(video_capture_slot:GL.UInt, stream:GL.UInt, frame_region:GL.Enum, target:GL.Enum, texture:GL.UInt)
{
    fp_glBindVideoCaptureStreamTextureNV(video_capture_slot, stream, frame_region, target, texture)
}
public
func glBindVideoCaptureStreamTextureNV(_ video_capture_slot:GL.UInt, _ stream:GL.UInt, _ frame_region:GL.Enum, _ target:GL.Enum, _ texture:GL.UInt)
{
    fp_glBindVideoCaptureStreamTextureNV(video_capture_slot, stream, frame_region, target, texture)
}

var fp_glBinormal3bEXT:@convention(c) (GL.Byte, GL.Byte, GL.Byte) -> () = load_glBinormal3bEXT
func load_glBinormal3bEXT(bx:GL.Byte, by:GL.Byte, bz:GL.Byte)
{
    fp_glBinormal3bEXT = unsafeBitCast(get_fp("glBinormal3bEXT", support: [ss136]), to: Swift.type(of: fp_glBinormal3bEXT))
    fp_glBinormal3bEXT(bx, by, bz)
}
public
func glBinormal3bEXT(bx:GL.Byte, by:GL.Byte, bz:GL.Byte)
{
    fp_glBinormal3bEXT(bx, by, bz)
}
public
func glBinormal3bEXT(_ bx:GL.Byte, _ by:GL.Byte, _ bz:GL.Byte)
{
    fp_glBinormal3bEXT(bx, by, bz)
}

var fp_glBinormal3bvEXT:@convention(c) (UnsafePointer<GL.Byte>?) -> () = load_glBinormal3bvEXT
func load_glBinormal3bvEXT(v:UnsafePointer<GL.Byte>?)
{
    fp_glBinormal3bvEXT = unsafeBitCast(get_fp("glBinormal3bvEXT", support: [ss136]), to: Swift.type(of: fp_glBinormal3bvEXT))
    fp_glBinormal3bvEXT(v)
}
public
func glBinormal3bvEXT(v:UnsafePointer<GL.Byte>?)
{
    fp_glBinormal3bvEXT(v)
}
public
func glBinormal3bvEXT(_ v:UnsafePointer<GL.Byte>?)
{
    fp_glBinormal3bvEXT(v)
}

var fp_glBinormal3dEXT:@convention(c) (GL.Double, GL.Double, GL.Double) -> () = load_glBinormal3dEXT
func load_glBinormal3dEXT(bx:GL.Double, by:GL.Double, bz:GL.Double)
{
    fp_glBinormal3dEXT = unsafeBitCast(get_fp("glBinormal3dEXT", support: [ss136]), to: Swift.type(of: fp_glBinormal3dEXT))
    fp_glBinormal3dEXT(bx, by, bz)
}
public
func glBinormal3dEXT(bx:GL.Double, by:GL.Double, bz:GL.Double)
{
    fp_glBinormal3dEXT(bx, by, bz)
}
public
func glBinormal3dEXT(_ bx:GL.Double, _ by:GL.Double, _ bz:GL.Double)
{
    fp_glBinormal3dEXT(bx, by, bz)
}

var fp_glBinormal3dvEXT:@convention(c) (UnsafePointer<GL.Double>?) -> () = load_glBinormal3dvEXT
func load_glBinormal3dvEXT(v:UnsafePointer<GL.Double>?)
{
    fp_glBinormal3dvEXT = unsafeBitCast(get_fp("glBinormal3dvEXT", support: [ss136]), to: Swift.type(of: fp_glBinormal3dvEXT))
    fp_glBinormal3dvEXT(v)
}
public
func glBinormal3dvEXT(v:UnsafePointer<GL.Double>?)
{
    fp_glBinormal3dvEXT(v)
}
public
func glBinormal3dvEXT(_ v:UnsafePointer<GL.Double>?)
{
    fp_glBinormal3dvEXT(v)
}

var fp_glBinormal3fEXT:@convention(c) (GL.Float, GL.Float, GL.Float) -> () = load_glBinormal3fEXT
func load_glBinormal3fEXT(bx:GL.Float, by:GL.Float, bz:GL.Float)
{
    fp_glBinormal3fEXT = unsafeBitCast(get_fp("glBinormal3fEXT", support: [ss136]), to: Swift.type(of: fp_glBinormal3fEXT))
    fp_glBinormal3fEXT(bx, by, bz)
}
public
func glBinormal3fEXT(bx:GL.Float, by:GL.Float, bz:GL.Float)
{
    fp_glBinormal3fEXT(bx, by, bz)
}
public
func glBinormal3fEXT(_ bx:GL.Float, _ by:GL.Float, _ bz:GL.Float)
{
    fp_glBinormal3fEXT(bx, by, bz)
}

var fp_glBinormal3fvEXT:@convention(c) (UnsafePointer<GL.Float>?) -> () = load_glBinormal3fvEXT
func load_glBinormal3fvEXT(v:UnsafePointer<GL.Float>?)
{
    fp_glBinormal3fvEXT = unsafeBitCast(get_fp("glBinormal3fvEXT", support: [ss136]), to: Swift.type(of: fp_glBinormal3fvEXT))
    fp_glBinormal3fvEXT(v)
}
public
func glBinormal3fvEXT(v:UnsafePointer<GL.Float>?)
{
    fp_glBinormal3fvEXT(v)
}
public
func glBinormal3fvEXT(_ v:UnsafePointer<GL.Float>?)
{
    fp_glBinormal3fvEXT(v)
}

var fp_glBinormal3iEXT:@convention(c) (GL.Int, GL.Int, GL.Int) -> () = load_glBinormal3iEXT
func load_glBinormal3iEXT(bx:GL.Int, by:GL.Int, bz:GL.Int)
{
    fp_glBinormal3iEXT = unsafeBitCast(get_fp("glBinormal3iEXT", support: [ss136]), to: Swift.type(of: fp_glBinormal3iEXT))
    fp_glBinormal3iEXT(bx, by, bz)
}
public
func glBinormal3iEXT(bx:GL.Int, by:GL.Int, bz:GL.Int)
{
    fp_glBinormal3iEXT(bx, by, bz)
}
public
func glBinormal3iEXT(_ bx:GL.Int, _ by:GL.Int, _ bz:GL.Int)
{
    fp_glBinormal3iEXT(bx, by, bz)
}

var fp_glBinormal3ivEXT:@convention(c) (UnsafePointer<GL.Int>?) -> () = load_glBinormal3ivEXT
func load_glBinormal3ivEXT(v:UnsafePointer<GL.Int>?)
{
    fp_glBinormal3ivEXT = unsafeBitCast(get_fp("glBinormal3ivEXT", support: [ss136]), to: Swift.type(of: fp_glBinormal3ivEXT))
    fp_glBinormal3ivEXT(v)
}
public
func glBinormal3ivEXT(v:UnsafePointer<GL.Int>?)
{
    fp_glBinormal3ivEXT(v)
}
public
func glBinormal3ivEXT(_ v:UnsafePointer<GL.Int>?)
{
    fp_glBinormal3ivEXT(v)
}

var fp_glBinormal3sEXT:@convention(c) (GL.Short, GL.Short, GL.Short) -> () = load_glBinormal3sEXT
func load_glBinormal3sEXT(bx:GL.Short, by:GL.Short, bz:GL.Short)
{
    fp_glBinormal3sEXT = unsafeBitCast(get_fp("glBinormal3sEXT", support: [ss136]), to: Swift.type(of: fp_glBinormal3sEXT))
    fp_glBinormal3sEXT(bx, by, bz)
}
public
func glBinormal3sEXT(bx:GL.Short, by:GL.Short, bz:GL.Short)
{
    fp_glBinormal3sEXT(bx, by, bz)
}
public
func glBinormal3sEXT(_ bx:GL.Short, _ by:GL.Short, _ bz:GL.Short)
{
    fp_glBinormal3sEXT(bx, by, bz)
}

var fp_glBinormal3svEXT:@convention(c) (UnsafePointer<GL.Short>?) -> () = load_glBinormal3svEXT
func load_glBinormal3svEXT(v:UnsafePointer<GL.Short>?)
{
    fp_glBinormal3svEXT = unsafeBitCast(get_fp("glBinormal3svEXT", support: [ss136]), to: Swift.type(of: fp_glBinormal3svEXT))
    fp_glBinormal3svEXT(v)
}
public
func glBinormal3svEXT(v:UnsafePointer<GL.Short>?)
{
    fp_glBinormal3svEXT(v)
}
public
func glBinormal3svEXT(_ v:UnsafePointer<GL.Short>?)
{
    fp_glBinormal3svEXT(v)
}

var fp_glBinormalPointerEXT:@convention(c) (GL.Enum, GL.Size, UnsafeRawPointer?) -> () = load_glBinormalPointerEXT
func load_glBinormalPointerEXT(type:GL.Enum, stride:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glBinormalPointerEXT = unsafeBitCast(get_fp("glBinormalPointerEXT", support: [ss136]), to: Swift.type(of: fp_glBinormalPointerEXT))
    fp_glBinormalPointerEXT(type, stride, pointer)
}
public
func glBinormalPointerEXT(type:GL.Enum, stride:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glBinormalPointerEXT(type, stride, pointer)
}
public
func glBinormalPointerEXT(_ type:GL.Enum, _ stride:GL.Size, _ pointer:UnsafeRawPointer?)
{
    fp_glBinormalPointerEXT(type, stride, pointer)
}

var fp_glBitmap:@convention(c) (GL.Size, GL.Size, GL.Float, GL.Float, GL.Float, GL.Float, UnsafePointer<GL.UByte>?) -> () = load_glBitmap
func load_glBitmap(width:GL.Size, height:GL.Size, xorig:GL.Float, yorig:GL.Float, xmove:GL.Float, ymove:GL.Float, bitmap:UnsafePointer<GL.UByte>?)
{
    fp_glBitmap = unsafeBitCast(get_fp("glBitmap", support: [ss346, ss369]), to: Swift.type(of: fp_glBitmap))
    fp_glBitmap(width, height, xorig, yorig, xmove, ymove, bitmap)
}
public
func glBitmap(width:GL.Size, height:GL.Size, xorig:GL.Float, yorig:GL.Float, xmove:GL.Float, ymove:GL.Float, bitmap:UnsafePointer<GL.UByte>?)
{
    fp_glBitmap(width, height, xorig, yorig, xmove, ymove, bitmap)
}
public
func glBitmap(_ width:GL.Size, _ height:GL.Size, _ xorig:GL.Float, _ yorig:GL.Float, _ xmove:GL.Float, _ ymove:GL.Float, _ bitmap:UnsafePointer<GL.UByte>?)
{
    fp_glBitmap(width, height, xorig, yorig, xmove, ymove, bitmap)
}

var fp_glBitmapxOES:@convention(c) (GL.Size, GL.Size, GL.Fixed, GL.Fixed, GL.Fixed, GL.Fixed, UnsafePointer<GL.UByte>?) -> () = load_glBitmapxOES
func load_glBitmapxOES(width:GL.Size, height:GL.Size, xorig:GL.Fixed, yorig:GL.Fixed, xmove:GL.Fixed, ymove:GL.Fixed, bitmap:UnsafePointer<GL.UByte>?)
{
    fp_glBitmapxOES = unsafeBitCast(get_fp("glBitmapxOES", support: [ss292]), to: Swift.type(of: fp_glBitmapxOES))
    fp_glBitmapxOES(width, height, xorig, yorig, xmove, ymove, bitmap)
}
public
func glBitmapxOES(width:GL.Size, height:GL.Size, xorig:GL.Fixed, yorig:GL.Fixed, xmove:GL.Fixed, ymove:GL.Fixed, bitmap:UnsafePointer<GL.UByte>?)
{
    fp_glBitmapxOES(width, height, xorig, yorig, xmove, ymove, bitmap)
}
public
func glBitmapxOES(_ width:GL.Size, _ height:GL.Size, _ xorig:GL.Fixed, _ yorig:GL.Fixed, _ xmove:GL.Fixed, _ ymove:GL.Fixed, _ bitmap:UnsafePointer<GL.UByte>?)
{
    fp_glBitmapxOES(width, height, xorig, yorig, xmove, ymove, bitmap)
}

var fp_glBlendBarrier:@convention(c) () -> () = load_glBlendBarrier
func load_glBlendBarrier()
{
    fp_glBlendBarrier = unsafeBitCast(get_fp("glBlendBarrier", support: [ss368]), to: Swift.type(of: fp_glBlendBarrier))
    fp_glBlendBarrier()
}
public
func glBlendBarrier()
{
    fp_glBlendBarrier()
}

var fp_glBlendBarrierKHR:@convention(c) () -> () = load_glBlendBarrierKHR
func load_glBlendBarrierKHR()
{
    fp_glBlendBarrierKHR = unsafeBitCast(get_fp("glBlendBarrierKHR", support: [ss220]), to: Swift.type(of: fp_glBlendBarrierKHR))
    fp_glBlendBarrierKHR()
}
public
func glBlendBarrierKHR()
{
    fp_glBlendBarrierKHR()
}

var fp_glBlendBarrierNV:@convention(c) () -> () = load_glBlendBarrierNV
func load_glBlendBarrierNV()
{
    fp_glBlendBarrierNV = unsafeBitCast(get_fp("glBlendBarrierNV", support: [ss228]), to: Swift.type(of: fp_glBlendBarrierNV))
    fp_glBlendBarrierNV()
}
public
func glBlendBarrierNV()
{
    fp_glBlendBarrierNV()
}

var fp_glBlendColor:@convention(c) (GL.Float, GL.Float, GL.Float, GL.Float) -> () = load_glBlendColor
func load_glBlendColor(red:GL.Float, green:GL.Float, blue:GL.Float, alpha:GL.Float)
{
    fp_glBlendColor = unsafeBitCast(get_fp("glBlendColor", support: [ss350, ss365, ss59]), to: Swift.type(of: fp_glBlendColor))
    fp_glBlendColor(red, green, blue, alpha)
}
public
func glBlendColor(red:GL.Float, green:GL.Float, blue:GL.Float, alpha:GL.Float)
{
    fp_glBlendColor(red, green, blue, alpha)
}
public
func glBlendColor(_ red:GL.Float, _ green:GL.Float, _ blue:GL.Float, _ alpha:GL.Float)
{
    fp_glBlendColor(red, green, blue, alpha)
}

var fp_glBlendColorEXT:@convention(c) (GL.Float, GL.Float, GL.Float, GL.Float) -> () = load_glBlendColorEXT
func load_glBlendColorEXT(red:GL.Float, green:GL.Float, blue:GL.Float, alpha:GL.Float)
{
    fp_glBlendColorEXT = unsafeBitCast(get_fp("glBlendColorEXT", support: [ss127]), to: Swift.type(of: fp_glBlendColorEXT))
    fp_glBlendColorEXT(red, green, blue, alpha)
}
public
func glBlendColorEXT(red:GL.Float, green:GL.Float, blue:GL.Float, alpha:GL.Float)
{
    fp_glBlendColorEXT(red, green, blue, alpha)
}
public
func glBlendColorEXT(_ red:GL.Float, _ green:GL.Float, _ blue:GL.Float, _ alpha:GL.Float)
{
    fp_glBlendColorEXT(red, green, blue, alpha)
}

var fp_glBlendColorxOES:@convention(c) (GL.Fixed, GL.Fixed, GL.Fixed, GL.Fixed) -> () = load_glBlendColorxOES
func load_glBlendColorxOES(red:GL.Fixed, green:GL.Fixed, blue:GL.Fixed, alpha:GL.Fixed)
{
    fp_glBlendColorxOES = unsafeBitCast(get_fp("glBlendColorxOES", support: [ss292]), to: Swift.type(of: fp_glBlendColorxOES))
    fp_glBlendColorxOES(red, green, blue, alpha)
}
public
func glBlendColorxOES(red:GL.Fixed, green:GL.Fixed, blue:GL.Fixed, alpha:GL.Fixed)
{
    fp_glBlendColorxOES(red, green, blue, alpha)
}
public
func glBlendColorxOES(_ red:GL.Fixed, _ green:GL.Fixed, _ blue:GL.Fixed, _ alpha:GL.Fixed)
{
    fp_glBlendColorxOES(red, green, blue, alpha)
}

var fp_glBlendEquation:@convention(c) (GL.Enum) -> () = load_glBlendEquation
func load_glBlendEquation(mode:GL.Enum)
{
    fp_glBlendEquation = unsafeBitCast(get_fp("glBlendEquation", support: [ss350, ss365, ss59]), to: Swift.type(of: fp_glBlendEquation))
    fp_glBlendEquation(mode)
}
public
func glBlendEquation(mode:GL.Enum)
{
    fp_glBlendEquation(mode)
}
public
func glBlendEquation(_ mode:GL.Enum)
{
    fp_glBlendEquation(mode)
}

var fp_glBlendEquationEXT:@convention(c) (GL.Enum) -> () = load_glBlendEquationEXT
func load_glBlendEquationEXT(mode:GL.Enum)
{
    fp_glBlendEquationEXT = unsafeBitCast(get_fp("glBlendEquationEXT", support: [ss131]), to: Swift.type(of: fp_glBlendEquationEXT))
    fp_glBlendEquationEXT(mode)
}
public
func glBlendEquationEXT(mode:GL.Enum)
{
    fp_glBlendEquationEXT(mode)
}
public
func glBlendEquationEXT(_ mode:GL.Enum)
{
    fp_glBlendEquationEXT(mode)
}

var fp_glBlendEquationIndexedAMD:@convention(c) (GL.UInt, GL.Enum) -> () = load_glBlendEquationIndexedAMD
func load_glBlendEquationIndexedAMD(buf:GL.UInt, mode:GL.Enum)
{
    fp_glBlendEquationIndexedAMD = unsafeBitCast(get_fp("glBlendEquationIndexedAMD", support: [ss2]), to: Swift.type(of: fp_glBlendEquationIndexedAMD))
    fp_glBlendEquationIndexedAMD(buf, mode)
}
public
func glBlendEquationIndexedAMD(buf:GL.UInt, mode:GL.Enum)
{
    fp_glBlendEquationIndexedAMD(buf, mode)
}
public
func glBlendEquationIndexedAMD(_ buf:GL.UInt, _ mode:GL.Enum)
{
    fp_glBlendEquationIndexedAMD(buf, mode)
}

var fp_glBlendEquationOES:@convention(c) (GL.Enum) -> () = load_glBlendEquationOES
func load_glBlendEquationOES(mode:GL.Enum)
{
    fp_glBlendEquationOES = unsafeBitCast(get_fp("glBlendEquationOES", support: [ss285]), to: Swift.type(of: fp_glBlendEquationOES))
    fp_glBlendEquationOES(mode)
}
public
func glBlendEquationOES(mode:GL.Enum)
{
    fp_glBlendEquationOES(mode)
}
public
func glBlendEquationOES(_ mode:GL.Enum)
{
    fp_glBlendEquationOES(mode)
}

var fp_glBlendEquationSeparate:@convention(c) (GL.Enum, GL.Enum) -> () = load_glBlendEquationSeparate
func load_glBlendEquationSeparate(modeRGB:GL.Enum, modeAlpha:GL.Enum)
{
    fp_glBlendEquationSeparate = unsafeBitCast(get_fp("glBlendEquationSeparate", support: [ss352, ss365]), to: Swift.type(of: fp_glBlendEquationSeparate))
    fp_glBlendEquationSeparate(modeRGB, modeAlpha)
}
public
func glBlendEquationSeparate(modeRGB:GL.Enum, modeAlpha:GL.Enum)
{
    fp_glBlendEquationSeparate(modeRGB, modeAlpha)
}
public
func glBlendEquationSeparate(_ modeRGB:GL.Enum, _ modeAlpha:GL.Enum)
{
    fp_glBlendEquationSeparate(modeRGB, modeAlpha)
}

var fp_glBlendEquationSeparateEXT:@convention(c) (GL.Enum, GL.Enum) -> () = load_glBlendEquationSeparateEXT
func load_glBlendEquationSeparateEXT(modeRGB:GL.Enum, modeAlpha:GL.Enum)
{
    fp_glBlendEquationSeparateEXT = unsafeBitCast(get_fp("glBlendEquationSeparateEXT", support: [ss128]), to: Swift.type(of: fp_glBlendEquationSeparateEXT))
    fp_glBlendEquationSeparateEXT(modeRGB, modeAlpha)
}
public
func glBlendEquationSeparateEXT(modeRGB:GL.Enum, modeAlpha:GL.Enum)
{
    fp_glBlendEquationSeparateEXT(modeRGB, modeAlpha)
}
public
func glBlendEquationSeparateEXT(_ modeRGB:GL.Enum, _ modeAlpha:GL.Enum)
{
    fp_glBlendEquationSeparateEXT(modeRGB, modeAlpha)
}

var fp_glBlendEquationSeparateIndexedAMD:@convention(c) (GL.UInt, GL.Enum, GL.Enum) -> () = load_glBlendEquationSeparateIndexedAMD
func load_glBlendEquationSeparateIndexedAMD(buf:GL.UInt, modeRGB:GL.Enum, modeAlpha:GL.Enum)
{
    fp_glBlendEquationSeparateIndexedAMD = unsafeBitCast(get_fp("glBlendEquationSeparateIndexedAMD", support: [ss2]), to: Swift.type(of: fp_glBlendEquationSeparateIndexedAMD))
    fp_glBlendEquationSeparateIndexedAMD(buf, modeRGB, modeAlpha)
}
public
func glBlendEquationSeparateIndexedAMD(buf:GL.UInt, modeRGB:GL.Enum, modeAlpha:GL.Enum)
{
    fp_glBlendEquationSeparateIndexedAMD(buf, modeRGB, modeAlpha)
}
public
func glBlendEquationSeparateIndexedAMD(_ buf:GL.UInt, _ modeRGB:GL.Enum, _ modeAlpha:GL.Enum)
{
    fp_glBlendEquationSeparateIndexedAMD(buf, modeRGB, modeAlpha)
}

var fp_glBlendEquationSeparateOES:@convention(c) (GL.Enum, GL.Enum) -> () = load_glBlendEquationSeparateOES
func load_glBlendEquationSeparateOES(modeRGB:GL.Enum, modeAlpha:GL.Enum)
{
    fp_glBlendEquationSeparateOES = unsafeBitCast(get_fp("glBlendEquationSeparateOES", support: [ss283]), to: Swift.type(of: fp_glBlendEquationSeparateOES))
    fp_glBlendEquationSeparateOES(modeRGB, modeAlpha)
}
public
func glBlendEquationSeparateOES(modeRGB:GL.Enum, modeAlpha:GL.Enum)
{
    fp_glBlendEquationSeparateOES(modeRGB, modeAlpha)
}
public
func glBlendEquationSeparateOES(_ modeRGB:GL.Enum, _ modeAlpha:GL.Enum)
{
    fp_glBlendEquationSeparateOES(modeRGB, modeAlpha)
}

var fp_glBlendEquationSeparatei:@convention(c) (GL.UInt, GL.Enum, GL.Enum) -> () = load_glBlendEquationSeparatei
func load_glBlendEquationSeparatei(buf:GL.UInt, modeRGB:GL.Enum, modeAlpha:GL.Enum)
{
    fp_glBlendEquationSeparatei = unsafeBitCast(get_fp("glBlendEquationSeparatei", support: [ss358, ss368]), to: Swift.type(of: fp_glBlendEquationSeparatei))
    fp_glBlendEquationSeparatei(buf, modeRGB, modeAlpha)
}
public
func glBlendEquationSeparatei(buf:GL.UInt, modeRGB:GL.Enum, modeAlpha:GL.Enum)
{
    fp_glBlendEquationSeparatei(buf, modeRGB, modeAlpha)
}
public
func glBlendEquationSeparatei(_ buf:GL.UInt, _ modeRGB:GL.Enum, _ modeAlpha:GL.Enum)
{
    fp_glBlendEquationSeparatei(buf, modeRGB, modeAlpha)
}

var fp_glBlendEquationSeparateiARB:@convention(c) (GL.UInt, GL.Enum, GL.Enum) -> () = load_glBlendEquationSeparateiARB
func load_glBlendEquationSeparateiARB(buf:GL.UInt, modeRGB:GL.Enum, modeAlpha:GL.Enum)
{
    fp_glBlendEquationSeparateiARB = unsafeBitCast(get_fp("glBlendEquationSeparateiARB", support: [ss43]), to: Swift.type(of: fp_glBlendEquationSeparateiARB))
    fp_glBlendEquationSeparateiARB(buf, modeRGB, modeAlpha)
}
public
func glBlendEquationSeparateiARB(buf:GL.UInt, modeRGB:GL.Enum, modeAlpha:GL.Enum)
{
    fp_glBlendEquationSeparateiARB(buf, modeRGB, modeAlpha)
}
public
func glBlendEquationSeparateiARB(_ buf:GL.UInt, _ modeRGB:GL.Enum, _ modeAlpha:GL.Enum)
{
    fp_glBlendEquationSeparateiARB(buf, modeRGB, modeAlpha)
}

var fp_glBlendEquationSeparateiEXT:@convention(c) (GL.UInt, GL.Enum, GL.Enum) -> () = load_glBlendEquationSeparateiEXT
func load_glBlendEquationSeparateiEXT(buf:GL.UInt, modeRGB:GL.Enum, modeAlpha:GL.Enum)
{
    fp_glBlendEquationSeparateiEXT = unsafeBitCast(get_fp("glBlendEquationSeparateiEXT", support: [ss146]), to: Swift.type(of: fp_glBlendEquationSeparateiEXT))
    fp_glBlendEquationSeparateiEXT(buf, modeRGB, modeAlpha)
}
public
func glBlendEquationSeparateiEXT(buf:GL.UInt, modeRGB:GL.Enum, modeAlpha:GL.Enum)
{
    fp_glBlendEquationSeparateiEXT(buf, modeRGB, modeAlpha)
}
public
func glBlendEquationSeparateiEXT(_ buf:GL.UInt, _ modeRGB:GL.Enum, _ modeAlpha:GL.Enum)
{
    fp_glBlendEquationSeparateiEXT(buf, modeRGB, modeAlpha)
}

var fp_glBlendEquationSeparateiOES:@convention(c) (GL.UInt, GL.Enum, GL.Enum) -> () = load_glBlendEquationSeparateiOES
func load_glBlendEquationSeparateiOES(buf:GL.UInt, modeRGB:GL.Enum, modeAlpha:GL.Enum)
{
    fp_glBlendEquationSeparateiOES = unsafeBitCast(get_fp("glBlendEquationSeparateiOES", support: [ss288]), to: Swift.type(of: fp_glBlendEquationSeparateiOES))
    fp_glBlendEquationSeparateiOES(buf, modeRGB, modeAlpha)
}
public
func glBlendEquationSeparateiOES(buf:GL.UInt, modeRGB:GL.Enum, modeAlpha:GL.Enum)
{
    fp_glBlendEquationSeparateiOES(buf, modeRGB, modeAlpha)
}
public
func glBlendEquationSeparateiOES(_ buf:GL.UInt, _ modeRGB:GL.Enum, _ modeAlpha:GL.Enum)
{
    fp_glBlendEquationSeparateiOES(buf, modeRGB, modeAlpha)
}

var fp_glBlendEquationi:@convention(c) (GL.UInt, GL.Enum) -> () = load_glBlendEquationi
func load_glBlendEquationi(buf:GL.UInt, mode:GL.Enum)
{
    fp_glBlendEquationi = unsafeBitCast(get_fp("glBlendEquationi", support: [ss358, ss368]), to: Swift.type(of: fp_glBlendEquationi))
    fp_glBlendEquationi(buf, mode)
}
public
func glBlendEquationi(buf:GL.UInt, mode:GL.Enum)
{
    fp_glBlendEquationi(buf, mode)
}
public
func glBlendEquationi(_ buf:GL.UInt, _ mode:GL.Enum)
{
    fp_glBlendEquationi(buf, mode)
}

var fp_glBlendEquationiARB:@convention(c) (GL.UInt, GL.Enum) -> () = load_glBlendEquationiARB
func load_glBlendEquationiARB(buf:GL.UInt, mode:GL.Enum)
{
    fp_glBlendEquationiARB = unsafeBitCast(get_fp("glBlendEquationiARB", support: [ss43]), to: Swift.type(of: fp_glBlendEquationiARB))
    fp_glBlendEquationiARB(buf, mode)
}
public
func glBlendEquationiARB(buf:GL.UInt, mode:GL.Enum)
{
    fp_glBlendEquationiARB(buf, mode)
}
public
func glBlendEquationiARB(_ buf:GL.UInt, _ mode:GL.Enum)
{
    fp_glBlendEquationiARB(buf, mode)
}

var fp_glBlendEquationiEXT:@convention(c) (GL.UInt, GL.Enum) -> () = load_glBlendEquationiEXT
func load_glBlendEquationiEXT(buf:GL.UInt, mode:GL.Enum)
{
    fp_glBlendEquationiEXT = unsafeBitCast(get_fp("glBlendEquationiEXT", support: [ss146]), to: Swift.type(of: fp_glBlendEquationiEXT))
    fp_glBlendEquationiEXT(buf, mode)
}
public
func glBlendEquationiEXT(buf:GL.UInt, mode:GL.Enum)
{
    fp_glBlendEquationiEXT(buf, mode)
}
public
func glBlendEquationiEXT(_ buf:GL.UInt, _ mode:GL.Enum)
{
    fp_glBlendEquationiEXT(buf, mode)
}

var fp_glBlendEquationiOES:@convention(c) (GL.UInt, GL.Enum) -> () = load_glBlendEquationiOES
func load_glBlendEquationiOES(buf:GL.UInt, mode:GL.Enum)
{
    fp_glBlendEquationiOES = unsafeBitCast(get_fp("glBlendEquationiOES", support: [ss288]), to: Swift.type(of: fp_glBlendEquationiOES))
    fp_glBlendEquationiOES(buf, mode)
}
public
func glBlendEquationiOES(buf:GL.UInt, mode:GL.Enum)
{
    fp_glBlendEquationiOES(buf, mode)
}
public
func glBlendEquationiOES(_ buf:GL.UInt, _ mode:GL.Enum)
{
    fp_glBlendEquationiOES(buf, mode)
}

var fp_glBlendFunc:@convention(c) (GL.Enum, GL.Enum) -> () = load_glBlendFunc
func load_glBlendFunc(sfactor:GL.Enum, dfactor:GL.Enum)
{
    fp_glBlendFunc = unsafeBitCast(get_fp("glBlendFunc", support: [ss346, ss365]), to: Swift.type(of: fp_glBlendFunc))
    fp_glBlendFunc(sfactor, dfactor)
}
public
func glBlendFunc(sfactor:GL.Enum, dfactor:GL.Enum)
{
    fp_glBlendFunc(sfactor, dfactor)
}
public
func glBlendFunc(_ sfactor:GL.Enum, _ dfactor:GL.Enum)
{
    fp_glBlendFunc(sfactor, dfactor)
}

var fp_glBlendFuncIndexedAMD:@convention(c) (GL.UInt, GL.Enum, GL.Enum) -> () = load_glBlendFuncIndexedAMD
func load_glBlendFuncIndexedAMD(buf:GL.UInt, src:GL.Enum, dst:GL.Enum)
{
    fp_glBlendFuncIndexedAMD = unsafeBitCast(get_fp("glBlendFuncIndexedAMD", support: [ss2]), to: Swift.type(of: fp_glBlendFuncIndexedAMD))
    fp_glBlendFuncIndexedAMD(buf, src, dst)
}
public
func glBlendFuncIndexedAMD(buf:GL.UInt, src:GL.Enum, dst:GL.Enum)
{
    fp_glBlendFuncIndexedAMD(buf, src, dst)
}
public
func glBlendFuncIndexedAMD(_ buf:GL.UInt, _ src:GL.Enum, _ dst:GL.Enum)
{
    fp_glBlendFuncIndexedAMD(buf, src, dst)
}

var fp_glBlendFuncSeparate:@convention(c) (GL.Enum, GL.Enum, GL.Enum, GL.Enum) -> () = load_glBlendFuncSeparate
func load_glBlendFuncSeparate(sfactorRGB:GL.Enum, dfactorRGB:GL.Enum, sfactorAlpha:GL.Enum, dfactorAlpha:GL.Enum)
{
    fp_glBlendFuncSeparate = unsafeBitCast(get_fp("glBlendFuncSeparate", support: [ss350, ss365]), to: Swift.type(of: fp_glBlendFuncSeparate))
    fp_glBlendFuncSeparate(sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha)
}
public
func glBlendFuncSeparate(sfactorRGB:GL.Enum, dfactorRGB:GL.Enum, sfactorAlpha:GL.Enum, dfactorAlpha:GL.Enum)
{
    fp_glBlendFuncSeparate(sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha)
}
public
func glBlendFuncSeparate(_ sfactorRGB:GL.Enum, _ dfactorRGB:GL.Enum, _ sfactorAlpha:GL.Enum, _ dfactorAlpha:GL.Enum)
{
    fp_glBlendFuncSeparate(sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha)
}

var fp_glBlendFuncSeparateEXT:@convention(c) (GL.Enum, GL.Enum, GL.Enum, GL.Enum) -> () = load_glBlendFuncSeparateEXT
func load_glBlendFuncSeparateEXT(sfactorRGB:GL.Enum, dfactorRGB:GL.Enum, sfactorAlpha:GL.Enum, dfactorAlpha:GL.Enum)
{
    fp_glBlendFuncSeparateEXT = unsafeBitCast(get_fp("glBlendFuncSeparateEXT", support: [ss130]), to: Swift.type(of: fp_glBlendFuncSeparateEXT))
    fp_glBlendFuncSeparateEXT(sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha)
}
public
func glBlendFuncSeparateEXT(sfactorRGB:GL.Enum, dfactorRGB:GL.Enum, sfactorAlpha:GL.Enum, dfactorAlpha:GL.Enum)
{
    fp_glBlendFuncSeparateEXT(sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha)
}
public
func glBlendFuncSeparateEXT(_ sfactorRGB:GL.Enum, _ dfactorRGB:GL.Enum, _ sfactorAlpha:GL.Enum, _ dfactorAlpha:GL.Enum)
{
    fp_glBlendFuncSeparateEXT(sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha)
}

var fp_glBlendFuncSeparateINGR:@convention(c) (GL.Enum, GL.Enum, GL.Enum, GL.Enum) -> () = load_glBlendFuncSeparateINGR
func load_glBlendFuncSeparateINGR(sfactorRGB:GL.Enum, dfactorRGB:GL.Enum, sfactorAlpha:GL.Enum, dfactorAlpha:GL.Enum)
{
    fp_glBlendFuncSeparateINGR = unsafeBitCast(get_fp("glBlendFuncSeparateINGR", support: [ss215]), to: Swift.type(of: fp_glBlendFuncSeparateINGR))
    fp_glBlendFuncSeparateINGR(sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha)
}
public
func glBlendFuncSeparateINGR(sfactorRGB:GL.Enum, dfactorRGB:GL.Enum, sfactorAlpha:GL.Enum, dfactorAlpha:GL.Enum)
{
    fp_glBlendFuncSeparateINGR(sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha)
}
public
func glBlendFuncSeparateINGR(_ sfactorRGB:GL.Enum, _ dfactorRGB:GL.Enum, _ sfactorAlpha:GL.Enum, _ dfactorAlpha:GL.Enum)
{
    fp_glBlendFuncSeparateINGR(sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha)
}

var fp_glBlendFuncSeparateIndexedAMD:@convention(c) (GL.UInt, GL.Enum, GL.Enum, GL.Enum, GL.Enum) -> () = load_glBlendFuncSeparateIndexedAMD
func load_glBlendFuncSeparateIndexedAMD(buf:GL.UInt, srcRGB:GL.Enum, dstRGB:GL.Enum, srcAlpha:GL.Enum, dstAlpha:GL.Enum)
{
    fp_glBlendFuncSeparateIndexedAMD = unsafeBitCast(get_fp("glBlendFuncSeparateIndexedAMD", support: [ss2]), to: Swift.type(of: fp_glBlendFuncSeparateIndexedAMD))
    fp_glBlendFuncSeparateIndexedAMD(buf, srcRGB, dstRGB, srcAlpha, dstAlpha)
}
public
func glBlendFuncSeparateIndexedAMD(buf:GL.UInt, srcRGB:GL.Enum, dstRGB:GL.Enum, srcAlpha:GL.Enum, dstAlpha:GL.Enum)
{
    fp_glBlendFuncSeparateIndexedAMD(buf, srcRGB, dstRGB, srcAlpha, dstAlpha)
}
public
func glBlendFuncSeparateIndexedAMD(_ buf:GL.UInt, _ srcRGB:GL.Enum, _ dstRGB:GL.Enum, _ srcAlpha:GL.Enum, _ dstAlpha:GL.Enum)
{
    fp_glBlendFuncSeparateIndexedAMD(buf, srcRGB, dstRGB, srcAlpha, dstAlpha)
}

var fp_glBlendFuncSeparateOES:@convention(c) (GL.Enum, GL.Enum, GL.Enum, GL.Enum) -> () = load_glBlendFuncSeparateOES
func load_glBlendFuncSeparateOES(srcRGB:GL.Enum, dstRGB:GL.Enum, srcAlpha:GL.Enum, dstAlpha:GL.Enum)
{
    fp_glBlendFuncSeparateOES = unsafeBitCast(get_fp("glBlendFuncSeparateOES", support: [ss284]), to: Swift.type(of: fp_glBlendFuncSeparateOES))
    fp_glBlendFuncSeparateOES(srcRGB, dstRGB, srcAlpha, dstAlpha)
}
public
func glBlendFuncSeparateOES(srcRGB:GL.Enum, dstRGB:GL.Enum, srcAlpha:GL.Enum, dstAlpha:GL.Enum)
{
    fp_glBlendFuncSeparateOES(srcRGB, dstRGB, srcAlpha, dstAlpha)
}
public
func glBlendFuncSeparateOES(_ srcRGB:GL.Enum, _ dstRGB:GL.Enum, _ srcAlpha:GL.Enum, _ dstAlpha:GL.Enum)
{
    fp_glBlendFuncSeparateOES(srcRGB, dstRGB, srcAlpha, dstAlpha)
}

var fp_glBlendFuncSeparatei:@convention(c) (GL.UInt, GL.Enum, GL.Enum, GL.Enum, GL.Enum) -> () = load_glBlendFuncSeparatei
func load_glBlendFuncSeparatei(buf:GL.UInt, srcRGB:GL.Enum, dstRGB:GL.Enum, srcAlpha:GL.Enum, dstAlpha:GL.Enum)
{
    fp_glBlendFuncSeparatei = unsafeBitCast(get_fp("glBlendFuncSeparatei", support: [ss358, ss368]), to: Swift.type(of: fp_glBlendFuncSeparatei))
    fp_glBlendFuncSeparatei(buf, srcRGB, dstRGB, srcAlpha, dstAlpha)
}
public
func glBlendFuncSeparatei(buf:GL.UInt, srcRGB:GL.Enum, dstRGB:GL.Enum, srcAlpha:GL.Enum, dstAlpha:GL.Enum)
{
    fp_glBlendFuncSeparatei(buf, srcRGB, dstRGB, srcAlpha, dstAlpha)
}
public
func glBlendFuncSeparatei(_ buf:GL.UInt, _ srcRGB:GL.Enum, _ dstRGB:GL.Enum, _ srcAlpha:GL.Enum, _ dstAlpha:GL.Enum)
{
    fp_glBlendFuncSeparatei(buf, srcRGB, dstRGB, srcAlpha, dstAlpha)
}

var fp_glBlendFuncSeparateiARB:@convention(c) (GL.UInt, GL.Enum, GL.Enum, GL.Enum, GL.Enum) -> () = load_glBlendFuncSeparateiARB
func load_glBlendFuncSeparateiARB(buf:GL.UInt, srcRGB:GL.Enum, dstRGB:GL.Enum, srcAlpha:GL.Enum, dstAlpha:GL.Enum)
{
    fp_glBlendFuncSeparateiARB = unsafeBitCast(get_fp("glBlendFuncSeparateiARB", support: [ss43]), to: Swift.type(of: fp_glBlendFuncSeparateiARB))
    fp_glBlendFuncSeparateiARB(buf, srcRGB, dstRGB, srcAlpha, dstAlpha)
}
public
func glBlendFuncSeparateiARB(buf:GL.UInt, srcRGB:GL.Enum, dstRGB:GL.Enum, srcAlpha:GL.Enum, dstAlpha:GL.Enum)
{
    fp_glBlendFuncSeparateiARB(buf, srcRGB, dstRGB, srcAlpha, dstAlpha)
}
public
func glBlendFuncSeparateiARB(_ buf:GL.UInt, _ srcRGB:GL.Enum, _ dstRGB:GL.Enum, _ srcAlpha:GL.Enum, _ dstAlpha:GL.Enum)
{
    fp_glBlendFuncSeparateiARB(buf, srcRGB, dstRGB, srcAlpha, dstAlpha)
}

var fp_glBlendFuncSeparateiEXT:@convention(c) (GL.UInt, GL.Enum, GL.Enum, GL.Enum, GL.Enum) -> () = load_glBlendFuncSeparateiEXT
func load_glBlendFuncSeparateiEXT(buf:GL.UInt, srcRGB:GL.Enum, dstRGB:GL.Enum, srcAlpha:GL.Enum, dstAlpha:GL.Enum)
{
    fp_glBlendFuncSeparateiEXT = unsafeBitCast(get_fp("glBlendFuncSeparateiEXT", support: [ss146]), to: Swift.type(of: fp_glBlendFuncSeparateiEXT))
    fp_glBlendFuncSeparateiEXT(buf, srcRGB, dstRGB, srcAlpha, dstAlpha)
}
public
func glBlendFuncSeparateiEXT(buf:GL.UInt, srcRGB:GL.Enum, dstRGB:GL.Enum, srcAlpha:GL.Enum, dstAlpha:GL.Enum)
{
    fp_glBlendFuncSeparateiEXT(buf, srcRGB, dstRGB, srcAlpha, dstAlpha)
}
public
func glBlendFuncSeparateiEXT(_ buf:GL.UInt, _ srcRGB:GL.Enum, _ dstRGB:GL.Enum, _ srcAlpha:GL.Enum, _ dstAlpha:GL.Enum)
{
    fp_glBlendFuncSeparateiEXT(buf, srcRGB, dstRGB, srcAlpha, dstAlpha)
}

var fp_glBlendFuncSeparateiOES:@convention(c) (GL.UInt, GL.Enum, GL.Enum, GL.Enum, GL.Enum) -> () = load_glBlendFuncSeparateiOES
func load_glBlendFuncSeparateiOES(buf:GL.UInt, srcRGB:GL.Enum, dstRGB:GL.Enum, srcAlpha:GL.Enum, dstAlpha:GL.Enum)
{
    fp_glBlendFuncSeparateiOES = unsafeBitCast(get_fp("glBlendFuncSeparateiOES", support: [ss288]), to: Swift.type(of: fp_glBlendFuncSeparateiOES))
    fp_glBlendFuncSeparateiOES(buf, srcRGB, dstRGB, srcAlpha, dstAlpha)
}
public
func glBlendFuncSeparateiOES(buf:GL.UInt, srcRGB:GL.Enum, dstRGB:GL.Enum, srcAlpha:GL.Enum, dstAlpha:GL.Enum)
{
    fp_glBlendFuncSeparateiOES(buf, srcRGB, dstRGB, srcAlpha, dstAlpha)
}
public
func glBlendFuncSeparateiOES(_ buf:GL.UInt, _ srcRGB:GL.Enum, _ dstRGB:GL.Enum, _ srcAlpha:GL.Enum, _ dstAlpha:GL.Enum)
{
    fp_glBlendFuncSeparateiOES(buf, srcRGB, dstRGB, srcAlpha, dstAlpha)
}

var fp_glBlendFunci:@convention(c) (GL.UInt, GL.Enum, GL.Enum) -> () = load_glBlendFunci
func load_glBlendFunci(buf:GL.UInt, src:GL.Enum, dst:GL.Enum)
{
    fp_glBlendFunci = unsafeBitCast(get_fp("glBlendFunci", support: [ss358, ss368]), to: Swift.type(of: fp_glBlendFunci))
    fp_glBlendFunci(buf, src, dst)
}
public
func glBlendFunci(buf:GL.UInt, src:GL.Enum, dst:GL.Enum)
{
    fp_glBlendFunci(buf, src, dst)
}
public
func glBlendFunci(_ buf:GL.UInt, _ src:GL.Enum, _ dst:GL.Enum)
{
    fp_glBlendFunci(buf, src, dst)
}

var fp_glBlendFunciARB:@convention(c) (GL.UInt, GL.Enum, GL.Enum) -> () = load_glBlendFunciARB
func load_glBlendFunciARB(buf:GL.UInt, src:GL.Enum, dst:GL.Enum)
{
    fp_glBlendFunciARB = unsafeBitCast(get_fp("glBlendFunciARB", support: [ss43]), to: Swift.type(of: fp_glBlendFunciARB))
    fp_glBlendFunciARB(buf, src, dst)
}
public
func glBlendFunciARB(buf:GL.UInt, src:GL.Enum, dst:GL.Enum)
{
    fp_glBlendFunciARB(buf, src, dst)
}
public
func glBlendFunciARB(_ buf:GL.UInt, _ src:GL.Enum, _ dst:GL.Enum)
{
    fp_glBlendFunciARB(buf, src, dst)
}

var fp_glBlendFunciEXT:@convention(c) (GL.UInt, GL.Enum, GL.Enum) -> () = load_glBlendFunciEXT
func load_glBlendFunciEXT(buf:GL.UInt, src:GL.Enum, dst:GL.Enum)
{
    fp_glBlendFunciEXT = unsafeBitCast(get_fp("glBlendFunciEXT", support: [ss146]), to: Swift.type(of: fp_glBlendFunciEXT))
    fp_glBlendFunciEXT(buf, src, dst)
}
public
func glBlendFunciEXT(buf:GL.UInt, src:GL.Enum, dst:GL.Enum)
{
    fp_glBlendFunciEXT(buf, src, dst)
}
public
func glBlendFunciEXT(_ buf:GL.UInt, _ src:GL.Enum, _ dst:GL.Enum)
{
    fp_glBlendFunciEXT(buf, src, dst)
}

var fp_glBlendFunciOES:@convention(c) (GL.UInt, GL.Enum, GL.Enum) -> () = load_glBlendFunciOES
func load_glBlendFunciOES(buf:GL.UInt, src:GL.Enum, dst:GL.Enum)
{
    fp_glBlendFunciOES = unsafeBitCast(get_fp("glBlendFunciOES", support: [ss288]), to: Swift.type(of: fp_glBlendFunciOES))
    fp_glBlendFunciOES(buf, src, dst)
}
public
func glBlendFunciOES(buf:GL.UInt, src:GL.Enum, dst:GL.Enum)
{
    fp_glBlendFunciOES(buf, src, dst)
}
public
func glBlendFunciOES(_ buf:GL.UInt, _ src:GL.Enum, _ dst:GL.Enum)
{
    fp_glBlendFunciOES(buf, src, dst)
}

var fp_glBlendParameteriNV:@convention(c) (GL.Enum, GL.Int) -> () = load_glBlendParameteriNV
func load_glBlendParameteriNV(pname:GL.Enum, value:GL.Int)
{
    fp_glBlendParameteriNV = unsafeBitCast(get_fp("glBlendParameteriNV", support: [ss228]), to: Swift.type(of: fp_glBlendParameteriNV))
    fp_glBlendParameteriNV(pname, value)
}
public
func glBlendParameteriNV(pname:GL.Enum, value:GL.Int)
{
    fp_glBlendParameteriNV(pname, value)
}
public
func glBlendParameteriNV(_ pname:GL.Enum, _ value:GL.Int)
{
    fp_glBlendParameteriNV(pname, value)
}

var fp_glBlitFramebuffer:@convention(c) (GL.Int, GL.Int, GL.Int, GL.Int, GL.Int, GL.Int, GL.Int, GL.Int, GL.Bitfield, GL.Enum) -> () = load_glBlitFramebuffer
func load_glBlitFramebuffer(srcX0:GL.Int, srcY0:GL.Int, srcX1:GL.Int, srcY1:GL.Int, dstX0:GL.Int, dstY0:GL.Int, dstX1:GL.Int, dstY1:GL.Int, mask:GL.Bitfield, filter:GL.Enum)
{
    fp_glBlitFramebuffer = unsafeBitCast(get_fp("glBlitFramebuffer", support: [ss354, ss366, ss53]), to: Swift.type(of: fp_glBlitFramebuffer))
    fp_glBlitFramebuffer(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter)
}
public
func glBlitFramebuffer(srcX0:GL.Int, srcY0:GL.Int, srcX1:GL.Int, srcY1:GL.Int, dstX0:GL.Int, dstY0:GL.Int, dstX1:GL.Int, dstY1:GL.Int, mask:GL.Bitfield, filter:GL.Enum)
{
    fp_glBlitFramebuffer(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter)
}
public
func glBlitFramebuffer(_ srcX0:GL.Int, _ srcY0:GL.Int, _ srcX1:GL.Int, _ srcY1:GL.Int, _ dstX0:GL.Int, _ dstY0:GL.Int, _ dstX1:GL.Int, _ dstY1:GL.Int, _ mask:GL.Bitfield, _ filter:GL.Enum)
{
    fp_glBlitFramebuffer(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter)
}

var fp_glBlitFramebufferANGLE:@convention(c) (GL.Int, GL.Int, GL.Int, GL.Int, GL.Int, GL.Int, GL.Int, GL.Int, GL.Bitfield, GL.Enum) -> () = load_glBlitFramebufferANGLE
func load_glBlitFramebufferANGLE(srcX0:GL.Int, srcY0:GL.Int, srcX1:GL.Int, srcY1:GL.Int, dstX0:GL.Int, dstY0:GL.Int, dstX1:GL.Int, dstY1:GL.Int, mask:GL.Bitfield, filter:GL.Enum)
{
    fp_glBlitFramebufferANGLE = unsafeBitCast(get_fp("glBlitFramebufferANGLE", support: [ss13]), to: Swift.type(of: fp_glBlitFramebufferANGLE))
    fp_glBlitFramebufferANGLE(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter)
}
public
func glBlitFramebufferANGLE(srcX0:GL.Int, srcY0:GL.Int, srcX1:GL.Int, srcY1:GL.Int, dstX0:GL.Int, dstY0:GL.Int, dstX1:GL.Int, dstY1:GL.Int, mask:GL.Bitfield, filter:GL.Enum)
{
    fp_glBlitFramebufferANGLE(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter)
}
public
func glBlitFramebufferANGLE(_ srcX0:GL.Int, _ srcY0:GL.Int, _ srcX1:GL.Int, _ srcY1:GL.Int, _ dstX0:GL.Int, _ dstY0:GL.Int, _ dstX1:GL.Int, _ dstY1:GL.Int, _ mask:GL.Bitfield, _ filter:GL.Enum)
{
    fp_glBlitFramebufferANGLE(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter)
}

var fp_glBlitFramebufferEXT:@convention(c) (GL.Int, GL.Int, GL.Int, GL.Int, GL.Int, GL.Int, GL.Int, GL.Int, GL.Bitfield, GL.Enum) -> () = load_glBlitFramebufferEXT
func load_glBlitFramebufferEXT(srcX0:GL.Int, srcY0:GL.Int, srcX1:GL.Int, srcY1:GL.Int, dstX0:GL.Int, dstY0:GL.Int, dstX1:GL.Int, dstY1:GL.Int, mask:GL.Bitfield, filter:GL.Enum)
{
    fp_glBlitFramebufferEXT = unsafeBitCast(get_fp("glBlitFramebufferEXT", support: [ss153]), to: Swift.type(of: fp_glBlitFramebufferEXT))
    fp_glBlitFramebufferEXT(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter)
}
public
func glBlitFramebufferEXT(srcX0:GL.Int, srcY0:GL.Int, srcX1:GL.Int, srcY1:GL.Int, dstX0:GL.Int, dstY0:GL.Int, dstX1:GL.Int, dstY1:GL.Int, mask:GL.Bitfield, filter:GL.Enum)
{
    fp_glBlitFramebufferEXT(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter)
}
public
func glBlitFramebufferEXT(_ srcX0:GL.Int, _ srcY0:GL.Int, _ srcX1:GL.Int, _ srcY1:GL.Int, _ dstX0:GL.Int, _ dstY0:GL.Int, _ dstX1:GL.Int, _ dstY1:GL.Int, _ mask:GL.Bitfield, _ filter:GL.Enum)
{
    fp_glBlitFramebufferEXT(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter)
}

var fp_glBlitFramebufferNV:@convention(c) (GL.Int, GL.Int, GL.Int, GL.Int, GL.Int, GL.Int, GL.Int, GL.Int, GL.Bitfield, GL.Enum) -> () = load_glBlitFramebufferNV
func load_glBlitFramebufferNV(srcX0:GL.Int, srcY0:GL.Int, srcX1:GL.Int, srcY1:GL.Int, dstX0:GL.Int, dstY0:GL.Int, dstX1:GL.Int, dstY1:GL.Int, mask:GL.Bitfield, filter:GL.Enum)
{
    fp_glBlitFramebufferNV = unsafeBitCast(get_fp("glBlitFramebufferNV", support: [ss245]), to: Swift.type(of: fp_glBlitFramebufferNV))
    fp_glBlitFramebufferNV(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter)
}
public
func glBlitFramebufferNV(srcX0:GL.Int, srcY0:GL.Int, srcX1:GL.Int, srcY1:GL.Int, dstX0:GL.Int, dstY0:GL.Int, dstX1:GL.Int, dstY1:GL.Int, mask:GL.Bitfield, filter:GL.Enum)
{
    fp_glBlitFramebufferNV(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter)
}
public
func glBlitFramebufferNV(_ srcX0:GL.Int, _ srcY0:GL.Int, _ srcX1:GL.Int, _ srcY1:GL.Int, _ dstX0:GL.Int, _ dstY0:GL.Int, _ dstX1:GL.Int, _ dstY1:GL.Int, _ mask:GL.Bitfield, _ filter:GL.Enum)
{
    fp_glBlitFramebufferNV(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter)
}

var fp_glBlitNamedFramebuffer:@convention(c) (GL.UInt, GL.UInt, GL.Int, GL.Int, GL.Int, GL.Int, GL.Int, GL.Int, GL.Int, GL.Int, GL.Bitfield, GL.Enum) -> () = load_glBlitNamedFramebuffer
func load_glBlitNamedFramebuffer(readFramebuffer:GL.UInt, drawFramebuffer:GL.UInt, srcX0:GL.Int, srcY0:GL.Int, srcX1:GL.Int, srcY1:GL.Int, dstX0:GL.Int, dstY0:GL.Int, dstX1:GL.Int, dstY1:GL.Int, mask:GL.Bitfield, filter:GL.Enum)
{
    fp_glBlitNamedFramebuffer = unsafeBitCast(get_fp("glBlitNamedFramebuffer", support: [ss363, ss42]), to: Swift.type(of: fp_glBlitNamedFramebuffer))
    fp_glBlitNamedFramebuffer(readFramebuffer, drawFramebuffer, srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter)
}
public
func glBlitNamedFramebuffer(readFramebuffer:GL.UInt, drawFramebuffer:GL.UInt, srcX0:GL.Int, srcY0:GL.Int, srcX1:GL.Int, srcY1:GL.Int, dstX0:GL.Int, dstY0:GL.Int, dstX1:GL.Int, dstY1:GL.Int, mask:GL.Bitfield, filter:GL.Enum)
{
    fp_glBlitNamedFramebuffer(readFramebuffer, drawFramebuffer, srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter)
}
public
func glBlitNamedFramebuffer(_ readFramebuffer:GL.UInt, _ drawFramebuffer:GL.UInt, _ srcX0:GL.Int, _ srcY0:GL.Int, _ srcX1:GL.Int, _ srcY1:GL.Int, _ dstX0:GL.Int, _ dstY0:GL.Int, _ dstX1:GL.Int, _ dstY1:GL.Int, _ mask:GL.Bitfield, _ filter:GL.Enum)
{
    fp_glBlitNamedFramebuffer(readFramebuffer, drawFramebuffer, srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter)
}

var fp_glBufferAddressRangeNV:@convention(c) (GL.Enum, GL.UInt, GL.UInt64EXT, GL.SizePointer) -> () = load_glBufferAddressRangeNV
func load_glBufferAddressRangeNV(pname:GL.Enum, index:GL.UInt, address:GL.UInt64EXT, length:GL.SizePointer)
{
    fp_glBufferAddressRangeNV = unsafeBitCast(get_fp("glBufferAddressRangeNV", support: [ss277]), to: Swift.type(of: fp_glBufferAddressRangeNV))
    fp_glBufferAddressRangeNV(pname, index, address, length)
}
public
func glBufferAddressRangeNV(pname:GL.Enum, index:GL.UInt, address:GL.UInt64EXT, length:GL.SizePointer)
{
    fp_glBufferAddressRangeNV(pname, index, address, length)
}
public
func glBufferAddressRangeNV(_ pname:GL.Enum, _ index:GL.UInt, _ address:GL.UInt64EXT, _ length:GL.SizePointer)
{
    fp_glBufferAddressRangeNV(pname, index, address, length)
}

var fp_glBufferData:@convention(c) (GL.Enum, GL.SizePointer, UnsafeRawPointer?, GL.Enum) -> () = load_glBufferData
func load_glBufferData(target:GL.Enum, size:GL.SizePointer, data:UnsafeRawPointer?, usage:GL.Enum)
{
    fp_glBufferData = unsafeBitCast(get_fp("glBufferData", support: [ss351, ss365]), to: Swift.type(of: fp_glBufferData))
    fp_glBufferData(target, size, data, usage)
}
public
func glBufferData(target:GL.Enum, size:GL.SizePointer, data:UnsafeRawPointer?, usage:GL.Enum)
{
    fp_glBufferData(target, size, data, usage)
}
public
func glBufferData(_ target:GL.Enum, _ size:GL.SizePointer, _ data:UnsafeRawPointer?, _ usage:GL.Enum)
{
    fp_glBufferData(target, size, data, usage)
}

var fp_glBufferDataARB:@convention(c) (GL.Enum, GL.SizePointerARB, UnsafeRawPointer?, GL.Enum) -> () = load_glBufferDataARB
func load_glBufferDataARB(target:GL.Enum, size:GL.SizePointerARB, data:UnsafeRawPointer?, usage:GL.Enum)
{
    fp_glBufferDataARB = unsafeBitCast(get_fp("glBufferDataARB", support: [ss109]), to: Swift.type(of: fp_glBufferDataARB))
    fp_glBufferDataARB(target, size, data, usage)
}
public
func glBufferDataARB(target:GL.Enum, size:GL.SizePointerARB, data:UnsafeRawPointer?, usage:GL.Enum)
{
    fp_glBufferDataARB(target, size, data, usage)
}
public
func glBufferDataARB(_ target:GL.Enum, _ size:GL.SizePointerARB, _ data:UnsafeRawPointer?, _ usage:GL.Enum)
{
    fp_glBufferDataARB(target, size, data, usage)
}

var fp_glBufferPageCommitmentARB:@convention(c) (GL.Enum, GL.IntPointer, GL.SizePointer, GL.Bool) -> () = load_glBufferPageCommitmentARB
func load_glBufferPageCommitmentARB(target:GL.Enum, offset:GL.IntPointer, size:GL.SizePointer, commit:GL.Bool)
{
    fp_glBufferPageCommitmentARB = unsafeBitCast(get_fp("glBufferPageCommitmentARB", support: [ss87]), to: Swift.type(of: fp_glBufferPageCommitmentARB))
    fp_glBufferPageCommitmentARB(target, offset, size, commit)
}
public
func glBufferPageCommitmentARB(target:GL.Enum, offset:GL.IntPointer, size:GL.SizePointer, commit:GL.Bool)
{
    fp_glBufferPageCommitmentARB(target, offset, size, commit)
}
public
func glBufferPageCommitmentARB(_ target:GL.Enum, _ offset:GL.IntPointer, _ size:GL.SizePointer, _ commit:GL.Bool)
{
    fp_glBufferPageCommitmentARB(target, offset, size, commit)
}

var fp_glBufferParameteriAPPLE:@convention(c) (GL.Enum, GL.Enum, GL.Int) -> () = load_glBufferParameteriAPPLE
func load_glBufferParameteriAPPLE(target:GL.Enum, pname:GL.Enum, param:GL.Int)
{
    fp_glBufferParameteriAPPLE = unsafeBitCast(get_fp("glBufferParameteriAPPLE", support: [ss20]), to: Swift.type(of: fp_glBufferParameteriAPPLE))
    fp_glBufferParameteriAPPLE(target, pname, param)
}
public
func glBufferParameteriAPPLE(target:GL.Enum, pname:GL.Enum, param:GL.Int)
{
    fp_glBufferParameteriAPPLE(target, pname, param)
}
public
func glBufferParameteriAPPLE(_ target:GL.Enum, _ pname:GL.Enum, _ param:GL.Int)
{
    fp_glBufferParameteriAPPLE(target, pname, param)
}

var fp_glBufferStorage:@convention(c) (GL.Enum, GL.SizePointer, UnsafeRawPointer?, GL.Bitfield) -> () = load_glBufferStorage
func load_glBufferStorage(target:GL.Enum, size:GL.SizePointer, data:UnsafeRawPointer?, flags:GL.Bitfield)
{
    fp_glBufferStorage = unsafeBitCast(get_fp("glBufferStorage", support: [ss362, ss31]), to: Swift.type(of: fp_glBufferStorage))
    fp_glBufferStorage(target, size, data, flags)
}
public
func glBufferStorage(target:GL.Enum, size:GL.SizePointer, data:UnsafeRawPointer?, flags:GL.Bitfield)
{
    fp_glBufferStorage(target, size, data, flags)
}
public
func glBufferStorage(_ target:GL.Enum, _ size:GL.SizePointer, _ data:UnsafeRawPointer?, _ flags:GL.Bitfield)
{
    fp_glBufferStorage(target, size, data, flags)
}

var fp_glBufferStorageEXT:@convention(c) (GL.Enum, GL.SizePointer, UnsafeRawPointer?, GL.Bitfield) -> () = load_glBufferStorageEXT
func load_glBufferStorageEXT(target:GL.Enum, size:GL.SizePointer, data:UnsafeRawPointer?, flags:GL.Bitfield)
{
    fp_glBufferStorageEXT = unsafeBitCast(get_fp("glBufferStorageEXT", support: [ss132]), to: Swift.type(of: fp_glBufferStorageEXT))
    fp_glBufferStorageEXT(target, size, data, flags)
}
public
func glBufferStorageEXT(target:GL.Enum, size:GL.SizePointer, data:UnsafeRawPointer?, flags:GL.Bitfield)
{
    fp_glBufferStorageEXT(target, size, data, flags)
}
public
func glBufferStorageEXT(_ target:GL.Enum, _ size:GL.SizePointer, _ data:UnsafeRawPointer?, _ flags:GL.Bitfield)
{
    fp_glBufferStorageEXT(target, size, data, flags)
}

var fp_glBufferSubData:@convention(c) (GL.Enum, GL.IntPointer, GL.SizePointer, UnsafeRawPointer?) -> () = load_glBufferSubData
func load_glBufferSubData(target:GL.Enum, offset:GL.IntPointer, size:GL.SizePointer, data:UnsafeRawPointer?)
{
    fp_glBufferSubData = unsafeBitCast(get_fp("glBufferSubData", support: [ss351, ss365]), to: Swift.type(of: fp_glBufferSubData))
    fp_glBufferSubData(target, offset, size, data)
}
public
func glBufferSubData(target:GL.Enum, offset:GL.IntPointer, size:GL.SizePointer, data:UnsafeRawPointer?)
{
    fp_glBufferSubData(target, offset, size, data)
}
public
func glBufferSubData(_ target:GL.Enum, _ offset:GL.IntPointer, _ size:GL.SizePointer, _ data:UnsafeRawPointer?)
{
    fp_glBufferSubData(target, offset, size, data)
}

var fp_glBufferSubDataARB:@convention(c) (GL.Enum, GL.IntPointerARB, GL.SizePointerARB, UnsafeRawPointer?) -> () = load_glBufferSubDataARB
func load_glBufferSubDataARB(target:GL.Enum, offset:GL.IntPointerARB, size:GL.SizePointerARB, data:UnsafeRawPointer?)
{
    fp_glBufferSubDataARB = unsafeBitCast(get_fp("glBufferSubDataARB", support: [ss109]), to: Swift.type(of: fp_glBufferSubDataARB))
    fp_glBufferSubDataARB(target, offset, size, data)
}
public
func glBufferSubDataARB(target:GL.Enum, offset:GL.IntPointerARB, size:GL.SizePointerARB, data:UnsafeRawPointer?)
{
    fp_glBufferSubDataARB(target, offset, size, data)
}
public
func glBufferSubDataARB(_ target:GL.Enum, _ offset:GL.IntPointerARB, _ size:GL.SizePointerARB, _ data:UnsafeRawPointer?)
{
    fp_glBufferSubDataARB(target, offset, size, data)
}

var fp_glCallCommandListNV:@convention(c) (GL.UInt) -> () = load_glCallCommandListNV
func load_glCallCommandListNV(list:GL.UInt)
{
    fp_glCallCommandListNV = unsafeBitCast(get_fp("glCallCommandListNV", support: [ss229]), to: Swift.type(of: fp_glCallCommandListNV))
    fp_glCallCommandListNV(list)
}
public
func glCallCommandListNV(list:GL.UInt)
{
    fp_glCallCommandListNV(list)
}
public
func glCallCommandListNV(_ list:GL.UInt)
{
    fp_glCallCommandListNV(list)
}

var fp_glCallList:@convention(c) (GL.UInt) -> () = load_glCallList
func load_glCallList(list:GL.UInt)
{
    fp_glCallList = unsafeBitCast(get_fp("glCallList", support: [ss346, ss369]), to: Swift.type(of: fp_glCallList))
    fp_glCallList(list)
}
public
func glCallList(list:GL.UInt)
{
    fp_glCallList(list)
}
public
func glCallList(_ list:GL.UInt)
{
    fp_glCallList(list)
}

var fp_glCallLists:@convention(c) (GL.Size, GL.Enum, UnsafeRawPointer?) -> () = load_glCallLists
func load_glCallLists(n:GL.Size, type:GL.Enum, lists:UnsafeRawPointer?)
{
    fp_glCallLists = unsafeBitCast(get_fp("glCallLists", support: [ss346, ss369]), to: Swift.type(of: fp_glCallLists))
    fp_glCallLists(n, type, lists)
}
public
func glCallLists(n:GL.Size, type:GL.Enum, lists:UnsafeRawPointer?)
{
    fp_glCallLists(n, type, lists)
}
public
func glCallLists(_ n:GL.Size, _ type:GL.Enum, _ lists:UnsafeRawPointer?)
{
    fp_glCallLists(n, type, lists)
}

var fp_glCheckFramebufferStatus:@convention(c) (GL.Enum) -> GL.Enum = load_glCheckFramebufferStatus
func load_glCheckFramebufferStatus(target:GL.Enum) -> GL.Enum
{
    fp_glCheckFramebufferStatus = unsafeBitCast(get_fp("glCheckFramebufferStatus", support: [ss354, ss365, ss53]), to: Swift.type(of: fp_glCheckFramebufferStatus))
    return fp_glCheckFramebufferStatus(target)
}
public
func glCheckFramebufferStatus(target:GL.Enum) -> GL.Enum
{
    return fp_glCheckFramebufferStatus(target)
}
public
func glCheckFramebufferStatus(_ target:GL.Enum) -> GL.Enum
{
    return fp_glCheckFramebufferStatus(target)
}

var fp_glCheckFramebufferStatusEXT:@convention(c) (GL.Enum) -> GL.Enum = load_glCheckFramebufferStatusEXT
func load_glCheckFramebufferStatusEXT(target:GL.Enum) -> GL.Enum
{
    fp_glCheckFramebufferStatusEXT = unsafeBitCast(get_fp("glCheckFramebufferStatusEXT", support: [ss155]), to: Swift.type(of: fp_glCheckFramebufferStatusEXT))
    return fp_glCheckFramebufferStatusEXT(target)
}
public
func glCheckFramebufferStatusEXT(target:GL.Enum) -> GL.Enum
{
    return fp_glCheckFramebufferStatusEXT(target)
}
public
func glCheckFramebufferStatusEXT(_ target:GL.Enum) -> GL.Enum
{
    return fp_glCheckFramebufferStatusEXT(target)
}

var fp_glCheckFramebufferStatusOES:@convention(c) (GL.Enum) -> GL.Enum = load_glCheckFramebufferStatusOES
func load_glCheckFramebufferStatusOES(target:GL.Enum) -> GL.Enum
{
    fp_glCheckFramebufferStatusOES = unsafeBitCast(get_fp("glCheckFramebufferStatusOES", support: [ss293]), to: Swift.type(of: fp_glCheckFramebufferStatusOES))
    return fp_glCheckFramebufferStatusOES(target)
}
public
func glCheckFramebufferStatusOES(target:GL.Enum) -> GL.Enum
{
    return fp_glCheckFramebufferStatusOES(target)
}
public
func glCheckFramebufferStatusOES(_ target:GL.Enum) -> GL.Enum
{
    return fp_glCheckFramebufferStatusOES(target)
}

var fp_glCheckNamedFramebufferStatus:@convention(c) (GL.UInt, GL.Enum) -> GL.Enum = load_glCheckNamedFramebufferStatus
func load_glCheckNamedFramebufferStatus(framebuffer:GL.UInt, target:GL.Enum) -> GL.Enum
{
    fp_glCheckNamedFramebufferStatus = unsafeBitCast(get_fp("glCheckNamedFramebufferStatus", support: [ss363, ss42]), to: Swift.type(of: fp_glCheckNamedFramebufferStatus))
    return fp_glCheckNamedFramebufferStatus(framebuffer, target)
}
public
func glCheckNamedFramebufferStatus(framebuffer:GL.UInt, target:GL.Enum) -> GL.Enum
{
    return fp_glCheckNamedFramebufferStatus(framebuffer, target)
}
public
func glCheckNamedFramebufferStatus(_ framebuffer:GL.UInt, _ target:GL.Enum) -> GL.Enum
{
    return fp_glCheckNamedFramebufferStatus(framebuffer, target)
}

var fp_glCheckNamedFramebufferStatusEXT:@convention(c) (GL.UInt, GL.Enum) -> GL.Enum = load_glCheckNamedFramebufferStatusEXT
func load_glCheckNamedFramebufferStatusEXT(framebuffer:GL.UInt, target:GL.Enum) -> GL.Enum
{
    fp_glCheckNamedFramebufferStatusEXT = unsafeBitCast(get_fp("glCheckNamedFramebufferStatusEXT", support: [ss143]), to: Swift.type(of: fp_glCheckNamedFramebufferStatusEXT))
    return fp_glCheckNamedFramebufferStatusEXT(framebuffer, target)
}
public
func glCheckNamedFramebufferStatusEXT(framebuffer:GL.UInt, target:GL.Enum) -> GL.Enum
{
    return fp_glCheckNamedFramebufferStatusEXT(framebuffer, target)
}
public
func glCheckNamedFramebufferStatusEXT(_ framebuffer:GL.UInt, _ target:GL.Enum) -> GL.Enum
{
    return fp_glCheckNamedFramebufferStatusEXT(framebuffer, target)
}

var fp_glClampColor:@convention(c) (GL.Enum, GL.Enum) -> () = load_glClampColor
func load_glClampColor(target:GL.Enum, clamp:GL.Enum)
{
    fp_glClampColor = unsafeBitCast(get_fp("glClampColor", support: [ss354]), to: Swift.type(of: fp_glClampColor))
    fp_glClampColor(target, clamp)
}
public
func glClampColor(target:GL.Enum, clamp:GL.Enum)
{
    fp_glClampColor(target, clamp)
}
public
func glClampColor(_ target:GL.Enum, _ clamp:GL.Enum)
{
    fp_glClampColor(target, clamp)
}

var fp_glClampColorARB:@convention(c) (GL.Enum, GL.Enum) -> () = load_glClampColorARB
func load_glClampColorARB(target:GL.Enum, clamp:GL.Enum)
{
    fp_glClampColorARB = unsafeBitCast(get_fp("glClampColorARB", support: [ss36]), to: Swift.type(of: fp_glClampColorARB))
    fp_glClampColorARB(target, clamp)
}
public
func glClampColorARB(target:GL.Enum, clamp:GL.Enum)
{
    fp_glClampColorARB(target, clamp)
}
public
func glClampColorARB(_ target:GL.Enum, _ clamp:GL.Enum)
{
    fp_glClampColorARB(target, clamp)
}

var fp_glClear:@convention(c) (GL.Bitfield) -> () = load_glClear
func load_glClear(mask:GL.Bitfield)
{
    fp_glClear = unsafeBitCast(get_fp("glClear", support: [ss346, ss365]), to: Swift.type(of: fp_glClear))
    fp_glClear(mask)
}
public
func glClear(mask:GL.Bitfield)
{
    fp_glClear(mask)
}
public
func glClear(_ mask:GL.Bitfield)
{
    fp_glClear(mask)
}

var fp_glClearAccum:@convention(c) (GL.Float, GL.Float, GL.Float, GL.Float) -> () = load_glClearAccum
func load_glClearAccum(red:GL.Float, green:GL.Float, blue:GL.Float, alpha:GL.Float)
{
    fp_glClearAccum = unsafeBitCast(get_fp("glClearAccum", support: [ss346, ss369]), to: Swift.type(of: fp_glClearAccum))
    fp_glClearAccum(red, green, blue, alpha)
}
public
func glClearAccum(red:GL.Float, green:GL.Float, blue:GL.Float, alpha:GL.Float)
{
    fp_glClearAccum(red, green, blue, alpha)
}
public
func glClearAccum(_ red:GL.Float, _ green:GL.Float, _ blue:GL.Float, _ alpha:GL.Float)
{
    fp_glClearAccum(red, green, blue, alpha)
}

var fp_glClearAccumxOES:@convention(c) (GL.Fixed, GL.Fixed, GL.Fixed, GL.Fixed) -> () = load_glClearAccumxOES
func load_glClearAccumxOES(red:GL.Fixed, green:GL.Fixed, blue:GL.Fixed, alpha:GL.Fixed)
{
    fp_glClearAccumxOES = unsafeBitCast(get_fp("glClearAccumxOES", support: [ss292]), to: Swift.type(of: fp_glClearAccumxOES))
    fp_glClearAccumxOES(red, green, blue, alpha)
}
public
func glClearAccumxOES(red:GL.Fixed, green:GL.Fixed, blue:GL.Fixed, alpha:GL.Fixed)
{
    fp_glClearAccumxOES(red, green, blue, alpha)
}
public
func glClearAccumxOES(_ red:GL.Fixed, _ green:GL.Fixed, _ blue:GL.Fixed, _ alpha:GL.Fixed)
{
    fp_glClearAccumxOES(red, green, blue, alpha)
}

var fp_glClearBufferData:@convention(c) (GL.Enum, GL.Enum, GL.Enum, GL.Enum, UnsafeRawPointer?) -> () = load_glClearBufferData
func load_glClearBufferData(target:GL.Enum, internalformat:GL.Enum, format:GL.Enum, type:GL.Enum, data:UnsafeRawPointer?)
{
    fp_glClearBufferData = unsafeBitCast(get_fp("glClearBufferData", support: [ss361, ss33]), to: Swift.type(of: fp_glClearBufferData))
    fp_glClearBufferData(target, internalformat, format, type, data)
}
public
func glClearBufferData(target:GL.Enum, internalformat:GL.Enum, format:GL.Enum, type:GL.Enum, data:UnsafeRawPointer?)
{
    fp_glClearBufferData(target, internalformat, format, type, data)
}
public
func glClearBufferData(_ target:GL.Enum, _ internalformat:GL.Enum, _ format:GL.Enum, _ type:GL.Enum, _ data:UnsafeRawPointer?)
{
    fp_glClearBufferData(target, internalformat, format, type, data)
}

var fp_glClearBufferSubData:@convention(c) (GL.Enum, GL.Enum, GL.IntPointer, GL.SizePointer, GL.Enum, GL.Enum, UnsafeRawPointer?) -> () = load_glClearBufferSubData
func load_glClearBufferSubData(target:GL.Enum, internalformat:GL.Enum, offset:GL.IntPointer, size:GL.SizePointer, format:GL.Enum, type:GL.Enum, data:UnsafeRawPointer?)
{
    fp_glClearBufferSubData = unsafeBitCast(get_fp("glClearBufferSubData", support: [ss361, ss33]), to: Swift.type(of: fp_glClearBufferSubData))
    fp_glClearBufferSubData(target, internalformat, offset, size, format, type, data)
}
public
func glClearBufferSubData(target:GL.Enum, internalformat:GL.Enum, offset:GL.IntPointer, size:GL.SizePointer, format:GL.Enum, type:GL.Enum, data:UnsafeRawPointer?)
{
    fp_glClearBufferSubData(target, internalformat, offset, size, format, type, data)
}
public
func glClearBufferSubData(_ target:GL.Enum, _ internalformat:GL.Enum, _ offset:GL.IntPointer, _ size:GL.SizePointer, _ format:GL.Enum, _ type:GL.Enum, _ data:UnsafeRawPointer?)
{
    fp_glClearBufferSubData(target, internalformat, offset, size, format, type, data)
}

var fp_glClearBufferfi:@convention(c) (GL.Enum, GL.Int, GL.Float, GL.Int) -> () = load_glClearBufferfi
func load_glClearBufferfi(buffer:GL.Enum, drawbuffer:GL.Int, depth:GL.Float, stencil:GL.Int)
{
    fp_glClearBufferfi = unsafeBitCast(get_fp("glClearBufferfi", support: [ss354, ss366]), to: Swift.type(of: fp_glClearBufferfi))
    fp_glClearBufferfi(buffer, drawbuffer, depth, stencil)
}
public
func glClearBufferfi(buffer:GL.Enum, drawbuffer:GL.Int, depth:GL.Float, stencil:GL.Int)
{
    fp_glClearBufferfi(buffer, drawbuffer, depth, stencil)
}
public
func glClearBufferfi(_ buffer:GL.Enum, _ drawbuffer:GL.Int, _ depth:GL.Float, _ stencil:GL.Int)
{
    fp_glClearBufferfi(buffer, drawbuffer, depth, stencil)
}

var fp_glClearBufferfv:@convention(c) (GL.Enum, GL.Int, UnsafePointer<GL.Float>?) -> () = load_glClearBufferfv
func load_glClearBufferfv(buffer:GL.Enum, drawbuffer:GL.Int, value:UnsafePointer<GL.Float>?)
{
    fp_glClearBufferfv = unsafeBitCast(get_fp("glClearBufferfv", support: [ss354, ss366]), to: Swift.type(of: fp_glClearBufferfv))
    fp_glClearBufferfv(buffer, drawbuffer, value)
}
public
func glClearBufferfv(buffer:GL.Enum, drawbuffer:GL.Int, value:UnsafePointer<GL.Float>?)
{
    fp_glClearBufferfv(buffer, drawbuffer, value)
}
public
func glClearBufferfv(_ buffer:GL.Enum, _ drawbuffer:GL.Int, _ value:UnsafePointer<GL.Float>?)
{
    fp_glClearBufferfv(buffer, drawbuffer, value)
}

var fp_glClearBufferiv:@convention(c) (GL.Enum, GL.Int, UnsafePointer<GL.Int>?) -> () = load_glClearBufferiv
func load_glClearBufferiv(buffer:GL.Enum, drawbuffer:GL.Int, value:UnsafePointer<GL.Int>?)
{
    fp_glClearBufferiv = unsafeBitCast(get_fp("glClearBufferiv", support: [ss354, ss366]), to: Swift.type(of: fp_glClearBufferiv))
    fp_glClearBufferiv(buffer, drawbuffer, value)
}
public
func glClearBufferiv(buffer:GL.Enum, drawbuffer:GL.Int, value:UnsafePointer<GL.Int>?)
{
    fp_glClearBufferiv(buffer, drawbuffer, value)
}
public
func glClearBufferiv(_ buffer:GL.Enum, _ drawbuffer:GL.Int, _ value:UnsafePointer<GL.Int>?)
{
    fp_glClearBufferiv(buffer, drawbuffer, value)
}

var fp_glClearBufferuiv:@convention(c) (GL.Enum, GL.Int, UnsafePointer<GL.UInt>?) -> () = load_glClearBufferuiv
func load_glClearBufferuiv(buffer:GL.Enum, drawbuffer:GL.Int, value:UnsafePointer<GL.UInt>?)
{
    fp_glClearBufferuiv = unsafeBitCast(get_fp("glClearBufferuiv", support: [ss354, ss366]), to: Swift.type(of: fp_glClearBufferuiv))
    fp_glClearBufferuiv(buffer, drawbuffer, value)
}
public
func glClearBufferuiv(buffer:GL.Enum, drawbuffer:GL.Int, value:UnsafePointer<GL.UInt>?)
{
    fp_glClearBufferuiv(buffer, drawbuffer, value)
}
public
func glClearBufferuiv(_ buffer:GL.Enum, _ drawbuffer:GL.Int, _ value:UnsafePointer<GL.UInt>?)
{
    fp_glClearBufferuiv(buffer, drawbuffer, value)
}

var fp_glClearColor:@convention(c) (GL.Float, GL.Float, GL.Float, GL.Float) -> () = load_glClearColor
func load_glClearColor(red:GL.Float, green:GL.Float, blue:GL.Float, alpha:GL.Float)
{
    fp_glClearColor = unsafeBitCast(get_fp("glClearColor", support: [ss346, ss365]), to: Swift.type(of: fp_glClearColor))
    fp_glClearColor(red, green, blue, alpha)
}
public
func glClearColor(red:GL.Float, green:GL.Float, blue:GL.Float, alpha:GL.Float)
{
    fp_glClearColor(red, green, blue, alpha)
}
public
func glClearColor(_ red:GL.Float, _ green:GL.Float, _ blue:GL.Float, _ alpha:GL.Float)
{
    fp_glClearColor(red, green, blue, alpha)
}

var fp_glClearColorIiEXT:@convention(c) (GL.Int, GL.Int, GL.Int, GL.Int) -> () = load_glClearColorIiEXT
func load_glClearColorIiEXT(red:GL.Int, green:GL.Int, blue:GL.Int, alpha:GL.Int)
{
    fp_glClearColorIiEXT = unsafeBitCast(get_fp("glClearColorIiEXT", support: [ss194]), to: Swift.type(of: fp_glClearColorIiEXT))
    fp_glClearColorIiEXT(red, green, blue, alpha)
}
public
func glClearColorIiEXT(red:GL.Int, green:GL.Int, blue:GL.Int, alpha:GL.Int)
{
    fp_glClearColorIiEXT(red, green, blue, alpha)
}
public
func glClearColorIiEXT(_ red:GL.Int, _ green:GL.Int, _ blue:GL.Int, _ alpha:GL.Int)
{
    fp_glClearColorIiEXT(red, green, blue, alpha)
}

var fp_glClearColorIuiEXT:@convention(c) (GL.UInt, GL.UInt, GL.UInt, GL.UInt) -> () = load_glClearColorIuiEXT
func load_glClearColorIuiEXT(red:GL.UInt, green:GL.UInt, blue:GL.UInt, alpha:GL.UInt)
{
    fp_glClearColorIuiEXT = unsafeBitCast(get_fp("glClearColorIuiEXT", support: [ss194]), to: Swift.type(of: fp_glClearColorIuiEXT))
    fp_glClearColorIuiEXT(red, green, blue, alpha)
}
public
func glClearColorIuiEXT(red:GL.UInt, green:GL.UInt, blue:GL.UInt, alpha:GL.UInt)
{
    fp_glClearColorIuiEXT(red, green, blue, alpha)
}
public
func glClearColorIuiEXT(_ red:GL.UInt, _ green:GL.UInt, _ blue:GL.UInt, _ alpha:GL.UInt)
{
    fp_glClearColorIuiEXT(red, green, blue, alpha)
}

var fp_glClearColorx:@convention(c) (GL.Fixed, GL.Fixed, GL.Fixed, GL.Fixed) -> () = load_glClearColorx
func load_glClearColorx(red:GL.Fixed, green:GL.Fixed, blue:GL.Fixed, alpha:GL.Fixed)
{
    fp_glClearColorx = unsafeBitCast(get_fp("glClearColorx", support: [ss364]), to: Swift.type(of: fp_glClearColorx))
    fp_glClearColorx(red, green, blue, alpha)
}
public
func glClearColorx(red:GL.Fixed, green:GL.Fixed, blue:GL.Fixed, alpha:GL.Fixed)
{
    fp_glClearColorx(red, green, blue, alpha)
}
public
func glClearColorx(_ red:GL.Fixed, _ green:GL.Fixed, _ blue:GL.Fixed, _ alpha:GL.Fixed)
{
    fp_glClearColorx(red, green, blue, alpha)
}

var fp_glClearColorxOES:@convention(c) (GL.Fixed, GL.Fixed, GL.Fixed, GL.Fixed) -> () = load_glClearColorxOES
func load_glClearColorxOES(red:GL.Fixed, green:GL.Fixed, blue:GL.Fixed, alpha:GL.Fixed)
{
    fp_glClearColorxOES = unsafeBitCast(get_fp("glClearColorxOES", support: [ss292]), to: Swift.type(of: fp_glClearColorxOES))
    fp_glClearColorxOES(red, green, blue, alpha)
}
public
func glClearColorxOES(red:GL.Fixed, green:GL.Fixed, blue:GL.Fixed, alpha:GL.Fixed)
{
    fp_glClearColorxOES(red, green, blue, alpha)
}
public
func glClearColorxOES(_ red:GL.Fixed, _ green:GL.Fixed, _ blue:GL.Fixed, _ alpha:GL.Fixed)
{
    fp_glClearColorxOES(red, green, blue, alpha)
}

var fp_glClearDepth:@convention(c) (GL.Double) -> () = load_glClearDepth
func load_glClearDepth(depth:GL.Double)
{
    fp_glClearDepth = unsafeBitCast(get_fp("glClearDepth", support: [ss346]), to: Swift.type(of: fp_glClearDepth))
    fp_glClearDepth(depth)
}
public
func glClearDepth(depth:GL.Double)
{
    fp_glClearDepth(depth)
}
public
func glClearDepth(_ depth:GL.Double)
{
    fp_glClearDepth(depth)
}

var fp_glClearDepthdNV:@convention(c) (GL.Double) -> () = load_glClearDepthdNV
func load_glClearDepthdNV(depth:GL.Double)
{
    fp_glClearDepthdNV = unsafeBitCast(get_fp("glClearDepthdNV", support: [ss236]), to: Swift.type(of: fp_glClearDepthdNV))
    fp_glClearDepthdNV(depth)
}
public
func glClearDepthdNV(depth:GL.Double)
{
    fp_glClearDepthdNV(depth)
}
public
func glClearDepthdNV(_ depth:GL.Double)
{
    fp_glClearDepthdNV(depth)
}

var fp_glClearDepthf:@convention(c) (GL.Float) -> () = load_glClearDepthf
func load_glClearDepthf(d:GL.Float)
{
    fp_glClearDepthf = unsafeBitCast(get_fp("glClearDepthf", support: [ss359, ss365, ss48]), to: Swift.type(of: fp_glClearDepthf))
    fp_glClearDepthf(d)
}
public
func glClearDepthf(d:GL.Float)
{
    fp_glClearDepthf(d)
}
public
func glClearDepthf(_ d:GL.Float)
{
    fp_glClearDepthf(d)
}

var fp_glClearDepthfOES:@convention(c) (GL.ClampFloat) -> () = load_glClearDepthfOES
func load_glClearDepthfOES(depth:GL.ClampFloat)
{
    fp_glClearDepthfOES = unsafeBitCast(get_fp("glClearDepthfOES", support: [ss302]), to: Swift.type(of: fp_glClearDepthfOES))
    fp_glClearDepthfOES(depth)
}
public
func glClearDepthfOES(depth:GL.ClampFloat)
{
    fp_glClearDepthfOES(depth)
}
public
func glClearDepthfOES(_ depth:GL.ClampFloat)
{
    fp_glClearDepthfOES(depth)
}

var fp_glClearDepthx:@convention(c) (GL.Fixed) -> () = load_glClearDepthx
func load_glClearDepthx(depth:GL.Fixed)
{
    fp_glClearDepthx = unsafeBitCast(get_fp("glClearDepthx", support: [ss364]), to: Swift.type(of: fp_glClearDepthx))
    fp_glClearDepthx(depth)
}
public
func glClearDepthx(depth:GL.Fixed)
{
    fp_glClearDepthx(depth)
}
public
func glClearDepthx(_ depth:GL.Fixed)
{
    fp_glClearDepthx(depth)
}

var fp_glClearDepthxOES:@convention(c) (GL.Fixed) -> () = load_glClearDepthxOES
func load_glClearDepthxOES(depth:GL.Fixed)
{
    fp_glClearDepthxOES = unsafeBitCast(get_fp("glClearDepthxOES", support: [ss292]), to: Swift.type(of: fp_glClearDepthxOES))
    fp_glClearDepthxOES(depth)
}
public
func glClearDepthxOES(depth:GL.Fixed)
{
    fp_glClearDepthxOES(depth)
}
public
func glClearDepthxOES(_ depth:GL.Fixed)
{
    fp_glClearDepthxOES(depth)
}

var fp_glClearIndex:@convention(c) (GL.Float) -> () = load_glClearIndex
func load_glClearIndex(c:GL.Float)
{
    fp_glClearIndex = unsafeBitCast(get_fp("glClearIndex", support: [ss346, ss369]), to: Swift.type(of: fp_glClearIndex))
    fp_glClearIndex(c)
}
public
func glClearIndex(c:GL.Float)
{
    fp_glClearIndex(c)
}
public
func glClearIndex(_ c:GL.Float)
{
    fp_glClearIndex(c)
}

var fp_glClearNamedBufferData:@convention(c) (GL.UInt, GL.Enum, GL.Enum, GL.Enum, UnsafeRawPointer?) -> () = load_glClearNamedBufferData
func load_glClearNamedBufferData(buffer:GL.UInt, internalformat:GL.Enum, format:GL.Enum, type:GL.Enum, data:UnsafeRawPointer?)
{
    fp_glClearNamedBufferData = unsafeBitCast(get_fp("glClearNamedBufferData", support: [ss363, ss42]), to: Swift.type(of: fp_glClearNamedBufferData))
    fp_glClearNamedBufferData(buffer, internalformat, format, type, data)
}
public
func glClearNamedBufferData(buffer:GL.UInt, internalformat:GL.Enum, format:GL.Enum, type:GL.Enum, data:UnsafeRawPointer?)
{
    fp_glClearNamedBufferData(buffer, internalformat, format, type, data)
}
public
func glClearNamedBufferData(_ buffer:GL.UInt, _ internalformat:GL.Enum, _ format:GL.Enum, _ type:GL.Enum, _ data:UnsafeRawPointer?)
{
    fp_glClearNamedBufferData(buffer, internalformat, format, type, data)
}

var fp_glClearNamedBufferDataEXT:@convention(c) (GL.UInt, GL.Enum, GL.Enum, GL.Enum, UnsafeRawPointer?) -> () = load_glClearNamedBufferDataEXT
func load_glClearNamedBufferDataEXT(buffer:GL.UInt, internalformat:GL.Enum, format:GL.Enum, type:GL.Enum, data:UnsafeRawPointer?)
{
    fp_glClearNamedBufferDataEXT = unsafeBitCast(get_fp("glClearNamedBufferDataEXT", support: [ss143]), to: Swift.type(of: fp_glClearNamedBufferDataEXT))
    fp_glClearNamedBufferDataEXT(buffer, internalformat, format, type, data)
}
public
func glClearNamedBufferDataEXT(buffer:GL.UInt, internalformat:GL.Enum, format:GL.Enum, type:GL.Enum, data:UnsafeRawPointer?)
{
    fp_glClearNamedBufferDataEXT(buffer, internalformat, format, type, data)
}
public
func glClearNamedBufferDataEXT(_ buffer:GL.UInt, _ internalformat:GL.Enum, _ format:GL.Enum, _ type:GL.Enum, _ data:UnsafeRawPointer?)
{
    fp_glClearNamedBufferDataEXT(buffer, internalformat, format, type, data)
}

var fp_glClearNamedBufferSubData:@convention(c) (GL.UInt, GL.Enum, GL.IntPointer, GL.SizePointer, GL.Enum, GL.Enum, UnsafeRawPointer?) -> () = load_glClearNamedBufferSubData
func load_glClearNamedBufferSubData(buffer:GL.UInt, internalformat:GL.Enum, offset:GL.IntPointer, size:GL.SizePointer, format:GL.Enum, type:GL.Enum, data:UnsafeRawPointer?)
{
    fp_glClearNamedBufferSubData = unsafeBitCast(get_fp("glClearNamedBufferSubData", support: [ss363, ss42]), to: Swift.type(of: fp_glClearNamedBufferSubData))
    fp_glClearNamedBufferSubData(buffer, internalformat, offset, size, format, type, data)
}
public
func glClearNamedBufferSubData(buffer:GL.UInt, internalformat:GL.Enum, offset:GL.IntPointer, size:GL.SizePointer, format:GL.Enum, type:GL.Enum, data:UnsafeRawPointer?)
{
    fp_glClearNamedBufferSubData(buffer, internalformat, offset, size, format, type, data)
}
public
func glClearNamedBufferSubData(_ buffer:GL.UInt, _ internalformat:GL.Enum, _ offset:GL.IntPointer, _ size:GL.SizePointer, _ format:GL.Enum, _ type:GL.Enum, _ data:UnsafeRawPointer?)
{
    fp_glClearNamedBufferSubData(buffer, internalformat, offset, size, format, type, data)
}

var fp_glClearNamedBufferSubDataEXT:@convention(c) (GL.UInt, GL.Enum, GL.SizePointer, GL.SizePointer, GL.Enum, GL.Enum, UnsafeRawPointer?) -> () = load_glClearNamedBufferSubDataEXT
func load_glClearNamedBufferSubDataEXT(buffer:GL.UInt, internalformat:GL.Enum, offset:GL.SizePointer, size:GL.SizePointer, format:GL.Enum, type:GL.Enum, data:UnsafeRawPointer?)
{
    fp_glClearNamedBufferSubDataEXT = unsafeBitCast(get_fp("glClearNamedBufferSubDataEXT", support: [ss143]), to: Swift.type(of: fp_glClearNamedBufferSubDataEXT))
    fp_glClearNamedBufferSubDataEXT(buffer, internalformat, offset, size, format, type, data)
}
public
func glClearNamedBufferSubDataEXT(buffer:GL.UInt, internalformat:GL.Enum, offset:GL.SizePointer, size:GL.SizePointer, format:GL.Enum, type:GL.Enum, data:UnsafeRawPointer?)
{
    fp_glClearNamedBufferSubDataEXT(buffer, internalformat, offset, size, format, type, data)
}
public
func glClearNamedBufferSubDataEXT(_ buffer:GL.UInt, _ internalformat:GL.Enum, _ offset:GL.SizePointer, _ size:GL.SizePointer, _ format:GL.Enum, _ type:GL.Enum, _ data:UnsafeRawPointer?)
{
    fp_glClearNamedBufferSubDataEXT(buffer, internalformat, offset, size, format, type, data)
}

var fp_glClearNamedFramebufferfi:@convention(c) (GL.UInt, GL.Enum, GL.Int, GL.Float, GL.Int) -> () = load_glClearNamedFramebufferfi
func load_glClearNamedFramebufferfi(framebuffer:GL.UInt, buffer:GL.Enum, drawbuffer:GL.Int, depth:GL.Float, stencil:GL.Int)
{
    fp_glClearNamedFramebufferfi = unsafeBitCast(get_fp("glClearNamedFramebufferfi", support: [ss363, ss42]), to: Swift.type(of: fp_glClearNamedFramebufferfi))
    fp_glClearNamedFramebufferfi(framebuffer, buffer, drawbuffer, depth, stencil)
}
public
func glClearNamedFramebufferfi(framebuffer:GL.UInt, buffer:GL.Enum, drawbuffer:GL.Int, depth:GL.Float, stencil:GL.Int)
{
    fp_glClearNamedFramebufferfi(framebuffer, buffer, drawbuffer, depth, stencil)
}
public
func glClearNamedFramebufferfi(_ framebuffer:GL.UInt, _ buffer:GL.Enum, _ drawbuffer:GL.Int, _ depth:GL.Float, _ stencil:GL.Int)
{
    fp_glClearNamedFramebufferfi(framebuffer, buffer, drawbuffer, depth, stencil)
}

var fp_glClearNamedFramebufferfv:@convention(c) (GL.UInt, GL.Enum, GL.Int, UnsafePointer<GL.Float>?) -> () = load_glClearNamedFramebufferfv
func load_glClearNamedFramebufferfv(framebuffer:GL.UInt, buffer:GL.Enum, drawbuffer:GL.Int, value:UnsafePointer<GL.Float>?)
{
    fp_glClearNamedFramebufferfv = unsafeBitCast(get_fp("glClearNamedFramebufferfv", support: [ss363, ss42]), to: Swift.type(of: fp_glClearNamedFramebufferfv))
    fp_glClearNamedFramebufferfv(framebuffer, buffer, drawbuffer, value)
}
public
func glClearNamedFramebufferfv(framebuffer:GL.UInt, buffer:GL.Enum, drawbuffer:GL.Int, value:UnsafePointer<GL.Float>?)
{
    fp_glClearNamedFramebufferfv(framebuffer, buffer, drawbuffer, value)
}
public
func glClearNamedFramebufferfv(_ framebuffer:GL.UInt, _ buffer:GL.Enum, _ drawbuffer:GL.Int, _ value:UnsafePointer<GL.Float>?)
{
    fp_glClearNamedFramebufferfv(framebuffer, buffer, drawbuffer, value)
}

var fp_glClearNamedFramebufferiv:@convention(c) (GL.UInt, GL.Enum, GL.Int, UnsafePointer<GL.Int>?) -> () = load_glClearNamedFramebufferiv
func load_glClearNamedFramebufferiv(framebuffer:GL.UInt, buffer:GL.Enum, drawbuffer:GL.Int, value:UnsafePointer<GL.Int>?)
{
    fp_glClearNamedFramebufferiv = unsafeBitCast(get_fp("glClearNamedFramebufferiv", support: [ss363, ss42]), to: Swift.type(of: fp_glClearNamedFramebufferiv))
    fp_glClearNamedFramebufferiv(framebuffer, buffer, drawbuffer, value)
}
public
func glClearNamedFramebufferiv(framebuffer:GL.UInt, buffer:GL.Enum, drawbuffer:GL.Int, value:UnsafePointer<GL.Int>?)
{
    fp_glClearNamedFramebufferiv(framebuffer, buffer, drawbuffer, value)
}
public
func glClearNamedFramebufferiv(_ framebuffer:GL.UInt, _ buffer:GL.Enum, _ drawbuffer:GL.Int, _ value:UnsafePointer<GL.Int>?)
{
    fp_glClearNamedFramebufferiv(framebuffer, buffer, drawbuffer, value)
}

var fp_glClearNamedFramebufferuiv:@convention(c) (GL.UInt, GL.Enum, GL.Int, UnsafePointer<GL.UInt>?) -> () = load_glClearNamedFramebufferuiv
func load_glClearNamedFramebufferuiv(framebuffer:GL.UInt, buffer:GL.Enum, drawbuffer:GL.Int, value:UnsafePointer<GL.UInt>?)
{
    fp_glClearNamedFramebufferuiv = unsafeBitCast(get_fp("glClearNamedFramebufferuiv", support: [ss363, ss42]), to: Swift.type(of: fp_glClearNamedFramebufferuiv))
    fp_glClearNamedFramebufferuiv(framebuffer, buffer, drawbuffer, value)
}
public
func glClearNamedFramebufferuiv(framebuffer:GL.UInt, buffer:GL.Enum, drawbuffer:GL.Int, value:UnsafePointer<GL.UInt>?)
{
    fp_glClearNamedFramebufferuiv(framebuffer, buffer, drawbuffer, value)
}
public
func glClearNamedFramebufferuiv(_ framebuffer:GL.UInt, _ buffer:GL.Enum, _ drawbuffer:GL.Int, _ value:UnsafePointer<GL.UInt>?)
{
    fp_glClearNamedFramebufferuiv(framebuffer, buffer, drawbuffer, value)
}

var fp_glClearStencil:@convention(c) (GL.Int) -> () = load_glClearStencil
func load_glClearStencil(s:GL.Int)
{
    fp_glClearStencil = unsafeBitCast(get_fp("glClearStencil", support: [ss346, ss365]), to: Swift.type(of: fp_glClearStencil))
    fp_glClearStencil(s)
}
public
func glClearStencil(s:GL.Int)
{
    fp_glClearStencil(s)
}
public
func glClearStencil(_ s:GL.Int)
{
    fp_glClearStencil(s)
}

var fp_glClearTexImage:@convention(c) (GL.UInt, GL.Int, GL.Enum, GL.Enum, UnsafeRawPointer?) -> () = load_glClearTexImage
func load_glClearTexImage(texture:GL.UInt, level:GL.Int, format:GL.Enum, type:GL.Enum, data:UnsafeRawPointer?)
{
    fp_glClearTexImage = unsafeBitCast(get_fp("glClearTexImage", support: [ss362, ss34]), to: Swift.type(of: fp_glClearTexImage))
    fp_glClearTexImage(texture, level, format, type, data)
}
public
func glClearTexImage(texture:GL.UInt, level:GL.Int, format:GL.Enum, type:GL.Enum, data:UnsafeRawPointer?)
{
    fp_glClearTexImage(texture, level, format, type, data)
}
public
func glClearTexImage(_ texture:GL.UInt, _ level:GL.Int, _ format:GL.Enum, _ type:GL.Enum, _ data:UnsafeRawPointer?)
{
    fp_glClearTexImage(texture, level, format, type, data)
}

var fp_glClearTexSubImage:@convention(c) (GL.UInt, GL.Int, GL.Int, GL.Int, GL.Int, GL.Size, GL.Size, GL.Size, GL.Enum, GL.Enum, UnsafeRawPointer?) -> () = load_glClearTexSubImage
func load_glClearTexSubImage(texture:GL.UInt, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, zoffset:GL.Int, width:GL.Size, height:GL.Size, depth:GL.Size, format:GL.Enum, type:GL.Enum, data:UnsafeRawPointer?)
{
    fp_glClearTexSubImage = unsafeBitCast(get_fp("glClearTexSubImage", support: [ss362, ss34]), to: Swift.type(of: fp_glClearTexSubImage))
    fp_glClearTexSubImage(texture, level, xoffset, yoffset, zoffset, width, height, depth, format, type, data)
}
public
func glClearTexSubImage(texture:GL.UInt, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, zoffset:GL.Int, width:GL.Size, height:GL.Size, depth:GL.Size, format:GL.Enum, type:GL.Enum, data:UnsafeRawPointer?)
{
    fp_glClearTexSubImage(texture, level, xoffset, yoffset, zoffset, width, height, depth, format, type, data)
}
public
func glClearTexSubImage(_ texture:GL.UInt, _ level:GL.Int, _ xoffset:GL.Int, _ yoffset:GL.Int, _ zoffset:GL.Int, _ width:GL.Size, _ height:GL.Size, _ depth:GL.Size, _ format:GL.Enum, _ type:GL.Enum, _ data:UnsafeRawPointer?)
{
    fp_glClearTexSubImage(texture, level, xoffset, yoffset, zoffset, width, height, depth, format, type, data)
}

var fp_glClientActiveTexture:@convention(c) (GL.Enum) -> () = load_glClientActiveTexture
func load_glClientActiveTexture(texture:GL.Enum)
{
    fp_glClientActiveTexture = unsafeBitCast(get_fp("glClientActiveTexture", support: [ss349, ss369, ss364]), to: Swift.type(of: fp_glClientActiveTexture))
    fp_glClientActiveTexture(texture)
}
public
func glClientActiveTexture(texture:GL.Enum)
{
    fp_glClientActiveTexture(texture)
}
public
func glClientActiveTexture(_ texture:GL.Enum)
{
    fp_glClientActiveTexture(texture)
}

var fp_glClientActiveTextureARB:@convention(c) (GL.Enum) -> () = load_glClientActiveTextureARB
func load_glClientActiveTextureARB(texture:GL.Enum)
{
    fp_glClientActiveTextureARB = unsafeBitCast(get_fp("glClientActiveTextureARB", support: [ss70]), to: Swift.type(of: fp_glClientActiveTextureARB))
    fp_glClientActiveTextureARB(texture)
}
public
func glClientActiveTextureARB(texture:GL.Enum)
{
    fp_glClientActiveTextureARB(texture)
}
public
func glClientActiveTextureARB(_ texture:GL.Enum)
{
    fp_glClientActiveTextureARB(texture)
}

var fp_glClientActiveVertexStreamATI:@convention(c) (GL.Enum) -> () = load_glClientActiveVertexStreamATI
func load_glClientActiveVertexStreamATI(stream:GL.Enum)
{
    fp_glClientActiveVertexStreamATI = unsafeBitCast(get_fp("glClientActiveVertexStreamATI", support: [ss124]), to: Swift.type(of: fp_glClientActiveVertexStreamATI))
    fp_glClientActiveVertexStreamATI(stream)
}
public
func glClientActiveVertexStreamATI(stream:GL.Enum)
{
    fp_glClientActiveVertexStreamATI(stream)
}
public
func glClientActiveVertexStreamATI(_ stream:GL.Enum)
{
    fp_glClientActiveVertexStreamATI(stream)
}

var fp_glClientAttribDefaultEXT:@convention(c) (GL.Bitfield) -> () = load_glClientAttribDefaultEXT
func load_glClientAttribDefaultEXT(mask:GL.Bitfield)
{
    fp_glClientAttribDefaultEXT = unsafeBitCast(get_fp("glClientAttribDefaultEXT", support: [ss143]), to: Swift.type(of: fp_glClientAttribDefaultEXT))
    fp_glClientAttribDefaultEXT(mask)
}
public
func glClientAttribDefaultEXT(mask:GL.Bitfield)
{
    fp_glClientAttribDefaultEXT(mask)
}
public
func glClientAttribDefaultEXT(_ mask:GL.Bitfield)
{
    fp_glClientAttribDefaultEXT(mask)
}

var fp_glClientWaitSync:@convention(c) (GL.Sync, GL.Bitfield, GL.UInt64) -> GL.Enum = load_glClientWaitSync
func load_glClientWaitSync(sync:GL.Sync, flags:GL.Bitfield, timeout:GL.UInt64) -> GL.Enum
{
    fp_glClientWaitSync = unsafeBitCast(get_fp("glClientWaitSync", support: [ss356, ss366, ss89]), to: Swift.type(of: fp_glClientWaitSync))
    return fp_glClientWaitSync(sync, flags, timeout)
}
public
func glClientWaitSync(sync:GL.Sync, flags:GL.Bitfield, timeout:GL.UInt64) -> GL.Enum
{
    return fp_glClientWaitSync(sync, flags, timeout)
}
public
func glClientWaitSync(_ sync:GL.Sync, _ flags:GL.Bitfield, _ timeout:GL.UInt64) -> GL.Enum
{
    return fp_glClientWaitSync(sync, flags, timeout)
}

var fp_glClientWaitSyncAPPLE:@convention(c) (GL.Sync, GL.Bitfield, GL.UInt64) -> GL.Enum = load_glClientWaitSyncAPPLE
func load_glClientWaitSyncAPPLE(sync:GL.Sync, flags:GL.Bitfield, timeout:GL.UInt64) -> GL.Enum
{
    fp_glClientWaitSyncAPPLE = unsafeBitCast(get_fp("glClientWaitSyncAPPLE", support: [ss23]), to: Swift.type(of: fp_glClientWaitSyncAPPLE))
    return fp_glClientWaitSyncAPPLE(sync, flags, timeout)
}
public
func glClientWaitSyncAPPLE(sync:GL.Sync, flags:GL.Bitfield, timeout:GL.UInt64) -> GL.Enum
{
    return fp_glClientWaitSyncAPPLE(sync, flags, timeout)
}
public
func glClientWaitSyncAPPLE(_ sync:GL.Sync, _ flags:GL.Bitfield, _ timeout:GL.UInt64) -> GL.Enum
{
    return fp_glClientWaitSyncAPPLE(sync, flags, timeout)
}

var fp_glClipControl:@convention(c) (GL.Enum, GL.Enum) -> () = load_glClipControl
func load_glClipControl(origin:GL.Enum, depth:GL.Enum)
{
    fp_glClipControl = unsafeBitCast(get_fp("glClipControl", support: [ss363, ss35]), to: Swift.type(of: fp_glClipControl))
    fp_glClipControl(origin, depth)
}
public
func glClipControl(origin:GL.Enum, depth:GL.Enum)
{
    fp_glClipControl(origin, depth)
}
public
func glClipControl(_ origin:GL.Enum, _ depth:GL.Enum)
{
    fp_glClipControl(origin, depth)
}

var fp_glClipPlane:@convention(c) (GL.Enum, UnsafePointer<GL.Double>?) -> () = load_glClipPlane
func load_glClipPlane(plane:GL.Enum, equation:UnsafePointer<GL.Double>?)
{
    fp_glClipPlane = unsafeBitCast(get_fp("glClipPlane", support: [ss346, ss369]), to: Swift.type(of: fp_glClipPlane))
    fp_glClipPlane(plane, equation)
}
public
func glClipPlane(plane:GL.Enum, equation:UnsafePointer<GL.Double>?)
{
    fp_glClipPlane(plane, equation)
}
public
func glClipPlane(_ plane:GL.Enum, _ equation:UnsafePointer<GL.Double>?)
{
    fp_glClipPlane(plane, equation)
}

var fp_glClipPlanef:@convention(c) (GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glClipPlanef
func load_glClipPlanef(p:GL.Enum, eqn:UnsafePointer<GL.Float>?)
{
    fp_glClipPlanef = unsafeBitCast(get_fp("glClipPlanef", support: [ss364]), to: Swift.type(of: fp_glClipPlanef))
    fp_glClipPlanef(p, eqn)
}
public
func glClipPlanef(p:GL.Enum, eqn:UnsafePointer<GL.Float>?)
{
    fp_glClipPlanef(p, eqn)
}
public
func glClipPlanef(_ p:GL.Enum, _ eqn:UnsafePointer<GL.Float>?)
{
    fp_glClipPlanef(p, eqn)
}

var fp_glClipPlanefIMG:@convention(c) (GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glClipPlanefIMG
func load_glClipPlanefIMG(p:GL.Enum, eqn:UnsafePointer<GL.Float>?)
{
    fp_glClipPlanefIMG = unsafeBitCast(get_fp("glClipPlanefIMG", support: [ss214]), to: Swift.type(of: fp_glClipPlanefIMG))
    fp_glClipPlanefIMG(p, eqn)
}
public
func glClipPlanefIMG(p:GL.Enum, eqn:UnsafePointer<GL.Float>?)
{
    fp_glClipPlanefIMG(p, eqn)
}
public
func glClipPlanefIMG(_ p:GL.Enum, _ eqn:UnsafePointer<GL.Float>?)
{
    fp_glClipPlanefIMG(p, eqn)
}

var fp_glClipPlanefOES:@convention(c) (GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glClipPlanefOES
func load_glClipPlanefOES(plane:GL.Enum, equation:UnsafePointer<GL.Float>?)
{
    fp_glClipPlanefOES = unsafeBitCast(get_fp("glClipPlanefOES", support: [ss302]), to: Swift.type(of: fp_glClipPlanefOES))
    fp_glClipPlanefOES(plane, equation)
}
public
func glClipPlanefOES(plane:GL.Enum, equation:UnsafePointer<GL.Float>?)
{
    fp_glClipPlanefOES(plane, equation)
}
public
func glClipPlanefOES(_ plane:GL.Enum, _ equation:UnsafePointer<GL.Float>?)
{
    fp_glClipPlanefOES(plane, equation)
}

var fp_glClipPlanex:@convention(c) (GL.Enum, UnsafePointer<GL.Fixed>?) -> () = load_glClipPlanex
func load_glClipPlanex(plane:GL.Enum, equation:UnsafePointer<GL.Fixed>?)
{
    fp_glClipPlanex = unsafeBitCast(get_fp("glClipPlanex", support: [ss364]), to: Swift.type(of: fp_glClipPlanex))
    fp_glClipPlanex(plane, equation)
}
public
func glClipPlanex(plane:GL.Enum, equation:UnsafePointer<GL.Fixed>?)
{
    fp_glClipPlanex(plane, equation)
}
public
func glClipPlanex(_ plane:GL.Enum, _ equation:UnsafePointer<GL.Fixed>?)
{
    fp_glClipPlanex(plane, equation)
}

var fp_glClipPlanexIMG:@convention(c) (GL.Enum, UnsafePointer<GL.Fixed>?) -> () = load_glClipPlanexIMG
func load_glClipPlanexIMG(p:GL.Enum, eqn:UnsafePointer<GL.Fixed>?)
{
    fp_glClipPlanexIMG = unsafeBitCast(get_fp("glClipPlanexIMG", support: [ss214]), to: Swift.type(of: fp_glClipPlanexIMG))
    fp_glClipPlanexIMG(p, eqn)
}
public
func glClipPlanexIMG(p:GL.Enum, eqn:UnsafePointer<GL.Fixed>?)
{
    fp_glClipPlanexIMG(p, eqn)
}
public
func glClipPlanexIMG(_ p:GL.Enum, _ eqn:UnsafePointer<GL.Fixed>?)
{
    fp_glClipPlanexIMG(p, eqn)
}

var fp_glClipPlanexOES:@convention(c) (GL.Enum, UnsafePointer<GL.Fixed>?) -> () = load_glClipPlanexOES
func load_glClipPlanexOES(plane:GL.Enum, equation:UnsafePointer<GL.Fixed>?)
{
    fp_glClipPlanexOES = unsafeBitCast(get_fp("glClipPlanexOES", support: [ss292]), to: Swift.type(of: fp_glClipPlanexOES))
    fp_glClipPlanexOES(plane, equation)
}
public
func glClipPlanexOES(plane:GL.Enum, equation:UnsafePointer<GL.Fixed>?)
{
    fp_glClipPlanexOES(plane, equation)
}
public
func glClipPlanexOES(_ plane:GL.Enum, _ equation:UnsafePointer<GL.Fixed>?)
{
    fp_glClipPlanexOES(plane, equation)
}

var fp_glColor3b:@convention(c) (GL.Byte, GL.Byte, GL.Byte) -> () = load_glColor3b
func load_glColor3b(red:GL.Byte, green:GL.Byte, blue:GL.Byte)
{
    fp_glColor3b = unsafeBitCast(get_fp("glColor3b", support: [ss346, ss369]), to: Swift.type(of: fp_glColor3b))
    fp_glColor3b(red, green, blue)
}
public
func glColor3b(red:GL.Byte, green:GL.Byte, blue:GL.Byte)
{
    fp_glColor3b(red, green, blue)
}
public
func glColor3b(_ red:GL.Byte, _ green:GL.Byte, _ blue:GL.Byte)
{
    fp_glColor3b(red, green, blue)
}

var fp_glColor3bv:@convention(c) (UnsafePointer<GL.Byte>?) -> () = load_glColor3bv
func load_glColor3bv(v:UnsafePointer<GL.Byte>?)
{
    fp_glColor3bv = unsafeBitCast(get_fp("glColor3bv", support: [ss346, ss369]), to: Swift.type(of: fp_glColor3bv))
    fp_glColor3bv(v)
}
public
func glColor3bv(v:UnsafePointer<GL.Byte>?)
{
    fp_glColor3bv(v)
}
public
func glColor3bv(_ v:UnsafePointer<GL.Byte>?)
{
    fp_glColor3bv(v)
}

var fp_glColor3d:@convention(c) (GL.Double, GL.Double, GL.Double) -> () = load_glColor3d
func load_glColor3d(red:GL.Double, green:GL.Double, blue:GL.Double)
{
    fp_glColor3d = unsafeBitCast(get_fp("glColor3d", support: [ss346, ss369]), to: Swift.type(of: fp_glColor3d))
    fp_glColor3d(red, green, blue)
}
public
func glColor3d(red:GL.Double, green:GL.Double, blue:GL.Double)
{
    fp_glColor3d(red, green, blue)
}
public
func glColor3d(_ red:GL.Double, _ green:GL.Double, _ blue:GL.Double)
{
    fp_glColor3d(red, green, blue)
}

var fp_glColor3dv:@convention(c) (UnsafePointer<GL.Double>?) -> () = load_glColor3dv
func load_glColor3dv(v:UnsafePointer<GL.Double>?)
{
    fp_glColor3dv = unsafeBitCast(get_fp("glColor3dv", support: [ss346, ss369]), to: Swift.type(of: fp_glColor3dv))
    fp_glColor3dv(v)
}
public
func glColor3dv(v:UnsafePointer<GL.Double>?)
{
    fp_glColor3dv(v)
}
public
func glColor3dv(_ v:UnsafePointer<GL.Double>?)
{
    fp_glColor3dv(v)
}

var fp_glColor3f:@convention(c) (GL.Float, GL.Float, GL.Float) -> () = load_glColor3f
func load_glColor3f(red:GL.Float, green:GL.Float, blue:GL.Float)
{
    fp_glColor3f = unsafeBitCast(get_fp("glColor3f", support: [ss346, ss369]), to: Swift.type(of: fp_glColor3f))
    fp_glColor3f(red, green, blue)
}
public
func glColor3f(red:GL.Float, green:GL.Float, blue:GL.Float)
{
    fp_glColor3f(red, green, blue)
}
public
func glColor3f(_ red:GL.Float, _ green:GL.Float, _ blue:GL.Float)
{
    fp_glColor3f(red, green, blue)
}

var fp_glColor3fVertex3fSUN:@convention(c) (GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float) -> () = load_glColor3fVertex3fSUN
func load_glColor3fVertex3fSUN(r:GL.Float, g:GL.Float, b:GL.Float, x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glColor3fVertex3fSUN = unsafeBitCast(get_fp("glColor3fVertex3fSUN", support: [ss344]), to: Swift.type(of: fp_glColor3fVertex3fSUN))
    fp_glColor3fVertex3fSUN(r, g, b, x, y, z)
}
public
func glColor3fVertex3fSUN(r:GL.Float, g:GL.Float, b:GL.Float, x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glColor3fVertex3fSUN(r, g, b, x, y, z)
}
public
func glColor3fVertex3fSUN(_ r:GL.Float, _ g:GL.Float, _ b:GL.Float, _ x:GL.Float, _ y:GL.Float, _ z:GL.Float)
{
    fp_glColor3fVertex3fSUN(r, g, b, x, y, z)
}

var fp_glColor3fVertex3fvSUN:@convention(c) (UnsafePointer<GL.Float>?, UnsafePointer<GL.Float>?) -> () = load_glColor3fVertex3fvSUN
func load_glColor3fVertex3fvSUN(c:UnsafePointer<GL.Float>?, v:UnsafePointer<GL.Float>?)
{
    fp_glColor3fVertex3fvSUN = unsafeBitCast(get_fp("glColor3fVertex3fvSUN", support: [ss344]), to: Swift.type(of: fp_glColor3fVertex3fvSUN))
    fp_glColor3fVertex3fvSUN(c, v)
}
public
func glColor3fVertex3fvSUN(c:UnsafePointer<GL.Float>?, v:UnsafePointer<GL.Float>?)
{
    fp_glColor3fVertex3fvSUN(c, v)
}
public
func glColor3fVertex3fvSUN(_ c:UnsafePointer<GL.Float>?, _ v:UnsafePointer<GL.Float>?)
{
    fp_glColor3fVertex3fvSUN(c, v)
}

var fp_glColor3fv:@convention(c) (UnsafePointer<GL.Float>?) -> () = load_glColor3fv
func load_glColor3fv(v:UnsafePointer<GL.Float>?)
{
    fp_glColor3fv = unsafeBitCast(get_fp("glColor3fv", support: [ss346, ss369]), to: Swift.type(of: fp_glColor3fv))
    fp_glColor3fv(v)
}
public
func glColor3fv(v:UnsafePointer<GL.Float>?)
{
    fp_glColor3fv(v)
}
public
func glColor3fv(_ v:UnsafePointer<GL.Float>?)
{
    fp_glColor3fv(v)
}

var fp_glColor3hNV:@convention(c) (GL.HalfNV, GL.HalfNV, GL.HalfNV) -> () = load_glColor3hNV
func load_glColor3hNV(red:GL.HalfNV, green:GL.HalfNV, blue:GL.HalfNV)
{
    fp_glColor3hNV = unsafeBitCast(get_fp("glColor3hNV", support: [ss253]), to: Swift.type(of: fp_glColor3hNV))
    fp_glColor3hNV(red, green, blue)
}
public
func glColor3hNV(red:GL.HalfNV, green:GL.HalfNV, blue:GL.HalfNV)
{
    fp_glColor3hNV(red, green, blue)
}
public
func glColor3hNV(_ red:GL.HalfNV, _ green:GL.HalfNV, _ blue:GL.HalfNV)
{
    fp_glColor3hNV(red, green, blue)
}

var fp_glColor3hvNV:@convention(c) (UnsafePointer<GL.HalfNV>?) -> () = load_glColor3hvNV
func load_glColor3hvNV(v:UnsafePointer<GL.HalfNV>?)
{
    fp_glColor3hvNV = unsafeBitCast(get_fp("glColor3hvNV", support: [ss253]), to: Swift.type(of: fp_glColor3hvNV))
    fp_glColor3hvNV(v)
}
public
func glColor3hvNV(v:UnsafePointer<GL.HalfNV>?)
{
    fp_glColor3hvNV(v)
}
public
func glColor3hvNV(_ v:UnsafePointer<GL.HalfNV>?)
{
    fp_glColor3hvNV(v)
}

var fp_glColor3i:@convention(c) (GL.Int, GL.Int, GL.Int) -> () = load_glColor3i
func load_glColor3i(red:GL.Int, green:GL.Int, blue:GL.Int)
{
    fp_glColor3i = unsafeBitCast(get_fp("glColor3i", support: [ss346, ss369]), to: Swift.type(of: fp_glColor3i))
    fp_glColor3i(red, green, blue)
}
public
func glColor3i(red:GL.Int, green:GL.Int, blue:GL.Int)
{
    fp_glColor3i(red, green, blue)
}
public
func glColor3i(_ red:GL.Int, _ green:GL.Int, _ blue:GL.Int)
{
    fp_glColor3i(red, green, blue)
}

var fp_glColor3iv:@convention(c) (UnsafePointer<GL.Int>?) -> () = load_glColor3iv
func load_glColor3iv(v:UnsafePointer<GL.Int>?)
{
    fp_glColor3iv = unsafeBitCast(get_fp("glColor3iv", support: [ss346, ss369]), to: Swift.type(of: fp_glColor3iv))
    fp_glColor3iv(v)
}
public
func glColor3iv(v:UnsafePointer<GL.Int>?)
{
    fp_glColor3iv(v)
}
public
func glColor3iv(_ v:UnsafePointer<GL.Int>?)
{
    fp_glColor3iv(v)
}

var fp_glColor3s:@convention(c) (GL.Short, GL.Short, GL.Short) -> () = load_glColor3s
func load_glColor3s(red:GL.Short, green:GL.Short, blue:GL.Short)
{
    fp_glColor3s = unsafeBitCast(get_fp("glColor3s", support: [ss346, ss369]), to: Swift.type(of: fp_glColor3s))
    fp_glColor3s(red, green, blue)
}
public
func glColor3s(red:GL.Short, green:GL.Short, blue:GL.Short)
{
    fp_glColor3s(red, green, blue)
}
public
func glColor3s(_ red:GL.Short, _ green:GL.Short, _ blue:GL.Short)
{
    fp_glColor3s(red, green, blue)
}

var fp_glColor3sv:@convention(c) (UnsafePointer<GL.Short>?) -> () = load_glColor3sv
func load_glColor3sv(v:UnsafePointer<GL.Short>?)
{
    fp_glColor3sv = unsafeBitCast(get_fp("glColor3sv", support: [ss346, ss369]), to: Swift.type(of: fp_glColor3sv))
    fp_glColor3sv(v)
}
public
func glColor3sv(v:UnsafePointer<GL.Short>?)
{
    fp_glColor3sv(v)
}
public
func glColor3sv(_ v:UnsafePointer<GL.Short>?)
{
    fp_glColor3sv(v)
}

var fp_glColor3ub:@convention(c) (GL.UByte, GL.UByte, GL.UByte) -> () = load_glColor3ub
func load_glColor3ub(red:GL.UByte, green:GL.UByte, blue:GL.UByte)
{
    fp_glColor3ub = unsafeBitCast(get_fp("glColor3ub", support: [ss346, ss369]), to: Swift.type(of: fp_glColor3ub))
    fp_glColor3ub(red, green, blue)
}
public
func glColor3ub(red:GL.UByte, green:GL.UByte, blue:GL.UByte)
{
    fp_glColor3ub(red, green, blue)
}
public
func glColor3ub(_ red:GL.UByte, _ green:GL.UByte, _ blue:GL.UByte)
{
    fp_glColor3ub(red, green, blue)
}

var fp_glColor3ubv:@convention(c) (UnsafePointer<GL.UByte>?) -> () = load_glColor3ubv
func load_glColor3ubv(v:UnsafePointer<GL.UByte>?)
{
    fp_glColor3ubv = unsafeBitCast(get_fp("glColor3ubv", support: [ss346, ss369]), to: Swift.type(of: fp_glColor3ubv))
    fp_glColor3ubv(v)
}
public
func glColor3ubv(v:UnsafePointer<GL.UByte>?)
{
    fp_glColor3ubv(v)
}
public
func glColor3ubv(_ v:UnsafePointer<GL.UByte>?)
{
    fp_glColor3ubv(v)
}

var fp_glColor3ui:@convention(c) (GL.UInt, GL.UInt, GL.UInt) -> () = load_glColor3ui
func load_glColor3ui(red:GL.UInt, green:GL.UInt, blue:GL.UInt)
{
    fp_glColor3ui = unsafeBitCast(get_fp("glColor3ui", support: [ss346, ss369]), to: Swift.type(of: fp_glColor3ui))
    fp_glColor3ui(red, green, blue)
}
public
func glColor3ui(red:GL.UInt, green:GL.UInt, blue:GL.UInt)
{
    fp_glColor3ui(red, green, blue)
}
public
func glColor3ui(_ red:GL.UInt, _ green:GL.UInt, _ blue:GL.UInt)
{
    fp_glColor3ui(red, green, blue)
}

var fp_glColor3uiv:@convention(c) (UnsafePointer<GL.UInt>?) -> () = load_glColor3uiv
func load_glColor3uiv(v:UnsafePointer<GL.UInt>?)
{
    fp_glColor3uiv = unsafeBitCast(get_fp("glColor3uiv", support: [ss346, ss369]), to: Swift.type(of: fp_glColor3uiv))
    fp_glColor3uiv(v)
}
public
func glColor3uiv(v:UnsafePointer<GL.UInt>?)
{
    fp_glColor3uiv(v)
}
public
func glColor3uiv(_ v:UnsafePointer<GL.UInt>?)
{
    fp_glColor3uiv(v)
}

var fp_glColor3us:@convention(c) (GL.UShort, GL.UShort, GL.UShort) -> () = load_glColor3us
func load_glColor3us(red:GL.UShort, green:GL.UShort, blue:GL.UShort)
{
    fp_glColor3us = unsafeBitCast(get_fp("glColor3us", support: [ss346, ss369]), to: Swift.type(of: fp_glColor3us))
    fp_glColor3us(red, green, blue)
}
public
func glColor3us(red:GL.UShort, green:GL.UShort, blue:GL.UShort)
{
    fp_glColor3us(red, green, blue)
}
public
func glColor3us(_ red:GL.UShort, _ green:GL.UShort, _ blue:GL.UShort)
{
    fp_glColor3us(red, green, blue)
}

var fp_glColor3usv:@convention(c) (UnsafePointer<GL.UShort>?) -> () = load_glColor3usv
func load_glColor3usv(v:UnsafePointer<GL.UShort>?)
{
    fp_glColor3usv = unsafeBitCast(get_fp("glColor3usv", support: [ss346, ss369]), to: Swift.type(of: fp_glColor3usv))
    fp_glColor3usv(v)
}
public
func glColor3usv(v:UnsafePointer<GL.UShort>?)
{
    fp_glColor3usv(v)
}
public
func glColor3usv(_ v:UnsafePointer<GL.UShort>?)
{
    fp_glColor3usv(v)
}

var fp_glColor3xOES:@convention(c) (GL.Fixed, GL.Fixed, GL.Fixed) -> () = load_glColor3xOES
func load_glColor3xOES(red:GL.Fixed, green:GL.Fixed, blue:GL.Fixed)
{
    fp_glColor3xOES = unsafeBitCast(get_fp("glColor3xOES", support: [ss292]), to: Swift.type(of: fp_glColor3xOES))
    fp_glColor3xOES(red, green, blue)
}
public
func glColor3xOES(red:GL.Fixed, green:GL.Fixed, blue:GL.Fixed)
{
    fp_glColor3xOES(red, green, blue)
}
public
func glColor3xOES(_ red:GL.Fixed, _ green:GL.Fixed, _ blue:GL.Fixed)
{
    fp_glColor3xOES(red, green, blue)
}

var fp_glColor3xvOES:@convention(c) (UnsafePointer<GL.Fixed>?) -> () = load_glColor3xvOES
func load_glColor3xvOES(components:UnsafePointer<GL.Fixed>?)
{
    fp_glColor3xvOES = unsafeBitCast(get_fp("glColor3xvOES", support: [ss292]), to: Swift.type(of: fp_glColor3xvOES))
    fp_glColor3xvOES(components)
}
public
func glColor3xvOES(components:UnsafePointer<GL.Fixed>?)
{
    fp_glColor3xvOES(components)
}
public
func glColor3xvOES(_ components:UnsafePointer<GL.Fixed>?)
{
    fp_glColor3xvOES(components)
}

var fp_glColor4b:@convention(c) (GL.Byte, GL.Byte, GL.Byte, GL.Byte) -> () = load_glColor4b
func load_glColor4b(red:GL.Byte, green:GL.Byte, blue:GL.Byte, alpha:GL.Byte)
{
    fp_glColor4b = unsafeBitCast(get_fp("glColor4b", support: [ss346, ss369]), to: Swift.type(of: fp_glColor4b))
    fp_glColor4b(red, green, blue, alpha)
}
public
func glColor4b(red:GL.Byte, green:GL.Byte, blue:GL.Byte, alpha:GL.Byte)
{
    fp_glColor4b(red, green, blue, alpha)
}
public
func glColor4b(_ red:GL.Byte, _ green:GL.Byte, _ blue:GL.Byte, _ alpha:GL.Byte)
{
    fp_glColor4b(red, green, blue, alpha)
}

var fp_glColor4bv:@convention(c) (UnsafePointer<GL.Byte>?) -> () = load_glColor4bv
func load_glColor4bv(v:UnsafePointer<GL.Byte>?)
{
    fp_glColor4bv = unsafeBitCast(get_fp("glColor4bv", support: [ss346, ss369]), to: Swift.type(of: fp_glColor4bv))
    fp_glColor4bv(v)
}
public
func glColor4bv(v:UnsafePointer<GL.Byte>?)
{
    fp_glColor4bv(v)
}
public
func glColor4bv(_ v:UnsafePointer<GL.Byte>?)
{
    fp_glColor4bv(v)
}

var fp_glColor4d:@convention(c) (GL.Double, GL.Double, GL.Double, GL.Double) -> () = load_glColor4d
func load_glColor4d(red:GL.Double, green:GL.Double, blue:GL.Double, alpha:GL.Double)
{
    fp_glColor4d = unsafeBitCast(get_fp("glColor4d", support: [ss346, ss369]), to: Swift.type(of: fp_glColor4d))
    fp_glColor4d(red, green, blue, alpha)
}
public
func glColor4d(red:GL.Double, green:GL.Double, blue:GL.Double, alpha:GL.Double)
{
    fp_glColor4d(red, green, blue, alpha)
}
public
func glColor4d(_ red:GL.Double, _ green:GL.Double, _ blue:GL.Double, _ alpha:GL.Double)
{
    fp_glColor4d(red, green, blue, alpha)
}

var fp_glColor4dv:@convention(c) (UnsafePointer<GL.Double>?) -> () = load_glColor4dv
func load_glColor4dv(v:UnsafePointer<GL.Double>?)
{
    fp_glColor4dv = unsafeBitCast(get_fp("glColor4dv", support: [ss346, ss369]), to: Swift.type(of: fp_glColor4dv))
    fp_glColor4dv(v)
}
public
func glColor4dv(v:UnsafePointer<GL.Double>?)
{
    fp_glColor4dv(v)
}
public
func glColor4dv(_ v:UnsafePointer<GL.Double>?)
{
    fp_glColor4dv(v)
}

var fp_glColor4f:@convention(c) (GL.Float, GL.Float, GL.Float, GL.Float) -> () = load_glColor4f
func load_glColor4f(red:GL.Float, green:GL.Float, blue:GL.Float, alpha:GL.Float)
{
    fp_glColor4f = unsafeBitCast(get_fp("glColor4f", support: [ss346, ss369, ss364]), to: Swift.type(of: fp_glColor4f))
    fp_glColor4f(red, green, blue, alpha)
}
public
func glColor4f(red:GL.Float, green:GL.Float, blue:GL.Float, alpha:GL.Float)
{
    fp_glColor4f(red, green, blue, alpha)
}
public
func glColor4f(_ red:GL.Float, _ green:GL.Float, _ blue:GL.Float, _ alpha:GL.Float)
{
    fp_glColor4f(red, green, blue, alpha)
}

var fp_glColor4fNormal3fVertex3fSUN:@convention(c) (GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float) -> () = load_glColor4fNormal3fVertex3fSUN
func load_glColor4fNormal3fVertex3fSUN(r:GL.Float, g:GL.Float, b:GL.Float, a:GL.Float, nx:GL.Float, ny:GL.Float, nz:GL.Float, x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glColor4fNormal3fVertex3fSUN = unsafeBitCast(get_fp("glColor4fNormal3fVertex3fSUN", support: [ss344]), to: Swift.type(of: fp_glColor4fNormal3fVertex3fSUN))
    fp_glColor4fNormal3fVertex3fSUN(r, g, b, a, nx, ny, nz, x, y, z)
}
public
func glColor4fNormal3fVertex3fSUN(r:GL.Float, g:GL.Float, b:GL.Float, a:GL.Float, nx:GL.Float, ny:GL.Float, nz:GL.Float, x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glColor4fNormal3fVertex3fSUN(r, g, b, a, nx, ny, nz, x, y, z)
}
public
func glColor4fNormal3fVertex3fSUN(_ r:GL.Float, _ g:GL.Float, _ b:GL.Float, _ a:GL.Float, _ nx:GL.Float, _ ny:GL.Float, _ nz:GL.Float, _ x:GL.Float, _ y:GL.Float, _ z:GL.Float)
{
    fp_glColor4fNormal3fVertex3fSUN(r, g, b, a, nx, ny, nz, x, y, z)
}

var fp_glColor4fNormal3fVertex3fvSUN:@convention(c) (UnsafePointer<GL.Float>?, UnsafePointer<GL.Float>?, UnsafePointer<GL.Float>?) -> () = load_glColor4fNormal3fVertex3fvSUN
func load_glColor4fNormal3fVertex3fvSUN(c:UnsafePointer<GL.Float>?, n:UnsafePointer<GL.Float>?, v:UnsafePointer<GL.Float>?)
{
    fp_glColor4fNormal3fVertex3fvSUN = unsafeBitCast(get_fp("glColor4fNormal3fVertex3fvSUN", support: [ss344]), to: Swift.type(of: fp_glColor4fNormal3fVertex3fvSUN))
    fp_glColor4fNormal3fVertex3fvSUN(c, n, v)
}
public
func glColor4fNormal3fVertex3fvSUN(c:UnsafePointer<GL.Float>?, n:UnsafePointer<GL.Float>?, v:UnsafePointer<GL.Float>?)
{
    fp_glColor4fNormal3fVertex3fvSUN(c, n, v)
}
public
func glColor4fNormal3fVertex3fvSUN(_ c:UnsafePointer<GL.Float>?, _ n:UnsafePointer<GL.Float>?, _ v:UnsafePointer<GL.Float>?)
{
    fp_glColor4fNormal3fVertex3fvSUN(c, n, v)
}

var fp_glColor4fv:@convention(c) (UnsafePointer<GL.Float>?) -> () = load_glColor4fv
func load_glColor4fv(v:UnsafePointer<GL.Float>?)
{
    fp_glColor4fv = unsafeBitCast(get_fp("glColor4fv", support: [ss346, ss369]), to: Swift.type(of: fp_glColor4fv))
    fp_glColor4fv(v)
}
public
func glColor4fv(v:UnsafePointer<GL.Float>?)
{
    fp_glColor4fv(v)
}
public
func glColor4fv(_ v:UnsafePointer<GL.Float>?)
{
    fp_glColor4fv(v)
}

var fp_glColor4hNV:@convention(c) (GL.HalfNV, GL.HalfNV, GL.HalfNV, GL.HalfNV) -> () = load_glColor4hNV
func load_glColor4hNV(red:GL.HalfNV, green:GL.HalfNV, blue:GL.HalfNV, alpha:GL.HalfNV)
{
    fp_glColor4hNV = unsafeBitCast(get_fp("glColor4hNV", support: [ss253]), to: Swift.type(of: fp_glColor4hNV))
    fp_glColor4hNV(red, green, blue, alpha)
}
public
func glColor4hNV(red:GL.HalfNV, green:GL.HalfNV, blue:GL.HalfNV, alpha:GL.HalfNV)
{
    fp_glColor4hNV(red, green, blue, alpha)
}
public
func glColor4hNV(_ red:GL.HalfNV, _ green:GL.HalfNV, _ blue:GL.HalfNV, _ alpha:GL.HalfNV)
{
    fp_glColor4hNV(red, green, blue, alpha)
}

var fp_glColor4hvNV:@convention(c) (UnsafePointer<GL.HalfNV>?) -> () = load_glColor4hvNV
func load_glColor4hvNV(v:UnsafePointer<GL.HalfNV>?)
{
    fp_glColor4hvNV = unsafeBitCast(get_fp("glColor4hvNV", support: [ss253]), to: Swift.type(of: fp_glColor4hvNV))
    fp_glColor4hvNV(v)
}
public
func glColor4hvNV(v:UnsafePointer<GL.HalfNV>?)
{
    fp_glColor4hvNV(v)
}
public
func glColor4hvNV(_ v:UnsafePointer<GL.HalfNV>?)
{
    fp_glColor4hvNV(v)
}

var fp_glColor4i:@convention(c) (GL.Int, GL.Int, GL.Int, GL.Int) -> () = load_glColor4i
func load_glColor4i(red:GL.Int, green:GL.Int, blue:GL.Int, alpha:GL.Int)
{
    fp_glColor4i = unsafeBitCast(get_fp("glColor4i", support: [ss346, ss369]), to: Swift.type(of: fp_glColor4i))
    fp_glColor4i(red, green, blue, alpha)
}
public
func glColor4i(red:GL.Int, green:GL.Int, blue:GL.Int, alpha:GL.Int)
{
    fp_glColor4i(red, green, blue, alpha)
}
public
func glColor4i(_ red:GL.Int, _ green:GL.Int, _ blue:GL.Int, _ alpha:GL.Int)
{
    fp_glColor4i(red, green, blue, alpha)
}

var fp_glColor4iv:@convention(c) (UnsafePointer<GL.Int>?) -> () = load_glColor4iv
func load_glColor4iv(v:UnsafePointer<GL.Int>?)
{
    fp_glColor4iv = unsafeBitCast(get_fp("glColor4iv", support: [ss346, ss369]), to: Swift.type(of: fp_glColor4iv))
    fp_glColor4iv(v)
}
public
func glColor4iv(v:UnsafePointer<GL.Int>?)
{
    fp_glColor4iv(v)
}
public
func glColor4iv(_ v:UnsafePointer<GL.Int>?)
{
    fp_glColor4iv(v)
}

var fp_glColor4s:@convention(c) (GL.Short, GL.Short, GL.Short, GL.Short) -> () = load_glColor4s
func load_glColor4s(red:GL.Short, green:GL.Short, blue:GL.Short, alpha:GL.Short)
{
    fp_glColor4s = unsafeBitCast(get_fp("glColor4s", support: [ss346, ss369]), to: Swift.type(of: fp_glColor4s))
    fp_glColor4s(red, green, blue, alpha)
}
public
func glColor4s(red:GL.Short, green:GL.Short, blue:GL.Short, alpha:GL.Short)
{
    fp_glColor4s(red, green, blue, alpha)
}
public
func glColor4s(_ red:GL.Short, _ green:GL.Short, _ blue:GL.Short, _ alpha:GL.Short)
{
    fp_glColor4s(red, green, blue, alpha)
}

var fp_glColor4sv:@convention(c) (UnsafePointer<GL.Short>?) -> () = load_glColor4sv
func load_glColor4sv(v:UnsafePointer<GL.Short>?)
{
    fp_glColor4sv = unsafeBitCast(get_fp("glColor4sv", support: [ss346, ss369]), to: Swift.type(of: fp_glColor4sv))
    fp_glColor4sv(v)
}
public
func glColor4sv(v:UnsafePointer<GL.Short>?)
{
    fp_glColor4sv(v)
}
public
func glColor4sv(_ v:UnsafePointer<GL.Short>?)
{
    fp_glColor4sv(v)
}

var fp_glColor4ub:@convention(c) (GL.UByte, GL.UByte, GL.UByte, GL.UByte) -> () = load_glColor4ub
func load_glColor4ub(red:GL.UByte, green:GL.UByte, blue:GL.UByte, alpha:GL.UByte)
{
    fp_glColor4ub = unsafeBitCast(get_fp("glColor4ub", support: [ss346, ss369, ss364]), to: Swift.type(of: fp_glColor4ub))
    fp_glColor4ub(red, green, blue, alpha)
}
public
func glColor4ub(red:GL.UByte, green:GL.UByte, blue:GL.UByte, alpha:GL.UByte)
{
    fp_glColor4ub(red, green, blue, alpha)
}
public
func glColor4ub(_ red:GL.UByte, _ green:GL.UByte, _ blue:GL.UByte, _ alpha:GL.UByte)
{
    fp_glColor4ub(red, green, blue, alpha)
}

var fp_glColor4ubVertex2fSUN:@convention(c) (GL.UByte, GL.UByte, GL.UByte, GL.UByte, GL.Float, GL.Float) -> () = load_glColor4ubVertex2fSUN
func load_glColor4ubVertex2fSUN(r:GL.UByte, g:GL.UByte, b:GL.UByte, a:GL.UByte, x:GL.Float, y:GL.Float)
{
    fp_glColor4ubVertex2fSUN = unsafeBitCast(get_fp("glColor4ubVertex2fSUN", support: [ss344]), to: Swift.type(of: fp_glColor4ubVertex2fSUN))
    fp_glColor4ubVertex2fSUN(r, g, b, a, x, y)
}
public
func glColor4ubVertex2fSUN(r:GL.UByte, g:GL.UByte, b:GL.UByte, a:GL.UByte, x:GL.Float, y:GL.Float)
{
    fp_glColor4ubVertex2fSUN(r, g, b, a, x, y)
}
public
func glColor4ubVertex2fSUN(_ r:GL.UByte, _ g:GL.UByte, _ b:GL.UByte, _ a:GL.UByte, _ x:GL.Float, _ y:GL.Float)
{
    fp_glColor4ubVertex2fSUN(r, g, b, a, x, y)
}

var fp_glColor4ubVertex2fvSUN:@convention(c) (UnsafePointer<GL.UByte>?, UnsafePointer<GL.Float>?) -> () = load_glColor4ubVertex2fvSUN
func load_glColor4ubVertex2fvSUN(c:UnsafePointer<GL.UByte>?, v:UnsafePointer<GL.Float>?)
{
    fp_glColor4ubVertex2fvSUN = unsafeBitCast(get_fp("glColor4ubVertex2fvSUN", support: [ss344]), to: Swift.type(of: fp_glColor4ubVertex2fvSUN))
    fp_glColor4ubVertex2fvSUN(c, v)
}
public
func glColor4ubVertex2fvSUN(c:UnsafePointer<GL.UByte>?, v:UnsafePointer<GL.Float>?)
{
    fp_glColor4ubVertex2fvSUN(c, v)
}
public
func glColor4ubVertex2fvSUN(_ c:UnsafePointer<GL.UByte>?, _ v:UnsafePointer<GL.Float>?)
{
    fp_glColor4ubVertex2fvSUN(c, v)
}

var fp_glColor4ubVertex3fSUN:@convention(c) (GL.UByte, GL.UByte, GL.UByte, GL.UByte, GL.Float, GL.Float, GL.Float) -> () = load_glColor4ubVertex3fSUN
func load_glColor4ubVertex3fSUN(r:GL.UByte, g:GL.UByte, b:GL.UByte, a:GL.UByte, x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glColor4ubVertex3fSUN = unsafeBitCast(get_fp("glColor4ubVertex3fSUN", support: [ss344]), to: Swift.type(of: fp_glColor4ubVertex3fSUN))
    fp_glColor4ubVertex3fSUN(r, g, b, a, x, y, z)
}
public
func glColor4ubVertex3fSUN(r:GL.UByte, g:GL.UByte, b:GL.UByte, a:GL.UByte, x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glColor4ubVertex3fSUN(r, g, b, a, x, y, z)
}
public
func glColor4ubVertex3fSUN(_ r:GL.UByte, _ g:GL.UByte, _ b:GL.UByte, _ a:GL.UByte, _ x:GL.Float, _ y:GL.Float, _ z:GL.Float)
{
    fp_glColor4ubVertex3fSUN(r, g, b, a, x, y, z)
}

var fp_glColor4ubVertex3fvSUN:@convention(c) (UnsafePointer<GL.UByte>?, UnsafePointer<GL.Float>?) -> () = load_glColor4ubVertex3fvSUN
func load_glColor4ubVertex3fvSUN(c:UnsafePointer<GL.UByte>?, v:UnsafePointer<GL.Float>?)
{
    fp_glColor4ubVertex3fvSUN = unsafeBitCast(get_fp("glColor4ubVertex3fvSUN", support: [ss344]), to: Swift.type(of: fp_glColor4ubVertex3fvSUN))
    fp_glColor4ubVertex3fvSUN(c, v)
}
public
func glColor4ubVertex3fvSUN(c:UnsafePointer<GL.UByte>?, v:UnsafePointer<GL.Float>?)
{
    fp_glColor4ubVertex3fvSUN(c, v)
}
public
func glColor4ubVertex3fvSUN(_ c:UnsafePointer<GL.UByte>?, _ v:UnsafePointer<GL.Float>?)
{
    fp_glColor4ubVertex3fvSUN(c, v)
}

var fp_glColor4ubv:@convention(c) (UnsafePointer<GL.UByte>?) -> () = load_glColor4ubv
func load_glColor4ubv(v:UnsafePointer<GL.UByte>?)
{
    fp_glColor4ubv = unsafeBitCast(get_fp("glColor4ubv", support: [ss346, ss369]), to: Swift.type(of: fp_glColor4ubv))
    fp_glColor4ubv(v)
}
public
func glColor4ubv(v:UnsafePointer<GL.UByte>?)
{
    fp_glColor4ubv(v)
}
public
func glColor4ubv(_ v:UnsafePointer<GL.UByte>?)
{
    fp_glColor4ubv(v)
}

var fp_glColor4ui:@convention(c) (GL.UInt, GL.UInt, GL.UInt, GL.UInt) -> () = load_glColor4ui
func load_glColor4ui(red:GL.UInt, green:GL.UInt, blue:GL.UInt, alpha:GL.UInt)
{
    fp_glColor4ui = unsafeBitCast(get_fp("glColor4ui", support: [ss346, ss369]), to: Swift.type(of: fp_glColor4ui))
    fp_glColor4ui(red, green, blue, alpha)
}
public
func glColor4ui(red:GL.UInt, green:GL.UInt, blue:GL.UInt, alpha:GL.UInt)
{
    fp_glColor4ui(red, green, blue, alpha)
}
public
func glColor4ui(_ red:GL.UInt, _ green:GL.UInt, _ blue:GL.UInt, _ alpha:GL.UInt)
{
    fp_glColor4ui(red, green, blue, alpha)
}

var fp_glColor4uiv:@convention(c) (UnsafePointer<GL.UInt>?) -> () = load_glColor4uiv
func load_glColor4uiv(v:UnsafePointer<GL.UInt>?)
{
    fp_glColor4uiv = unsafeBitCast(get_fp("glColor4uiv", support: [ss346, ss369]), to: Swift.type(of: fp_glColor4uiv))
    fp_glColor4uiv(v)
}
public
func glColor4uiv(v:UnsafePointer<GL.UInt>?)
{
    fp_glColor4uiv(v)
}
public
func glColor4uiv(_ v:UnsafePointer<GL.UInt>?)
{
    fp_glColor4uiv(v)
}

var fp_glColor4us:@convention(c) (GL.UShort, GL.UShort, GL.UShort, GL.UShort) -> () = load_glColor4us
func load_glColor4us(red:GL.UShort, green:GL.UShort, blue:GL.UShort, alpha:GL.UShort)
{
    fp_glColor4us = unsafeBitCast(get_fp("glColor4us", support: [ss346, ss369]), to: Swift.type(of: fp_glColor4us))
    fp_glColor4us(red, green, blue, alpha)
}
public
func glColor4us(red:GL.UShort, green:GL.UShort, blue:GL.UShort, alpha:GL.UShort)
{
    fp_glColor4us(red, green, blue, alpha)
}
public
func glColor4us(_ red:GL.UShort, _ green:GL.UShort, _ blue:GL.UShort, _ alpha:GL.UShort)
{
    fp_glColor4us(red, green, blue, alpha)
}

var fp_glColor4usv:@convention(c) (UnsafePointer<GL.UShort>?) -> () = load_glColor4usv
func load_glColor4usv(v:UnsafePointer<GL.UShort>?)
{
    fp_glColor4usv = unsafeBitCast(get_fp("glColor4usv", support: [ss346, ss369]), to: Swift.type(of: fp_glColor4usv))
    fp_glColor4usv(v)
}
public
func glColor4usv(v:UnsafePointer<GL.UShort>?)
{
    fp_glColor4usv(v)
}
public
func glColor4usv(_ v:UnsafePointer<GL.UShort>?)
{
    fp_glColor4usv(v)
}

var fp_glColor4x:@convention(c) (GL.Fixed, GL.Fixed, GL.Fixed, GL.Fixed) -> () = load_glColor4x
func load_glColor4x(red:GL.Fixed, green:GL.Fixed, blue:GL.Fixed, alpha:GL.Fixed)
{
    fp_glColor4x = unsafeBitCast(get_fp("glColor4x", support: [ss364]), to: Swift.type(of: fp_glColor4x))
    fp_glColor4x(red, green, blue, alpha)
}
public
func glColor4x(red:GL.Fixed, green:GL.Fixed, blue:GL.Fixed, alpha:GL.Fixed)
{
    fp_glColor4x(red, green, blue, alpha)
}
public
func glColor4x(_ red:GL.Fixed, _ green:GL.Fixed, _ blue:GL.Fixed, _ alpha:GL.Fixed)
{
    fp_glColor4x(red, green, blue, alpha)
}

var fp_glColor4xOES:@convention(c) (GL.Fixed, GL.Fixed, GL.Fixed, GL.Fixed) -> () = load_glColor4xOES
func load_glColor4xOES(red:GL.Fixed, green:GL.Fixed, blue:GL.Fixed, alpha:GL.Fixed)
{
    fp_glColor4xOES = unsafeBitCast(get_fp("glColor4xOES", support: [ss292]), to: Swift.type(of: fp_glColor4xOES))
    fp_glColor4xOES(red, green, blue, alpha)
}
public
func glColor4xOES(red:GL.Fixed, green:GL.Fixed, blue:GL.Fixed, alpha:GL.Fixed)
{
    fp_glColor4xOES(red, green, blue, alpha)
}
public
func glColor4xOES(_ red:GL.Fixed, _ green:GL.Fixed, _ blue:GL.Fixed, _ alpha:GL.Fixed)
{
    fp_glColor4xOES(red, green, blue, alpha)
}

var fp_glColor4xvOES:@convention(c) (UnsafePointer<GL.Fixed>?) -> () = load_glColor4xvOES
func load_glColor4xvOES(components:UnsafePointer<GL.Fixed>?)
{
    fp_glColor4xvOES = unsafeBitCast(get_fp("glColor4xvOES", support: [ss292]), to: Swift.type(of: fp_glColor4xvOES))
    fp_glColor4xvOES(components)
}
public
func glColor4xvOES(components:UnsafePointer<GL.Fixed>?)
{
    fp_glColor4xvOES(components)
}
public
func glColor4xvOES(_ components:UnsafePointer<GL.Fixed>?)
{
    fp_glColor4xvOES(components)
}

var fp_glColorFormatNV:@convention(c) (GL.Int, GL.Enum, GL.Size) -> () = load_glColorFormatNV
func load_glColorFormatNV(size:GL.Int, type:GL.Enum, stride:GL.Size)
{
    fp_glColorFormatNV = unsafeBitCast(get_fp("glColorFormatNV", support: [ss277]), to: Swift.type(of: fp_glColorFormatNV))
    fp_glColorFormatNV(size, type, stride)
}
public
func glColorFormatNV(size:GL.Int, type:GL.Enum, stride:GL.Size)
{
    fp_glColorFormatNV(size, type, stride)
}
public
func glColorFormatNV(_ size:GL.Int, _ type:GL.Enum, _ stride:GL.Size)
{
    fp_glColorFormatNV(size, type, stride)
}

var fp_glColorFragmentOp1ATI:@convention(c) (GL.Enum, GL.UInt, GL.UInt, GL.UInt, GL.UInt, GL.UInt, GL.UInt) -> () = load_glColorFragmentOp1ATI
func load_glColorFragmentOp1ATI(op:GL.Enum, dst:GL.UInt, dstMask:GL.UInt, dstMod:GL.UInt, arg1:GL.UInt, arg1Rep:GL.UInt, arg1Mod:GL.UInt)
{
    fp_glColorFragmentOp1ATI = unsafeBitCast(get_fp("glColorFragmentOp1ATI", support: [ss118]), to: Swift.type(of: fp_glColorFragmentOp1ATI))
    fp_glColorFragmentOp1ATI(op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod)
}
public
func glColorFragmentOp1ATI(op:GL.Enum, dst:GL.UInt, dstMask:GL.UInt, dstMod:GL.UInt, arg1:GL.UInt, arg1Rep:GL.UInt, arg1Mod:GL.UInt)
{
    fp_glColorFragmentOp1ATI(op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod)
}
public
func glColorFragmentOp1ATI(_ op:GL.Enum, _ dst:GL.UInt, _ dstMask:GL.UInt, _ dstMod:GL.UInt, _ arg1:GL.UInt, _ arg1Rep:GL.UInt, _ arg1Mod:GL.UInt)
{
    fp_glColorFragmentOp1ATI(op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod)
}

var fp_glColorFragmentOp2ATI:@convention(c) (GL.Enum, GL.UInt, GL.UInt, GL.UInt, GL.UInt, GL.UInt, GL.UInt, GL.UInt, GL.UInt, GL.UInt) -> () = load_glColorFragmentOp2ATI
func load_glColorFragmentOp2ATI(op:GL.Enum, dst:GL.UInt, dstMask:GL.UInt, dstMod:GL.UInt, arg1:GL.UInt, arg1Rep:GL.UInt, arg1Mod:GL.UInt, arg2:GL.UInt, arg2Rep:GL.UInt, arg2Mod:GL.UInt)
{
    fp_glColorFragmentOp2ATI = unsafeBitCast(get_fp("glColorFragmentOp2ATI", support: [ss118]), to: Swift.type(of: fp_glColorFragmentOp2ATI))
    fp_glColorFragmentOp2ATI(op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod)
}
public
func glColorFragmentOp2ATI(op:GL.Enum, dst:GL.UInt, dstMask:GL.UInt, dstMod:GL.UInt, arg1:GL.UInt, arg1Rep:GL.UInt, arg1Mod:GL.UInt, arg2:GL.UInt, arg2Rep:GL.UInt, arg2Mod:GL.UInt)
{
    fp_glColorFragmentOp2ATI(op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod)
}
public
func glColorFragmentOp2ATI(_ op:GL.Enum, _ dst:GL.UInt, _ dstMask:GL.UInt, _ dstMod:GL.UInt, _ arg1:GL.UInt, _ arg1Rep:GL.UInt, _ arg1Mod:GL.UInt, _ arg2:GL.UInt, _ arg2Rep:GL.UInt, _ arg2Mod:GL.UInt)
{
    fp_glColorFragmentOp2ATI(op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod)
}

var fp_glColorFragmentOp3ATI:@convention(c) (GL.Enum, GL.UInt, GL.UInt, GL.UInt, GL.UInt, GL.UInt, GL.UInt, GL.UInt, GL.UInt, GL.UInt, GL.UInt, GL.UInt, GL.UInt) -> () = load_glColorFragmentOp3ATI
func load_glColorFragmentOp3ATI(op:GL.Enum, dst:GL.UInt, dstMask:GL.UInt, dstMod:GL.UInt, arg1:GL.UInt, arg1Rep:GL.UInt, arg1Mod:GL.UInt, arg2:GL.UInt, arg2Rep:GL.UInt, arg2Mod:GL.UInt, arg3:GL.UInt, arg3Rep:GL.UInt, arg3Mod:GL.UInt)
{
    fp_glColorFragmentOp3ATI = unsafeBitCast(get_fp("glColorFragmentOp3ATI", support: [ss118]), to: Swift.type(of: fp_glColorFragmentOp3ATI))
    fp_glColorFragmentOp3ATI(op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod, arg3, arg3Rep, arg3Mod)
}
public
func glColorFragmentOp3ATI(op:GL.Enum, dst:GL.UInt, dstMask:GL.UInt, dstMod:GL.UInt, arg1:GL.UInt, arg1Rep:GL.UInt, arg1Mod:GL.UInt, arg2:GL.UInt, arg2Rep:GL.UInt, arg2Mod:GL.UInt, arg3:GL.UInt, arg3Rep:GL.UInt, arg3Mod:GL.UInt)
{
    fp_glColorFragmentOp3ATI(op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod, arg3, arg3Rep, arg3Mod)
}
public
func glColorFragmentOp3ATI(_ op:GL.Enum, _ dst:GL.UInt, _ dstMask:GL.UInt, _ dstMod:GL.UInt, _ arg1:GL.UInt, _ arg1Rep:GL.UInt, _ arg1Mod:GL.UInt, _ arg2:GL.UInt, _ arg2Rep:GL.UInt, _ arg2Mod:GL.UInt, _ arg3:GL.UInt, _ arg3Rep:GL.UInt, _ arg3Mod:GL.UInt)
{
    fp_glColorFragmentOp3ATI(op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod, arg3, arg3Rep, arg3Mod)
}

var fp_glColorMask:@convention(c) (GL.Bool, GL.Bool, GL.Bool, GL.Bool) -> () = load_glColorMask
func load_glColorMask(red:GL.Bool, green:GL.Bool, blue:GL.Bool, alpha:GL.Bool)
{
    fp_glColorMask = unsafeBitCast(get_fp("glColorMask", support: [ss346, ss365]), to: Swift.type(of: fp_glColorMask))
    fp_glColorMask(red, green, blue, alpha)
}
public
func glColorMask(red:GL.Bool, green:GL.Bool, blue:GL.Bool, alpha:GL.Bool)
{
    fp_glColorMask(red, green, blue, alpha)
}
public
func glColorMask(_ red:GL.Bool, _ green:GL.Bool, _ blue:GL.Bool, _ alpha:GL.Bool)
{
    fp_glColorMask(red, green, blue, alpha)
}

var fp_glColorMaskIndexedEXT:@convention(c) (GL.UInt, GL.Bool, GL.Bool, GL.Bool, GL.Bool) -> () = load_glColorMaskIndexedEXT
func load_glColorMaskIndexedEXT(index:GL.UInt, r:GL.Bool, g:GL.Bool, b:GL.Bool, a:GL.Bool)
{
    fp_glColorMaskIndexedEXT = unsafeBitCast(get_fp("glColorMaskIndexedEXT", support: [ss148]), to: Swift.type(of: fp_glColorMaskIndexedEXT))
    fp_glColorMaskIndexedEXT(index, r, g, b, a)
}
public
func glColorMaskIndexedEXT(index:GL.UInt, r:GL.Bool, g:GL.Bool, b:GL.Bool, a:GL.Bool)
{
    fp_glColorMaskIndexedEXT(index, r, g, b, a)
}
public
func glColorMaskIndexedEXT(_ index:GL.UInt, _ r:GL.Bool, _ g:GL.Bool, _ b:GL.Bool, _ a:GL.Bool)
{
    fp_glColorMaskIndexedEXT(index, r, g, b, a)
}

var fp_glColorMaski:@convention(c) (GL.UInt, GL.Bool, GL.Bool, GL.Bool, GL.Bool) -> () = load_glColorMaski
func load_glColorMaski(index:GL.UInt, r:GL.Bool, g:GL.Bool, b:GL.Bool, a:GL.Bool)
{
    fp_glColorMaski = unsafeBitCast(get_fp("glColorMaski", support: [ss354, ss368]), to: Swift.type(of: fp_glColorMaski))
    fp_glColorMaski(index, r, g, b, a)
}
public
func glColorMaski(index:GL.UInt, r:GL.Bool, g:GL.Bool, b:GL.Bool, a:GL.Bool)
{
    fp_glColorMaski(index, r, g, b, a)
}
public
func glColorMaski(_ index:GL.UInt, _ r:GL.Bool, _ g:GL.Bool, _ b:GL.Bool, _ a:GL.Bool)
{
    fp_glColorMaski(index, r, g, b, a)
}

var fp_glColorMaskiEXT:@convention(c) (GL.UInt, GL.Bool, GL.Bool, GL.Bool, GL.Bool) -> () = load_glColorMaskiEXT
func load_glColorMaskiEXT(index:GL.UInt, r:GL.Bool, g:GL.Bool, b:GL.Bool, a:GL.Bool)
{
    fp_glColorMaskiEXT = unsafeBitCast(get_fp("glColorMaskiEXT", support: [ss146]), to: Swift.type(of: fp_glColorMaskiEXT))
    fp_glColorMaskiEXT(index, r, g, b, a)
}
public
func glColorMaskiEXT(index:GL.UInt, r:GL.Bool, g:GL.Bool, b:GL.Bool, a:GL.Bool)
{
    fp_glColorMaskiEXT(index, r, g, b, a)
}
public
func glColorMaskiEXT(_ index:GL.UInt, _ r:GL.Bool, _ g:GL.Bool, _ b:GL.Bool, _ a:GL.Bool)
{
    fp_glColorMaskiEXT(index, r, g, b, a)
}

var fp_glColorMaskiOES:@convention(c) (GL.UInt, GL.Bool, GL.Bool, GL.Bool, GL.Bool) -> () = load_glColorMaskiOES
func load_glColorMaskiOES(index:GL.UInt, r:GL.Bool, g:GL.Bool, b:GL.Bool, a:GL.Bool)
{
    fp_glColorMaskiOES = unsafeBitCast(get_fp("glColorMaskiOES", support: [ss288]), to: Swift.type(of: fp_glColorMaskiOES))
    fp_glColorMaskiOES(index, r, g, b, a)
}
public
func glColorMaskiOES(index:GL.UInt, r:GL.Bool, g:GL.Bool, b:GL.Bool, a:GL.Bool)
{
    fp_glColorMaskiOES(index, r, g, b, a)
}
public
func glColorMaskiOES(_ index:GL.UInt, _ r:GL.Bool, _ g:GL.Bool, _ b:GL.Bool, _ a:GL.Bool)
{
    fp_glColorMaskiOES(index, r, g, b, a)
}

var fp_glColorMaterial:@convention(c) (GL.Enum, GL.Enum) -> () = load_glColorMaterial
func load_glColorMaterial(face:GL.Enum, mode:GL.Enum)
{
    fp_glColorMaterial = unsafeBitCast(get_fp("glColorMaterial", support: [ss346, ss369]), to: Swift.type(of: fp_glColorMaterial))
    fp_glColorMaterial(face, mode)
}
public
func glColorMaterial(face:GL.Enum, mode:GL.Enum)
{
    fp_glColorMaterial(face, mode)
}
public
func glColorMaterial(_ face:GL.Enum, _ mode:GL.Enum)
{
    fp_glColorMaterial(face, mode)
}

var fp_glColorP3ui:@convention(c) (GL.Enum, GL.UInt) -> () = load_glColorP3ui
func load_glColorP3ui(type:GL.Enum, color:GL.UInt)
{
    fp_glColorP3ui = unsafeBitCast(get_fp("glColorP3ui", support: [ss357, ss112]), to: Swift.type(of: fp_glColorP3ui))
    fp_glColorP3ui(type, color)
}
public
func glColorP3ui(type:GL.Enum, color:GL.UInt)
{
    fp_glColorP3ui(type, color)
}
public
func glColorP3ui(_ type:GL.Enum, _ color:GL.UInt)
{
    fp_glColorP3ui(type, color)
}

var fp_glColorP3uiv:@convention(c) (GL.Enum, UnsafePointer<GL.UInt>?) -> () = load_glColorP3uiv
func load_glColorP3uiv(type:GL.Enum, color:UnsafePointer<GL.UInt>?)
{
    fp_glColorP3uiv = unsafeBitCast(get_fp("glColorP3uiv", support: [ss357, ss112]), to: Swift.type(of: fp_glColorP3uiv))
    fp_glColorP3uiv(type, color)
}
public
func glColorP3uiv(type:GL.Enum, color:UnsafePointer<GL.UInt>?)
{
    fp_glColorP3uiv(type, color)
}
public
func glColorP3uiv(_ type:GL.Enum, _ color:UnsafePointer<GL.UInt>?)
{
    fp_glColorP3uiv(type, color)
}

var fp_glColorP4ui:@convention(c) (GL.Enum, GL.UInt) -> () = load_glColorP4ui
func load_glColorP4ui(type:GL.Enum, color:GL.UInt)
{
    fp_glColorP4ui = unsafeBitCast(get_fp("glColorP4ui", support: [ss357, ss112]), to: Swift.type(of: fp_glColorP4ui))
    fp_glColorP4ui(type, color)
}
public
func glColorP4ui(type:GL.Enum, color:GL.UInt)
{
    fp_glColorP4ui(type, color)
}
public
func glColorP4ui(_ type:GL.Enum, _ color:GL.UInt)
{
    fp_glColorP4ui(type, color)
}

var fp_glColorP4uiv:@convention(c) (GL.Enum, UnsafePointer<GL.UInt>?) -> () = load_glColorP4uiv
func load_glColorP4uiv(type:GL.Enum, color:UnsafePointer<GL.UInt>?)
{
    fp_glColorP4uiv = unsafeBitCast(get_fp("glColorP4uiv", support: [ss357, ss112]), to: Swift.type(of: fp_glColorP4uiv))
    fp_glColorP4uiv(type, color)
}
public
func glColorP4uiv(type:GL.Enum, color:UnsafePointer<GL.UInt>?)
{
    fp_glColorP4uiv(type, color)
}
public
func glColorP4uiv(_ type:GL.Enum, _ color:UnsafePointer<GL.UInt>?)
{
    fp_glColorP4uiv(type, color)
}

var fp_glColorPointer:@convention(c) (GL.Int, GL.Enum, GL.Size, UnsafeRawPointer?) -> () = load_glColorPointer
func load_glColorPointer(size:GL.Int, type:GL.Enum, stride:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glColorPointer = unsafeBitCast(get_fp("glColorPointer", support: [ss347, ss369, ss364]), to: Swift.type(of: fp_glColorPointer))
    fp_glColorPointer(size, type, stride, pointer)
}
public
func glColorPointer(size:GL.Int, type:GL.Enum, stride:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glColorPointer(size, type, stride, pointer)
}
public
func glColorPointer(_ size:GL.Int, _ type:GL.Enum, _ stride:GL.Size, _ pointer:UnsafeRawPointer?)
{
    fp_glColorPointer(size, type, stride, pointer)
}

var fp_glColorPointerEXT:@convention(c) (GL.Int, GL.Enum, GL.Size, GL.Size, UnsafeRawPointer?) -> () = load_glColorPointerEXT
func load_glColorPointerEXT(size:GL.Int, type:GL.Enum, stride:GL.Size, count:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glColorPointerEXT = unsafeBitCast(get_fp("glColorPointerEXT", support: [ss202]), to: Swift.type(of: fp_glColorPointerEXT))
    fp_glColorPointerEXT(size, type, stride, count, pointer)
}
public
func glColorPointerEXT(size:GL.Int, type:GL.Enum, stride:GL.Size, count:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glColorPointerEXT(size, type, stride, count, pointer)
}
public
func glColorPointerEXT(_ size:GL.Int, _ type:GL.Enum, _ stride:GL.Size, _ count:GL.Size, _ pointer:UnsafeRawPointer?)
{
    fp_glColorPointerEXT(size, type, stride, count, pointer)
}

var fp_glColorPointerListIBM:@convention(c) (GL.Int, GL.Enum, GL.Int, UnsafeMutablePointer<UnsafeRawPointer?>?, GL.Int) -> () = load_glColorPointerListIBM
func load_glColorPointerListIBM(size:GL.Int, type:GL.Enum, stride:GL.Int, pointer:UnsafeMutablePointer<UnsafeRawPointer?>?, ptrstride:GL.Int)
{
    fp_glColorPointerListIBM = unsafeBitCast(get_fp("glColorPointerListIBM", support: [ss212]), to: Swift.type(of: fp_glColorPointerListIBM))
    fp_glColorPointerListIBM(size, type, stride, pointer, ptrstride)
}
public
func glColorPointerListIBM(size:GL.Int, type:GL.Enum, stride:GL.Int, pointer:UnsafeMutablePointer<UnsafeRawPointer?>?, ptrstride:GL.Int)
{
    fp_glColorPointerListIBM(size, type, stride, pointer, ptrstride)
}
public
func glColorPointerListIBM(_ size:GL.Int, _ type:GL.Enum, _ stride:GL.Int, _ pointer:UnsafeMutablePointer<UnsafeRawPointer?>?, _ ptrstride:GL.Int)
{
    fp_glColorPointerListIBM(size, type, stride, pointer, ptrstride)
}

var fp_glColorPointervINTEL:@convention(c) (GL.Int, GL.Enum, UnsafeMutablePointer<UnsafeRawPointer?>?) -> () = load_glColorPointervINTEL
func load_glColorPointervINTEL(size:GL.Int, type:GL.Enum, pointer:UnsafeMutablePointer<UnsafeRawPointer?>?)
{
    fp_glColorPointervINTEL = unsafeBitCast(get_fp("glColorPointervINTEL", support: [ss218]), to: Swift.type(of: fp_glColorPointervINTEL))
    fp_glColorPointervINTEL(size, type, pointer)
}
public
func glColorPointervINTEL(size:GL.Int, type:GL.Enum, pointer:UnsafeMutablePointer<UnsafeRawPointer?>?)
{
    fp_glColorPointervINTEL(size, type, pointer)
}
public
func glColorPointervINTEL(_ size:GL.Int, _ type:GL.Enum, _ pointer:UnsafeMutablePointer<UnsafeRawPointer?>?)
{
    fp_glColorPointervINTEL(size, type, pointer)
}

var fp_glColorSubTable:@convention(c) (GL.Enum, GL.Size, GL.Size, GL.Enum, GL.Enum, UnsafeRawPointer?) -> () = load_glColorSubTable
func load_glColorSubTable(target:GL.Enum, start:GL.Size, count:GL.Size, format:GL.Enum, type:GL.Enum, data:UnsafeRawPointer?)
{
    fp_glColorSubTable = unsafeBitCast(get_fp("glColorSubTable", support: [ss59]), to: Swift.type(of: fp_glColorSubTable))
    fp_glColorSubTable(target, start, count, format, type, data)
}
public
func glColorSubTable(target:GL.Enum, start:GL.Size, count:GL.Size, format:GL.Enum, type:GL.Enum, data:UnsafeRawPointer?)
{
    fp_glColorSubTable(target, start, count, format, type, data)
}
public
func glColorSubTable(_ target:GL.Enum, _ start:GL.Size, _ count:GL.Size, _ format:GL.Enum, _ type:GL.Enum, _ data:UnsafeRawPointer?)
{
    fp_glColorSubTable(target, start, count, format, type, data)
}

var fp_glColorSubTableEXT:@convention(c) (GL.Enum, GL.Size, GL.Size, GL.Enum, GL.Enum, UnsafeRawPointer?) -> () = load_glColorSubTableEXT
func load_glColorSubTableEXT(target:GL.Enum, start:GL.Size, count:GL.Size, format:GL.Enum, type:GL.Enum, data:UnsafeRawPointer?)
{
    fp_glColorSubTableEXT = unsafeBitCast(get_fp("glColorSubTableEXT", support: [ss133]), to: Swift.type(of: fp_glColorSubTableEXT))
    fp_glColorSubTableEXT(target, start, count, format, type, data)
}
public
func glColorSubTableEXT(target:GL.Enum, start:GL.Size, count:GL.Size, format:GL.Enum, type:GL.Enum, data:UnsafeRawPointer?)
{
    fp_glColorSubTableEXT(target, start, count, format, type, data)
}
public
func glColorSubTableEXT(_ target:GL.Enum, _ start:GL.Size, _ count:GL.Size, _ format:GL.Enum, _ type:GL.Enum, _ data:UnsafeRawPointer?)
{
    fp_glColorSubTableEXT(target, start, count, format, type, data)
}

var fp_glColorTable:@convention(c) (GL.Enum, GL.Enum, GL.Size, GL.Enum, GL.Enum, UnsafeRawPointer?) -> () = load_glColorTable
func load_glColorTable(target:GL.Enum, internalformat:GL.Enum, width:GL.Size, format:GL.Enum, type:GL.Enum, table:UnsafeRawPointer?)
{
    fp_glColorTable = unsafeBitCast(get_fp("glColorTable", support: [ss59]), to: Swift.type(of: fp_glColorTable))
    fp_glColorTable(target, internalformat, width, format, type, table)
}
public
func glColorTable(target:GL.Enum, internalformat:GL.Enum, width:GL.Size, format:GL.Enum, type:GL.Enum, table:UnsafeRawPointer?)
{
    fp_glColorTable(target, internalformat, width, format, type, table)
}
public
func glColorTable(_ target:GL.Enum, _ internalformat:GL.Enum, _ width:GL.Size, _ format:GL.Enum, _ type:GL.Enum, _ table:UnsafeRawPointer?)
{
    fp_glColorTable(target, internalformat, width, format, type, table)
}

var fp_glColorTableEXT:@convention(c) (GL.Enum, GL.Enum, GL.Size, GL.Enum, GL.Enum, UnsafeRawPointer?) -> () = load_glColorTableEXT
func load_glColorTableEXT(target:GL.Enum, internalFormat:GL.Enum, width:GL.Size, format:GL.Enum, type:GL.Enum, table:UnsafeRawPointer?)
{
    fp_glColorTableEXT = unsafeBitCast(get_fp("glColorTableEXT", support: [ss172]), to: Swift.type(of: fp_glColorTableEXT))
    fp_glColorTableEXT(target, internalFormat, width, format, type, table)
}
public
func glColorTableEXT(target:GL.Enum, internalFormat:GL.Enum, width:GL.Size, format:GL.Enum, type:GL.Enum, table:UnsafeRawPointer?)
{
    fp_glColorTableEXT(target, internalFormat, width, format, type, table)
}
public
func glColorTableEXT(_ target:GL.Enum, _ internalFormat:GL.Enum, _ width:GL.Size, _ format:GL.Enum, _ type:GL.Enum, _ table:UnsafeRawPointer?)
{
    fp_glColorTableEXT(target, internalFormat, width, format, type, table)
}

var fp_glColorTableParameterfv:@convention(c) (GL.Enum, GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glColorTableParameterfv
func load_glColorTableParameterfv(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glColorTableParameterfv = unsafeBitCast(get_fp("glColorTableParameterfv", support: [ss59]), to: Swift.type(of: fp_glColorTableParameterfv))
    fp_glColorTableParameterfv(target, pname, params)
}
public
func glColorTableParameterfv(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glColorTableParameterfv(target, pname, params)
}
public
func glColorTableParameterfv(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.Float>?)
{
    fp_glColorTableParameterfv(target, pname, params)
}

var fp_glColorTableParameterfvSGI:@convention(c) (GL.Enum, GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glColorTableParameterfvSGI
func load_glColorTableParameterfvSGI(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glColorTableParameterfvSGI = unsafeBitCast(get_fp("glColorTableParameterfvSGI", support: [ss319]), to: Swift.type(of: fp_glColorTableParameterfvSGI))
    fp_glColorTableParameterfvSGI(target, pname, params)
}
public
func glColorTableParameterfvSGI(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glColorTableParameterfvSGI(target, pname, params)
}
public
func glColorTableParameterfvSGI(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.Float>?)
{
    fp_glColorTableParameterfvSGI(target, pname, params)
}

var fp_glColorTableParameteriv:@convention(c) (GL.Enum, GL.Enum, UnsafePointer<GL.Int>?) -> () = load_glColorTableParameteriv
func load_glColorTableParameteriv(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glColorTableParameteriv = unsafeBitCast(get_fp("glColorTableParameteriv", support: [ss59]), to: Swift.type(of: fp_glColorTableParameteriv))
    fp_glColorTableParameteriv(target, pname, params)
}
public
func glColorTableParameteriv(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glColorTableParameteriv(target, pname, params)
}
public
func glColorTableParameteriv(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.Int>?)
{
    fp_glColorTableParameteriv(target, pname, params)
}

var fp_glColorTableParameterivSGI:@convention(c) (GL.Enum, GL.Enum, UnsafePointer<GL.Int>?) -> () = load_glColorTableParameterivSGI
func load_glColorTableParameterivSGI(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glColorTableParameterivSGI = unsafeBitCast(get_fp("glColorTableParameterivSGI", support: [ss319]), to: Swift.type(of: fp_glColorTableParameterivSGI))
    fp_glColorTableParameterivSGI(target, pname, params)
}
public
func glColorTableParameterivSGI(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glColorTableParameterivSGI(target, pname, params)
}
public
func glColorTableParameterivSGI(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.Int>?)
{
    fp_glColorTableParameterivSGI(target, pname, params)
}

var fp_glColorTableSGI:@convention(c) (GL.Enum, GL.Enum, GL.Size, GL.Enum, GL.Enum, UnsafeRawPointer?) -> () = load_glColorTableSGI
func load_glColorTableSGI(target:GL.Enum, internalformat:GL.Enum, width:GL.Size, format:GL.Enum, type:GL.Enum, table:UnsafeRawPointer?)
{
    fp_glColorTableSGI = unsafeBitCast(get_fp("glColorTableSGI", support: [ss319]), to: Swift.type(of: fp_glColorTableSGI))
    fp_glColorTableSGI(target, internalformat, width, format, type, table)
}
public
func glColorTableSGI(target:GL.Enum, internalformat:GL.Enum, width:GL.Size, format:GL.Enum, type:GL.Enum, table:UnsafeRawPointer?)
{
    fp_glColorTableSGI(target, internalformat, width, format, type, table)
}
public
func glColorTableSGI(_ target:GL.Enum, _ internalformat:GL.Enum, _ width:GL.Size, _ format:GL.Enum, _ type:GL.Enum, _ table:UnsafeRawPointer?)
{
    fp_glColorTableSGI(target, internalformat, width, format, type, table)
}

var fp_glCombinerInputNV:@convention(c) (GL.Enum, GL.Enum, GL.Enum, GL.Enum, GL.Enum, GL.Enum) -> () = load_glCombinerInputNV
func load_glCombinerInputNV(stage:GL.Enum, portion:GL.Enum, variable:GL.Enum, input:GL.Enum, mapping:GL.Enum, componentUsage:GL.Enum)
{
    fp_glCombinerInputNV = unsafeBitCast(get_fp("glCombinerInputNV", support: [ss266]), to: Swift.type(of: fp_glCombinerInputNV))
    fp_glCombinerInputNV(stage, portion, variable, input, mapping, componentUsage)
}
public
func glCombinerInputNV(stage:GL.Enum, portion:GL.Enum, variable:GL.Enum, input:GL.Enum, mapping:GL.Enum, componentUsage:GL.Enum)
{
    fp_glCombinerInputNV(stage, portion, variable, input, mapping, componentUsage)
}
public
func glCombinerInputNV(_ stage:GL.Enum, _ portion:GL.Enum, _ variable:GL.Enum, _ input:GL.Enum, _ mapping:GL.Enum, _ componentUsage:GL.Enum)
{
    fp_glCombinerInputNV(stage, portion, variable, input, mapping, componentUsage)
}

var fp_glCombinerOutputNV:@convention(c) (GL.Enum, GL.Enum, GL.Enum, GL.Enum, GL.Enum, GL.Enum, GL.Enum, GL.Bool, GL.Bool, GL.Bool) -> () = load_glCombinerOutputNV
func load_glCombinerOutputNV(stage:GL.Enum, portion:GL.Enum, abOutput:GL.Enum, cdOutput:GL.Enum, sumOutput:GL.Enum, scale:GL.Enum, bias:GL.Enum, abDotProduct:GL.Bool, cdDotProduct:GL.Bool, muxSum:GL.Bool)
{
    fp_glCombinerOutputNV = unsafeBitCast(get_fp("glCombinerOutputNV", support: [ss266]), to: Swift.type(of: fp_glCombinerOutputNV))
    fp_glCombinerOutputNV(stage, portion, abOutput, cdOutput, sumOutput, scale, bias, abDotProduct, cdDotProduct, muxSum)
}
public
func glCombinerOutputNV(stage:GL.Enum, portion:GL.Enum, abOutput:GL.Enum, cdOutput:GL.Enum, sumOutput:GL.Enum, scale:GL.Enum, bias:GL.Enum, abDotProduct:GL.Bool, cdDotProduct:GL.Bool, muxSum:GL.Bool)
{
    fp_glCombinerOutputNV(stage, portion, abOutput, cdOutput, sumOutput, scale, bias, abDotProduct, cdDotProduct, muxSum)
}
public
func glCombinerOutputNV(_ stage:GL.Enum, _ portion:GL.Enum, _ abOutput:GL.Enum, _ cdOutput:GL.Enum, _ sumOutput:GL.Enum, _ scale:GL.Enum, _ bias:GL.Enum, _ abDotProduct:GL.Bool, _ cdDotProduct:GL.Bool, _ muxSum:GL.Bool)
{
    fp_glCombinerOutputNV(stage, portion, abOutput, cdOutput, sumOutput, scale, bias, abDotProduct, cdDotProduct, muxSum)
}

var fp_glCombinerParameterfNV:@convention(c) (GL.Enum, GL.Float) -> () = load_glCombinerParameterfNV
func load_glCombinerParameterfNV(pname:GL.Enum, param:GL.Float)
{
    fp_glCombinerParameterfNV = unsafeBitCast(get_fp("glCombinerParameterfNV", support: [ss266]), to: Swift.type(of: fp_glCombinerParameterfNV))
    fp_glCombinerParameterfNV(pname, param)
}
public
func glCombinerParameterfNV(pname:GL.Enum, param:GL.Float)
{
    fp_glCombinerParameterfNV(pname, param)
}
public
func glCombinerParameterfNV(_ pname:GL.Enum, _ param:GL.Float)
{
    fp_glCombinerParameterfNV(pname, param)
}

var fp_glCombinerParameterfvNV:@convention(c) (GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glCombinerParameterfvNV
func load_glCombinerParameterfvNV(pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glCombinerParameterfvNV = unsafeBitCast(get_fp("glCombinerParameterfvNV", support: [ss266]), to: Swift.type(of: fp_glCombinerParameterfvNV))
    fp_glCombinerParameterfvNV(pname, params)
}
public
func glCombinerParameterfvNV(pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glCombinerParameterfvNV(pname, params)
}
public
func glCombinerParameterfvNV(_ pname:GL.Enum, _ params:UnsafePointer<GL.Float>?)
{
    fp_glCombinerParameterfvNV(pname, params)
}

var fp_glCombinerParameteriNV:@convention(c) (GL.Enum, GL.Int) -> () = load_glCombinerParameteriNV
func load_glCombinerParameteriNV(pname:GL.Enum, param:GL.Int)
{
    fp_glCombinerParameteriNV = unsafeBitCast(get_fp("glCombinerParameteriNV", support: [ss266]), to: Swift.type(of: fp_glCombinerParameteriNV))
    fp_glCombinerParameteriNV(pname, param)
}
public
func glCombinerParameteriNV(pname:GL.Enum, param:GL.Int)
{
    fp_glCombinerParameteriNV(pname, param)
}
public
func glCombinerParameteriNV(_ pname:GL.Enum, _ param:GL.Int)
{
    fp_glCombinerParameteriNV(pname, param)
}

var fp_glCombinerParameterivNV:@convention(c) (GL.Enum, UnsafePointer<GL.Int>?) -> () = load_glCombinerParameterivNV
func load_glCombinerParameterivNV(pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glCombinerParameterivNV = unsafeBitCast(get_fp("glCombinerParameterivNV", support: [ss266]), to: Swift.type(of: fp_glCombinerParameterivNV))
    fp_glCombinerParameterivNV(pname, params)
}
public
func glCombinerParameterivNV(pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glCombinerParameterivNV(pname, params)
}
public
func glCombinerParameterivNV(_ pname:GL.Enum, _ params:UnsafePointer<GL.Int>?)
{
    fp_glCombinerParameterivNV(pname, params)
}

var fp_glCombinerStageParameterfvNV:@convention(c) (GL.Enum, GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glCombinerStageParameterfvNV
func load_glCombinerStageParameterfvNV(stage:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glCombinerStageParameterfvNV = unsafeBitCast(get_fp("glCombinerStageParameterfvNV", support: [ss267]), to: Swift.type(of: fp_glCombinerStageParameterfvNV))
    fp_glCombinerStageParameterfvNV(stage, pname, params)
}
public
func glCombinerStageParameterfvNV(stage:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glCombinerStageParameterfvNV(stage, pname, params)
}
public
func glCombinerStageParameterfvNV(_ stage:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.Float>?)
{
    fp_glCombinerStageParameterfvNV(stage, pname, params)
}

var fp_glCommandListSegmentsNV:@convention(c) (GL.UInt, GL.UInt) -> () = load_glCommandListSegmentsNV
func load_glCommandListSegmentsNV(list:GL.UInt, segments:GL.UInt)
{
    fp_glCommandListSegmentsNV = unsafeBitCast(get_fp("glCommandListSegmentsNV", support: [ss229]), to: Swift.type(of: fp_glCommandListSegmentsNV))
    fp_glCommandListSegmentsNV(list, segments)
}
public
func glCommandListSegmentsNV(list:GL.UInt, segments:GL.UInt)
{
    fp_glCommandListSegmentsNV(list, segments)
}
public
func glCommandListSegmentsNV(_ list:GL.UInt, _ segments:GL.UInt)
{
    fp_glCommandListSegmentsNV(list, segments)
}

var fp_glCompileCommandListNV:@convention(c) (GL.UInt) -> () = load_glCompileCommandListNV
func load_glCompileCommandListNV(list:GL.UInt)
{
    fp_glCompileCommandListNV = unsafeBitCast(get_fp("glCompileCommandListNV", support: [ss229]), to: Swift.type(of: fp_glCompileCommandListNV))
    fp_glCompileCommandListNV(list)
}
public
func glCompileCommandListNV(list:GL.UInt)
{
    fp_glCompileCommandListNV(list)
}
public
func glCompileCommandListNV(_ list:GL.UInt)
{
    fp_glCompileCommandListNV(list)
}

var fp_glCompileShader:@convention(c) (GL.UInt) -> () = load_glCompileShader
func load_glCompileShader(shader:GL.UInt)
{
    fp_glCompileShader = unsafeBitCast(get_fp("glCompileShader", support: [ss352, ss365]), to: Swift.type(of: fp_glCompileShader))
    fp_glCompileShader(shader)
}
public
func glCompileShader(shader:GL.UInt)
{
    fp_glCompileShader(shader)
}
public
func glCompileShader(_ shader:GL.UInt)
{
    fp_glCompileShader(shader)
}

var fp_glCompileShaderARB:@convention(c) (GL.HandleARB) -> () = load_glCompileShaderARB
func load_glCompileShaderARB(shaderObj:GL.HandleARB)
{
    fp_glCompileShaderARB = unsafeBitCast(get_fp("glCompileShaderARB", support: [ss83]), to: Swift.type(of: fp_glCompileShaderARB))
    fp_glCompileShaderARB(shaderObj)
}
public
func glCompileShaderARB(shaderObj:GL.HandleARB)
{
    fp_glCompileShaderARB(shaderObj)
}
public
func glCompileShaderARB(_ shaderObj:GL.HandleARB)
{
    fp_glCompileShaderARB(shaderObj)
}

var fp_glCompileShaderIncludeARB:@convention(c) (GL.UInt, GL.Size, UnsafePointer<UnsafePointer<GL.Char>?>?, UnsafePointer<GL.Int>?) -> () = load_glCompileShaderIncludeARB
func load_glCompileShaderIncludeARB(shader:GL.UInt, count:GL.Size, path:UnsafePointer<UnsafePointer<GL.Char>?>?, length:UnsafePointer<GL.Int>?)
{
    fp_glCompileShaderIncludeARB = unsafeBitCast(get_fp("glCompileShaderIncludeARB", support: [ss86]), to: Swift.type(of: fp_glCompileShaderIncludeARB))
    fp_glCompileShaderIncludeARB(shader, count, path, length)
}
public
func glCompileShaderIncludeARB(shader:GL.UInt, count:GL.Size, path:UnsafePointer<UnsafePointer<GL.Char>?>?, length:UnsafePointer<GL.Int>?)
{
    fp_glCompileShaderIncludeARB(shader, count, path, length)
}
public
func glCompileShaderIncludeARB(_ shader:GL.UInt, _ count:GL.Size, _ path:UnsafePointer<UnsafePointer<GL.Char>?>?, _ length:UnsafePointer<GL.Int>?)
{
    fp_glCompileShaderIncludeARB(shader, count, path, length)
}

var fp_glCompressedMultiTexImage1DEXT:@convention(c) (GL.Enum, GL.Enum, GL.Int, GL.Enum, GL.Size, GL.Int, GL.Size, UnsafeRawPointer?) -> () = load_glCompressedMultiTexImage1DEXT
func load_glCompressedMultiTexImage1DEXT(texunit:GL.Enum, target:GL.Enum, level:GL.Int, internalformat:GL.Enum, width:GL.Size, border:GL.Int, imageSize:GL.Size, bits:UnsafeRawPointer?)
{
    fp_glCompressedMultiTexImage1DEXT = unsafeBitCast(get_fp("glCompressedMultiTexImage1DEXT", support: [ss143]), to: Swift.type(of: fp_glCompressedMultiTexImage1DEXT))
    fp_glCompressedMultiTexImage1DEXT(texunit, target, level, internalformat, width, border, imageSize, bits)
}
public
func glCompressedMultiTexImage1DEXT(texunit:GL.Enum, target:GL.Enum, level:GL.Int, internalformat:GL.Enum, width:GL.Size, border:GL.Int, imageSize:GL.Size, bits:UnsafeRawPointer?)
{
    fp_glCompressedMultiTexImage1DEXT(texunit, target, level, internalformat, width, border, imageSize, bits)
}
public
func glCompressedMultiTexImage1DEXT(_ texunit:GL.Enum, _ target:GL.Enum, _ level:GL.Int, _ internalformat:GL.Enum, _ width:GL.Size, _ border:GL.Int, _ imageSize:GL.Size, _ bits:UnsafeRawPointer?)
{
    fp_glCompressedMultiTexImage1DEXT(texunit, target, level, internalformat, width, border, imageSize, bits)
}

var fp_glCompressedMultiTexImage2DEXT:@convention(c) (GL.Enum, GL.Enum, GL.Int, GL.Enum, GL.Size, GL.Size, GL.Int, GL.Size, UnsafeRawPointer?) -> () = load_glCompressedMultiTexImage2DEXT
func load_glCompressedMultiTexImage2DEXT(texunit:GL.Enum, target:GL.Enum, level:GL.Int, internalformat:GL.Enum, width:GL.Size, height:GL.Size, border:GL.Int, imageSize:GL.Size, bits:UnsafeRawPointer?)
{
    fp_glCompressedMultiTexImage2DEXT = unsafeBitCast(get_fp("glCompressedMultiTexImage2DEXT", support: [ss143]), to: Swift.type(of: fp_glCompressedMultiTexImage2DEXT))
    fp_glCompressedMultiTexImage2DEXT(texunit, target, level, internalformat, width, height, border, imageSize, bits)
}
public
func glCompressedMultiTexImage2DEXT(texunit:GL.Enum, target:GL.Enum, level:GL.Int, internalformat:GL.Enum, width:GL.Size, height:GL.Size, border:GL.Int, imageSize:GL.Size, bits:UnsafeRawPointer?)
{
    fp_glCompressedMultiTexImage2DEXT(texunit, target, level, internalformat, width, height, border, imageSize, bits)
}
public
func glCompressedMultiTexImage2DEXT(_ texunit:GL.Enum, _ target:GL.Enum, _ level:GL.Int, _ internalformat:GL.Enum, _ width:GL.Size, _ height:GL.Size, _ border:GL.Int, _ imageSize:GL.Size, _ bits:UnsafeRawPointer?)
{
    fp_glCompressedMultiTexImage2DEXT(texunit, target, level, internalformat, width, height, border, imageSize, bits)
}

var fp_glCompressedMultiTexImage3DEXT:@convention(c) (GL.Enum, GL.Enum, GL.Int, GL.Enum, GL.Size, GL.Size, GL.Size, GL.Int, GL.Size, UnsafeRawPointer?) -> () = load_glCompressedMultiTexImage3DEXT
func load_glCompressedMultiTexImage3DEXT(texunit:GL.Enum, target:GL.Enum, level:GL.Int, internalformat:GL.Enum, width:GL.Size, height:GL.Size, depth:GL.Size, border:GL.Int, imageSize:GL.Size, bits:UnsafeRawPointer?)
{
    fp_glCompressedMultiTexImage3DEXT = unsafeBitCast(get_fp("glCompressedMultiTexImage3DEXT", support: [ss143]), to: Swift.type(of: fp_glCompressedMultiTexImage3DEXT))
    fp_glCompressedMultiTexImage3DEXT(texunit, target, level, internalformat, width, height, depth, border, imageSize, bits)
}
public
func glCompressedMultiTexImage3DEXT(texunit:GL.Enum, target:GL.Enum, level:GL.Int, internalformat:GL.Enum, width:GL.Size, height:GL.Size, depth:GL.Size, border:GL.Int, imageSize:GL.Size, bits:UnsafeRawPointer?)
{
    fp_glCompressedMultiTexImage3DEXT(texunit, target, level, internalformat, width, height, depth, border, imageSize, bits)
}
public
func glCompressedMultiTexImage3DEXT(_ texunit:GL.Enum, _ target:GL.Enum, _ level:GL.Int, _ internalformat:GL.Enum, _ width:GL.Size, _ height:GL.Size, _ depth:GL.Size, _ border:GL.Int, _ imageSize:GL.Size, _ bits:UnsafeRawPointer?)
{
    fp_glCompressedMultiTexImage3DEXT(texunit, target, level, internalformat, width, height, depth, border, imageSize, bits)
}

var fp_glCompressedMultiTexSubImage1DEXT:@convention(c) (GL.Enum, GL.Enum, GL.Int, GL.Int, GL.Size, GL.Enum, GL.Size, UnsafeRawPointer?) -> () = load_glCompressedMultiTexSubImage1DEXT
func load_glCompressedMultiTexSubImage1DEXT(texunit:GL.Enum, target:GL.Enum, level:GL.Int, xoffset:GL.Int, width:GL.Size, format:GL.Enum, imageSize:GL.Size, bits:UnsafeRawPointer?)
{
    fp_glCompressedMultiTexSubImage1DEXT = unsafeBitCast(get_fp("glCompressedMultiTexSubImage1DEXT", support: [ss143]), to: Swift.type(of: fp_glCompressedMultiTexSubImage1DEXT))
    fp_glCompressedMultiTexSubImage1DEXT(texunit, target, level, xoffset, width, format, imageSize, bits)
}
public
func glCompressedMultiTexSubImage1DEXT(texunit:GL.Enum, target:GL.Enum, level:GL.Int, xoffset:GL.Int, width:GL.Size, format:GL.Enum, imageSize:GL.Size, bits:UnsafeRawPointer?)
{
    fp_glCompressedMultiTexSubImage1DEXT(texunit, target, level, xoffset, width, format, imageSize, bits)
}
public
func glCompressedMultiTexSubImage1DEXT(_ texunit:GL.Enum, _ target:GL.Enum, _ level:GL.Int, _ xoffset:GL.Int, _ width:GL.Size, _ format:GL.Enum, _ imageSize:GL.Size, _ bits:UnsafeRawPointer?)
{
    fp_glCompressedMultiTexSubImage1DEXT(texunit, target, level, xoffset, width, format, imageSize, bits)
}

var fp_glCompressedMultiTexSubImage2DEXT:@convention(c) (GL.Enum, GL.Enum, GL.Int, GL.Int, GL.Int, GL.Size, GL.Size, GL.Enum, GL.Size, UnsafeRawPointer?) -> () = load_glCompressedMultiTexSubImage2DEXT
func load_glCompressedMultiTexSubImage2DEXT(texunit:GL.Enum, target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, width:GL.Size, height:GL.Size, format:GL.Enum, imageSize:GL.Size, bits:UnsafeRawPointer?)
{
    fp_glCompressedMultiTexSubImage2DEXT = unsafeBitCast(get_fp("glCompressedMultiTexSubImage2DEXT", support: [ss143]), to: Swift.type(of: fp_glCompressedMultiTexSubImage2DEXT))
    fp_glCompressedMultiTexSubImage2DEXT(texunit, target, level, xoffset, yoffset, width, height, format, imageSize, bits)
}
public
func glCompressedMultiTexSubImage2DEXT(texunit:GL.Enum, target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, width:GL.Size, height:GL.Size, format:GL.Enum, imageSize:GL.Size, bits:UnsafeRawPointer?)
{
    fp_glCompressedMultiTexSubImage2DEXT(texunit, target, level, xoffset, yoffset, width, height, format, imageSize, bits)
}
public
func glCompressedMultiTexSubImage2DEXT(_ texunit:GL.Enum, _ target:GL.Enum, _ level:GL.Int, _ xoffset:GL.Int, _ yoffset:GL.Int, _ width:GL.Size, _ height:GL.Size, _ format:GL.Enum, _ imageSize:GL.Size, _ bits:UnsafeRawPointer?)
{
    fp_glCompressedMultiTexSubImage2DEXT(texunit, target, level, xoffset, yoffset, width, height, format, imageSize, bits)
}

var fp_glCompressedMultiTexSubImage3DEXT:@convention(c) (GL.Enum, GL.Enum, GL.Int, GL.Int, GL.Int, GL.Int, GL.Size, GL.Size, GL.Size, GL.Enum, GL.Size, UnsafeRawPointer?) -> () = load_glCompressedMultiTexSubImage3DEXT
func load_glCompressedMultiTexSubImage3DEXT(texunit:GL.Enum, target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, zoffset:GL.Int, width:GL.Size, height:GL.Size, depth:GL.Size, format:GL.Enum, imageSize:GL.Size, bits:UnsafeRawPointer?)
{
    fp_glCompressedMultiTexSubImage3DEXT = unsafeBitCast(get_fp("glCompressedMultiTexSubImage3DEXT", support: [ss143]), to: Swift.type(of: fp_glCompressedMultiTexSubImage3DEXT))
    fp_glCompressedMultiTexSubImage3DEXT(texunit, target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, bits)
}
public
func glCompressedMultiTexSubImage3DEXT(texunit:GL.Enum, target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, zoffset:GL.Int, width:GL.Size, height:GL.Size, depth:GL.Size, format:GL.Enum, imageSize:GL.Size, bits:UnsafeRawPointer?)
{
    fp_glCompressedMultiTexSubImage3DEXT(texunit, target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, bits)
}
public
func glCompressedMultiTexSubImage3DEXT(_ texunit:GL.Enum, _ target:GL.Enum, _ level:GL.Int, _ xoffset:GL.Int, _ yoffset:GL.Int, _ zoffset:GL.Int, _ width:GL.Size, _ height:GL.Size, _ depth:GL.Size, _ format:GL.Enum, _ imageSize:GL.Size, _ bits:UnsafeRawPointer?)
{
    fp_glCompressedMultiTexSubImage3DEXT(texunit, target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, bits)
}

var fp_glCompressedTexImage1D:@convention(c) (GL.Enum, GL.Int, GL.Enum, GL.Size, GL.Int, GL.Size, UnsafeRawPointer?) -> () = load_glCompressedTexImage1D
func load_glCompressedTexImage1D(target:GL.Enum, level:GL.Int, internalformat:GL.Enum, width:GL.Size, border:GL.Int, imageSize:GL.Size, data:UnsafeRawPointer?)
{
    fp_glCompressedTexImage1D = unsafeBitCast(get_fp("glCompressedTexImage1D", support: [ss349]), to: Swift.type(of: fp_glCompressedTexImage1D))
    fp_glCompressedTexImage1D(target, level, internalformat, width, border, imageSize, data)
}
public
func glCompressedTexImage1D(target:GL.Enum, level:GL.Int, internalformat:GL.Enum, width:GL.Size, border:GL.Int, imageSize:GL.Size, data:UnsafeRawPointer?)
{
    fp_glCompressedTexImage1D(target, level, internalformat, width, border, imageSize, data)
}
public
func glCompressedTexImage1D(_ target:GL.Enum, _ level:GL.Int, _ internalformat:GL.Enum, _ width:GL.Size, _ border:GL.Int, _ imageSize:GL.Size, _ data:UnsafeRawPointer?)
{
    fp_glCompressedTexImage1D(target, level, internalformat, width, border, imageSize, data)
}

var fp_glCompressedTexImage1DARB:@convention(c) (GL.Enum, GL.Int, GL.Enum, GL.Size, GL.Int, GL.Size, UnsafeRawPointer?) -> () = load_glCompressedTexImage1DARB
func load_glCompressedTexImage1DARB(target:GL.Enum, level:GL.Int, internalformat:GL.Enum, width:GL.Size, border:GL.Int, imageSize:GL.Size, data:UnsafeRawPointer?)
{
    fp_glCompressedTexImage1DARB = unsafeBitCast(get_fp("glCompressedTexImage1DARB", support: [ss94]), to: Swift.type(of: fp_glCompressedTexImage1DARB))
    fp_glCompressedTexImage1DARB(target, level, internalformat, width, border, imageSize, data)
}
public
func glCompressedTexImage1DARB(target:GL.Enum, level:GL.Int, internalformat:GL.Enum, width:GL.Size, border:GL.Int, imageSize:GL.Size, data:UnsafeRawPointer?)
{
    fp_glCompressedTexImage1DARB(target, level, internalformat, width, border, imageSize, data)
}
public
func glCompressedTexImage1DARB(_ target:GL.Enum, _ level:GL.Int, _ internalformat:GL.Enum, _ width:GL.Size, _ border:GL.Int, _ imageSize:GL.Size, _ data:UnsafeRawPointer?)
{
    fp_glCompressedTexImage1DARB(target, level, internalformat, width, border, imageSize, data)
}

var fp_glCompressedTexImage2D:@convention(c) (GL.Enum, GL.Int, GL.Enum, GL.Size, GL.Size, GL.Int, GL.Size, UnsafeRawPointer?) -> () = load_glCompressedTexImage2D
func load_glCompressedTexImage2D(target:GL.Enum, level:GL.Int, internalformat:GL.Enum, width:GL.Size, height:GL.Size, border:GL.Int, imageSize:GL.Size, data:UnsafeRawPointer?)
{
    fp_glCompressedTexImage2D = unsafeBitCast(get_fp("glCompressedTexImage2D", support: [ss349, ss365]), to: Swift.type(of: fp_glCompressedTexImage2D))
    fp_glCompressedTexImage2D(target, level, internalformat, width, height, border, imageSize, data)
}
public
func glCompressedTexImage2D(target:GL.Enum, level:GL.Int, internalformat:GL.Enum, width:GL.Size, height:GL.Size, border:GL.Int, imageSize:GL.Size, data:UnsafeRawPointer?)
{
    fp_glCompressedTexImage2D(target, level, internalformat, width, height, border, imageSize, data)
}
public
func glCompressedTexImage2D(_ target:GL.Enum, _ level:GL.Int, _ internalformat:GL.Enum, _ width:GL.Size, _ height:GL.Size, _ border:GL.Int, _ imageSize:GL.Size, _ data:UnsafeRawPointer?)
{
    fp_glCompressedTexImage2D(target, level, internalformat, width, height, border, imageSize, data)
}

var fp_glCompressedTexImage2DARB:@convention(c) (GL.Enum, GL.Int, GL.Enum, GL.Size, GL.Size, GL.Int, GL.Size, UnsafeRawPointer?) -> () = load_glCompressedTexImage2DARB
func load_glCompressedTexImage2DARB(target:GL.Enum, level:GL.Int, internalformat:GL.Enum, width:GL.Size, height:GL.Size, border:GL.Int, imageSize:GL.Size, data:UnsafeRawPointer?)
{
    fp_glCompressedTexImage2DARB = unsafeBitCast(get_fp("glCompressedTexImage2DARB", support: [ss94]), to: Swift.type(of: fp_glCompressedTexImage2DARB))
    fp_glCompressedTexImage2DARB(target, level, internalformat, width, height, border, imageSize, data)
}
public
func glCompressedTexImage2DARB(target:GL.Enum, level:GL.Int, internalformat:GL.Enum, width:GL.Size, height:GL.Size, border:GL.Int, imageSize:GL.Size, data:UnsafeRawPointer?)
{
    fp_glCompressedTexImage2DARB(target, level, internalformat, width, height, border, imageSize, data)
}
public
func glCompressedTexImage2DARB(_ target:GL.Enum, _ level:GL.Int, _ internalformat:GL.Enum, _ width:GL.Size, _ height:GL.Size, _ border:GL.Int, _ imageSize:GL.Size, _ data:UnsafeRawPointer?)
{
    fp_glCompressedTexImage2DARB(target, level, internalformat, width, height, border, imageSize, data)
}

var fp_glCompressedTexImage3D:@convention(c) (GL.Enum, GL.Int, GL.Enum, GL.Size, GL.Size, GL.Size, GL.Int, GL.Size, UnsafeRawPointer?) -> () = load_glCompressedTexImage3D
func load_glCompressedTexImage3D(target:GL.Enum, level:GL.Int, internalformat:GL.Enum, width:GL.Size, height:GL.Size, depth:GL.Size, border:GL.Int, imageSize:GL.Size, data:UnsafeRawPointer?)
{
    fp_glCompressedTexImage3D = unsafeBitCast(get_fp("glCompressedTexImage3D", support: [ss349, ss366]), to: Swift.type(of: fp_glCompressedTexImage3D))
    fp_glCompressedTexImage3D(target, level, internalformat, width, height, depth, border, imageSize, data)
}
public
func glCompressedTexImage3D(target:GL.Enum, level:GL.Int, internalformat:GL.Enum, width:GL.Size, height:GL.Size, depth:GL.Size, border:GL.Int, imageSize:GL.Size, data:UnsafeRawPointer?)
{
    fp_glCompressedTexImage3D(target, level, internalformat, width, height, depth, border, imageSize, data)
}
public
func glCompressedTexImage3D(_ target:GL.Enum, _ level:GL.Int, _ internalformat:GL.Enum, _ width:GL.Size, _ height:GL.Size, _ depth:GL.Size, _ border:GL.Int, _ imageSize:GL.Size, _ data:UnsafeRawPointer?)
{
    fp_glCompressedTexImage3D(target, level, internalformat, width, height, depth, border, imageSize, data)
}

var fp_glCompressedTexImage3DARB:@convention(c) (GL.Enum, GL.Int, GL.Enum, GL.Size, GL.Size, GL.Size, GL.Int, GL.Size, UnsafeRawPointer?) -> () = load_glCompressedTexImage3DARB
func load_glCompressedTexImage3DARB(target:GL.Enum, level:GL.Int, internalformat:GL.Enum, width:GL.Size, height:GL.Size, depth:GL.Size, border:GL.Int, imageSize:GL.Size, data:UnsafeRawPointer?)
{
    fp_glCompressedTexImage3DARB = unsafeBitCast(get_fp("glCompressedTexImage3DARB", support: [ss94]), to: Swift.type(of: fp_glCompressedTexImage3DARB))
    fp_glCompressedTexImage3DARB(target, level, internalformat, width, height, depth, border, imageSize, data)
}
public
func glCompressedTexImage3DARB(target:GL.Enum, level:GL.Int, internalformat:GL.Enum, width:GL.Size, height:GL.Size, depth:GL.Size, border:GL.Int, imageSize:GL.Size, data:UnsafeRawPointer?)
{
    fp_glCompressedTexImage3DARB(target, level, internalformat, width, height, depth, border, imageSize, data)
}
public
func glCompressedTexImage3DARB(_ target:GL.Enum, _ level:GL.Int, _ internalformat:GL.Enum, _ width:GL.Size, _ height:GL.Size, _ depth:GL.Size, _ border:GL.Int, _ imageSize:GL.Size, _ data:UnsafeRawPointer?)
{
    fp_glCompressedTexImage3DARB(target, level, internalformat, width, height, depth, border, imageSize, data)
}

var fp_glCompressedTexImage3DOES:@convention(c) (GL.Enum, GL.Int, GL.Enum, GL.Size, GL.Size, GL.Size, GL.Int, GL.Size, UnsafeRawPointer?) -> () = load_glCompressedTexImage3DOES
func load_glCompressedTexImage3DOES(target:GL.Enum, level:GL.Int, internalformat:GL.Enum, width:GL.Size, height:GL.Size, depth:GL.Size, border:GL.Int, imageSize:GL.Size, data:UnsafeRawPointer?)
{
    fp_glCompressedTexImage3DOES = unsafeBitCast(get_fp("glCompressedTexImage3DOES", support: [ss304]), to: Swift.type(of: fp_glCompressedTexImage3DOES))
    fp_glCompressedTexImage3DOES(target, level, internalformat, width, height, depth, border, imageSize, data)
}
public
func glCompressedTexImage3DOES(target:GL.Enum, level:GL.Int, internalformat:GL.Enum, width:GL.Size, height:GL.Size, depth:GL.Size, border:GL.Int, imageSize:GL.Size, data:UnsafeRawPointer?)
{
    fp_glCompressedTexImage3DOES(target, level, internalformat, width, height, depth, border, imageSize, data)
}
public
func glCompressedTexImage3DOES(_ target:GL.Enum, _ level:GL.Int, _ internalformat:GL.Enum, _ width:GL.Size, _ height:GL.Size, _ depth:GL.Size, _ border:GL.Int, _ imageSize:GL.Size, _ data:UnsafeRawPointer?)
{
    fp_glCompressedTexImage3DOES(target, level, internalformat, width, height, depth, border, imageSize, data)
}

var fp_glCompressedTexSubImage1D:@convention(c) (GL.Enum, GL.Int, GL.Int, GL.Size, GL.Enum, GL.Size, UnsafeRawPointer?) -> () = load_glCompressedTexSubImage1D
func load_glCompressedTexSubImage1D(target:GL.Enum, level:GL.Int, xoffset:GL.Int, width:GL.Size, format:GL.Enum, imageSize:GL.Size, data:UnsafeRawPointer?)
{
    fp_glCompressedTexSubImage1D = unsafeBitCast(get_fp("glCompressedTexSubImage1D", support: [ss349]), to: Swift.type(of: fp_glCompressedTexSubImage1D))
    fp_glCompressedTexSubImage1D(target, level, xoffset, width, format, imageSize, data)
}
public
func glCompressedTexSubImage1D(target:GL.Enum, level:GL.Int, xoffset:GL.Int, width:GL.Size, format:GL.Enum, imageSize:GL.Size, data:UnsafeRawPointer?)
{
    fp_glCompressedTexSubImage1D(target, level, xoffset, width, format, imageSize, data)
}
public
func glCompressedTexSubImage1D(_ target:GL.Enum, _ level:GL.Int, _ xoffset:GL.Int, _ width:GL.Size, _ format:GL.Enum, _ imageSize:GL.Size, _ data:UnsafeRawPointer?)
{
    fp_glCompressedTexSubImage1D(target, level, xoffset, width, format, imageSize, data)
}

var fp_glCompressedTexSubImage1DARB:@convention(c) (GL.Enum, GL.Int, GL.Int, GL.Size, GL.Enum, GL.Size, UnsafeRawPointer?) -> () = load_glCompressedTexSubImage1DARB
func load_glCompressedTexSubImage1DARB(target:GL.Enum, level:GL.Int, xoffset:GL.Int, width:GL.Size, format:GL.Enum, imageSize:GL.Size, data:UnsafeRawPointer?)
{
    fp_glCompressedTexSubImage1DARB = unsafeBitCast(get_fp("glCompressedTexSubImage1DARB", support: [ss94]), to: Swift.type(of: fp_glCompressedTexSubImage1DARB))
    fp_glCompressedTexSubImage1DARB(target, level, xoffset, width, format, imageSize, data)
}
public
func glCompressedTexSubImage1DARB(target:GL.Enum, level:GL.Int, xoffset:GL.Int, width:GL.Size, format:GL.Enum, imageSize:GL.Size, data:UnsafeRawPointer?)
{
    fp_glCompressedTexSubImage1DARB(target, level, xoffset, width, format, imageSize, data)
}
public
func glCompressedTexSubImage1DARB(_ target:GL.Enum, _ level:GL.Int, _ xoffset:GL.Int, _ width:GL.Size, _ format:GL.Enum, _ imageSize:GL.Size, _ data:UnsafeRawPointer?)
{
    fp_glCompressedTexSubImage1DARB(target, level, xoffset, width, format, imageSize, data)
}

var fp_glCompressedTexSubImage2D:@convention(c) (GL.Enum, GL.Int, GL.Int, GL.Int, GL.Size, GL.Size, GL.Enum, GL.Size, UnsafeRawPointer?) -> () = load_glCompressedTexSubImage2D
func load_glCompressedTexSubImage2D(target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, width:GL.Size, height:GL.Size, format:GL.Enum, imageSize:GL.Size, data:UnsafeRawPointer?)
{
    fp_glCompressedTexSubImage2D = unsafeBitCast(get_fp("glCompressedTexSubImage2D", support: [ss349, ss365]), to: Swift.type(of: fp_glCompressedTexSubImage2D))
    fp_glCompressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, imageSize, data)
}
public
func glCompressedTexSubImage2D(target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, width:GL.Size, height:GL.Size, format:GL.Enum, imageSize:GL.Size, data:UnsafeRawPointer?)
{
    fp_glCompressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, imageSize, data)
}
public
func glCompressedTexSubImage2D(_ target:GL.Enum, _ level:GL.Int, _ xoffset:GL.Int, _ yoffset:GL.Int, _ width:GL.Size, _ height:GL.Size, _ format:GL.Enum, _ imageSize:GL.Size, _ data:UnsafeRawPointer?)
{
    fp_glCompressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, imageSize, data)
}

var fp_glCompressedTexSubImage2DARB:@convention(c) (GL.Enum, GL.Int, GL.Int, GL.Int, GL.Size, GL.Size, GL.Enum, GL.Size, UnsafeRawPointer?) -> () = load_glCompressedTexSubImage2DARB
func load_glCompressedTexSubImage2DARB(target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, width:GL.Size, height:GL.Size, format:GL.Enum, imageSize:GL.Size, data:UnsafeRawPointer?)
{
    fp_glCompressedTexSubImage2DARB = unsafeBitCast(get_fp("glCompressedTexSubImage2DARB", support: [ss94]), to: Swift.type(of: fp_glCompressedTexSubImage2DARB))
    fp_glCompressedTexSubImage2DARB(target, level, xoffset, yoffset, width, height, format, imageSize, data)
}
public
func glCompressedTexSubImage2DARB(target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, width:GL.Size, height:GL.Size, format:GL.Enum, imageSize:GL.Size, data:UnsafeRawPointer?)
{
    fp_glCompressedTexSubImage2DARB(target, level, xoffset, yoffset, width, height, format, imageSize, data)
}
public
func glCompressedTexSubImage2DARB(_ target:GL.Enum, _ level:GL.Int, _ xoffset:GL.Int, _ yoffset:GL.Int, _ width:GL.Size, _ height:GL.Size, _ format:GL.Enum, _ imageSize:GL.Size, _ data:UnsafeRawPointer?)
{
    fp_glCompressedTexSubImage2DARB(target, level, xoffset, yoffset, width, height, format, imageSize, data)
}

var fp_glCompressedTexSubImage3D:@convention(c) (GL.Enum, GL.Int, GL.Int, GL.Int, GL.Int, GL.Size, GL.Size, GL.Size, GL.Enum, GL.Size, UnsafeRawPointer?) -> () = load_glCompressedTexSubImage3D
func load_glCompressedTexSubImage3D(target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, zoffset:GL.Int, width:GL.Size, height:GL.Size, depth:GL.Size, format:GL.Enum, imageSize:GL.Size, data:UnsafeRawPointer?)
{
    fp_glCompressedTexSubImage3D = unsafeBitCast(get_fp("glCompressedTexSubImage3D", support: [ss349, ss366]), to: Swift.type(of: fp_glCompressedTexSubImage3D))
    fp_glCompressedTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data)
}
public
func glCompressedTexSubImage3D(target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, zoffset:GL.Int, width:GL.Size, height:GL.Size, depth:GL.Size, format:GL.Enum, imageSize:GL.Size, data:UnsafeRawPointer?)
{
    fp_glCompressedTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data)
}
public
func glCompressedTexSubImage3D(_ target:GL.Enum, _ level:GL.Int, _ xoffset:GL.Int, _ yoffset:GL.Int, _ zoffset:GL.Int, _ width:GL.Size, _ height:GL.Size, _ depth:GL.Size, _ format:GL.Enum, _ imageSize:GL.Size, _ data:UnsafeRawPointer?)
{
    fp_glCompressedTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data)
}

var fp_glCompressedTexSubImage3DARB:@convention(c) (GL.Enum, GL.Int, GL.Int, GL.Int, GL.Int, GL.Size, GL.Size, GL.Size, GL.Enum, GL.Size, UnsafeRawPointer?) -> () = load_glCompressedTexSubImage3DARB
func load_glCompressedTexSubImage3DARB(target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, zoffset:GL.Int, width:GL.Size, height:GL.Size, depth:GL.Size, format:GL.Enum, imageSize:GL.Size, data:UnsafeRawPointer?)
{
    fp_glCompressedTexSubImage3DARB = unsafeBitCast(get_fp("glCompressedTexSubImage3DARB", support: [ss94]), to: Swift.type(of: fp_glCompressedTexSubImage3DARB))
    fp_glCompressedTexSubImage3DARB(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data)
}
public
func glCompressedTexSubImage3DARB(target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, zoffset:GL.Int, width:GL.Size, height:GL.Size, depth:GL.Size, format:GL.Enum, imageSize:GL.Size, data:UnsafeRawPointer?)
{
    fp_glCompressedTexSubImage3DARB(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data)
}
public
func glCompressedTexSubImage3DARB(_ target:GL.Enum, _ level:GL.Int, _ xoffset:GL.Int, _ yoffset:GL.Int, _ zoffset:GL.Int, _ width:GL.Size, _ height:GL.Size, _ depth:GL.Size, _ format:GL.Enum, _ imageSize:GL.Size, _ data:UnsafeRawPointer?)
{
    fp_glCompressedTexSubImage3DARB(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data)
}

var fp_glCompressedTexSubImage3DOES:@convention(c) (GL.Enum, GL.Int, GL.Int, GL.Int, GL.Int, GL.Size, GL.Size, GL.Size, GL.Enum, GL.Size, UnsafeRawPointer?) -> () = load_glCompressedTexSubImage3DOES
func load_glCompressedTexSubImage3DOES(target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, zoffset:GL.Int, width:GL.Size, height:GL.Size, depth:GL.Size, format:GL.Enum, imageSize:GL.Size, data:UnsafeRawPointer?)
{
    fp_glCompressedTexSubImage3DOES = unsafeBitCast(get_fp("glCompressedTexSubImage3DOES", support: [ss304]), to: Swift.type(of: fp_glCompressedTexSubImage3DOES))
    fp_glCompressedTexSubImage3DOES(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data)
}
public
func glCompressedTexSubImage3DOES(target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, zoffset:GL.Int, width:GL.Size, height:GL.Size, depth:GL.Size, format:GL.Enum, imageSize:GL.Size, data:UnsafeRawPointer?)
{
    fp_glCompressedTexSubImage3DOES(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data)
}
public
func glCompressedTexSubImage3DOES(_ target:GL.Enum, _ level:GL.Int, _ xoffset:GL.Int, _ yoffset:GL.Int, _ zoffset:GL.Int, _ width:GL.Size, _ height:GL.Size, _ depth:GL.Size, _ format:GL.Enum, _ imageSize:GL.Size, _ data:UnsafeRawPointer?)
{
    fp_glCompressedTexSubImage3DOES(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data)
}

var fp_glCompressedTextureImage1DEXT:@convention(c) (GL.UInt, GL.Enum, GL.Int, GL.Enum, GL.Size, GL.Int, GL.Size, UnsafeRawPointer?) -> () = load_glCompressedTextureImage1DEXT
func load_glCompressedTextureImage1DEXT(texture:GL.UInt, target:GL.Enum, level:GL.Int, internalformat:GL.Enum, width:GL.Size, border:GL.Int, imageSize:GL.Size, bits:UnsafeRawPointer?)
{
    fp_glCompressedTextureImage1DEXT = unsafeBitCast(get_fp("glCompressedTextureImage1DEXT", support: [ss143]), to: Swift.type(of: fp_glCompressedTextureImage1DEXT))
    fp_glCompressedTextureImage1DEXT(texture, target, level, internalformat, width, border, imageSize, bits)
}
public
func glCompressedTextureImage1DEXT(texture:GL.UInt, target:GL.Enum, level:GL.Int, internalformat:GL.Enum, width:GL.Size, border:GL.Int, imageSize:GL.Size, bits:UnsafeRawPointer?)
{
    fp_glCompressedTextureImage1DEXT(texture, target, level, internalformat, width, border, imageSize, bits)
}
public
func glCompressedTextureImage1DEXT(_ texture:GL.UInt, _ target:GL.Enum, _ level:GL.Int, _ internalformat:GL.Enum, _ width:GL.Size, _ border:GL.Int, _ imageSize:GL.Size, _ bits:UnsafeRawPointer?)
{
    fp_glCompressedTextureImage1DEXT(texture, target, level, internalformat, width, border, imageSize, bits)
}

var fp_glCompressedTextureImage2DEXT:@convention(c) (GL.UInt, GL.Enum, GL.Int, GL.Enum, GL.Size, GL.Size, GL.Int, GL.Size, UnsafeRawPointer?) -> () = load_glCompressedTextureImage2DEXT
func load_glCompressedTextureImage2DEXT(texture:GL.UInt, target:GL.Enum, level:GL.Int, internalformat:GL.Enum, width:GL.Size, height:GL.Size, border:GL.Int, imageSize:GL.Size, bits:UnsafeRawPointer?)
{
    fp_glCompressedTextureImage2DEXT = unsafeBitCast(get_fp("glCompressedTextureImage2DEXT", support: [ss143]), to: Swift.type(of: fp_glCompressedTextureImage2DEXT))
    fp_glCompressedTextureImage2DEXT(texture, target, level, internalformat, width, height, border, imageSize, bits)
}
public
func glCompressedTextureImage2DEXT(texture:GL.UInt, target:GL.Enum, level:GL.Int, internalformat:GL.Enum, width:GL.Size, height:GL.Size, border:GL.Int, imageSize:GL.Size, bits:UnsafeRawPointer?)
{
    fp_glCompressedTextureImage2DEXT(texture, target, level, internalformat, width, height, border, imageSize, bits)
}
public
func glCompressedTextureImage2DEXT(_ texture:GL.UInt, _ target:GL.Enum, _ level:GL.Int, _ internalformat:GL.Enum, _ width:GL.Size, _ height:GL.Size, _ border:GL.Int, _ imageSize:GL.Size, _ bits:UnsafeRawPointer?)
{
    fp_glCompressedTextureImage2DEXT(texture, target, level, internalformat, width, height, border, imageSize, bits)
}

var fp_glCompressedTextureImage3DEXT:@convention(c) (GL.UInt, GL.Enum, GL.Int, GL.Enum, GL.Size, GL.Size, GL.Size, GL.Int, GL.Size, UnsafeRawPointer?) -> () = load_glCompressedTextureImage3DEXT
func load_glCompressedTextureImage3DEXT(texture:GL.UInt, target:GL.Enum, level:GL.Int, internalformat:GL.Enum, width:GL.Size, height:GL.Size, depth:GL.Size, border:GL.Int, imageSize:GL.Size, bits:UnsafeRawPointer?)
{
    fp_glCompressedTextureImage3DEXT = unsafeBitCast(get_fp("glCompressedTextureImage3DEXT", support: [ss143]), to: Swift.type(of: fp_glCompressedTextureImage3DEXT))
    fp_glCompressedTextureImage3DEXT(texture, target, level, internalformat, width, height, depth, border, imageSize, bits)
}
public
func glCompressedTextureImage3DEXT(texture:GL.UInt, target:GL.Enum, level:GL.Int, internalformat:GL.Enum, width:GL.Size, height:GL.Size, depth:GL.Size, border:GL.Int, imageSize:GL.Size, bits:UnsafeRawPointer?)
{
    fp_glCompressedTextureImage3DEXT(texture, target, level, internalformat, width, height, depth, border, imageSize, bits)
}
public
func glCompressedTextureImage3DEXT(_ texture:GL.UInt, _ target:GL.Enum, _ level:GL.Int, _ internalformat:GL.Enum, _ width:GL.Size, _ height:GL.Size, _ depth:GL.Size, _ border:GL.Int, _ imageSize:GL.Size, _ bits:UnsafeRawPointer?)
{
    fp_glCompressedTextureImage3DEXT(texture, target, level, internalformat, width, height, depth, border, imageSize, bits)
}

var fp_glCompressedTextureSubImage1D:@convention(c) (GL.UInt, GL.Int, GL.Int, GL.Size, GL.Enum, GL.Size, UnsafeRawPointer?) -> () = load_glCompressedTextureSubImage1D
func load_glCompressedTextureSubImage1D(texture:GL.UInt, level:GL.Int, xoffset:GL.Int, width:GL.Size, format:GL.Enum, imageSize:GL.Size, data:UnsafeRawPointer?)
{
    fp_glCompressedTextureSubImage1D = unsafeBitCast(get_fp("glCompressedTextureSubImage1D", support: [ss363, ss42]), to: Swift.type(of: fp_glCompressedTextureSubImage1D))
    fp_glCompressedTextureSubImage1D(texture, level, xoffset, width, format, imageSize, data)
}
public
func glCompressedTextureSubImage1D(texture:GL.UInt, level:GL.Int, xoffset:GL.Int, width:GL.Size, format:GL.Enum, imageSize:GL.Size, data:UnsafeRawPointer?)
{
    fp_glCompressedTextureSubImage1D(texture, level, xoffset, width, format, imageSize, data)
}
public
func glCompressedTextureSubImage1D(_ texture:GL.UInt, _ level:GL.Int, _ xoffset:GL.Int, _ width:GL.Size, _ format:GL.Enum, _ imageSize:GL.Size, _ data:UnsafeRawPointer?)
{
    fp_glCompressedTextureSubImage1D(texture, level, xoffset, width, format, imageSize, data)
}

var fp_glCompressedTextureSubImage1DEXT:@convention(c) (GL.UInt, GL.Enum, GL.Int, GL.Int, GL.Size, GL.Enum, GL.Size, UnsafeRawPointer?) -> () = load_glCompressedTextureSubImage1DEXT
func load_glCompressedTextureSubImage1DEXT(texture:GL.UInt, target:GL.Enum, level:GL.Int, xoffset:GL.Int, width:GL.Size, format:GL.Enum, imageSize:GL.Size, bits:UnsafeRawPointer?)
{
    fp_glCompressedTextureSubImage1DEXT = unsafeBitCast(get_fp("glCompressedTextureSubImage1DEXT", support: [ss143]), to: Swift.type(of: fp_glCompressedTextureSubImage1DEXT))
    fp_glCompressedTextureSubImage1DEXT(texture, target, level, xoffset, width, format, imageSize, bits)
}
public
func glCompressedTextureSubImage1DEXT(texture:GL.UInt, target:GL.Enum, level:GL.Int, xoffset:GL.Int, width:GL.Size, format:GL.Enum, imageSize:GL.Size, bits:UnsafeRawPointer?)
{
    fp_glCompressedTextureSubImage1DEXT(texture, target, level, xoffset, width, format, imageSize, bits)
}
public
func glCompressedTextureSubImage1DEXT(_ texture:GL.UInt, _ target:GL.Enum, _ level:GL.Int, _ xoffset:GL.Int, _ width:GL.Size, _ format:GL.Enum, _ imageSize:GL.Size, _ bits:UnsafeRawPointer?)
{
    fp_glCompressedTextureSubImage1DEXT(texture, target, level, xoffset, width, format, imageSize, bits)
}

var fp_glCompressedTextureSubImage2D:@convention(c) (GL.UInt, GL.Int, GL.Int, GL.Int, GL.Size, GL.Size, GL.Enum, GL.Size, UnsafeRawPointer?) -> () = load_glCompressedTextureSubImage2D
func load_glCompressedTextureSubImage2D(texture:GL.UInt, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, width:GL.Size, height:GL.Size, format:GL.Enum, imageSize:GL.Size, data:UnsafeRawPointer?)
{
    fp_glCompressedTextureSubImage2D = unsafeBitCast(get_fp("glCompressedTextureSubImage2D", support: [ss363, ss42]), to: Swift.type(of: fp_glCompressedTextureSubImage2D))
    fp_glCompressedTextureSubImage2D(texture, level, xoffset, yoffset, width, height, format, imageSize, data)
}
public
func glCompressedTextureSubImage2D(texture:GL.UInt, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, width:GL.Size, height:GL.Size, format:GL.Enum, imageSize:GL.Size, data:UnsafeRawPointer?)
{
    fp_glCompressedTextureSubImage2D(texture, level, xoffset, yoffset, width, height, format, imageSize, data)
}
public
func glCompressedTextureSubImage2D(_ texture:GL.UInt, _ level:GL.Int, _ xoffset:GL.Int, _ yoffset:GL.Int, _ width:GL.Size, _ height:GL.Size, _ format:GL.Enum, _ imageSize:GL.Size, _ data:UnsafeRawPointer?)
{
    fp_glCompressedTextureSubImage2D(texture, level, xoffset, yoffset, width, height, format, imageSize, data)
}

var fp_glCompressedTextureSubImage2DEXT:@convention(c) (GL.UInt, GL.Enum, GL.Int, GL.Int, GL.Int, GL.Size, GL.Size, GL.Enum, GL.Size, UnsafeRawPointer?) -> () = load_glCompressedTextureSubImage2DEXT
func load_glCompressedTextureSubImage2DEXT(texture:GL.UInt, target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, width:GL.Size, height:GL.Size, format:GL.Enum, imageSize:GL.Size, bits:UnsafeRawPointer?)
{
    fp_glCompressedTextureSubImage2DEXT = unsafeBitCast(get_fp("glCompressedTextureSubImage2DEXT", support: [ss143]), to: Swift.type(of: fp_glCompressedTextureSubImage2DEXT))
    fp_glCompressedTextureSubImage2DEXT(texture, target, level, xoffset, yoffset, width, height, format, imageSize, bits)
}
public
func glCompressedTextureSubImage2DEXT(texture:GL.UInt, target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, width:GL.Size, height:GL.Size, format:GL.Enum, imageSize:GL.Size, bits:UnsafeRawPointer?)
{
    fp_glCompressedTextureSubImage2DEXT(texture, target, level, xoffset, yoffset, width, height, format, imageSize, bits)
}
public
func glCompressedTextureSubImage2DEXT(_ texture:GL.UInt, _ target:GL.Enum, _ level:GL.Int, _ xoffset:GL.Int, _ yoffset:GL.Int, _ width:GL.Size, _ height:GL.Size, _ format:GL.Enum, _ imageSize:GL.Size, _ bits:UnsafeRawPointer?)
{
    fp_glCompressedTextureSubImage2DEXT(texture, target, level, xoffset, yoffset, width, height, format, imageSize, bits)
}

var fp_glCompressedTextureSubImage3D:@convention(c) (GL.UInt, GL.Int, GL.Int, GL.Int, GL.Int, GL.Size, GL.Size, GL.Size, GL.Enum, GL.Size, UnsafeRawPointer?) -> () = load_glCompressedTextureSubImage3D
func load_glCompressedTextureSubImage3D(texture:GL.UInt, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, zoffset:GL.Int, width:GL.Size, height:GL.Size, depth:GL.Size, format:GL.Enum, imageSize:GL.Size, data:UnsafeRawPointer?)
{
    fp_glCompressedTextureSubImage3D = unsafeBitCast(get_fp("glCompressedTextureSubImage3D", support: [ss363, ss42]), to: Swift.type(of: fp_glCompressedTextureSubImage3D))
    fp_glCompressedTextureSubImage3D(texture, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data)
}
public
func glCompressedTextureSubImage3D(texture:GL.UInt, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, zoffset:GL.Int, width:GL.Size, height:GL.Size, depth:GL.Size, format:GL.Enum, imageSize:GL.Size, data:UnsafeRawPointer?)
{
    fp_glCompressedTextureSubImage3D(texture, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data)
}
public
func glCompressedTextureSubImage3D(_ texture:GL.UInt, _ level:GL.Int, _ xoffset:GL.Int, _ yoffset:GL.Int, _ zoffset:GL.Int, _ width:GL.Size, _ height:GL.Size, _ depth:GL.Size, _ format:GL.Enum, _ imageSize:GL.Size, _ data:UnsafeRawPointer?)
{
    fp_glCompressedTextureSubImage3D(texture, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data)
}

var fp_glCompressedTextureSubImage3DEXT:@convention(c) (GL.UInt, GL.Enum, GL.Int, GL.Int, GL.Int, GL.Int, GL.Size, GL.Size, GL.Size, GL.Enum, GL.Size, UnsafeRawPointer?) -> () = load_glCompressedTextureSubImage3DEXT
func load_glCompressedTextureSubImage3DEXT(texture:GL.UInt, target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, zoffset:GL.Int, width:GL.Size, height:GL.Size, depth:GL.Size, format:GL.Enum, imageSize:GL.Size, bits:UnsafeRawPointer?)
{
    fp_glCompressedTextureSubImage3DEXT = unsafeBitCast(get_fp("glCompressedTextureSubImage3DEXT", support: [ss143]), to: Swift.type(of: fp_glCompressedTextureSubImage3DEXT))
    fp_glCompressedTextureSubImage3DEXT(texture, target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, bits)
}
public
func glCompressedTextureSubImage3DEXT(texture:GL.UInt, target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, zoffset:GL.Int, width:GL.Size, height:GL.Size, depth:GL.Size, format:GL.Enum, imageSize:GL.Size, bits:UnsafeRawPointer?)
{
    fp_glCompressedTextureSubImage3DEXT(texture, target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, bits)
}
public
func glCompressedTextureSubImage3DEXT(_ texture:GL.UInt, _ target:GL.Enum, _ level:GL.Int, _ xoffset:GL.Int, _ yoffset:GL.Int, _ zoffset:GL.Int, _ width:GL.Size, _ height:GL.Size, _ depth:GL.Size, _ format:GL.Enum, _ imageSize:GL.Size, _ bits:UnsafeRawPointer?)
{
    fp_glCompressedTextureSubImage3DEXT(texture, target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, bits)
}

var fp_glConservativeRasterParameterfNV:@convention(c) (GL.Enum, GL.Float) -> () = load_glConservativeRasterParameterfNV
func load_glConservativeRasterParameterfNV(pname:GL.Enum, value:GL.Float)
{
    fp_glConservativeRasterParameterfNV = unsafeBitCast(get_fp("glConservativeRasterParameterfNV", support: [ss231]), to: Swift.type(of: fp_glConservativeRasterParameterfNV))
    fp_glConservativeRasterParameterfNV(pname, value)
}
public
func glConservativeRasterParameterfNV(pname:GL.Enum, value:GL.Float)
{
    fp_glConservativeRasterParameterfNV(pname, value)
}
public
func glConservativeRasterParameterfNV(_ pname:GL.Enum, _ value:GL.Float)
{
    fp_glConservativeRasterParameterfNV(pname, value)
}

var fp_glConvolutionFilter1D:@convention(c) (GL.Enum, GL.Enum, GL.Size, GL.Enum, GL.Enum, UnsafeRawPointer?) -> () = load_glConvolutionFilter1D
func load_glConvolutionFilter1D(target:GL.Enum, internalformat:GL.Enum, width:GL.Size, format:GL.Enum, type:GL.Enum, image:UnsafeRawPointer?)
{
    fp_glConvolutionFilter1D = unsafeBitCast(get_fp("glConvolutionFilter1D", support: [ss59]), to: Swift.type(of: fp_glConvolutionFilter1D))
    fp_glConvolutionFilter1D(target, internalformat, width, format, type, image)
}
public
func glConvolutionFilter1D(target:GL.Enum, internalformat:GL.Enum, width:GL.Size, format:GL.Enum, type:GL.Enum, image:UnsafeRawPointer?)
{
    fp_glConvolutionFilter1D(target, internalformat, width, format, type, image)
}
public
func glConvolutionFilter1D(_ target:GL.Enum, _ internalformat:GL.Enum, _ width:GL.Size, _ format:GL.Enum, _ type:GL.Enum, _ image:UnsafeRawPointer?)
{
    fp_glConvolutionFilter1D(target, internalformat, width, format, type, image)
}

var fp_glConvolutionFilter1DEXT:@convention(c) (GL.Enum, GL.Enum, GL.Size, GL.Enum, GL.Enum, UnsafeRawPointer?) -> () = load_glConvolutionFilter1DEXT
func load_glConvolutionFilter1DEXT(target:GL.Enum, internalformat:GL.Enum, width:GL.Size, format:GL.Enum, type:GL.Enum, image:UnsafeRawPointer?)
{
    fp_glConvolutionFilter1DEXT = unsafeBitCast(get_fp("glConvolutionFilter1DEXT", support: [ss135]), to: Swift.type(of: fp_glConvolutionFilter1DEXT))
    fp_glConvolutionFilter1DEXT(target, internalformat, width, format, type, image)
}
public
func glConvolutionFilter1DEXT(target:GL.Enum, internalformat:GL.Enum, width:GL.Size, format:GL.Enum, type:GL.Enum, image:UnsafeRawPointer?)
{
    fp_glConvolutionFilter1DEXT(target, internalformat, width, format, type, image)
}
public
func glConvolutionFilter1DEXT(_ target:GL.Enum, _ internalformat:GL.Enum, _ width:GL.Size, _ format:GL.Enum, _ type:GL.Enum, _ image:UnsafeRawPointer?)
{
    fp_glConvolutionFilter1DEXT(target, internalformat, width, format, type, image)
}

var fp_glConvolutionFilter2D:@convention(c) (GL.Enum, GL.Enum, GL.Size, GL.Size, GL.Enum, GL.Enum, UnsafeRawPointer?) -> () = load_glConvolutionFilter2D
func load_glConvolutionFilter2D(target:GL.Enum, internalformat:GL.Enum, width:GL.Size, height:GL.Size, format:GL.Enum, type:GL.Enum, image:UnsafeRawPointer?)
{
    fp_glConvolutionFilter2D = unsafeBitCast(get_fp("glConvolutionFilter2D", support: [ss59]), to: Swift.type(of: fp_glConvolutionFilter2D))
    fp_glConvolutionFilter2D(target, internalformat, width, height, format, type, image)
}
public
func glConvolutionFilter2D(target:GL.Enum, internalformat:GL.Enum, width:GL.Size, height:GL.Size, format:GL.Enum, type:GL.Enum, image:UnsafeRawPointer?)
{
    fp_glConvolutionFilter2D(target, internalformat, width, height, format, type, image)
}
public
func glConvolutionFilter2D(_ target:GL.Enum, _ internalformat:GL.Enum, _ width:GL.Size, _ height:GL.Size, _ format:GL.Enum, _ type:GL.Enum, _ image:UnsafeRawPointer?)
{
    fp_glConvolutionFilter2D(target, internalformat, width, height, format, type, image)
}

var fp_glConvolutionFilter2DEXT:@convention(c) (GL.Enum, GL.Enum, GL.Size, GL.Size, GL.Enum, GL.Enum, UnsafeRawPointer?) -> () = load_glConvolutionFilter2DEXT
func load_glConvolutionFilter2DEXT(target:GL.Enum, internalformat:GL.Enum, width:GL.Size, height:GL.Size, format:GL.Enum, type:GL.Enum, image:UnsafeRawPointer?)
{
    fp_glConvolutionFilter2DEXT = unsafeBitCast(get_fp("glConvolutionFilter2DEXT", support: [ss135]), to: Swift.type(of: fp_glConvolutionFilter2DEXT))
    fp_glConvolutionFilter2DEXT(target, internalformat, width, height, format, type, image)
}
public
func glConvolutionFilter2DEXT(target:GL.Enum, internalformat:GL.Enum, width:GL.Size, height:GL.Size, format:GL.Enum, type:GL.Enum, image:UnsafeRawPointer?)
{
    fp_glConvolutionFilter2DEXT(target, internalformat, width, height, format, type, image)
}
public
func glConvolutionFilter2DEXT(_ target:GL.Enum, _ internalformat:GL.Enum, _ width:GL.Size, _ height:GL.Size, _ format:GL.Enum, _ type:GL.Enum, _ image:UnsafeRawPointer?)
{
    fp_glConvolutionFilter2DEXT(target, internalformat, width, height, format, type, image)
}

var fp_glConvolutionParameterf:@convention(c) (GL.Enum, GL.Enum, GL.Float) -> () = load_glConvolutionParameterf
func load_glConvolutionParameterf(target:GL.Enum, pname:GL.Enum, params:GL.Float)
{
    fp_glConvolutionParameterf = unsafeBitCast(get_fp("glConvolutionParameterf", support: [ss59]), to: Swift.type(of: fp_glConvolutionParameterf))
    fp_glConvolutionParameterf(target, pname, params)
}
public
func glConvolutionParameterf(target:GL.Enum, pname:GL.Enum, params:GL.Float)
{
    fp_glConvolutionParameterf(target, pname, params)
}
public
func glConvolutionParameterf(_ target:GL.Enum, _ pname:GL.Enum, _ params:GL.Float)
{
    fp_glConvolutionParameterf(target, pname, params)
}

var fp_glConvolutionParameterfEXT:@convention(c) (GL.Enum, GL.Enum, GL.Float) -> () = load_glConvolutionParameterfEXT
func load_glConvolutionParameterfEXT(target:GL.Enum, pname:GL.Enum, params:GL.Float)
{
    fp_glConvolutionParameterfEXT = unsafeBitCast(get_fp("glConvolutionParameterfEXT", support: [ss135]), to: Swift.type(of: fp_glConvolutionParameterfEXT))
    fp_glConvolutionParameterfEXT(target, pname, params)
}
public
func glConvolutionParameterfEXT(target:GL.Enum, pname:GL.Enum, params:GL.Float)
{
    fp_glConvolutionParameterfEXT(target, pname, params)
}
public
func glConvolutionParameterfEXT(_ target:GL.Enum, _ pname:GL.Enum, _ params:GL.Float)
{
    fp_glConvolutionParameterfEXT(target, pname, params)
}

var fp_glConvolutionParameterfv:@convention(c) (GL.Enum, GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glConvolutionParameterfv
func load_glConvolutionParameterfv(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glConvolutionParameterfv = unsafeBitCast(get_fp("glConvolutionParameterfv", support: [ss59]), to: Swift.type(of: fp_glConvolutionParameterfv))
    fp_glConvolutionParameterfv(target, pname, params)
}
public
func glConvolutionParameterfv(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glConvolutionParameterfv(target, pname, params)
}
public
func glConvolutionParameterfv(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.Float>?)
{
    fp_glConvolutionParameterfv(target, pname, params)
}

var fp_glConvolutionParameterfvEXT:@convention(c) (GL.Enum, GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glConvolutionParameterfvEXT
func load_glConvolutionParameterfvEXT(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glConvolutionParameterfvEXT = unsafeBitCast(get_fp("glConvolutionParameterfvEXT", support: [ss135]), to: Swift.type(of: fp_glConvolutionParameterfvEXT))
    fp_glConvolutionParameterfvEXT(target, pname, params)
}
public
func glConvolutionParameterfvEXT(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glConvolutionParameterfvEXT(target, pname, params)
}
public
func glConvolutionParameterfvEXT(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.Float>?)
{
    fp_glConvolutionParameterfvEXT(target, pname, params)
}

var fp_glConvolutionParameteri:@convention(c) (GL.Enum, GL.Enum, GL.Int) -> () = load_glConvolutionParameteri
func load_glConvolutionParameteri(target:GL.Enum, pname:GL.Enum, params:GL.Int)
{
    fp_glConvolutionParameteri = unsafeBitCast(get_fp("glConvolutionParameteri", support: [ss59]), to: Swift.type(of: fp_glConvolutionParameteri))
    fp_glConvolutionParameteri(target, pname, params)
}
public
func glConvolutionParameteri(target:GL.Enum, pname:GL.Enum, params:GL.Int)
{
    fp_glConvolutionParameteri(target, pname, params)
}
public
func glConvolutionParameteri(_ target:GL.Enum, _ pname:GL.Enum, _ params:GL.Int)
{
    fp_glConvolutionParameteri(target, pname, params)
}

var fp_glConvolutionParameteriEXT:@convention(c) (GL.Enum, GL.Enum, GL.Int) -> () = load_glConvolutionParameteriEXT
func load_glConvolutionParameteriEXT(target:GL.Enum, pname:GL.Enum, params:GL.Int)
{
    fp_glConvolutionParameteriEXT = unsafeBitCast(get_fp("glConvolutionParameteriEXT", support: [ss135]), to: Swift.type(of: fp_glConvolutionParameteriEXT))
    fp_glConvolutionParameteriEXT(target, pname, params)
}
public
func glConvolutionParameteriEXT(target:GL.Enum, pname:GL.Enum, params:GL.Int)
{
    fp_glConvolutionParameteriEXT(target, pname, params)
}
public
func glConvolutionParameteriEXT(_ target:GL.Enum, _ pname:GL.Enum, _ params:GL.Int)
{
    fp_glConvolutionParameteriEXT(target, pname, params)
}

var fp_glConvolutionParameteriv:@convention(c) (GL.Enum, GL.Enum, UnsafePointer<GL.Int>?) -> () = load_glConvolutionParameteriv
func load_glConvolutionParameteriv(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glConvolutionParameteriv = unsafeBitCast(get_fp("glConvolutionParameteriv", support: [ss59]), to: Swift.type(of: fp_glConvolutionParameteriv))
    fp_glConvolutionParameteriv(target, pname, params)
}
public
func glConvolutionParameteriv(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glConvolutionParameteriv(target, pname, params)
}
public
func glConvolutionParameteriv(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.Int>?)
{
    fp_glConvolutionParameteriv(target, pname, params)
}

var fp_glConvolutionParameterivEXT:@convention(c) (GL.Enum, GL.Enum, UnsafePointer<GL.Int>?) -> () = load_glConvolutionParameterivEXT
func load_glConvolutionParameterivEXT(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glConvolutionParameterivEXT = unsafeBitCast(get_fp("glConvolutionParameterivEXT", support: [ss135]), to: Swift.type(of: fp_glConvolutionParameterivEXT))
    fp_glConvolutionParameterivEXT(target, pname, params)
}
public
func glConvolutionParameterivEXT(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glConvolutionParameterivEXT(target, pname, params)
}
public
func glConvolutionParameterivEXT(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.Int>?)
{
    fp_glConvolutionParameterivEXT(target, pname, params)
}

var fp_glConvolutionParameterxOES:@convention(c) (GL.Enum, GL.Enum, GL.Fixed) -> () = load_glConvolutionParameterxOES
func load_glConvolutionParameterxOES(target:GL.Enum, pname:GL.Enum, param:GL.Fixed)
{
    fp_glConvolutionParameterxOES = unsafeBitCast(get_fp("glConvolutionParameterxOES", support: [ss292]), to: Swift.type(of: fp_glConvolutionParameterxOES))
    fp_glConvolutionParameterxOES(target, pname, param)
}
public
func glConvolutionParameterxOES(target:GL.Enum, pname:GL.Enum, param:GL.Fixed)
{
    fp_glConvolutionParameterxOES(target, pname, param)
}
public
func glConvolutionParameterxOES(_ target:GL.Enum, _ pname:GL.Enum, _ param:GL.Fixed)
{
    fp_glConvolutionParameterxOES(target, pname, param)
}

var fp_glConvolutionParameterxvOES:@convention(c) (GL.Enum, GL.Enum, UnsafePointer<GL.Fixed>?) -> () = load_glConvolutionParameterxvOES
func load_glConvolutionParameterxvOES(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Fixed>?)
{
    fp_glConvolutionParameterxvOES = unsafeBitCast(get_fp("glConvolutionParameterxvOES", support: [ss292]), to: Swift.type(of: fp_glConvolutionParameterxvOES))
    fp_glConvolutionParameterxvOES(target, pname, params)
}
public
func glConvolutionParameterxvOES(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Fixed>?)
{
    fp_glConvolutionParameterxvOES(target, pname, params)
}
public
func glConvolutionParameterxvOES(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.Fixed>?)
{
    fp_glConvolutionParameterxvOES(target, pname, params)
}

var fp_glCopyBufferSubData:@convention(c) (GL.Enum, GL.Enum, GL.IntPointer, GL.IntPointer, GL.SizePointer) -> () = load_glCopyBufferSubData
func load_glCopyBufferSubData(readTarget:GL.Enum, writeTarget:GL.Enum, readOffset:GL.IntPointer, writeOffset:GL.IntPointer, size:GL.SizePointer)
{
    fp_glCopyBufferSubData = unsafeBitCast(get_fp("glCopyBufferSubData", support: [ss355, ss366, ss39]), to: Swift.type(of: fp_glCopyBufferSubData))
    fp_glCopyBufferSubData(readTarget, writeTarget, readOffset, writeOffset, size)
}
public
func glCopyBufferSubData(readTarget:GL.Enum, writeTarget:GL.Enum, readOffset:GL.IntPointer, writeOffset:GL.IntPointer, size:GL.SizePointer)
{
    fp_glCopyBufferSubData(readTarget, writeTarget, readOffset, writeOffset, size)
}
public
func glCopyBufferSubData(_ readTarget:GL.Enum, _ writeTarget:GL.Enum, _ readOffset:GL.IntPointer, _ writeOffset:GL.IntPointer, _ size:GL.SizePointer)
{
    fp_glCopyBufferSubData(readTarget, writeTarget, readOffset, writeOffset, size)
}

var fp_glCopyBufferSubDataNV:@convention(c) (GL.Enum, GL.Enum, GL.IntPointer, GL.IntPointer, GL.SizePointer) -> () = load_glCopyBufferSubDataNV
func load_glCopyBufferSubDataNV(readTarget:GL.Enum, writeTarget:GL.Enum, readOffset:GL.IntPointer, writeOffset:GL.IntPointer, size:GL.SizePointer)
{
    fp_glCopyBufferSubDataNV = unsafeBitCast(get_fp("glCopyBufferSubDataNV", support: [ss233]), to: Swift.type(of: fp_glCopyBufferSubDataNV))
    fp_glCopyBufferSubDataNV(readTarget, writeTarget, readOffset, writeOffset, size)
}
public
func glCopyBufferSubDataNV(readTarget:GL.Enum, writeTarget:GL.Enum, readOffset:GL.IntPointer, writeOffset:GL.IntPointer, size:GL.SizePointer)
{
    fp_glCopyBufferSubDataNV(readTarget, writeTarget, readOffset, writeOffset, size)
}
public
func glCopyBufferSubDataNV(_ readTarget:GL.Enum, _ writeTarget:GL.Enum, _ readOffset:GL.IntPointer, _ writeOffset:GL.IntPointer, _ size:GL.SizePointer)
{
    fp_glCopyBufferSubDataNV(readTarget, writeTarget, readOffset, writeOffset, size)
}

var fp_glCopyColorSubTable:@convention(c) (GL.Enum, GL.Size, GL.Int, GL.Int, GL.Size) -> () = load_glCopyColorSubTable
func load_glCopyColorSubTable(target:GL.Enum, start:GL.Size, x:GL.Int, y:GL.Int, width:GL.Size)
{
    fp_glCopyColorSubTable = unsafeBitCast(get_fp("glCopyColorSubTable", support: [ss59]), to: Swift.type(of: fp_glCopyColorSubTable))
    fp_glCopyColorSubTable(target, start, x, y, width)
}
public
func glCopyColorSubTable(target:GL.Enum, start:GL.Size, x:GL.Int, y:GL.Int, width:GL.Size)
{
    fp_glCopyColorSubTable(target, start, x, y, width)
}
public
func glCopyColorSubTable(_ target:GL.Enum, _ start:GL.Size, _ x:GL.Int, _ y:GL.Int, _ width:GL.Size)
{
    fp_glCopyColorSubTable(target, start, x, y, width)
}

var fp_glCopyColorSubTableEXT:@convention(c) (GL.Enum, GL.Size, GL.Int, GL.Int, GL.Size) -> () = load_glCopyColorSubTableEXT
func load_glCopyColorSubTableEXT(target:GL.Enum, start:GL.Size, x:GL.Int, y:GL.Int, width:GL.Size)
{
    fp_glCopyColorSubTableEXT = unsafeBitCast(get_fp("glCopyColorSubTableEXT", support: [ss133]), to: Swift.type(of: fp_glCopyColorSubTableEXT))
    fp_glCopyColorSubTableEXT(target, start, x, y, width)
}
public
func glCopyColorSubTableEXT(target:GL.Enum, start:GL.Size, x:GL.Int, y:GL.Int, width:GL.Size)
{
    fp_glCopyColorSubTableEXT(target, start, x, y, width)
}
public
func glCopyColorSubTableEXT(_ target:GL.Enum, _ start:GL.Size, _ x:GL.Int, _ y:GL.Int, _ width:GL.Size)
{
    fp_glCopyColorSubTableEXT(target, start, x, y, width)
}

var fp_glCopyColorTable:@convention(c) (GL.Enum, GL.Enum, GL.Int, GL.Int, GL.Size) -> () = load_glCopyColorTable
func load_glCopyColorTable(target:GL.Enum, internalformat:GL.Enum, x:GL.Int, y:GL.Int, width:GL.Size)
{
    fp_glCopyColorTable = unsafeBitCast(get_fp("glCopyColorTable", support: [ss59]), to: Swift.type(of: fp_glCopyColorTable))
    fp_glCopyColorTable(target, internalformat, x, y, width)
}
public
func glCopyColorTable(target:GL.Enum, internalformat:GL.Enum, x:GL.Int, y:GL.Int, width:GL.Size)
{
    fp_glCopyColorTable(target, internalformat, x, y, width)
}
public
func glCopyColorTable(_ target:GL.Enum, _ internalformat:GL.Enum, _ x:GL.Int, _ y:GL.Int, _ width:GL.Size)
{
    fp_glCopyColorTable(target, internalformat, x, y, width)
}

var fp_glCopyColorTableSGI:@convention(c) (GL.Enum, GL.Enum, GL.Int, GL.Int, GL.Size) -> () = load_glCopyColorTableSGI
func load_glCopyColorTableSGI(target:GL.Enum, internalformat:GL.Enum, x:GL.Int, y:GL.Int, width:GL.Size)
{
    fp_glCopyColorTableSGI = unsafeBitCast(get_fp("glCopyColorTableSGI", support: [ss319]), to: Swift.type(of: fp_glCopyColorTableSGI))
    fp_glCopyColorTableSGI(target, internalformat, x, y, width)
}
public
func glCopyColorTableSGI(target:GL.Enum, internalformat:GL.Enum, x:GL.Int, y:GL.Int, width:GL.Size)
{
    fp_glCopyColorTableSGI(target, internalformat, x, y, width)
}
public
func glCopyColorTableSGI(_ target:GL.Enum, _ internalformat:GL.Enum, _ x:GL.Int, _ y:GL.Int, _ width:GL.Size)
{
    fp_glCopyColorTableSGI(target, internalformat, x, y, width)
}

var fp_glCopyConvolutionFilter1D:@convention(c) (GL.Enum, GL.Enum, GL.Int, GL.Int, GL.Size) -> () = load_glCopyConvolutionFilter1D
func load_glCopyConvolutionFilter1D(target:GL.Enum, internalformat:GL.Enum, x:GL.Int, y:GL.Int, width:GL.Size)
{
    fp_glCopyConvolutionFilter1D = unsafeBitCast(get_fp("glCopyConvolutionFilter1D", support: [ss59]), to: Swift.type(of: fp_glCopyConvolutionFilter1D))
    fp_glCopyConvolutionFilter1D(target, internalformat, x, y, width)
}
public
func glCopyConvolutionFilter1D(target:GL.Enum, internalformat:GL.Enum, x:GL.Int, y:GL.Int, width:GL.Size)
{
    fp_glCopyConvolutionFilter1D(target, internalformat, x, y, width)
}
public
func glCopyConvolutionFilter1D(_ target:GL.Enum, _ internalformat:GL.Enum, _ x:GL.Int, _ y:GL.Int, _ width:GL.Size)
{
    fp_glCopyConvolutionFilter1D(target, internalformat, x, y, width)
}

var fp_glCopyConvolutionFilter1DEXT:@convention(c) (GL.Enum, GL.Enum, GL.Int, GL.Int, GL.Size) -> () = load_glCopyConvolutionFilter1DEXT
func load_glCopyConvolutionFilter1DEXT(target:GL.Enum, internalformat:GL.Enum, x:GL.Int, y:GL.Int, width:GL.Size)
{
    fp_glCopyConvolutionFilter1DEXT = unsafeBitCast(get_fp("glCopyConvolutionFilter1DEXT", support: [ss135]), to: Swift.type(of: fp_glCopyConvolutionFilter1DEXT))
    fp_glCopyConvolutionFilter1DEXT(target, internalformat, x, y, width)
}
public
func glCopyConvolutionFilter1DEXT(target:GL.Enum, internalformat:GL.Enum, x:GL.Int, y:GL.Int, width:GL.Size)
{
    fp_glCopyConvolutionFilter1DEXT(target, internalformat, x, y, width)
}
public
func glCopyConvolutionFilter1DEXT(_ target:GL.Enum, _ internalformat:GL.Enum, _ x:GL.Int, _ y:GL.Int, _ width:GL.Size)
{
    fp_glCopyConvolutionFilter1DEXT(target, internalformat, x, y, width)
}

var fp_glCopyConvolutionFilter2D:@convention(c) (GL.Enum, GL.Enum, GL.Int, GL.Int, GL.Size, GL.Size) -> () = load_glCopyConvolutionFilter2D
func load_glCopyConvolutionFilter2D(target:GL.Enum, internalformat:GL.Enum, x:GL.Int, y:GL.Int, width:GL.Size, height:GL.Size)
{
    fp_glCopyConvolutionFilter2D = unsafeBitCast(get_fp("glCopyConvolutionFilter2D", support: [ss59]), to: Swift.type(of: fp_glCopyConvolutionFilter2D))
    fp_glCopyConvolutionFilter2D(target, internalformat, x, y, width, height)
}
public
func glCopyConvolutionFilter2D(target:GL.Enum, internalformat:GL.Enum, x:GL.Int, y:GL.Int, width:GL.Size, height:GL.Size)
{
    fp_glCopyConvolutionFilter2D(target, internalformat, x, y, width, height)
}
public
func glCopyConvolutionFilter2D(_ target:GL.Enum, _ internalformat:GL.Enum, _ x:GL.Int, _ y:GL.Int, _ width:GL.Size, _ height:GL.Size)
{
    fp_glCopyConvolutionFilter2D(target, internalformat, x, y, width, height)
}

var fp_glCopyConvolutionFilter2DEXT:@convention(c) (GL.Enum, GL.Enum, GL.Int, GL.Int, GL.Size, GL.Size) -> () = load_glCopyConvolutionFilter2DEXT
func load_glCopyConvolutionFilter2DEXT(target:GL.Enum, internalformat:GL.Enum, x:GL.Int, y:GL.Int, width:GL.Size, height:GL.Size)
{
    fp_glCopyConvolutionFilter2DEXT = unsafeBitCast(get_fp("glCopyConvolutionFilter2DEXT", support: [ss135]), to: Swift.type(of: fp_glCopyConvolutionFilter2DEXT))
    fp_glCopyConvolutionFilter2DEXT(target, internalformat, x, y, width, height)
}
public
func glCopyConvolutionFilter2DEXT(target:GL.Enum, internalformat:GL.Enum, x:GL.Int, y:GL.Int, width:GL.Size, height:GL.Size)
{
    fp_glCopyConvolutionFilter2DEXT(target, internalformat, x, y, width, height)
}
public
func glCopyConvolutionFilter2DEXT(_ target:GL.Enum, _ internalformat:GL.Enum, _ x:GL.Int, _ y:GL.Int, _ width:GL.Size, _ height:GL.Size)
{
    fp_glCopyConvolutionFilter2DEXT(target, internalformat, x, y, width, height)
}

var fp_glCopyImageSubData:@convention(c) (GL.UInt, GL.Enum, GL.Int, GL.Int, GL.Int, GL.Int, GL.UInt, GL.Enum, GL.Int, GL.Int, GL.Int, GL.Int, GL.Size, GL.Size, GL.Size) -> () = load_glCopyImageSubData
func load_glCopyImageSubData(srcName:GL.UInt, srcTarget:GL.Enum, srcLevel:GL.Int, srcX:GL.Int, srcY:GL.Int, srcZ:GL.Int, dstName:GL.UInt, dstTarget:GL.Enum, dstLevel:GL.Int, dstX:GL.Int, dstY:GL.Int, dstZ:GL.Int, srcWidth:GL.Size, srcHeight:GL.Size, srcDepth:GL.Size)
{
    fp_glCopyImageSubData = unsafeBitCast(get_fp("glCopyImageSubData", support: [ss361, ss368, ss40]), to: Swift.type(of: fp_glCopyImageSubData))
    fp_glCopyImageSubData(srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, srcWidth, srcHeight, srcDepth)
}
public
func glCopyImageSubData(srcName:GL.UInt, srcTarget:GL.Enum, srcLevel:GL.Int, srcX:GL.Int, srcY:GL.Int, srcZ:GL.Int, dstName:GL.UInt, dstTarget:GL.Enum, dstLevel:GL.Int, dstX:GL.Int, dstY:GL.Int, dstZ:GL.Int, srcWidth:GL.Size, srcHeight:GL.Size, srcDepth:GL.Size)
{
    fp_glCopyImageSubData(srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, srcWidth, srcHeight, srcDepth)
}
public
func glCopyImageSubData(_ srcName:GL.UInt, _ srcTarget:GL.Enum, _ srcLevel:GL.Int, _ srcX:GL.Int, _ srcY:GL.Int, _ srcZ:GL.Int, _ dstName:GL.UInt, _ dstTarget:GL.Enum, _ dstLevel:GL.Int, _ dstX:GL.Int, _ dstY:GL.Int, _ dstZ:GL.Int, _ srcWidth:GL.Size, _ srcHeight:GL.Size, _ srcDepth:GL.Size)
{
    fp_glCopyImageSubData(srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, srcWidth, srcHeight, srcDepth)
}

var fp_glCopyImageSubDataEXT:@convention(c) (GL.UInt, GL.Enum, GL.Int, GL.Int, GL.Int, GL.Int, GL.UInt, GL.Enum, GL.Int, GL.Int, GL.Int, GL.Int, GL.Size, GL.Size, GL.Size) -> () = load_glCopyImageSubDataEXT
func load_glCopyImageSubDataEXT(srcName:GL.UInt, srcTarget:GL.Enum, srcLevel:GL.Int, srcX:GL.Int, srcY:GL.Int, srcZ:GL.Int, dstName:GL.UInt, dstTarget:GL.Enum, dstLevel:GL.Int, dstX:GL.Int, dstY:GL.Int, dstZ:GL.Int, srcWidth:GL.Size, srcHeight:GL.Size, srcDepth:GL.Size)
{
    fp_glCopyImageSubDataEXT = unsafeBitCast(get_fp("glCopyImageSubDataEXT", support: [ss137]), to: Swift.type(of: fp_glCopyImageSubDataEXT))
    fp_glCopyImageSubDataEXT(srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, srcWidth, srcHeight, srcDepth)
}
public
func glCopyImageSubDataEXT(srcName:GL.UInt, srcTarget:GL.Enum, srcLevel:GL.Int, srcX:GL.Int, srcY:GL.Int, srcZ:GL.Int, dstName:GL.UInt, dstTarget:GL.Enum, dstLevel:GL.Int, dstX:GL.Int, dstY:GL.Int, dstZ:GL.Int, srcWidth:GL.Size, srcHeight:GL.Size, srcDepth:GL.Size)
{
    fp_glCopyImageSubDataEXT(srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, srcWidth, srcHeight, srcDepth)
}
public
func glCopyImageSubDataEXT(_ srcName:GL.UInt, _ srcTarget:GL.Enum, _ srcLevel:GL.Int, _ srcX:GL.Int, _ srcY:GL.Int, _ srcZ:GL.Int, _ dstName:GL.UInt, _ dstTarget:GL.Enum, _ dstLevel:GL.Int, _ dstX:GL.Int, _ dstY:GL.Int, _ dstZ:GL.Int, _ srcWidth:GL.Size, _ srcHeight:GL.Size, _ srcDepth:GL.Size)
{
    fp_glCopyImageSubDataEXT(srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, srcWidth, srcHeight, srcDepth)
}

var fp_glCopyImageSubDataNV:@convention(c) (GL.UInt, GL.Enum, GL.Int, GL.Int, GL.Int, GL.Int, GL.UInt, GL.Enum, GL.Int, GL.Int, GL.Int, GL.Int, GL.Size, GL.Size, GL.Size) -> () = load_glCopyImageSubDataNV
func load_glCopyImageSubDataNV(srcName:GL.UInt, srcTarget:GL.Enum, srcLevel:GL.Int, srcX:GL.Int, srcY:GL.Int, srcZ:GL.Int, dstName:GL.UInt, dstTarget:GL.Enum, dstLevel:GL.Int, dstX:GL.Int, dstY:GL.Int, dstZ:GL.Int, width:GL.Size, height:GL.Size, depth:GL.Size)
{
    fp_glCopyImageSubDataNV = unsafeBitCast(get_fp("glCopyImageSubDataNV", support: [ss234]), to: Swift.type(of: fp_glCopyImageSubDataNV))
    fp_glCopyImageSubDataNV(srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, width, height, depth)
}
public
func glCopyImageSubDataNV(srcName:GL.UInt, srcTarget:GL.Enum, srcLevel:GL.Int, srcX:GL.Int, srcY:GL.Int, srcZ:GL.Int, dstName:GL.UInt, dstTarget:GL.Enum, dstLevel:GL.Int, dstX:GL.Int, dstY:GL.Int, dstZ:GL.Int, width:GL.Size, height:GL.Size, depth:GL.Size)
{
    fp_glCopyImageSubDataNV(srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, width, height, depth)
}
public
func glCopyImageSubDataNV(_ srcName:GL.UInt, _ srcTarget:GL.Enum, _ srcLevel:GL.Int, _ srcX:GL.Int, _ srcY:GL.Int, _ srcZ:GL.Int, _ dstName:GL.UInt, _ dstTarget:GL.Enum, _ dstLevel:GL.Int, _ dstX:GL.Int, _ dstY:GL.Int, _ dstZ:GL.Int, _ width:GL.Size, _ height:GL.Size, _ depth:GL.Size)
{
    fp_glCopyImageSubDataNV(srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, width, height, depth)
}

var fp_glCopyImageSubDataOES:@convention(c) (GL.UInt, GL.Enum, GL.Int, GL.Int, GL.Int, GL.Int, GL.UInt, GL.Enum, GL.Int, GL.Int, GL.Int, GL.Int, GL.Size, GL.Size, GL.Size) -> () = load_glCopyImageSubDataOES
func load_glCopyImageSubDataOES(srcName:GL.UInt, srcTarget:GL.Enum, srcLevel:GL.Int, srcX:GL.Int, srcY:GL.Int, srcZ:GL.Int, dstName:GL.UInt, dstTarget:GL.Enum, dstLevel:GL.Int, dstX:GL.Int, dstY:GL.Int, dstZ:GL.Int, srcWidth:GL.Size, srcHeight:GL.Size, srcDepth:GL.Size)
{
    fp_glCopyImageSubDataOES = unsafeBitCast(get_fp("glCopyImageSubDataOES", support: [ss287]), to: Swift.type(of: fp_glCopyImageSubDataOES))
    fp_glCopyImageSubDataOES(srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, srcWidth, srcHeight, srcDepth)
}
public
func glCopyImageSubDataOES(srcName:GL.UInt, srcTarget:GL.Enum, srcLevel:GL.Int, srcX:GL.Int, srcY:GL.Int, srcZ:GL.Int, dstName:GL.UInt, dstTarget:GL.Enum, dstLevel:GL.Int, dstX:GL.Int, dstY:GL.Int, dstZ:GL.Int, srcWidth:GL.Size, srcHeight:GL.Size, srcDepth:GL.Size)
{
    fp_glCopyImageSubDataOES(srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, srcWidth, srcHeight, srcDepth)
}
public
func glCopyImageSubDataOES(_ srcName:GL.UInt, _ srcTarget:GL.Enum, _ srcLevel:GL.Int, _ srcX:GL.Int, _ srcY:GL.Int, _ srcZ:GL.Int, _ dstName:GL.UInt, _ dstTarget:GL.Enum, _ dstLevel:GL.Int, _ dstX:GL.Int, _ dstY:GL.Int, _ dstZ:GL.Int, _ srcWidth:GL.Size, _ srcHeight:GL.Size, _ srcDepth:GL.Size)
{
    fp_glCopyImageSubDataOES(srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, srcWidth, srcHeight, srcDepth)
}

var fp_glCopyMultiTexImage1DEXT:@convention(c) (GL.Enum, GL.Enum, GL.Int, GL.Enum, GL.Int, GL.Int, GL.Size, GL.Int) -> () = load_glCopyMultiTexImage1DEXT
func load_glCopyMultiTexImage1DEXT(texunit:GL.Enum, target:GL.Enum, level:GL.Int, internalformat:GL.Enum, x:GL.Int, y:GL.Int, width:GL.Size, border:GL.Int)
{
    fp_glCopyMultiTexImage1DEXT = unsafeBitCast(get_fp("glCopyMultiTexImage1DEXT", support: [ss143]), to: Swift.type(of: fp_glCopyMultiTexImage1DEXT))
    fp_glCopyMultiTexImage1DEXT(texunit, target, level, internalformat, x, y, width, border)
}
public
func glCopyMultiTexImage1DEXT(texunit:GL.Enum, target:GL.Enum, level:GL.Int, internalformat:GL.Enum, x:GL.Int, y:GL.Int, width:GL.Size, border:GL.Int)
{
    fp_glCopyMultiTexImage1DEXT(texunit, target, level, internalformat, x, y, width, border)
}
public
func glCopyMultiTexImage1DEXT(_ texunit:GL.Enum, _ target:GL.Enum, _ level:GL.Int, _ internalformat:GL.Enum, _ x:GL.Int, _ y:GL.Int, _ width:GL.Size, _ border:GL.Int)
{
    fp_glCopyMultiTexImage1DEXT(texunit, target, level, internalformat, x, y, width, border)
}

var fp_glCopyMultiTexImage2DEXT:@convention(c) (GL.Enum, GL.Enum, GL.Int, GL.Enum, GL.Int, GL.Int, GL.Size, GL.Size, GL.Int) -> () = load_glCopyMultiTexImage2DEXT
func load_glCopyMultiTexImage2DEXT(texunit:GL.Enum, target:GL.Enum, level:GL.Int, internalformat:GL.Enum, x:GL.Int, y:GL.Int, width:GL.Size, height:GL.Size, border:GL.Int)
{
    fp_glCopyMultiTexImage2DEXT = unsafeBitCast(get_fp("glCopyMultiTexImage2DEXT", support: [ss143]), to: Swift.type(of: fp_glCopyMultiTexImage2DEXT))
    fp_glCopyMultiTexImage2DEXT(texunit, target, level, internalformat, x, y, width, height, border)
}
public
func glCopyMultiTexImage2DEXT(texunit:GL.Enum, target:GL.Enum, level:GL.Int, internalformat:GL.Enum, x:GL.Int, y:GL.Int, width:GL.Size, height:GL.Size, border:GL.Int)
{
    fp_glCopyMultiTexImage2DEXT(texunit, target, level, internalformat, x, y, width, height, border)
}
public
func glCopyMultiTexImage2DEXT(_ texunit:GL.Enum, _ target:GL.Enum, _ level:GL.Int, _ internalformat:GL.Enum, _ x:GL.Int, _ y:GL.Int, _ width:GL.Size, _ height:GL.Size, _ border:GL.Int)
{
    fp_glCopyMultiTexImage2DEXT(texunit, target, level, internalformat, x, y, width, height, border)
}

var fp_glCopyMultiTexSubImage1DEXT:@convention(c) (GL.Enum, GL.Enum, GL.Int, GL.Int, GL.Int, GL.Int, GL.Size) -> () = load_glCopyMultiTexSubImage1DEXT
func load_glCopyMultiTexSubImage1DEXT(texunit:GL.Enum, target:GL.Enum, level:GL.Int, xoffset:GL.Int, x:GL.Int, y:GL.Int, width:GL.Size)
{
    fp_glCopyMultiTexSubImage1DEXT = unsafeBitCast(get_fp("glCopyMultiTexSubImage1DEXT", support: [ss143]), to: Swift.type(of: fp_glCopyMultiTexSubImage1DEXT))
    fp_glCopyMultiTexSubImage1DEXT(texunit, target, level, xoffset, x, y, width)
}
public
func glCopyMultiTexSubImage1DEXT(texunit:GL.Enum, target:GL.Enum, level:GL.Int, xoffset:GL.Int, x:GL.Int, y:GL.Int, width:GL.Size)
{
    fp_glCopyMultiTexSubImage1DEXT(texunit, target, level, xoffset, x, y, width)
}
public
func glCopyMultiTexSubImage1DEXT(_ texunit:GL.Enum, _ target:GL.Enum, _ level:GL.Int, _ xoffset:GL.Int, _ x:GL.Int, _ y:GL.Int, _ width:GL.Size)
{
    fp_glCopyMultiTexSubImage1DEXT(texunit, target, level, xoffset, x, y, width)
}

var fp_glCopyMultiTexSubImage2DEXT:@convention(c) (GL.Enum, GL.Enum, GL.Int, GL.Int, GL.Int, GL.Int, GL.Int, GL.Size, GL.Size) -> () = load_glCopyMultiTexSubImage2DEXT
func load_glCopyMultiTexSubImage2DEXT(texunit:GL.Enum, target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, x:GL.Int, y:GL.Int, width:GL.Size, height:GL.Size)
{
    fp_glCopyMultiTexSubImage2DEXT = unsafeBitCast(get_fp("glCopyMultiTexSubImage2DEXT", support: [ss143]), to: Swift.type(of: fp_glCopyMultiTexSubImage2DEXT))
    fp_glCopyMultiTexSubImage2DEXT(texunit, target, level, xoffset, yoffset, x, y, width, height)
}
public
func glCopyMultiTexSubImage2DEXT(texunit:GL.Enum, target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, x:GL.Int, y:GL.Int, width:GL.Size, height:GL.Size)
{
    fp_glCopyMultiTexSubImage2DEXT(texunit, target, level, xoffset, yoffset, x, y, width, height)
}
public
func glCopyMultiTexSubImage2DEXT(_ texunit:GL.Enum, _ target:GL.Enum, _ level:GL.Int, _ xoffset:GL.Int, _ yoffset:GL.Int, _ x:GL.Int, _ y:GL.Int, _ width:GL.Size, _ height:GL.Size)
{
    fp_glCopyMultiTexSubImage2DEXT(texunit, target, level, xoffset, yoffset, x, y, width, height)
}

var fp_glCopyMultiTexSubImage3DEXT:@convention(c) (GL.Enum, GL.Enum, GL.Int, GL.Int, GL.Int, GL.Int, GL.Int, GL.Int, GL.Size, GL.Size) -> () = load_glCopyMultiTexSubImage3DEXT
func load_glCopyMultiTexSubImage3DEXT(texunit:GL.Enum, target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, zoffset:GL.Int, x:GL.Int, y:GL.Int, width:GL.Size, height:GL.Size)
{
    fp_glCopyMultiTexSubImage3DEXT = unsafeBitCast(get_fp("glCopyMultiTexSubImage3DEXT", support: [ss143]), to: Swift.type(of: fp_glCopyMultiTexSubImage3DEXT))
    fp_glCopyMultiTexSubImage3DEXT(texunit, target, level, xoffset, yoffset, zoffset, x, y, width, height)
}
public
func glCopyMultiTexSubImage3DEXT(texunit:GL.Enum, target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, zoffset:GL.Int, x:GL.Int, y:GL.Int, width:GL.Size, height:GL.Size)
{
    fp_glCopyMultiTexSubImage3DEXT(texunit, target, level, xoffset, yoffset, zoffset, x, y, width, height)
}
public
func glCopyMultiTexSubImage3DEXT(_ texunit:GL.Enum, _ target:GL.Enum, _ level:GL.Int, _ xoffset:GL.Int, _ yoffset:GL.Int, _ zoffset:GL.Int, _ x:GL.Int, _ y:GL.Int, _ width:GL.Size, _ height:GL.Size)
{
    fp_glCopyMultiTexSubImage3DEXT(texunit, target, level, xoffset, yoffset, zoffset, x, y, width, height)
}

var fp_glCopyNamedBufferSubData:@convention(c) (GL.UInt, GL.UInt, GL.IntPointer, GL.IntPointer, GL.SizePointer) -> () = load_glCopyNamedBufferSubData
func load_glCopyNamedBufferSubData(readBuffer:GL.UInt, writeBuffer:GL.UInt, readOffset:GL.IntPointer, writeOffset:GL.IntPointer, size:GL.SizePointer)
{
    fp_glCopyNamedBufferSubData = unsafeBitCast(get_fp("glCopyNamedBufferSubData", support: [ss363, ss42]), to: Swift.type(of: fp_glCopyNamedBufferSubData))
    fp_glCopyNamedBufferSubData(readBuffer, writeBuffer, readOffset, writeOffset, size)
}
public
func glCopyNamedBufferSubData(readBuffer:GL.UInt, writeBuffer:GL.UInt, readOffset:GL.IntPointer, writeOffset:GL.IntPointer, size:GL.SizePointer)
{
    fp_glCopyNamedBufferSubData(readBuffer, writeBuffer, readOffset, writeOffset, size)
}
public
func glCopyNamedBufferSubData(_ readBuffer:GL.UInt, _ writeBuffer:GL.UInt, _ readOffset:GL.IntPointer, _ writeOffset:GL.IntPointer, _ size:GL.SizePointer)
{
    fp_glCopyNamedBufferSubData(readBuffer, writeBuffer, readOffset, writeOffset, size)
}

var fp_glCopyPathNV:@convention(c) (GL.UInt, GL.UInt) -> () = load_glCopyPathNV
func load_glCopyPathNV(resultPath:GL.UInt, srcPath:GL.UInt)
{
    fp_glCopyPathNV = unsafeBitCast(get_fp("glCopyPathNV", support: [ss259]), to: Swift.type(of: fp_glCopyPathNV))
    fp_glCopyPathNV(resultPath, srcPath)
}
public
func glCopyPathNV(resultPath:GL.UInt, srcPath:GL.UInt)
{
    fp_glCopyPathNV(resultPath, srcPath)
}
public
func glCopyPathNV(_ resultPath:GL.UInt, _ srcPath:GL.UInt)
{
    fp_glCopyPathNV(resultPath, srcPath)
}

var fp_glCopyPixels:@convention(c) (GL.Int, GL.Int, GL.Size, GL.Size, GL.Enum) -> () = load_glCopyPixels
func load_glCopyPixels(x:GL.Int, y:GL.Int, width:GL.Size, height:GL.Size, type:GL.Enum)
{
    fp_glCopyPixels = unsafeBitCast(get_fp("glCopyPixels", support: [ss346, ss369]), to: Swift.type(of: fp_glCopyPixels))
    fp_glCopyPixels(x, y, width, height, type)
}
public
func glCopyPixels(x:GL.Int, y:GL.Int, width:GL.Size, height:GL.Size, type:GL.Enum)
{
    fp_glCopyPixels(x, y, width, height, type)
}
public
func glCopyPixels(_ x:GL.Int, _ y:GL.Int, _ width:GL.Size, _ height:GL.Size, _ type:GL.Enum)
{
    fp_glCopyPixels(x, y, width, height, type)
}

var fp_glCopyTexImage1D:@convention(c) (GL.Enum, GL.Int, GL.Enum, GL.Int, GL.Int, GL.Size, GL.Int) -> () = load_glCopyTexImage1D
func load_glCopyTexImage1D(target:GL.Enum, level:GL.Int, internalformat:GL.Enum, x:GL.Int, y:GL.Int, width:GL.Size, border:GL.Int)
{
    fp_glCopyTexImage1D = unsafeBitCast(get_fp("glCopyTexImage1D", support: [ss347]), to: Swift.type(of: fp_glCopyTexImage1D))
    fp_glCopyTexImage1D(target, level, internalformat, x, y, width, border)
}
public
func glCopyTexImage1D(target:GL.Enum, level:GL.Int, internalformat:GL.Enum, x:GL.Int, y:GL.Int, width:GL.Size, border:GL.Int)
{
    fp_glCopyTexImage1D(target, level, internalformat, x, y, width, border)
}
public
func glCopyTexImage1D(_ target:GL.Enum, _ level:GL.Int, _ internalformat:GL.Enum, _ x:GL.Int, _ y:GL.Int, _ width:GL.Size, _ border:GL.Int)
{
    fp_glCopyTexImage1D(target, level, internalformat, x, y, width, border)
}

var fp_glCopyTexImage1DEXT:@convention(c) (GL.Enum, GL.Int, GL.Enum, GL.Int, GL.Int, GL.Size, GL.Int) -> () = load_glCopyTexImage1DEXT
func load_glCopyTexImage1DEXT(target:GL.Enum, level:GL.Int, internalformat:GL.Enum, x:GL.Int, y:GL.Int, width:GL.Size, border:GL.Int)
{
    fp_glCopyTexImage1DEXT = unsafeBitCast(get_fp("glCopyTexImage1DEXT", support: [ss138]), to: Swift.type(of: fp_glCopyTexImage1DEXT))
    fp_glCopyTexImage1DEXT(target, level, internalformat, x, y, width, border)
}
public
func glCopyTexImage1DEXT(target:GL.Enum, level:GL.Int, internalformat:GL.Enum, x:GL.Int, y:GL.Int, width:GL.Size, border:GL.Int)
{
    fp_glCopyTexImage1DEXT(target, level, internalformat, x, y, width, border)
}
public
func glCopyTexImage1DEXT(_ target:GL.Enum, _ level:GL.Int, _ internalformat:GL.Enum, _ x:GL.Int, _ y:GL.Int, _ width:GL.Size, _ border:GL.Int)
{
    fp_glCopyTexImage1DEXT(target, level, internalformat, x, y, width, border)
}

var fp_glCopyTexImage2D:@convention(c) (GL.Enum, GL.Int, GL.Enum, GL.Int, GL.Int, GL.Size, GL.Size, GL.Int) -> () = load_glCopyTexImage2D
func load_glCopyTexImage2D(target:GL.Enum, level:GL.Int, internalformat:GL.Enum, x:GL.Int, y:GL.Int, width:GL.Size, height:GL.Size, border:GL.Int)
{
    fp_glCopyTexImage2D = unsafeBitCast(get_fp("glCopyTexImage2D", support: [ss347, ss365]), to: Swift.type(of: fp_glCopyTexImage2D))
    fp_glCopyTexImage2D(target, level, internalformat, x, y, width, height, border)
}
public
func glCopyTexImage2D(target:GL.Enum, level:GL.Int, internalformat:GL.Enum, x:GL.Int, y:GL.Int, width:GL.Size, height:GL.Size, border:GL.Int)
{
    fp_glCopyTexImage2D(target, level, internalformat, x, y, width, height, border)
}
public
func glCopyTexImage2D(_ target:GL.Enum, _ level:GL.Int, _ internalformat:GL.Enum, _ x:GL.Int, _ y:GL.Int, _ width:GL.Size, _ height:GL.Size, _ border:GL.Int)
{
    fp_glCopyTexImage2D(target, level, internalformat, x, y, width, height, border)
}

var fp_glCopyTexImage2DEXT:@convention(c) (GL.Enum, GL.Int, GL.Enum, GL.Int, GL.Int, GL.Size, GL.Size, GL.Int) -> () = load_glCopyTexImage2DEXT
func load_glCopyTexImage2DEXT(target:GL.Enum, level:GL.Int, internalformat:GL.Enum, x:GL.Int, y:GL.Int, width:GL.Size, height:GL.Size, border:GL.Int)
{
    fp_glCopyTexImage2DEXT = unsafeBitCast(get_fp("glCopyTexImage2DEXT", support: [ss138]), to: Swift.type(of: fp_glCopyTexImage2DEXT))
    fp_glCopyTexImage2DEXT(target, level, internalformat, x, y, width, height, border)
}
public
func glCopyTexImage2DEXT(target:GL.Enum, level:GL.Int, internalformat:GL.Enum, x:GL.Int, y:GL.Int, width:GL.Size, height:GL.Size, border:GL.Int)
{
    fp_glCopyTexImage2DEXT(target, level, internalformat, x, y, width, height, border)
}
public
func glCopyTexImage2DEXT(_ target:GL.Enum, _ level:GL.Int, _ internalformat:GL.Enum, _ x:GL.Int, _ y:GL.Int, _ width:GL.Size, _ height:GL.Size, _ border:GL.Int)
{
    fp_glCopyTexImage2DEXT(target, level, internalformat, x, y, width, height, border)
}

var fp_glCopyTexSubImage1D:@convention(c) (GL.Enum, GL.Int, GL.Int, GL.Int, GL.Int, GL.Size) -> () = load_glCopyTexSubImage1D
func load_glCopyTexSubImage1D(target:GL.Enum, level:GL.Int, xoffset:GL.Int, x:GL.Int, y:GL.Int, width:GL.Size)
{
    fp_glCopyTexSubImage1D = unsafeBitCast(get_fp("glCopyTexSubImage1D", support: [ss347]), to: Swift.type(of: fp_glCopyTexSubImage1D))
    fp_glCopyTexSubImage1D(target, level, xoffset, x, y, width)
}
public
func glCopyTexSubImage1D(target:GL.Enum, level:GL.Int, xoffset:GL.Int, x:GL.Int, y:GL.Int, width:GL.Size)
{
    fp_glCopyTexSubImage1D(target, level, xoffset, x, y, width)
}
public
func glCopyTexSubImage1D(_ target:GL.Enum, _ level:GL.Int, _ xoffset:GL.Int, _ x:GL.Int, _ y:GL.Int, _ width:GL.Size)
{
    fp_glCopyTexSubImage1D(target, level, xoffset, x, y, width)
}

var fp_glCopyTexSubImage1DEXT:@convention(c) (GL.Enum, GL.Int, GL.Int, GL.Int, GL.Int, GL.Size) -> () = load_glCopyTexSubImage1DEXT
func load_glCopyTexSubImage1DEXT(target:GL.Enum, level:GL.Int, xoffset:GL.Int, x:GL.Int, y:GL.Int, width:GL.Size)
{
    fp_glCopyTexSubImage1DEXT = unsafeBitCast(get_fp("glCopyTexSubImage1DEXT", support: [ss138]), to: Swift.type(of: fp_glCopyTexSubImage1DEXT))
    fp_glCopyTexSubImage1DEXT(target, level, xoffset, x, y, width)
}
public
func glCopyTexSubImage1DEXT(target:GL.Enum, level:GL.Int, xoffset:GL.Int, x:GL.Int, y:GL.Int, width:GL.Size)
{
    fp_glCopyTexSubImage1DEXT(target, level, xoffset, x, y, width)
}
public
func glCopyTexSubImage1DEXT(_ target:GL.Enum, _ level:GL.Int, _ xoffset:GL.Int, _ x:GL.Int, _ y:GL.Int, _ width:GL.Size)
{
    fp_glCopyTexSubImage1DEXT(target, level, xoffset, x, y, width)
}

var fp_glCopyTexSubImage2D:@convention(c) (GL.Enum, GL.Int, GL.Int, GL.Int, GL.Int, GL.Int, GL.Size, GL.Size) -> () = load_glCopyTexSubImage2D
func load_glCopyTexSubImage2D(target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, x:GL.Int, y:GL.Int, width:GL.Size, height:GL.Size)
{
    fp_glCopyTexSubImage2D = unsafeBitCast(get_fp("glCopyTexSubImage2D", support: [ss347, ss365]), to: Swift.type(of: fp_glCopyTexSubImage2D))
    fp_glCopyTexSubImage2D(target, level, xoffset, yoffset, x, y, width, height)
}
public
func glCopyTexSubImage2D(target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, x:GL.Int, y:GL.Int, width:GL.Size, height:GL.Size)
{
    fp_glCopyTexSubImage2D(target, level, xoffset, yoffset, x, y, width, height)
}
public
func glCopyTexSubImage2D(_ target:GL.Enum, _ level:GL.Int, _ xoffset:GL.Int, _ yoffset:GL.Int, _ x:GL.Int, _ y:GL.Int, _ width:GL.Size, _ height:GL.Size)
{
    fp_glCopyTexSubImage2D(target, level, xoffset, yoffset, x, y, width, height)
}

var fp_glCopyTexSubImage2DEXT:@convention(c) (GL.Enum, GL.Int, GL.Int, GL.Int, GL.Int, GL.Int, GL.Size, GL.Size) -> () = load_glCopyTexSubImage2DEXT
func load_glCopyTexSubImage2DEXT(target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, x:GL.Int, y:GL.Int, width:GL.Size, height:GL.Size)
{
    fp_glCopyTexSubImage2DEXT = unsafeBitCast(get_fp("glCopyTexSubImage2DEXT", support: [ss138]), to: Swift.type(of: fp_glCopyTexSubImage2DEXT))
    fp_glCopyTexSubImage2DEXT(target, level, xoffset, yoffset, x, y, width, height)
}
public
func glCopyTexSubImage2DEXT(target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, x:GL.Int, y:GL.Int, width:GL.Size, height:GL.Size)
{
    fp_glCopyTexSubImage2DEXT(target, level, xoffset, yoffset, x, y, width, height)
}
public
func glCopyTexSubImage2DEXT(_ target:GL.Enum, _ level:GL.Int, _ xoffset:GL.Int, _ yoffset:GL.Int, _ x:GL.Int, _ y:GL.Int, _ width:GL.Size, _ height:GL.Size)
{
    fp_glCopyTexSubImage2DEXT(target, level, xoffset, yoffset, x, y, width, height)
}

var fp_glCopyTexSubImage3D:@convention(c) (GL.Enum, GL.Int, GL.Int, GL.Int, GL.Int, GL.Int, GL.Int, GL.Size, GL.Size) -> () = load_glCopyTexSubImage3D
func load_glCopyTexSubImage3D(target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, zoffset:GL.Int, x:GL.Int, y:GL.Int, width:GL.Size, height:GL.Size)
{
    fp_glCopyTexSubImage3D = unsafeBitCast(get_fp("glCopyTexSubImage3D", support: [ss348, ss366]), to: Swift.type(of: fp_glCopyTexSubImage3D))
    fp_glCopyTexSubImage3D(target, level, xoffset, yoffset, zoffset, x, y, width, height)
}
public
func glCopyTexSubImage3D(target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, zoffset:GL.Int, x:GL.Int, y:GL.Int, width:GL.Size, height:GL.Size)
{
    fp_glCopyTexSubImage3D(target, level, xoffset, yoffset, zoffset, x, y, width, height)
}
public
func glCopyTexSubImage3D(_ target:GL.Enum, _ level:GL.Int, _ xoffset:GL.Int, _ yoffset:GL.Int, _ zoffset:GL.Int, _ x:GL.Int, _ y:GL.Int, _ width:GL.Size, _ height:GL.Size)
{
    fp_glCopyTexSubImage3D(target, level, xoffset, yoffset, zoffset, x, y, width, height)
}

var fp_glCopyTexSubImage3DEXT:@convention(c) (GL.Enum, GL.Int, GL.Int, GL.Int, GL.Int, GL.Int, GL.Int, GL.Size, GL.Size) -> () = load_glCopyTexSubImage3DEXT
func load_glCopyTexSubImage3DEXT(target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, zoffset:GL.Int, x:GL.Int, y:GL.Int, width:GL.Size, height:GL.Size)
{
    fp_glCopyTexSubImage3DEXT = unsafeBitCast(get_fp("glCopyTexSubImage3DEXT", support: [ss138]), to: Swift.type(of: fp_glCopyTexSubImage3DEXT))
    fp_glCopyTexSubImage3DEXT(target, level, xoffset, yoffset, zoffset, x, y, width, height)
}
public
func glCopyTexSubImage3DEXT(target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, zoffset:GL.Int, x:GL.Int, y:GL.Int, width:GL.Size, height:GL.Size)
{
    fp_glCopyTexSubImage3DEXT(target, level, xoffset, yoffset, zoffset, x, y, width, height)
}
public
func glCopyTexSubImage3DEXT(_ target:GL.Enum, _ level:GL.Int, _ xoffset:GL.Int, _ yoffset:GL.Int, _ zoffset:GL.Int, _ x:GL.Int, _ y:GL.Int, _ width:GL.Size, _ height:GL.Size)
{
    fp_glCopyTexSubImage3DEXT(target, level, xoffset, yoffset, zoffset, x, y, width, height)
}

var fp_glCopyTexSubImage3DOES:@convention(c) (GL.Enum, GL.Int, GL.Int, GL.Int, GL.Int, GL.Int, GL.Int, GL.Size, GL.Size) -> () = load_glCopyTexSubImage3DOES
func load_glCopyTexSubImage3DOES(target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, zoffset:GL.Int, x:GL.Int, y:GL.Int, width:GL.Size, height:GL.Size)
{
    fp_glCopyTexSubImage3DOES = unsafeBitCast(get_fp("glCopyTexSubImage3DOES", support: [ss304]), to: Swift.type(of: fp_glCopyTexSubImage3DOES))
    fp_glCopyTexSubImage3DOES(target, level, xoffset, yoffset, zoffset, x, y, width, height)
}
public
func glCopyTexSubImage3DOES(target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, zoffset:GL.Int, x:GL.Int, y:GL.Int, width:GL.Size, height:GL.Size)
{
    fp_glCopyTexSubImage3DOES(target, level, xoffset, yoffset, zoffset, x, y, width, height)
}
public
func glCopyTexSubImage3DOES(_ target:GL.Enum, _ level:GL.Int, _ xoffset:GL.Int, _ yoffset:GL.Int, _ zoffset:GL.Int, _ x:GL.Int, _ y:GL.Int, _ width:GL.Size, _ height:GL.Size)
{
    fp_glCopyTexSubImage3DOES(target, level, xoffset, yoffset, zoffset, x, y, width, height)
}

var fp_glCopyTextureImage1DEXT:@convention(c) (GL.UInt, GL.Enum, GL.Int, GL.Enum, GL.Int, GL.Int, GL.Size, GL.Int) -> () = load_glCopyTextureImage1DEXT
func load_glCopyTextureImage1DEXT(texture:GL.UInt, target:GL.Enum, level:GL.Int, internalformat:GL.Enum, x:GL.Int, y:GL.Int, width:GL.Size, border:GL.Int)
{
    fp_glCopyTextureImage1DEXT = unsafeBitCast(get_fp("glCopyTextureImage1DEXT", support: [ss143]), to: Swift.type(of: fp_glCopyTextureImage1DEXT))
    fp_glCopyTextureImage1DEXT(texture, target, level, internalformat, x, y, width, border)
}
public
func glCopyTextureImage1DEXT(texture:GL.UInt, target:GL.Enum, level:GL.Int, internalformat:GL.Enum, x:GL.Int, y:GL.Int, width:GL.Size, border:GL.Int)
{
    fp_glCopyTextureImage1DEXT(texture, target, level, internalformat, x, y, width, border)
}
public
func glCopyTextureImage1DEXT(_ texture:GL.UInt, _ target:GL.Enum, _ level:GL.Int, _ internalformat:GL.Enum, _ x:GL.Int, _ y:GL.Int, _ width:GL.Size, _ border:GL.Int)
{
    fp_glCopyTextureImage1DEXT(texture, target, level, internalformat, x, y, width, border)
}

var fp_glCopyTextureImage2DEXT:@convention(c) (GL.UInt, GL.Enum, GL.Int, GL.Enum, GL.Int, GL.Int, GL.Size, GL.Size, GL.Int) -> () = load_glCopyTextureImage2DEXT
func load_glCopyTextureImage2DEXT(texture:GL.UInt, target:GL.Enum, level:GL.Int, internalformat:GL.Enum, x:GL.Int, y:GL.Int, width:GL.Size, height:GL.Size, border:GL.Int)
{
    fp_glCopyTextureImage2DEXT = unsafeBitCast(get_fp("glCopyTextureImage2DEXT", support: [ss143]), to: Swift.type(of: fp_glCopyTextureImage2DEXT))
    fp_glCopyTextureImage2DEXT(texture, target, level, internalformat, x, y, width, height, border)
}
public
func glCopyTextureImage2DEXT(texture:GL.UInt, target:GL.Enum, level:GL.Int, internalformat:GL.Enum, x:GL.Int, y:GL.Int, width:GL.Size, height:GL.Size, border:GL.Int)
{
    fp_glCopyTextureImage2DEXT(texture, target, level, internalformat, x, y, width, height, border)
}
public
func glCopyTextureImage2DEXT(_ texture:GL.UInt, _ target:GL.Enum, _ level:GL.Int, _ internalformat:GL.Enum, _ x:GL.Int, _ y:GL.Int, _ width:GL.Size, _ height:GL.Size, _ border:GL.Int)
{
    fp_glCopyTextureImage2DEXT(texture, target, level, internalformat, x, y, width, height, border)
}

var fp_glCopyTextureLevelsAPPLE:@convention(c) (GL.UInt, GL.UInt, GL.Int, GL.Size) -> () = load_glCopyTextureLevelsAPPLE
func load_glCopyTextureLevelsAPPLE(destinationTexture:GL.UInt, sourceTexture:GL.UInt, sourceBaseLevel:GL.Int, sourceLevelCount:GL.Size)
{
    fp_glCopyTextureLevelsAPPLE = unsafeBitCast(get_fp("glCopyTextureLevelsAPPLE", support: [ss17]), to: Swift.type(of: fp_glCopyTextureLevelsAPPLE))
    fp_glCopyTextureLevelsAPPLE(destinationTexture, sourceTexture, sourceBaseLevel, sourceLevelCount)
}
public
func glCopyTextureLevelsAPPLE(destinationTexture:GL.UInt, sourceTexture:GL.UInt, sourceBaseLevel:GL.Int, sourceLevelCount:GL.Size)
{
    fp_glCopyTextureLevelsAPPLE(destinationTexture, sourceTexture, sourceBaseLevel, sourceLevelCount)
}
public
func glCopyTextureLevelsAPPLE(_ destinationTexture:GL.UInt, _ sourceTexture:GL.UInt, _ sourceBaseLevel:GL.Int, _ sourceLevelCount:GL.Size)
{
    fp_glCopyTextureLevelsAPPLE(destinationTexture, sourceTexture, sourceBaseLevel, sourceLevelCount)
}

var fp_glCopyTextureSubImage1D:@convention(c) (GL.UInt, GL.Int, GL.Int, GL.Int, GL.Int, GL.Size) -> () = load_glCopyTextureSubImage1D
func load_glCopyTextureSubImage1D(texture:GL.UInt, level:GL.Int, xoffset:GL.Int, x:GL.Int, y:GL.Int, width:GL.Size)
{
    fp_glCopyTextureSubImage1D = unsafeBitCast(get_fp("glCopyTextureSubImage1D", support: [ss363, ss42]), to: Swift.type(of: fp_glCopyTextureSubImage1D))
    fp_glCopyTextureSubImage1D(texture, level, xoffset, x, y, width)
}
public
func glCopyTextureSubImage1D(texture:GL.UInt, level:GL.Int, xoffset:GL.Int, x:GL.Int, y:GL.Int, width:GL.Size)
{
    fp_glCopyTextureSubImage1D(texture, level, xoffset, x, y, width)
}
public
func glCopyTextureSubImage1D(_ texture:GL.UInt, _ level:GL.Int, _ xoffset:GL.Int, _ x:GL.Int, _ y:GL.Int, _ width:GL.Size)
{
    fp_glCopyTextureSubImage1D(texture, level, xoffset, x, y, width)
}

var fp_glCopyTextureSubImage1DEXT:@convention(c) (GL.UInt, GL.Enum, GL.Int, GL.Int, GL.Int, GL.Int, GL.Size) -> () = load_glCopyTextureSubImage1DEXT
func load_glCopyTextureSubImage1DEXT(texture:GL.UInt, target:GL.Enum, level:GL.Int, xoffset:GL.Int, x:GL.Int, y:GL.Int, width:GL.Size)
{
    fp_glCopyTextureSubImage1DEXT = unsafeBitCast(get_fp("glCopyTextureSubImage1DEXT", support: [ss143]), to: Swift.type(of: fp_glCopyTextureSubImage1DEXT))
    fp_glCopyTextureSubImage1DEXT(texture, target, level, xoffset, x, y, width)
}
public
func glCopyTextureSubImage1DEXT(texture:GL.UInt, target:GL.Enum, level:GL.Int, xoffset:GL.Int, x:GL.Int, y:GL.Int, width:GL.Size)
{
    fp_glCopyTextureSubImage1DEXT(texture, target, level, xoffset, x, y, width)
}
public
func glCopyTextureSubImage1DEXT(_ texture:GL.UInt, _ target:GL.Enum, _ level:GL.Int, _ xoffset:GL.Int, _ x:GL.Int, _ y:GL.Int, _ width:GL.Size)
{
    fp_glCopyTextureSubImage1DEXT(texture, target, level, xoffset, x, y, width)
}

var fp_glCopyTextureSubImage2D:@convention(c) (GL.UInt, GL.Int, GL.Int, GL.Int, GL.Int, GL.Int, GL.Size, GL.Size) -> () = load_glCopyTextureSubImage2D
func load_glCopyTextureSubImage2D(texture:GL.UInt, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, x:GL.Int, y:GL.Int, width:GL.Size, height:GL.Size)
{
    fp_glCopyTextureSubImage2D = unsafeBitCast(get_fp("glCopyTextureSubImage2D", support: [ss363, ss42]), to: Swift.type(of: fp_glCopyTextureSubImage2D))
    fp_glCopyTextureSubImage2D(texture, level, xoffset, yoffset, x, y, width, height)
}
public
func glCopyTextureSubImage2D(texture:GL.UInt, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, x:GL.Int, y:GL.Int, width:GL.Size, height:GL.Size)
{
    fp_glCopyTextureSubImage2D(texture, level, xoffset, yoffset, x, y, width, height)
}
public
func glCopyTextureSubImage2D(_ texture:GL.UInt, _ level:GL.Int, _ xoffset:GL.Int, _ yoffset:GL.Int, _ x:GL.Int, _ y:GL.Int, _ width:GL.Size, _ height:GL.Size)
{
    fp_glCopyTextureSubImage2D(texture, level, xoffset, yoffset, x, y, width, height)
}

var fp_glCopyTextureSubImage2DEXT:@convention(c) (GL.UInt, GL.Enum, GL.Int, GL.Int, GL.Int, GL.Int, GL.Int, GL.Size, GL.Size) -> () = load_glCopyTextureSubImage2DEXT
func load_glCopyTextureSubImage2DEXT(texture:GL.UInt, target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, x:GL.Int, y:GL.Int, width:GL.Size, height:GL.Size)
{
    fp_glCopyTextureSubImage2DEXT = unsafeBitCast(get_fp("glCopyTextureSubImage2DEXT", support: [ss143]), to: Swift.type(of: fp_glCopyTextureSubImage2DEXT))
    fp_glCopyTextureSubImage2DEXT(texture, target, level, xoffset, yoffset, x, y, width, height)
}
public
func glCopyTextureSubImage2DEXT(texture:GL.UInt, target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, x:GL.Int, y:GL.Int, width:GL.Size, height:GL.Size)
{
    fp_glCopyTextureSubImage2DEXT(texture, target, level, xoffset, yoffset, x, y, width, height)
}
public
func glCopyTextureSubImage2DEXT(_ texture:GL.UInt, _ target:GL.Enum, _ level:GL.Int, _ xoffset:GL.Int, _ yoffset:GL.Int, _ x:GL.Int, _ y:GL.Int, _ width:GL.Size, _ height:GL.Size)
{
    fp_glCopyTextureSubImage2DEXT(texture, target, level, xoffset, yoffset, x, y, width, height)
}

var fp_glCopyTextureSubImage3D:@convention(c) (GL.UInt, GL.Int, GL.Int, GL.Int, GL.Int, GL.Int, GL.Int, GL.Size, GL.Size) -> () = load_glCopyTextureSubImage3D
func load_glCopyTextureSubImage3D(texture:GL.UInt, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, zoffset:GL.Int, x:GL.Int, y:GL.Int, width:GL.Size, height:GL.Size)
{
    fp_glCopyTextureSubImage3D = unsafeBitCast(get_fp("glCopyTextureSubImage3D", support: [ss363, ss42]), to: Swift.type(of: fp_glCopyTextureSubImage3D))
    fp_glCopyTextureSubImage3D(texture, level, xoffset, yoffset, zoffset, x, y, width, height)
}
public
func glCopyTextureSubImage3D(texture:GL.UInt, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, zoffset:GL.Int, x:GL.Int, y:GL.Int, width:GL.Size, height:GL.Size)
{
    fp_glCopyTextureSubImage3D(texture, level, xoffset, yoffset, zoffset, x, y, width, height)
}
public
func glCopyTextureSubImage3D(_ texture:GL.UInt, _ level:GL.Int, _ xoffset:GL.Int, _ yoffset:GL.Int, _ zoffset:GL.Int, _ x:GL.Int, _ y:GL.Int, _ width:GL.Size, _ height:GL.Size)
{
    fp_glCopyTextureSubImage3D(texture, level, xoffset, yoffset, zoffset, x, y, width, height)
}

var fp_glCopyTextureSubImage3DEXT:@convention(c) (GL.UInt, GL.Enum, GL.Int, GL.Int, GL.Int, GL.Int, GL.Int, GL.Int, GL.Size, GL.Size) -> () = load_glCopyTextureSubImage3DEXT
func load_glCopyTextureSubImage3DEXT(texture:GL.UInt, target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, zoffset:GL.Int, x:GL.Int, y:GL.Int, width:GL.Size, height:GL.Size)
{
    fp_glCopyTextureSubImage3DEXT = unsafeBitCast(get_fp("glCopyTextureSubImage3DEXT", support: [ss143]), to: Swift.type(of: fp_glCopyTextureSubImage3DEXT))
    fp_glCopyTextureSubImage3DEXT(texture, target, level, xoffset, yoffset, zoffset, x, y, width, height)
}
public
func glCopyTextureSubImage3DEXT(texture:GL.UInt, target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, zoffset:GL.Int, x:GL.Int, y:GL.Int, width:GL.Size, height:GL.Size)
{
    fp_glCopyTextureSubImage3DEXT(texture, target, level, xoffset, yoffset, zoffset, x, y, width, height)
}
public
func glCopyTextureSubImage3DEXT(_ texture:GL.UInt, _ target:GL.Enum, _ level:GL.Int, _ xoffset:GL.Int, _ yoffset:GL.Int, _ zoffset:GL.Int, _ x:GL.Int, _ y:GL.Int, _ width:GL.Size, _ height:GL.Size)
{
    fp_glCopyTextureSubImage3DEXT(texture, target, level, xoffset, yoffset, zoffset, x, y, width, height)
}

var fp_glCoverFillPathInstancedNV:@convention(c) (GL.Size, GL.Enum, UnsafeRawPointer?, GL.UInt, GL.Enum, GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glCoverFillPathInstancedNV
func load_glCoverFillPathInstancedNV(numPaths:GL.Size, pathNameType:GL.Enum, paths:UnsafeRawPointer?, pathBase:GL.UInt, coverMode:GL.Enum, transformType:GL.Enum, transformValues:UnsafePointer<GL.Float>?)
{
    fp_glCoverFillPathInstancedNV = unsafeBitCast(get_fp("glCoverFillPathInstancedNV", support: [ss259]), to: Swift.type(of: fp_glCoverFillPathInstancedNV))
    fp_glCoverFillPathInstancedNV(numPaths, pathNameType, paths, pathBase, coverMode, transformType, transformValues)
}
public
func glCoverFillPathInstancedNV(numPaths:GL.Size, pathNameType:GL.Enum, paths:UnsafeRawPointer?, pathBase:GL.UInt, coverMode:GL.Enum, transformType:GL.Enum, transformValues:UnsafePointer<GL.Float>?)
{
    fp_glCoverFillPathInstancedNV(numPaths, pathNameType, paths, pathBase, coverMode, transformType, transformValues)
}
public
func glCoverFillPathInstancedNV(_ numPaths:GL.Size, _ pathNameType:GL.Enum, _ paths:UnsafeRawPointer?, _ pathBase:GL.UInt, _ coverMode:GL.Enum, _ transformType:GL.Enum, _ transformValues:UnsafePointer<GL.Float>?)
{
    fp_glCoverFillPathInstancedNV(numPaths, pathNameType, paths, pathBase, coverMode, transformType, transformValues)
}

var fp_glCoverFillPathNV:@convention(c) (GL.UInt, GL.Enum) -> () = load_glCoverFillPathNV
func load_glCoverFillPathNV(path:GL.UInt, coverMode:GL.Enum)
{
    fp_glCoverFillPathNV = unsafeBitCast(get_fp("glCoverFillPathNV", support: [ss259]), to: Swift.type(of: fp_glCoverFillPathNV))
    fp_glCoverFillPathNV(path, coverMode)
}
public
func glCoverFillPathNV(path:GL.UInt, coverMode:GL.Enum)
{
    fp_glCoverFillPathNV(path, coverMode)
}
public
func glCoverFillPathNV(_ path:GL.UInt, _ coverMode:GL.Enum)
{
    fp_glCoverFillPathNV(path, coverMode)
}

var fp_glCoverStrokePathInstancedNV:@convention(c) (GL.Size, GL.Enum, UnsafeRawPointer?, GL.UInt, GL.Enum, GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glCoverStrokePathInstancedNV
func load_glCoverStrokePathInstancedNV(numPaths:GL.Size, pathNameType:GL.Enum, paths:UnsafeRawPointer?, pathBase:GL.UInt, coverMode:GL.Enum, transformType:GL.Enum, transformValues:UnsafePointer<GL.Float>?)
{
    fp_glCoverStrokePathInstancedNV = unsafeBitCast(get_fp("glCoverStrokePathInstancedNV", support: [ss259]), to: Swift.type(of: fp_glCoverStrokePathInstancedNV))
    fp_glCoverStrokePathInstancedNV(numPaths, pathNameType, paths, pathBase, coverMode, transformType, transformValues)
}
public
func glCoverStrokePathInstancedNV(numPaths:GL.Size, pathNameType:GL.Enum, paths:UnsafeRawPointer?, pathBase:GL.UInt, coverMode:GL.Enum, transformType:GL.Enum, transformValues:UnsafePointer<GL.Float>?)
{
    fp_glCoverStrokePathInstancedNV(numPaths, pathNameType, paths, pathBase, coverMode, transformType, transformValues)
}
public
func glCoverStrokePathInstancedNV(_ numPaths:GL.Size, _ pathNameType:GL.Enum, _ paths:UnsafeRawPointer?, _ pathBase:GL.UInt, _ coverMode:GL.Enum, _ transformType:GL.Enum, _ transformValues:UnsafePointer<GL.Float>?)
{
    fp_glCoverStrokePathInstancedNV(numPaths, pathNameType, paths, pathBase, coverMode, transformType, transformValues)
}

var fp_glCoverStrokePathNV:@convention(c) (GL.UInt, GL.Enum) -> () = load_glCoverStrokePathNV
func load_glCoverStrokePathNV(path:GL.UInt, coverMode:GL.Enum)
{
    fp_glCoverStrokePathNV = unsafeBitCast(get_fp("glCoverStrokePathNV", support: [ss259]), to: Swift.type(of: fp_glCoverStrokePathNV))
    fp_glCoverStrokePathNV(path, coverMode)
}
public
func glCoverStrokePathNV(path:GL.UInt, coverMode:GL.Enum)
{
    fp_glCoverStrokePathNV(path, coverMode)
}
public
func glCoverStrokePathNV(_ path:GL.UInt, _ coverMode:GL.Enum)
{
    fp_glCoverStrokePathNV(path, coverMode)
}

var fp_glCoverageMaskNV:@convention(c) (GL.Bool) -> () = load_glCoverageMaskNV
func load_glCoverageMaskNV(mask:GL.Bool)
{
    fp_glCoverageMaskNV = unsafeBitCast(get_fp("glCoverageMaskNV", support: [ss235]), to: Swift.type(of: fp_glCoverageMaskNV))
    fp_glCoverageMaskNV(mask)
}
public
func glCoverageMaskNV(mask:GL.Bool)
{
    fp_glCoverageMaskNV(mask)
}
public
func glCoverageMaskNV(_ mask:GL.Bool)
{
    fp_glCoverageMaskNV(mask)
}

var fp_glCoverageModulationNV:@convention(c) (GL.Enum) -> () = load_glCoverageModulationNV
func load_glCoverageModulationNV(components:GL.Enum)
{
    fp_glCoverageModulationNV = unsafeBitCast(get_fp("glCoverageModulationNV", support: [ss246]), to: Swift.type(of: fp_glCoverageModulationNV))
    fp_glCoverageModulationNV(components)
}
public
func glCoverageModulationNV(components:GL.Enum)
{
    fp_glCoverageModulationNV(components)
}
public
func glCoverageModulationNV(_ components:GL.Enum)
{
    fp_glCoverageModulationNV(components)
}

var fp_glCoverageModulationTableNV:@convention(c) (GL.Size, UnsafePointer<GL.Float>?) -> () = load_glCoverageModulationTableNV
func load_glCoverageModulationTableNV(n:GL.Size, v:UnsafePointer<GL.Float>?)
{
    fp_glCoverageModulationTableNV = unsafeBitCast(get_fp("glCoverageModulationTableNV", support: [ss246]), to: Swift.type(of: fp_glCoverageModulationTableNV))
    fp_glCoverageModulationTableNV(n, v)
}
public
func glCoverageModulationTableNV(n:GL.Size, v:UnsafePointer<GL.Float>?)
{
    fp_glCoverageModulationTableNV(n, v)
}
public
func glCoverageModulationTableNV(_ n:GL.Size, _ v:UnsafePointer<GL.Float>?)
{
    fp_glCoverageModulationTableNV(n, v)
}

var fp_glCoverageOperationNV:@convention(c) (GL.Enum) -> () = load_glCoverageOperationNV
func load_glCoverageOperationNV(operation:GL.Enum)
{
    fp_glCoverageOperationNV = unsafeBitCast(get_fp("glCoverageOperationNV", support: [ss235]), to: Swift.type(of: fp_glCoverageOperationNV))
    fp_glCoverageOperationNV(operation)
}
public
func glCoverageOperationNV(operation:GL.Enum)
{
    fp_glCoverageOperationNV(operation)
}
public
func glCoverageOperationNV(_ operation:GL.Enum)
{
    fp_glCoverageOperationNV(operation)
}

var fp_glCreateBuffers:@convention(c) (GL.Size, UnsafeMutablePointer<GL.UInt>?) -> () = load_glCreateBuffers
func load_glCreateBuffers(n:GL.Size, buffers:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glCreateBuffers = unsafeBitCast(get_fp("glCreateBuffers", support: [ss363, ss42]), to: Swift.type(of: fp_glCreateBuffers))
    fp_glCreateBuffers(n, buffers)
}
public
func glCreateBuffers(n:GL.Size, buffers:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glCreateBuffers(n, buffers)
}
public
func glCreateBuffers(_ n:GL.Size, _ buffers:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glCreateBuffers(n, buffers)
}

var fp_glCreateCommandListsNV:@convention(c) (GL.Size, UnsafeMutablePointer<GL.UInt>?) -> () = load_glCreateCommandListsNV
func load_glCreateCommandListsNV(n:GL.Size, lists:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glCreateCommandListsNV = unsafeBitCast(get_fp("glCreateCommandListsNV", support: [ss229]), to: Swift.type(of: fp_glCreateCommandListsNV))
    fp_glCreateCommandListsNV(n, lists)
}
public
func glCreateCommandListsNV(n:GL.Size, lists:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glCreateCommandListsNV(n, lists)
}
public
func glCreateCommandListsNV(_ n:GL.Size, _ lists:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glCreateCommandListsNV(n, lists)
}

var fp_glCreateFramebuffers:@convention(c) (GL.Size, UnsafeMutablePointer<GL.UInt>?) -> () = load_glCreateFramebuffers
func load_glCreateFramebuffers(n:GL.Size, framebuffers:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glCreateFramebuffers = unsafeBitCast(get_fp("glCreateFramebuffers", support: [ss363, ss42]), to: Swift.type(of: fp_glCreateFramebuffers))
    fp_glCreateFramebuffers(n, framebuffers)
}
public
func glCreateFramebuffers(n:GL.Size, framebuffers:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glCreateFramebuffers(n, framebuffers)
}
public
func glCreateFramebuffers(_ n:GL.Size, _ framebuffers:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glCreateFramebuffers(n, framebuffers)
}

var fp_glCreatePerfQueryINTEL:@convention(c) (GL.UInt, UnsafeMutablePointer<GL.UInt>?) -> () = load_glCreatePerfQueryINTEL
func load_glCreatePerfQueryINTEL(queryId:GL.UInt, queryHandle:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glCreatePerfQueryINTEL = unsafeBitCast(get_fp("glCreatePerfQueryINTEL", support: [ss219]), to: Swift.type(of: fp_glCreatePerfQueryINTEL))
    fp_glCreatePerfQueryINTEL(queryId, queryHandle)
}
public
func glCreatePerfQueryINTEL(queryId:GL.UInt, queryHandle:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glCreatePerfQueryINTEL(queryId, queryHandle)
}
public
func glCreatePerfQueryINTEL(_ queryId:GL.UInt, _ queryHandle:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glCreatePerfQueryINTEL(queryId, queryHandle)
}

var fp_glCreateProgram:@convention(c) () -> GL.UInt = load_glCreateProgram
func load_glCreateProgram() -> GL.UInt
{
    fp_glCreateProgram = unsafeBitCast(get_fp("glCreateProgram", support: [ss352, ss365]), to: Swift.type(of: fp_glCreateProgram))
    return fp_glCreateProgram()
}
public
func glCreateProgram() -> GL.UInt
{
    return fp_glCreateProgram()
}

var fp_glCreateProgramObjectARB:@convention(c) () -> GL.HandleARB = load_glCreateProgramObjectARB
func load_glCreateProgramObjectARB() -> GL.HandleARB
{
    fp_glCreateProgramObjectARB = unsafeBitCast(get_fp("glCreateProgramObjectARB", support: [ss83]), to: Swift.type(of: fp_glCreateProgramObjectARB))
    return fp_glCreateProgramObjectARB()
}
public
func glCreateProgramObjectARB() -> GL.HandleARB
{
    return fp_glCreateProgramObjectARB()
}

var fp_glCreateProgramPipelines:@convention(c) (GL.Size, UnsafeMutablePointer<GL.UInt>?) -> () = load_glCreateProgramPipelines
func load_glCreateProgramPipelines(n:GL.Size, pipelines:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glCreateProgramPipelines = unsafeBitCast(get_fp("glCreateProgramPipelines", support: [ss363, ss42]), to: Swift.type(of: fp_glCreateProgramPipelines))
    fp_glCreateProgramPipelines(n, pipelines)
}
public
func glCreateProgramPipelines(n:GL.Size, pipelines:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glCreateProgramPipelines(n, pipelines)
}
public
func glCreateProgramPipelines(_ n:GL.Size, _ pipelines:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glCreateProgramPipelines(n, pipelines)
}

var fp_glCreateQueries:@convention(c) (GL.Enum, GL.Size, UnsafeMutablePointer<GL.UInt>?) -> () = load_glCreateQueries
func load_glCreateQueries(target:GL.Enum, n:GL.Size, ids:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glCreateQueries = unsafeBitCast(get_fp("glCreateQueries", support: [ss363, ss42]), to: Swift.type(of: fp_glCreateQueries))
    fp_glCreateQueries(target, n, ids)
}
public
func glCreateQueries(target:GL.Enum, n:GL.Size, ids:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glCreateQueries(target, n, ids)
}
public
func glCreateQueries(_ target:GL.Enum, _ n:GL.Size, _ ids:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glCreateQueries(target, n, ids)
}

var fp_glCreateRenderbuffers:@convention(c) (GL.Size, UnsafeMutablePointer<GL.UInt>?) -> () = load_glCreateRenderbuffers
func load_glCreateRenderbuffers(n:GL.Size, renderbuffers:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glCreateRenderbuffers = unsafeBitCast(get_fp("glCreateRenderbuffers", support: [ss363, ss42]), to: Swift.type(of: fp_glCreateRenderbuffers))
    fp_glCreateRenderbuffers(n, renderbuffers)
}
public
func glCreateRenderbuffers(n:GL.Size, renderbuffers:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glCreateRenderbuffers(n, renderbuffers)
}
public
func glCreateRenderbuffers(_ n:GL.Size, _ renderbuffers:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glCreateRenderbuffers(n, renderbuffers)
}

var fp_glCreateSamplers:@convention(c) (GL.Size, UnsafeMutablePointer<GL.UInt>?) -> () = load_glCreateSamplers
func load_glCreateSamplers(n:GL.Size, samplers:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glCreateSamplers = unsafeBitCast(get_fp("glCreateSamplers", support: [ss363, ss42]), to: Swift.type(of: fp_glCreateSamplers))
    fp_glCreateSamplers(n, samplers)
}
public
func glCreateSamplers(n:GL.Size, samplers:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glCreateSamplers(n, samplers)
}
public
func glCreateSamplers(_ n:GL.Size, _ samplers:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glCreateSamplers(n, samplers)
}

var fp_glCreateShader:@convention(c) (GL.Enum) -> GL.UInt = load_glCreateShader
func load_glCreateShader(type:GL.Enum) -> GL.UInt
{
    fp_glCreateShader = unsafeBitCast(get_fp("glCreateShader", support: [ss352, ss365]), to: Swift.type(of: fp_glCreateShader))
    return fp_glCreateShader(type)
}
public
func glCreateShader(type:GL.Enum) -> GL.UInt
{
    return fp_glCreateShader(type)
}
public
func glCreateShader(_ type:GL.Enum) -> GL.UInt
{
    return fp_glCreateShader(type)
}

var fp_glCreateShaderObjectARB:@convention(c) (GL.Enum) -> GL.HandleARB = load_glCreateShaderObjectARB
func load_glCreateShaderObjectARB(shaderType:GL.Enum) -> GL.HandleARB
{
    fp_glCreateShaderObjectARB = unsafeBitCast(get_fp("glCreateShaderObjectARB", support: [ss83]), to: Swift.type(of: fp_glCreateShaderObjectARB))
    return fp_glCreateShaderObjectARB(shaderType)
}
public
func glCreateShaderObjectARB(shaderType:GL.Enum) -> GL.HandleARB
{
    return fp_glCreateShaderObjectARB(shaderType)
}
public
func glCreateShaderObjectARB(_ shaderType:GL.Enum) -> GL.HandleARB
{
    return fp_glCreateShaderObjectARB(shaderType)
}

var fp_glCreateShaderProgramEXT:@convention(c) (GL.Enum, UnsafePointer<GL.Char>?) -> GL.UInt = load_glCreateShaderProgramEXT
func load_glCreateShaderProgramEXT(type:GL.Enum, string:UnsafePointer<GL.Char>?) -> GL.UInt
{
    fp_glCreateShaderProgramEXT = unsafeBitCast(get_fp("glCreateShaderProgramEXT", support: [ss182]), to: Swift.type(of: fp_glCreateShaderProgramEXT))
    return fp_glCreateShaderProgramEXT(type, string)
}
public
func glCreateShaderProgramEXT(type:GL.Enum, string:UnsafePointer<GL.Char>?) -> GL.UInt
{
    return fp_glCreateShaderProgramEXT(type, string)
}
public
func glCreateShaderProgramEXT(_ type:GL.Enum, _ string:UnsafePointer<GL.Char>?) -> GL.UInt
{
    return fp_glCreateShaderProgramEXT(type, string)
}

var fp_glCreateShaderProgramv:@convention(c) (GL.Enum, GL.Size, UnsafePointer<UnsafePointer<GL.Char>?>?) -> GL.UInt = load_glCreateShaderProgramv
func load_glCreateShaderProgramv(type:GL.Enum, count:GL.Size, strings:UnsafePointer<UnsafePointer<GL.Char>?>?) -> GL.UInt
{
    fp_glCreateShaderProgramv = unsafeBitCast(get_fp("glCreateShaderProgramv", support: [ss359, ss367, ss80]), to: Swift.type(of: fp_glCreateShaderProgramv))
    return fp_glCreateShaderProgramv(type, count, strings)
}
public
func glCreateShaderProgramv(type:GL.Enum, count:GL.Size, strings:UnsafePointer<UnsafePointer<GL.Char>?>?) -> GL.UInt
{
    return fp_glCreateShaderProgramv(type, count, strings)
}
public
func glCreateShaderProgramv(_ type:GL.Enum, _ count:GL.Size, _ strings:UnsafePointer<UnsafePointer<GL.Char>?>?) -> GL.UInt
{
    return fp_glCreateShaderProgramv(type, count, strings)
}

var fp_glCreateShaderProgramvEXT:@convention(c) (GL.Enum, GL.Size, UnsafeMutablePointer<UnsafeMutablePointer<GL.Char>?>?) -> GL.UInt = load_glCreateShaderProgramvEXT
func load_glCreateShaderProgramvEXT(type:GL.Enum, count:GL.Size, strings:UnsafeMutablePointer<UnsafeMutablePointer<GL.Char>?>?) -> GL.UInt
{
    fp_glCreateShaderProgramvEXT = unsafeBitCast(get_fp("glCreateShaderProgramvEXT", support: [ss182]), to: Swift.type(of: fp_glCreateShaderProgramvEXT))
    return fp_glCreateShaderProgramvEXT(type, count, strings)
}
public
func glCreateShaderProgramvEXT(type:GL.Enum, count:GL.Size, strings:UnsafeMutablePointer<UnsafeMutablePointer<GL.Char>?>?) -> GL.UInt
{
    return fp_glCreateShaderProgramvEXT(type, count, strings)
}
public
func glCreateShaderProgramvEXT(_ type:GL.Enum, _ count:GL.Size, _ strings:UnsafeMutablePointer<UnsafeMutablePointer<GL.Char>?>?) -> GL.UInt
{
    return fp_glCreateShaderProgramvEXT(type, count, strings)
}

var fp_glCreateStatesNV:@convention(c) (GL.Size, UnsafeMutablePointer<GL.UInt>?) -> () = load_glCreateStatesNV
func load_glCreateStatesNV(n:GL.Size, states:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glCreateStatesNV = unsafeBitCast(get_fp("glCreateStatesNV", support: [ss229]), to: Swift.type(of: fp_glCreateStatesNV))
    fp_glCreateStatesNV(n, states)
}
public
func glCreateStatesNV(n:GL.Size, states:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glCreateStatesNV(n, states)
}
public
func glCreateStatesNV(_ n:GL.Size, _ states:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glCreateStatesNV(n, states)
}

var fp_glCreateSyncFromCLeventARB:@convention(c) (UnsafeMutablePointer<OpaquePointer?>?, UnsafeMutablePointer<OpaquePointer?>?, GL.Bitfield) -> GL.Sync = load_glCreateSyncFromCLeventARB
func load_glCreateSyncFromCLeventARB(context:UnsafeMutablePointer<OpaquePointer?>?, event:UnsafeMutablePointer<OpaquePointer?>?, flags:GL.Bitfield) -> GL.Sync
{
    fp_glCreateSyncFromCLeventARB = unsafeBitCast(get_fp("glCreateSyncFromCLeventARB", support: [ss32]), to: Swift.type(of: fp_glCreateSyncFromCLeventARB))
    return fp_glCreateSyncFromCLeventARB(context, event, flags)
}
public
func glCreateSyncFromCLeventARB(context:UnsafeMutablePointer<OpaquePointer?>?, event:UnsafeMutablePointer<OpaquePointer?>?, flags:GL.Bitfield) -> GL.Sync
{
    return fp_glCreateSyncFromCLeventARB(context, event, flags)
}
public
func glCreateSyncFromCLeventARB(_ context:UnsafeMutablePointer<OpaquePointer?>?, _ event:UnsafeMutablePointer<OpaquePointer?>?, _ flags:GL.Bitfield) -> GL.Sync
{
    return fp_glCreateSyncFromCLeventARB(context, event, flags)
}

var fp_glCreateTextures:@convention(c) (GL.Enum, GL.Size, UnsafeMutablePointer<GL.UInt>?) -> () = load_glCreateTextures
func load_glCreateTextures(target:GL.Enum, n:GL.Size, textures:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glCreateTextures = unsafeBitCast(get_fp("glCreateTextures", support: [ss363, ss42]), to: Swift.type(of: fp_glCreateTextures))
    fp_glCreateTextures(target, n, textures)
}
public
func glCreateTextures(target:GL.Enum, n:GL.Size, textures:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glCreateTextures(target, n, textures)
}
public
func glCreateTextures(_ target:GL.Enum, _ n:GL.Size, _ textures:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glCreateTextures(target, n, textures)
}

var fp_glCreateTransformFeedbacks:@convention(c) (GL.Size, UnsafeMutablePointer<GL.UInt>?) -> () = load_glCreateTransformFeedbacks
func load_glCreateTransformFeedbacks(n:GL.Size, ids:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glCreateTransformFeedbacks = unsafeBitCast(get_fp("glCreateTransformFeedbacks", support: [ss363, ss42]), to: Swift.type(of: fp_glCreateTransformFeedbacks))
    fp_glCreateTransformFeedbacks(n, ids)
}
public
func glCreateTransformFeedbacks(n:GL.Size, ids:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glCreateTransformFeedbacks(n, ids)
}
public
func glCreateTransformFeedbacks(_ n:GL.Size, _ ids:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glCreateTransformFeedbacks(n, ids)
}

var fp_glCreateVertexArrays:@convention(c) (GL.Size, UnsafeMutablePointer<GL.UInt>?) -> () = load_glCreateVertexArrays
func load_glCreateVertexArrays(n:GL.Size, arrays:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glCreateVertexArrays = unsafeBitCast(get_fp("glCreateVertexArrays", support: [ss363, ss42]), to: Swift.type(of: fp_glCreateVertexArrays))
    fp_glCreateVertexArrays(n, arrays)
}
public
func glCreateVertexArrays(n:GL.Size, arrays:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glCreateVertexArrays(n, arrays)
}
public
func glCreateVertexArrays(_ n:GL.Size, _ arrays:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glCreateVertexArrays(n, arrays)
}

var fp_glCullFace:@convention(c) (GL.Enum) -> () = load_glCullFace
func load_glCullFace(mode:GL.Enum)
{
    fp_glCullFace = unsafeBitCast(get_fp("glCullFace", support: [ss346, ss365]), to: Swift.type(of: fp_glCullFace))
    fp_glCullFace(mode)
}
public
func glCullFace(mode:GL.Enum)
{
    fp_glCullFace(mode)
}
public
func glCullFace(_ mode:GL.Enum)
{
    fp_glCullFace(mode)
}

var fp_glCullParameterdvEXT:@convention(c) (GL.Enum, UnsafeMutablePointer<GL.Double>?) -> () = load_glCullParameterdvEXT
func load_glCullParameterdvEXT(pname:GL.Enum, params:UnsafeMutablePointer<GL.Double>?)
{
    fp_glCullParameterdvEXT = unsafeBitCast(get_fp("glCullParameterdvEXT", support: [ss139]), to: Swift.type(of: fp_glCullParameterdvEXT))
    fp_glCullParameterdvEXT(pname, params)
}
public
func glCullParameterdvEXT(pname:GL.Enum, params:UnsafeMutablePointer<GL.Double>?)
{
    fp_glCullParameterdvEXT(pname, params)
}
public
func glCullParameterdvEXT(_ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Double>?)
{
    fp_glCullParameterdvEXT(pname, params)
}

var fp_glCullParameterfvEXT:@convention(c) (GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glCullParameterfvEXT
func load_glCullParameterfvEXT(pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glCullParameterfvEXT = unsafeBitCast(get_fp("glCullParameterfvEXT", support: [ss139]), to: Swift.type(of: fp_glCullParameterfvEXT))
    fp_glCullParameterfvEXT(pname, params)
}
public
func glCullParameterfvEXT(pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glCullParameterfvEXT(pname, params)
}
public
func glCullParameterfvEXT(_ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glCullParameterfvEXT(pname, params)
}

var fp_glCurrentPaletteMatrixARB:@convention(c) (GL.Int) -> () = load_glCurrentPaletteMatrixARB
func load_glCurrentPaletteMatrixARB(index:GL.Int)
{
    fp_glCurrentPaletteMatrixARB = unsafeBitCast(get_fp("glCurrentPaletteMatrixARB", support: [ss66]), to: Swift.type(of: fp_glCurrentPaletteMatrixARB))
    fp_glCurrentPaletteMatrixARB(index)
}
public
func glCurrentPaletteMatrixARB(index:GL.Int)
{
    fp_glCurrentPaletteMatrixARB(index)
}
public
func glCurrentPaletteMatrixARB(_ index:GL.Int)
{
    fp_glCurrentPaletteMatrixARB(index)
}

var fp_glCurrentPaletteMatrixOES:@convention(c) (GL.UInt) -> () = load_glCurrentPaletteMatrixOES
func load_glCurrentPaletteMatrixOES(matrixpaletteindex:GL.UInt)
{
    fp_glCurrentPaletteMatrixOES = unsafeBitCast(get_fp("glCurrentPaletteMatrixOES", support: [ss297]), to: Swift.type(of: fp_glCurrentPaletteMatrixOES))
    fp_glCurrentPaletteMatrixOES(matrixpaletteindex)
}
public
func glCurrentPaletteMatrixOES(matrixpaletteindex:GL.UInt)
{
    fp_glCurrentPaletteMatrixOES(matrixpaletteindex)
}
public
func glCurrentPaletteMatrixOES(_ matrixpaletteindex:GL.UInt)
{
    fp_glCurrentPaletteMatrixOES(matrixpaletteindex)
}

var fp_glDebugMessageCallback:@convention(c) (GL.DebugProc, UnsafeRawPointer?) -> () = load_glDebugMessageCallback
func load_glDebugMessageCallback(callback:GL.DebugProc, userParam:UnsafeRawPointer?)
{
    fp_glDebugMessageCallback = unsafeBitCast(get_fp("glDebugMessageCallback", support: [ss361, ss368, ss221]), to: Swift.type(of: fp_glDebugMessageCallback))
    fp_glDebugMessageCallback(callback, userParam)
}
public
func glDebugMessageCallback(callback:GL.DebugProc, userParam:UnsafeRawPointer?)
{
    fp_glDebugMessageCallback(callback, userParam)
}
public
func glDebugMessageCallback(_ callback:GL.DebugProc, _ userParam:UnsafeRawPointer?)
{
    fp_glDebugMessageCallback(callback, userParam)
}

var fp_glDebugMessageCallbackAMD:@convention(c) (GL.DebugProcAMD, UnsafeMutableRawPointer?) -> () = load_glDebugMessageCallbackAMD
func load_glDebugMessageCallbackAMD(callback:GL.DebugProcAMD, userParam:UnsafeMutableRawPointer?)
{
    fp_glDebugMessageCallbackAMD = unsafeBitCast(get_fp("glDebugMessageCallbackAMD", support: [ss1]), to: Swift.type(of: fp_glDebugMessageCallbackAMD))
    fp_glDebugMessageCallbackAMD(callback, userParam)
}
public
func glDebugMessageCallbackAMD(callback:GL.DebugProcAMD, userParam:UnsafeMutableRawPointer?)
{
    fp_glDebugMessageCallbackAMD(callback, userParam)
}
public
func glDebugMessageCallbackAMD(_ callback:GL.DebugProcAMD, _ userParam:UnsafeMutableRawPointer?)
{
    fp_glDebugMessageCallbackAMD(callback, userParam)
}

var fp_glDebugMessageCallbackARB:@convention(c) (GL.DebugProcARB, UnsafeRawPointer?) -> () = load_glDebugMessageCallbackARB
func load_glDebugMessageCallbackARB(callback:GL.DebugProcARB, userParam:UnsafeRawPointer?)
{
    fp_glDebugMessageCallbackARB = unsafeBitCast(get_fp("glDebugMessageCallbackARB", support: [ss41]), to: Swift.type(of: fp_glDebugMessageCallbackARB))
    fp_glDebugMessageCallbackARB(callback, userParam)
}
public
func glDebugMessageCallbackARB(callback:GL.DebugProcARB, userParam:UnsafeRawPointer?)
{
    fp_glDebugMessageCallbackARB(callback, userParam)
}
public
func glDebugMessageCallbackARB(_ callback:GL.DebugProcARB, _ userParam:UnsafeRawPointer?)
{
    fp_glDebugMessageCallbackARB(callback, userParam)
}

var fp_glDebugMessageCallbackKHR:@convention(c) (GL.DebugProcKHR, UnsafeRawPointer?) -> () = load_glDebugMessageCallbackKHR
func load_glDebugMessageCallbackKHR(callback:GL.DebugProcKHR, userParam:UnsafeRawPointer?)
{
    fp_glDebugMessageCallbackKHR = unsafeBitCast(get_fp("glDebugMessageCallbackKHR", support: [ss221]), to: Swift.type(of: fp_glDebugMessageCallbackKHR))
    fp_glDebugMessageCallbackKHR(callback, userParam)
}
public
func glDebugMessageCallbackKHR(callback:GL.DebugProcKHR, userParam:UnsafeRawPointer?)
{
    fp_glDebugMessageCallbackKHR(callback, userParam)
}
public
func glDebugMessageCallbackKHR(_ callback:GL.DebugProcKHR, _ userParam:UnsafeRawPointer?)
{
    fp_glDebugMessageCallbackKHR(callback, userParam)
}

var fp_glDebugMessageControl:@convention(c) (GL.Enum, GL.Enum, GL.Enum, GL.Size, UnsafePointer<GL.UInt>?, GL.Bool) -> () = load_glDebugMessageControl
func load_glDebugMessageControl(source:GL.Enum, type:GL.Enum, severity:GL.Enum, count:GL.Size, ids:UnsafePointer<GL.UInt>?, enabled:GL.Bool)
{
    fp_glDebugMessageControl = unsafeBitCast(get_fp("glDebugMessageControl", support: [ss361, ss368, ss221]), to: Swift.type(of: fp_glDebugMessageControl))
    fp_glDebugMessageControl(source, type, severity, count, ids, enabled)
}
public
func glDebugMessageControl(source:GL.Enum, type:GL.Enum, severity:GL.Enum, count:GL.Size, ids:UnsafePointer<GL.UInt>?, enabled:GL.Bool)
{
    fp_glDebugMessageControl(source, type, severity, count, ids, enabled)
}
public
func glDebugMessageControl(_ source:GL.Enum, _ type:GL.Enum, _ severity:GL.Enum, _ count:GL.Size, _ ids:UnsafePointer<GL.UInt>?, _ enabled:GL.Bool)
{
    fp_glDebugMessageControl(source, type, severity, count, ids, enabled)
}

var fp_glDebugMessageControlARB:@convention(c) (GL.Enum, GL.Enum, GL.Enum, GL.Size, UnsafePointer<GL.UInt>?, GL.Bool) -> () = load_glDebugMessageControlARB
func load_glDebugMessageControlARB(source:GL.Enum, type:GL.Enum, severity:GL.Enum, count:GL.Size, ids:UnsafePointer<GL.UInt>?, enabled:GL.Bool)
{
    fp_glDebugMessageControlARB = unsafeBitCast(get_fp("glDebugMessageControlARB", support: [ss41]), to: Swift.type(of: fp_glDebugMessageControlARB))
    fp_glDebugMessageControlARB(source, type, severity, count, ids, enabled)
}
public
func glDebugMessageControlARB(source:GL.Enum, type:GL.Enum, severity:GL.Enum, count:GL.Size, ids:UnsafePointer<GL.UInt>?, enabled:GL.Bool)
{
    fp_glDebugMessageControlARB(source, type, severity, count, ids, enabled)
}
public
func glDebugMessageControlARB(_ source:GL.Enum, _ type:GL.Enum, _ severity:GL.Enum, _ count:GL.Size, _ ids:UnsafePointer<GL.UInt>?, _ enabled:GL.Bool)
{
    fp_glDebugMessageControlARB(source, type, severity, count, ids, enabled)
}

var fp_glDebugMessageControlKHR:@convention(c) (GL.Enum, GL.Enum, GL.Enum, GL.Size, UnsafePointer<GL.UInt>?, GL.Bool) -> () = load_glDebugMessageControlKHR
func load_glDebugMessageControlKHR(source:GL.Enum, type:GL.Enum, severity:GL.Enum, count:GL.Size, ids:UnsafePointer<GL.UInt>?, enabled:GL.Bool)
{
    fp_glDebugMessageControlKHR = unsafeBitCast(get_fp("glDebugMessageControlKHR", support: [ss221]), to: Swift.type(of: fp_glDebugMessageControlKHR))
    fp_glDebugMessageControlKHR(source, type, severity, count, ids, enabled)
}
public
func glDebugMessageControlKHR(source:GL.Enum, type:GL.Enum, severity:GL.Enum, count:GL.Size, ids:UnsafePointer<GL.UInt>?, enabled:GL.Bool)
{
    fp_glDebugMessageControlKHR(source, type, severity, count, ids, enabled)
}
public
func glDebugMessageControlKHR(_ source:GL.Enum, _ type:GL.Enum, _ severity:GL.Enum, _ count:GL.Size, _ ids:UnsafePointer<GL.UInt>?, _ enabled:GL.Bool)
{
    fp_glDebugMessageControlKHR(source, type, severity, count, ids, enabled)
}

var fp_glDebugMessageEnableAMD:@convention(c) (GL.Enum, GL.Enum, GL.Size, UnsafePointer<GL.UInt>?, GL.Bool) -> () = load_glDebugMessageEnableAMD
func load_glDebugMessageEnableAMD(category:GL.Enum, severity:GL.Enum, count:GL.Size, ids:UnsafePointer<GL.UInt>?, enabled:GL.Bool)
{
    fp_glDebugMessageEnableAMD = unsafeBitCast(get_fp("glDebugMessageEnableAMD", support: [ss1]), to: Swift.type(of: fp_glDebugMessageEnableAMD))
    fp_glDebugMessageEnableAMD(category, severity, count, ids, enabled)
}
public
func glDebugMessageEnableAMD(category:GL.Enum, severity:GL.Enum, count:GL.Size, ids:UnsafePointer<GL.UInt>?, enabled:GL.Bool)
{
    fp_glDebugMessageEnableAMD(category, severity, count, ids, enabled)
}
public
func glDebugMessageEnableAMD(_ category:GL.Enum, _ severity:GL.Enum, _ count:GL.Size, _ ids:UnsafePointer<GL.UInt>?, _ enabled:GL.Bool)
{
    fp_glDebugMessageEnableAMD(category, severity, count, ids, enabled)
}

var fp_glDebugMessageInsert:@convention(c) (GL.Enum, GL.Enum, GL.UInt, GL.Enum, GL.Size, UnsafePointer<GL.Char>?) -> () = load_glDebugMessageInsert
func load_glDebugMessageInsert(source:GL.Enum, type:GL.Enum, id:GL.UInt, severity:GL.Enum, length:GL.Size, buf:UnsafePointer<GL.Char>?)
{
    fp_glDebugMessageInsert = unsafeBitCast(get_fp("glDebugMessageInsert", support: [ss361, ss368, ss221]), to: Swift.type(of: fp_glDebugMessageInsert))
    fp_glDebugMessageInsert(source, type, id, severity, length, buf)
}
public
func glDebugMessageInsert(source:GL.Enum, type:GL.Enum, id:GL.UInt, severity:GL.Enum, length:GL.Size, buf:UnsafePointer<GL.Char>?)
{
    fp_glDebugMessageInsert(source, type, id, severity, length, buf)
}
public
func glDebugMessageInsert(_ source:GL.Enum, _ type:GL.Enum, _ id:GL.UInt, _ severity:GL.Enum, _ length:GL.Size, _ buf:UnsafePointer<GL.Char>?)
{
    fp_glDebugMessageInsert(source, type, id, severity, length, buf)
}

var fp_glDebugMessageInsertAMD:@convention(c) (GL.Enum, GL.Enum, GL.UInt, GL.Size, UnsafePointer<GL.Char>?) -> () = load_glDebugMessageInsertAMD
func load_glDebugMessageInsertAMD(category:GL.Enum, severity:GL.Enum, id:GL.UInt, length:GL.Size, buf:UnsafePointer<GL.Char>?)
{
    fp_glDebugMessageInsertAMD = unsafeBitCast(get_fp("glDebugMessageInsertAMD", support: [ss1]), to: Swift.type(of: fp_glDebugMessageInsertAMD))
    fp_glDebugMessageInsertAMD(category, severity, id, length, buf)
}
public
func glDebugMessageInsertAMD(category:GL.Enum, severity:GL.Enum, id:GL.UInt, length:GL.Size, buf:UnsafePointer<GL.Char>?)
{
    fp_glDebugMessageInsertAMD(category, severity, id, length, buf)
}
public
func glDebugMessageInsertAMD(_ category:GL.Enum, _ severity:GL.Enum, _ id:GL.UInt, _ length:GL.Size, _ buf:UnsafePointer<GL.Char>?)
{
    fp_glDebugMessageInsertAMD(category, severity, id, length, buf)
}

var fp_glDebugMessageInsertARB:@convention(c) (GL.Enum, GL.Enum, GL.UInt, GL.Enum, GL.Size, UnsafePointer<GL.Char>?) -> () = load_glDebugMessageInsertARB
func load_glDebugMessageInsertARB(source:GL.Enum, type:GL.Enum, id:GL.UInt, severity:GL.Enum, length:GL.Size, buf:UnsafePointer<GL.Char>?)
{
    fp_glDebugMessageInsertARB = unsafeBitCast(get_fp("glDebugMessageInsertARB", support: [ss41]), to: Swift.type(of: fp_glDebugMessageInsertARB))
    fp_glDebugMessageInsertARB(source, type, id, severity, length, buf)
}
public
func glDebugMessageInsertARB(source:GL.Enum, type:GL.Enum, id:GL.UInt, severity:GL.Enum, length:GL.Size, buf:UnsafePointer<GL.Char>?)
{
    fp_glDebugMessageInsertARB(source, type, id, severity, length, buf)
}
public
func glDebugMessageInsertARB(_ source:GL.Enum, _ type:GL.Enum, _ id:GL.UInt, _ severity:GL.Enum, _ length:GL.Size, _ buf:UnsafePointer<GL.Char>?)
{
    fp_glDebugMessageInsertARB(source, type, id, severity, length, buf)
}

var fp_glDebugMessageInsertKHR:@convention(c) (GL.Enum, GL.Enum, GL.UInt, GL.Enum, GL.Size, UnsafePointer<GL.Char>?) -> () = load_glDebugMessageInsertKHR
func load_glDebugMessageInsertKHR(source:GL.Enum, type:GL.Enum, id:GL.UInt, severity:GL.Enum, length:GL.Size, buf:UnsafePointer<GL.Char>?)
{
    fp_glDebugMessageInsertKHR = unsafeBitCast(get_fp("glDebugMessageInsertKHR", support: [ss221]), to: Swift.type(of: fp_glDebugMessageInsertKHR))
    fp_glDebugMessageInsertKHR(source, type, id, severity, length, buf)
}
public
func glDebugMessageInsertKHR(source:GL.Enum, type:GL.Enum, id:GL.UInt, severity:GL.Enum, length:GL.Size, buf:UnsafePointer<GL.Char>?)
{
    fp_glDebugMessageInsertKHR(source, type, id, severity, length, buf)
}
public
func glDebugMessageInsertKHR(_ source:GL.Enum, _ type:GL.Enum, _ id:GL.UInt, _ severity:GL.Enum, _ length:GL.Size, _ buf:UnsafePointer<GL.Char>?)
{
    fp_glDebugMessageInsertKHR(source, type, id, severity, length, buf)
}

var fp_glDeformSGIX:@convention(c) (GL.Bitfield) -> () = load_glDeformSGIX
func load_glDeformSGIX(mask:GL.Bitfield)
{
    fp_glDeformSGIX = unsafeBitCast(get_fp("glDeformSGIX", support: [ss337]), to: Swift.type(of: fp_glDeformSGIX))
    fp_glDeformSGIX(mask)
}
public
func glDeformSGIX(mask:GL.Bitfield)
{
    fp_glDeformSGIX(mask)
}
public
func glDeformSGIX(_ mask:GL.Bitfield)
{
    fp_glDeformSGIX(mask)
}

var fp_glDeformationMap3dSGIX:@convention(c) (GL.Enum, GL.Double, GL.Double, GL.Int, GL.Int, GL.Double, GL.Double, GL.Int, GL.Int, GL.Double, GL.Double, GL.Int, GL.Int, UnsafePointer<GL.Double>?) -> () = load_glDeformationMap3dSGIX
func load_glDeformationMap3dSGIX(target:GL.Enum, u1:GL.Double, u2:GL.Double, ustride:GL.Int, uorder:GL.Int, v1:GL.Double, v2:GL.Double, vstride:GL.Int, vorder:GL.Int, w1:GL.Double, w2:GL.Double, wstride:GL.Int, worder:GL.Int, points:UnsafePointer<GL.Double>?)
{
    fp_glDeformationMap3dSGIX = unsafeBitCast(get_fp("glDeformationMap3dSGIX", support: [ss337]), to: Swift.type(of: fp_glDeformationMap3dSGIX))
    fp_glDeformationMap3dSGIX(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, w1, w2, wstride, worder, points)
}
public
func glDeformationMap3dSGIX(target:GL.Enum, u1:GL.Double, u2:GL.Double, ustride:GL.Int, uorder:GL.Int, v1:GL.Double, v2:GL.Double, vstride:GL.Int, vorder:GL.Int, w1:GL.Double, w2:GL.Double, wstride:GL.Int, worder:GL.Int, points:UnsafePointer<GL.Double>?)
{
    fp_glDeformationMap3dSGIX(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, w1, w2, wstride, worder, points)
}
public
func glDeformationMap3dSGIX(_ target:GL.Enum, _ u1:GL.Double, _ u2:GL.Double, _ ustride:GL.Int, _ uorder:GL.Int, _ v1:GL.Double, _ v2:GL.Double, _ vstride:GL.Int, _ vorder:GL.Int, _ w1:GL.Double, _ w2:GL.Double, _ wstride:GL.Int, _ worder:GL.Int, _ points:UnsafePointer<GL.Double>?)
{
    fp_glDeformationMap3dSGIX(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, w1, w2, wstride, worder, points)
}

var fp_glDeformationMap3fSGIX:@convention(c) (GL.Enum, GL.Float, GL.Float, GL.Int, GL.Int, GL.Float, GL.Float, GL.Int, GL.Int, GL.Float, GL.Float, GL.Int, GL.Int, UnsafePointer<GL.Float>?) -> () = load_glDeformationMap3fSGIX
func load_glDeformationMap3fSGIX(target:GL.Enum, u1:GL.Float, u2:GL.Float, ustride:GL.Int, uorder:GL.Int, v1:GL.Float, v2:GL.Float, vstride:GL.Int, vorder:GL.Int, w1:GL.Float, w2:GL.Float, wstride:GL.Int, worder:GL.Int, points:UnsafePointer<GL.Float>?)
{
    fp_glDeformationMap3fSGIX = unsafeBitCast(get_fp("glDeformationMap3fSGIX", support: [ss337]), to: Swift.type(of: fp_glDeformationMap3fSGIX))
    fp_glDeformationMap3fSGIX(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, w1, w2, wstride, worder, points)
}
public
func glDeformationMap3fSGIX(target:GL.Enum, u1:GL.Float, u2:GL.Float, ustride:GL.Int, uorder:GL.Int, v1:GL.Float, v2:GL.Float, vstride:GL.Int, vorder:GL.Int, w1:GL.Float, w2:GL.Float, wstride:GL.Int, worder:GL.Int, points:UnsafePointer<GL.Float>?)
{
    fp_glDeformationMap3fSGIX(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, w1, w2, wstride, worder, points)
}
public
func glDeformationMap3fSGIX(_ target:GL.Enum, _ u1:GL.Float, _ u2:GL.Float, _ ustride:GL.Int, _ uorder:GL.Int, _ v1:GL.Float, _ v2:GL.Float, _ vstride:GL.Int, _ vorder:GL.Int, _ w1:GL.Float, _ w2:GL.Float, _ wstride:GL.Int, _ worder:GL.Int, _ points:UnsafePointer<GL.Float>?)
{
    fp_glDeformationMap3fSGIX(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, w1, w2, wstride, worder, points)
}

var fp_glDeleteAsyncMarkersSGIX:@convention(c) (GL.UInt, GL.Size) -> () = load_glDeleteAsyncMarkersSGIX
func load_glDeleteAsyncMarkersSGIX(marker:GL.UInt, range:GL.Size)
{
    fp_glDeleteAsyncMarkersSGIX = unsafeBitCast(get_fp("glDeleteAsyncMarkersSGIX", support: [ss329]), to: Swift.type(of: fp_glDeleteAsyncMarkersSGIX))
    fp_glDeleteAsyncMarkersSGIX(marker, range)
}
public
func glDeleteAsyncMarkersSGIX(marker:GL.UInt, range:GL.Size)
{
    fp_glDeleteAsyncMarkersSGIX(marker, range)
}
public
func glDeleteAsyncMarkersSGIX(_ marker:GL.UInt, _ range:GL.Size)
{
    fp_glDeleteAsyncMarkersSGIX(marker, range)
}

var fp_glDeleteBuffers:@convention(c) (GL.Size, UnsafePointer<GL.UInt>?) -> () = load_glDeleteBuffers
func load_glDeleteBuffers(n:GL.Size, buffers:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteBuffers = unsafeBitCast(get_fp("glDeleteBuffers", support: [ss351, ss365]), to: Swift.type(of: fp_glDeleteBuffers))
    fp_glDeleteBuffers(n, buffers)
}
public
func glDeleteBuffers(n:GL.Size, buffers:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteBuffers(n, buffers)
}
public
func glDeleteBuffers(_ n:GL.Size, _ buffers:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteBuffers(n, buffers)
}

var fp_glDeleteBuffersARB:@convention(c) (GL.Size, UnsafePointer<GL.UInt>?) -> () = load_glDeleteBuffersARB
func load_glDeleteBuffersARB(n:GL.Size, buffers:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteBuffersARB = unsafeBitCast(get_fp("glDeleteBuffersARB", support: [ss109]), to: Swift.type(of: fp_glDeleteBuffersARB))
    fp_glDeleteBuffersARB(n, buffers)
}
public
func glDeleteBuffersARB(n:GL.Size, buffers:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteBuffersARB(n, buffers)
}
public
func glDeleteBuffersARB(_ n:GL.Size, _ buffers:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteBuffersARB(n, buffers)
}

var fp_glDeleteCommandListsNV:@convention(c) (GL.Size, UnsafePointer<GL.UInt>?) -> () = load_glDeleteCommandListsNV
func load_glDeleteCommandListsNV(n:GL.Size, lists:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteCommandListsNV = unsafeBitCast(get_fp("glDeleteCommandListsNV", support: [ss229]), to: Swift.type(of: fp_glDeleteCommandListsNV))
    fp_glDeleteCommandListsNV(n, lists)
}
public
func glDeleteCommandListsNV(n:GL.Size, lists:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteCommandListsNV(n, lists)
}
public
func glDeleteCommandListsNV(_ n:GL.Size, _ lists:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteCommandListsNV(n, lists)
}

var fp_glDeleteFencesAPPLE:@convention(c) (GL.Size, UnsafePointer<GL.UInt>?) -> () = load_glDeleteFencesAPPLE
func load_glDeleteFencesAPPLE(n:GL.Size, fences:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteFencesAPPLE = unsafeBitCast(get_fp("glDeleteFencesAPPLE", support: [ss19]), to: Swift.type(of: fp_glDeleteFencesAPPLE))
    fp_glDeleteFencesAPPLE(n, fences)
}
public
func glDeleteFencesAPPLE(n:GL.Size, fences:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteFencesAPPLE(n, fences)
}
public
func glDeleteFencesAPPLE(_ n:GL.Size, _ fences:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteFencesAPPLE(n, fences)
}

var fp_glDeleteFencesNV:@convention(c) (GL.Size, UnsafePointer<GL.UInt>?) -> () = load_glDeleteFencesNV
func load_glDeleteFencesNV(n:GL.Size, fences:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteFencesNV = unsafeBitCast(get_fp("glDeleteFencesNV", support: [ss242]), to: Swift.type(of: fp_glDeleteFencesNV))
    fp_glDeleteFencesNV(n, fences)
}
public
func glDeleteFencesNV(n:GL.Size, fences:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteFencesNV(n, fences)
}
public
func glDeleteFencesNV(_ n:GL.Size, _ fences:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteFencesNV(n, fences)
}

var fp_glDeleteFragmentShaderATI:@convention(c) (GL.UInt) -> () = load_glDeleteFragmentShaderATI
func load_glDeleteFragmentShaderATI(id:GL.UInt)
{
    fp_glDeleteFragmentShaderATI = unsafeBitCast(get_fp("glDeleteFragmentShaderATI", support: [ss118]), to: Swift.type(of: fp_glDeleteFragmentShaderATI))
    fp_glDeleteFragmentShaderATI(id)
}
public
func glDeleteFragmentShaderATI(id:GL.UInt)
{
    fp_glDeleteFragmentShaderATI(id)
}
public
func glDeleteFragmentShaderATI(_ id:GL.UInt)
{
    fp_glDeleteFragmentShaderATI(id)
}

var fp_glDeleteFramebuffers:@convention(c) (GL.Size, UnsafePointer<GL.UInt>?) -> () = load_glDeleteFramebuffers
func load_glDeleteFramebuffers(n:GL.Size, framebuffers:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteFramebuffers = unsafeBitCast(get_fp("glDeleteFramebuffers", support: [ss354, ss365, ss53]), to: Swift.type(of: fp_glDeleteFramebuffers))
    fp_glDeleteFramebuffers(n, framebuffers)
}
public
func glDeleteFramebuffers(n:GL.Size, framebuffers:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteFramebuffers(n, framebuffers)
}
public
func glDeleteFramebuffers(_ n:GL.Size, _ framebuffers:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteFramebuffers(n, framebuffers)
}

var fp_glDeleteFramebuffersEXT:@convention(c) (GL.Size, UnsafePointer<GL.UInt>?) -> () = load_glDeleteFramebuffersEXT
func load_glDeleteFramebuffersEXT(n:GL.Size, framebuffers:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteFramebuffersEXT = unsafeBitCast(get_fp("glDeleteFramebuffersEXT", support: [ss155]), to: Swift.type(of: fp_glDeleteFramebuffersEXT))
    fp_glDeleteFramebuffersEXT(n, framebuffers)
}
public
func glDeleteFramebuffersEXT(n:GL.Size, framebuffers:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteFramebuffersEXT(n, framebuffers)
}
public
func glDeleteFramebuffersEXT(_ n:GL.Size, _ framebuffers:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteFramebuffersEXT(n, framebuffers)
}

var fp_glDeleteFramebuffersOES:@convention(c) (GL.Size, UnsafePointer<GL.UInt>?) -> () = load_glDeleteFramebuffersOES
func load_glDeleteFramebuffersOES(n:GL.Size, framebuffers:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteFramebuffersOES = unsafeBitCast(get_fp("glDeleteFramebuffersOES", support: [ss293]), to: Swift.type(of: fp_glDeleteFramebuffersOES))
    fp_glDeleteFramebuffersOES(n, framebuffers)
}
public
func glDeleteFramebuffersOES(n:GL.Size, framebuffers:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteFramebuffersOES(n, framebuffers)
}
public
func glDeleteFramebuffersOES(_ n:GL.Size, _ framebuffers:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteFramebuffersOES(n, framebuffers)
}

var fp_glDeleteLists:@convention(c) (GL.UInt, GL.Size) -> () = load_glDeleteLists
func load_glDeleteLists(list:GL.UInt, range:GL.Size)
{
    fp_glDeleteLists = unsafeBitCast(get_fp("glDeleteLists", support: [ss346, ss369]), to: Swift.type(of: fp_glDeleteLists))
    fp_glDeleteLists(list, range)
}
public
func glDeleteLists(list:GL.UInt, range:GL.Size)
{
    fp_glDeleteLists(list, range)
}
public
func glDeleteLists(_ list:GL.UInt, _ range:GL.Size)
{
    fp_glDeleteLists(list, range)
}

var fp_glDeleteNamedStringARB:@convention(c) (GL.Int, UnsafePointer<GL.Char>?) -> () = load_glDeleteNamedStringARB
func load_glDeleteNamedStringARB(namelen:GL.Int, name:UnsafePointer<GL.Char>?)
{
    fp_glDeleteNamedStringARB = unsafeBitCast(get_fp("glDeleteNamedStringARB", support: [ss86]), to: Swift.type(of: fp_glDeleteNamedStringARB))
    fp_glDeleteNamedStringARB(namelen, name)
}
public
func glDeleteNamedStringARB(namelen:GL.Int, name:UnsafePointer<GL.Char>?)
{
    fp_glDeleteNamedStringARB(namelen, name)
}
public
func glDeleteNamedStringARB(_ namelen:GL.Int, _ name:UnsafePointer<GL.Char>?)
{
    fp_glDeleteNamedStringARB(namelen, name)
}

var fp_glDeleteNamesAMD:@convention(c) (GL.Enum, GL.UInt, UnsafePointer<GL.UInt>?) -> () = load_glDeleteNamesAMD
func load_glDeleteNamesAMD(identifier:GL.Enum, num:GL.UInt, names:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteNamesAMD = unsafeBitCast(get_fp("glDeleteNamesAMD", support: [ss6]), to: Swift.type(of: fp_glDeleteNamesAMD))
    fp_glDeleteNamesAMD(identifier, num, names)
}
public
func glDeleteNamesAMD(identifier:GL.Enum, num:GL.UInt, names:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteNamesAMD(identifier, num, names)
}
public
func glDeleteNamesAMD(_ identifier:GL.Enum, _ num:GL.UInt, _ names:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteNamesAMD(identifier, num, names)
}

var fp_glDeleteObjectARB:@convention(c) (GL.HandleARB) -> () = load_glDeleteObjectARB
func load_glDeleteObjectARB(obj:GL.HandleARB)
{
    fp_glDeleteObjectARB = unsafeBitCast(get_fp("glDeleteObjectARB", support: [ss83]), to: Swift.type(of: fp_glDeleteObjectARB))
    fp_glDeleteObjectARB(obj)
}
public
func glDeleteObjectARB(obj:GL.HandleARB)
{
    fp_glDeleteObjectARB(obj)
}
public
func glDeleteObjectARB(_ obj:GL.HandleARB)
{
    fp_glDeleteObjectARB(obj)
}

var fp_glDeleteOcclusionQueriesNV:@convention(c) (GL.Size, UnsafePointer<GL.UInt>?) -> () = load_glDeleteOcclusionQueriesNV
func load_glDeleteOcclusionQueriesNV(n:GL.Size, ids:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteOcclusionQueriesNV = unsafeBitCast(get_fp("glDeleteOcclusionQueriesNV", support: [ss257]), to: Swift.type(of: fp_glDeleteOcclusionQueriesNV))
    fp_glDeleteOcclusionQueriesNV(n, ids)
}
public
func glDeleteOcclusionQueriesNV(n:GL.Size, ids:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteOcclusionQueriesNV(n, ids)
}
public
func glDeleteOcclusionQueriesNV(_ n:GL.Size, _ ids:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteOcclusionQueriesNV(n, ids)
}

var fp_glDeletePathsNV:@convention(c) (GL.UInt, GL.Size) -> () = load_glDeletePathsNV
func load_glDeletePathsNV(path:GL.UInt, range:GL.Size)
{
    fp_glDeletePathsNV = unsafeBitCast(get_fp("glDeletePathsNV", support: [ss259]), to: Swift.type(of: fp_glDeletePathsNV))
    fp_glDeletePathsNV(path, range)
}
public
func glDeletePathsNV(path:GL.UInt, range:GL.Size)
{
    fp_glDeletePathsNV(path, range)
}
public
func glDeletePathsNV(_ path:GL.UInt, _ range:GL.Size)
{
    fp_glDeletePathsNV(path, range)
}

var fp_glDeletePerfMonitorsAMD:@convention(c) (GL.Size, UnsafeMutablePointer<GL.UInt>?) -> () = load_glDeletePerfMonitorsAMD
func load_glDeletePerfMonitorsAMD(n:GL.Size, monitors:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glDeletePerfMonitorsAMD = unsafeBitCast(get_fp("glDeletePerfMonitorsAMD", support: [ss8]), to: Swift.type(of: fp_glDeletePerfMonitorsAMD))
    fp_glDeletePerfMonitorsAMD(n, monitors)
}
public
func glDeletePerfMonitorsAMD(n:GL.Size, monitors:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glDeletePerfMonitorsAMD(n, monitors)
}
public
func glDeletePerfMonitorsAMD(_ n:GL.Size, _ monitors:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glDeletePerfMonitorsAMD(n, monitors)
}

var fp_glDeletePerfQueryINTEL:@convention(c) (GL.UInt) -> () = load_glDeletePerfQueryINTEL
func load_glDeletePerfQueryINTEL(queryHandle:GL.UInt)
{
    fp_glDeletePerfQueryINTEL = unsafeBitCast(get_fp("glDeletePerfQueryINTEL", support: [ss219]), to: Swift.type(of: fp_glDeletePerfQueryINTEL))
    fp_glDeletePerfQueryINTEL(queryHandle)
}
public
func glDeletePerfQueryINTEL(queryHandle:GL.UInt)
{
    fp_glDeletePerfQueryINTEL(queryHandle)
}
public
func glDeletePerfQueryINTEL(_ queryHandle:GL.UInt)
{
    fp_glDeletePerfQueryINTEL(queryHandle)
}

var fp_glDeleteProgram:@convention(c) (GL.UInt) -> () = load_glDeleteProgram
func load_glDeleteProgram(program:GL.UInt)
{
    fp_glDeleteProgram = unsafeBitCast(get_fp("glDeleteProgram", support: [ss352, ss365]), to: Swift.type(of: fp_glDeleteProgram))
    fp_glDeleteProgram(program)
}
public
func glDeleteProgram(program:GL.UInt)
{
    fp_glDeleteProgram(program)
}
public
func glDeleteProgram(_ program:GL.UInt)
{
    fp_glDeleteProgram(program)
}

var fp_glDeleteProgramPipelines:@convention(c) (GL.Size, UnsafePointer<GL.UInt>?) -> () = load_glDeleteProgramPipelines
func load_glDeleteProgramPipelines(n:GL.Size, pipelines:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteProgramPipelines = unsafeBitCast(get_fp("glDeleteProgramPipelines", support: [ss359, ss367, ss80]), to: Swift.type(of: fp_glDeleteProgramPipelines))
    fp_glDeleteProgramPipelines(n, pipelines)
}
public
func glDeleteProgramPipelines(n:GL.Size, pipelines:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteProgramPipelines(n, pipelines)
}
public
func glDeleteProgramPipelines(_ n:GL.Size, _ pipelines:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteProgramPipelines(n, pipelines)
}

var fp_glDeleteProgramPipelinesEXT:@convention(c) (GL.Size, UnsafePointer<GL.UInt>?) -> () = load_glDeleteProgramPipelinesEXT
func load_glDeleteProgramPipelinesEXT(n:GL.Size, pipelines:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteProgramPipelinesEXT = unsafeBitCast(get_fp("glDeleteProgramPipelinesEXT", support: [ss182]), to: Swift.type(of: fp_glDeleteProgramPipelinesEXT))
    fp_glDeleteProgramPipelinesEXT(n, pipelines)
}
public
func glDeleteProgramPipelinesEXT(n:GL.Size, pipelines:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteProgramPipelinesEXT(n, pipelines)
}
public
func glDeleteProgramPipelinesEXT(_ n:GL.Size, _ pipelines:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteProgramPipelinesEXT(n, pipelines)
}

var fp_glDeleteProgramsARB:@convention(c) (GL.Size, UnsafePointer<GL.UInt>?) -> () = load_glDeleteProgramsARB
func load_glDeleteProgramsARB(n:GL.Size, programs:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteProgramsARB = unsafeBitCast(get_fp("glDeleteProgramsARB", support: [ss51, ss110]), to: Swift.type(of: fp_glDeleteProgramsARB))
    fp_glDeleteProgramsARB(n, programs)
}
public
func glDeleteProgramsARB(n:GL.Size, programs:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteProgramsARB(n, programs)
}
public
func glDeleteProgramsARB(_ n:GL.Size, _ programs:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteProgramsARB(n, programs)
}

var fp_glDeleteProgramsNV:@convention(c) (GL.Size, UnsafePointer<GL.UInt>?) -> () = load_glDeleteProgramsNV
func load_glDeleteProgramsNV(n:GL.Size, programs:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteProgramsNV = unsafeBitCast(get_fp("glDeleteProgramsNV", support: [ss278]), to: Swift.type(of: fp_glDeleteProgramsNV))
    fp_glDeleteProgramsNV(n, programs)
}
public
func glDeleteProgramsNV(n:GL.Size, programs:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteProgramsNV(n, programs)
}
public
func glDeleteProgramsNV(_ n:GL.Size, _ programs:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteProgramsNV(n, programs)
}

var fp_glDeleteQueries:@convention(c) (GL.Size, UnsafePointer<GL.UInt>?) -> () = load_glDeleteQueries
func load_glDeleteQueries(n:GL.Size, ids:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteQueries = unsafeBitCast(get_fp("glDeleteQueries", support: [ss351, ss366]), to: Swift.type(of: fp_glDeleteQueries))
    fp_glDeleteQueries(n, ids)
}
public
func glDeleteQueries(n:GL.Size, ids:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteQueries(n, ids)
}
public
func glDeleteQueries(_ n:GL.Size, _ ids:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteQueries(n, ids)
}

var fp_glDeleteQueriesARB:@convention(c) (GL.Size, UnsafePointer<GL.UInt>?) -> () = load_glDeleteQueriesARB
func load_glDeleteQueriesARB(n:GL.Size, ids:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteQueriesARB = unsafeBitCast(get_fp("glDeleteQueriesARB", support: [ss71]), to: Swift.type(of: fp_glDeleteQueriesARB))
    fp_glDeleteQueriesARB(n, ids)
}
public
func glDeleteQueriesARB(n:GL.Size, ids:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteQueriesARB(n, ids)
}
public
func glDeleteQueriesARB(_ n:GL.Size, _ ids:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteQueriesARB(n, ids)
}

var fp_glDeleteQueriesEXT:@convention(c) (GL.Size, UnsafePointer<GL.UInt>?) -> () = load_glDeleteQueriesEXT
func load_glDeleteQueriesEXT(n:GL.Size, ids:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteQueriesEXT = unsafeBitCast(get_fp("glDeleteQueriesEXT", support: [ss145, ss171]), to: Swift.type(of: fp_glDeleteQueriesEXT))
    fp_glDeleteQueriesEXT(n, ids)
}
public
func glDeleteQueriesEXT(n:GL.Size, ids:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteQueriesEXT(n, ids)
}
public
func glDeleteQueriesEXT(_ n:GL.Size, _ ids:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteQueriesEXT(n, ids)
}

var fp_glDeleteRenderbuffers:@convention(c) (GL.Size, UnsafePointer<GL.UInt>?) -> () = load_glDeleteRenderbuffers
func load_glDeleteRenderbuffers(n:GL.Size, renderbuffers:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteRenderbuffers = unsafeBitCast(get_fp("glDeleteRenderbuffers", support: [ss354, ss365, ss53]), to: Swift.type(of: fp_glDeleteRenderbuffers))
    fp_glDeleteRenderbuffers(n, renderbuffers)
}
public
func glDeleteRenderbuffers(n:GL.Size, renderbuffers:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteRenderbuffers(n, renderbuffers)
}
public
func glDeleteRenderbuffers(_ n:GL.Size, _ renderbuffers:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteRenderbuffers(n, renderbuffers)
}

var fp_glDeleteRenderbuffersEXT:@convention(c) (GL.Size, UnsafePointer<GL.UInt>?) -> () = load_glDeleteRenderbuffersEXT
func load_glDeleteRenderbuffersEXT(n:GL.Size, renderbuffers:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteRenderbuffersEXT = unsafeBitCast(get_fp("glDeleteRenderbuffersEXT", support: [ss155]), to: Swift.type(of: fp_glDeleteRenderbuffersEXT))
    fp_glDeleteRenderbuffersEXT(n, renderbuffers)
}
public
func glDeleteRenderbuffersEXT(n:GL.Size, renderbuffers:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteRenderbuffersEXT(n, renderbuffers)
}
public
func glDeleteRenderbuffersEXT(_ n:GL.Size, _ renderbuffers:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteRenderbuffersEXT(n, renderbuffers)
}

var fp_glDeleteRenderbuffersOES:@convention(c) (GL.Size, UnsafePointer<GL.UInt>?) -> () = load_glDeleteRenderbuffersOES
func load_glDeleteRenderbuffersOES(n:GL.Size, renderbuffers:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteRenderbuffersOES = unsafeBitCast(get_fp("glDeleteRenderbuffersOES", support: [ss293]), to: Swift.type(of: fp_glDeleteRenderbuffersOES))
    fp_glDeleteRenderbuffersOES(n, renderbuffers)
}
public
func glDeleteRenderbuffersOES(n:GL.Size, renderbuffers:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteRenderbuffersOES(n, renderbuffers)
}
public
func glDeleteRenderbuffersOES(_ n:GL.Size, _ renderbuffers:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteRenderbuffersOES(n, renderbuffers)
}

var fp_glDeleteSamplers:@convention(c) (GL.Size, UnsafePointer<GL.UInt>?) -> () = load_glDeleteSamplers
func load_glDeleteSamplers(count:GL.Size, samplers:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteSamplers = unsafeBitCast(get_fp("glDeleteSamplers", support: [ss357, ss366, ss79]), to: Swift.type(of: fp_glDeleteSamplers))
    fp_glDeleteSamplers(count, samplers)
}
public
func glDeleteSamplers(count:GL.Size, samplers:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteSamplers(count, samplers)
}
public
func glDeleteSamplers(_ count:GL.Size, _ samplers:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteSamplers(count, samplers)
}

var fp_glDeleteShader:@convention(c) (GL.UInt) -> () = load_glDeleteShader
func load_glDeleteShader(shader:GL.UInt)
{
    fp_glDeleteShader = unsafeBitCast(get_fp("glDeleteShader", support: [ss352, ss365]), to: Swift.type(of: fp_glDeleteShader))
    fp_glDeleteShader(shader)
}
public
func glDeleteShader(shader:GL.UInt)
{
    fp_glDeleteShader(shader)
}
public
func glDeleteShader(_ shader:GL.UInt)
{
    fp_glDeleteShader(shader)
}

var fp_glDeleteStatesNV:@convention(c) (GL.Size, UnsafePointer<GL.UInt>?) -> () = load_glDeleteStatesNV
func load_glDeleteStatesNV(n:GL.Size, states:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteStatesNV = unsafeBitCast(get_fp("glDeleteStatesNV", support: [ss229]), to: Swift.type(of: fp_glDeleteStatesNV))
    fp_glDeleteStatesNV(n, states)
}
public
func glDeleteStatesNV(n:GL.Size, states:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteStatesNV(n, states)
}
public
func glDeleteStatesNV(_ n:GL.Size, _ states:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteStatesNV(n, states)
}

var fp_glDeleteSync:@convention(c) (GL.Sync) -> () = load_glDeleteSync
func load_glDeleteSync(sync:GL.Sync)
{
    fp_glDeleteSync = unsafeBitCast(get_fp("glDeleteSync", support: [ss356, ss366, ss89]), to: Swift.type(of: fp_glDeleteSync))
    fp_glDeleteSync(sync)
}
public
func glDeleteSync(sync:GL.Sync)
{
    fp_glDeleteSync(sync)
}
public
func glDeleteSync(_ sync:GL.Sync)
{
    fp_glDeleteSync(sync)
}

var fp_glDeleteSyncAPPLE:@convention(c) (GL.Sync) -> () = load_glDeleteSyncAPPLE
func load_glDeleteSyncAPPLE(sync:GL.Sync)
{
    fp_glDeleteSyncAPPLE = unsafeBitCast(get_fp("glDeleteSyncAPPLE", support: [ss23]), to: Swift.type(of: fp_glDeleteSyncAPPLE))
    fp_glDeleteSyncAPPLE(sync)
}
public
func glDeleteSyncAPPLE(sync:GL.Sync)
{
    fp_glDeleteSyncAPPLE(sync)
}
public
func glDeleteSyncAPPLE(_ sync:GL.Sync)
{
    fp_glDeleteSyncAPPLE(sync)
}

var fp_glDeleteTextures:@convention(c) (GL.Size, UnsafePointer<GL.UInt>?) -> () = load_glDeleteTextures
func load_glDeleteTextures(n:GL.Size, textures:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteTextures = unsafeBitCast(get_fp("glDeleteTextures", support: [ss347, ss365]), to: Swift.type(of: fp_glDeleteTextures))
    fp_glDeleteTextures(n, textures)
}
public
func glDeleteTextures(n:GL.Size, textures:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteTextures(n, textures)
}
public
func glDeleteTextures(_ n:GL.Size, _ textures:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteTextures(n, textures)
}

var fp_glDeleteTexturesEXT:@convention(c) (GL.Size, UnsafePointer<GL.UInt>?) -> () = load_glDeleteTexturesEXT
func load_glDeleteTexturesEXT(n:GL.Size, textures:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteTexturesEXT = unsafeBitCast(get_fp("glDeleteTexturesEXT", support: [ss195]), to: Swift.type(of: fp_glDeleteTexturesEXT))
    fp_glDeleteTexturesEXT(n, textures)
}
public
func glDeleteTexturesEXT(n:GL.Size, textures:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteTexturesEXT(n, textures)
}
public
func glDeleteTexturesEXT(_ n:GL.Size, _ textures:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteTexturesEXT(n, textures)
}

var fp_glDeleteTransformFeedbacks:@convention(c) (GL.Size, UnsafePointer<GL.UInt>?) -> () = load_glDeleteTransformFeedbacks
func load_glDeleteTransformFeedbacks(n:GL.Size, ids:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteTransformFeedbacks = unsafeBitCast(get_fp("glDeleteTransformFeedbacks", support: [ss358, ss366, ss101]), to: Swift.type(of: fp_glDeleteTransformFeedbacks))
    fp_glDeleteTransformFeedbacks(n, ids)
}
public
func glDeleteTransformFeedbacks(n:GL.Size, ids:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteTransformFeedbacks(n, ids)
}
public
func glDeleteTransformFeedbacks(_ n:GL.Size, _ ids:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteTransformFeedbacks(n, ids)
}

var fp_glDeleteTransformFeedbacksNV:@convention(c) (GL.Size, UnsafePointer<GL.UInt>?) -> () = load_glDeleteTransformFeedbacksNV
func load_glDeleteTransformFeedbacksNV(n:GL.Size, ids:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteTransformFeedbacksNV = unsafeBitCast(get_fp("glDeleteTransformFeedbacksNV", support: [ss273]), to: Swift.type(of: fp_glDeleteTransformFeedbacksNV))
    fp_glDeleteTransformFeedbacksNV(n, ids)
}
public
func glDeleteTransformFeedbacksNV(n:GL.Size, ids:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteTransformFeedbacksNV(n, ids)
}
public
func glDeleteTransformFeedbacksNV(_ n:GL.Size, _ ids:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteTransformFeedbacksNV(n, ids)
}

var fp_glDeleteVertexArrays:@convention(c) (GL.Size, UnsafePointer<GL.UInt>?) -> () = load_glDeleteVertexArrays
func load_glDeleteVertexArrays(n:GL.Size, arrays:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteVertexArrays = unsafeBitCast(get_fp("glDeleteVertexArrays", support: [ss354, ss366, ss105]), to: Swift.type(of: fp_glDeleteVertexArrays))
    fp_glDeleteVertexArrays(n, arrays)
}
public
func glDeleteVertexArrays(n:GL.Size, arrays:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteVertexArrays(n, arrays)
}
public
func glDeleteVertexArrays(_ n:GL.Size, _ arrays:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteVertexArrays(n, arrays)
}

var fp_glDeleteVertexArraysAPPLE:@convention(c) (GL.Size, UnsafePointer<GL.UInt>?) -> () = load_glDeleteVertexArraysAPPLE
func load_glDeleteVertexArraysAPPLE(n:GL.Size, arrays:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteVertexArraysAPPLE = unsafeBitCast(get_fp("glDeleteVertexArraysAPPLE", support: [ss25]), to: Swift.type(of: fp_glDeleteVertexArraysAPPLE))
    fp_glDeleteVertexArraysAPPLE(n, arrays)
}
public
func glDeleteVertexArraysAPPLE(n:GL.Size, arrays:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteVertexArraysAPPLE(n, arrays)
}
public
func glDeleteVertexArraysAPPLE(_ n:GL.Size, _ arrays:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteVertexArraysAPPLE(n, arrays)
}

var fp_glDeleteVertexArraysOES:@convention(c) (GL.Size, UnsafePointer<GL.UInt>?) -> () = load_glDeleteVertexArraysOES
func load_glDeleteVertexArraysOES(n:GL.Size, arrays:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteVertexArraysOES = unsafeBitCast(get_fp("glDeleteVertexArraysOES", support: [ss310]), to: Swift.type(of: fp_glDeleteVertexArraysOES))
    fp_glDeleteVertexArraysOES(n, arrays)
}
public
func glDeleteVertexArraysOES(n:GL.Size, arrays:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteVertexArraysOES(n, arrays)
}
public
func glDeleteVertexArraysOES(_ n:GL.Size, _ arrays:UnsafePointer<GL.UInt>?)
{
    fp_glDeleteVertexArraysOES(n, arrays)
}

var fp_glDeleteVertexShaderEXT:@convention(c) (GL.UInt) -> () = load_glDeleteVertexShaderEXT
func load_glDeleteVertexShaderEXT(id:GL.UInt)
{
    fp_glDeleteVertexShaderEXT = unsafeBitCast(get_fp("glDeleteVertexShaderEXT", support: [ss204]), to: Swift.type(of: fp_glDeleteVertexShaderEXT))
    fp_glDeleteVertexShaderEXT(id)
}
public
func glDeleteVertexShaderEXT(id:GL.UInt)
{
    fp_glDeleteVertexShaderEXT(id)
}
public
func glDeleteVertexShaderEXT(_ id:GL.UInt)
{
    fp_glDeleteVertexShaderEXT(id)
}

var fp_glDepthBoundsEXT:@convention(c) (GL.ClampDouble, GL.ClampDouble) -> () = load_glDepthBoundsEXT
func load_glDepthBoundsEXT(zmin:GL.ClampDouble, zmax:GL.ClampDouble)
{
    fp_glDepthBoundsEXT = unsafeBitCast(get_fp("glDepthBoundsEXT", support: [ss142]), to: Swift.type(of: fp_glDepthBoundsEXT))
    fp_glDepthBoundsEXT(zmin, zmax)
}
public
func glDepthBoundsEXT(zmin:GL.ClampDouble, zmax:GL.ClampDouble)
{
    fp_glDepthBoundsEXT(zmin, zmax)
}
public
func glDepthBoundsEXT(_ zmin:GL.ClampDouble, _ zmax:GL.ClampDouble)
{
    fp_glDepthBoundsEXT(zmin, zmax)
}

var fp_glDepthBoundsdNV:@convention(c) (GL.Double, GL.Double) -> () = load_glDepthBoundsdNV
func load_glDepthBoundsdNV(zmin:GL.Double, zmax:GL.Double)
{
    fp_glDepthBoundsdNV = unsafeBitCast(get_fp("glDepthBoundsdNV", support: [ss236]), to: Swift.type(of: fp_glDepthBoundsdNV))
    fp_glDepthBoundsdNV(zmin, zmax)
}
public
func glDepthBoundsdNV(zmin:GL.Double, zmax:GL.Double)
{
    fp_glDepthBoundsdNV(zmin, zmax)
}
public
func glDepthBoundsdNV(_ zmin:GL.Double, _ zmax:GL.Double)
{
    fp_glDepthBoundsdNV(zmin, zmax)
}

var fp_glDepthFunc:@convention(c) (GL.Enum) -> () = load_glDepthFunc
func load_glDepthFunc(f:GL.Enum)
{
    fp_glDepthFunc = unsafeBitCast(get_fp("glDepthFunc", support: [ss346, ss365]), to: Swift.type(of: fp_glDepthFunc))
    fp_glDepthFunc(f)
}
public
func glDepthFunc(f:GL.Enum)
{
    fp_glDepthFunc(f)
}
public
func glDepthFunc(_ f:GL.Enum)
{
    fp_glDepthFunc(f)
}

var fp_glDepthMask:@convention(c) (GL.Bool) -> () = load_glDepthMask
func load_glDepthMask(flag:GL.Bool)
{
    fp_glDepthMask = unsafeBitCast(get_fp("glDepthMask", support: [ss346, ss365]), to: Swift.type(of: fp_glDepthMask))
    fp_glDepthMask(flag)
}
public
func glDepthMask(flag:GL.Bool)
{
    fp_glDepthMask(flag)
}
public
func glDepthMask(_ flag:GL.Bool)
{
    fp_glDepthMask(flag)
}

var fp_glDepthRange:@convention(c) (GL.Double, GL.Double) -> () = load_glDepthRange
func load_glDepthRange(near:GL.Double, far:GL.Double)
{
    fp_glDepthRange = unsafeBitCast(get_fp("glDepthRange", support: [ss346]), to: Swift.type(of: fp_glDepthRange))
    fp_glDepthRange(near, far)
}
public
func glDepthRange(near:GL.Double, far:GL.Double)
{
    fp_glDepthRange(near, far)
}
public
func glDepthRange(_ near:GL.Double, _ far:GL.Double)
{
    fp_glDepthRange(near, far)
}

var fp_glDepthRangeArrayfvNV:@convention(c) (GL.UInt, GL.Size, UnsafePointer<GL.Float>?) -> () = load_glDepthRangeArrayfvNV
func load_glDepthRangeArrayfvNV(first:GL.UInt, count:GL.Size, v:UnsafePointer<GL.Float>?)
{
    fp_glDepthRangeArrayfvNV = unsafeBitCast(get_fp("glDepthRangeArrayfvNV", support: [ss281]), to: Swift.type(of: fp_glDepthRangeArrayfvNV))
    fp_glDepthRangeArrayfvNV(first, count, v)
}
public
func glDepthRangeArrayfvNV(first:GL.UInt, count:GL.Size, v:UnsafePointer<GL.Float>?)
{
    fp_glDepthRangeArrayfvNV(first, count, v)
}
public
func glDepthRangeArrayfvNV(_ first:GL.UInt, _ count:GL.Size, _ v:UnsafePointer<GL.Float>?)
{
    fp_glDepthRangeArrayfvNV(first, count, v)
}

var fp_glDepthRangeArrayv:@convention(c) (GL.UInt, GL.Size, UnsafePointer<GL.Double>?) -> () = load_glDepthRangeArrayv
func load_glDepthRangeArrayv(first:GL.UInt, count:GL.Size, v:UnsafePointer<GL.Double>?)
{
    fp_glDepthRangeArrayv = unsafeBitCast(get_fp("glDepthRangeArrayv", support: [ss359, ss113]), to: Swift.type(of: fp_glDepthRangeArrayv))
    fp_glDepthRangeArrayv(first, count, v)
}
public
func glDepthRangeArrayv(first:GL.UInt, count:GL.Size, v:UnsafePointer<GL.Double>?)
{
    fp_glDepthRangeArrayv(first, count, v)
}
public
func glDepthRangeArrayv(_ first:GL.UInt, _ count:GL.Size, _ v:UnsafePointer<GL.Double>?)
{
    fp_glDepthRangeArrayv(first, count, v)
}

var fp_glDepthRangeIndexed:@convention(c) (GL.UInt, GL.Double, GL.Double) -> () = load_glDepthRangeIndexed
func load_glDepthRangeIndexed(index:GL.UInt, n:GL.Double, f:GL.Double)
{
    fp_glDepthRangeIndexed = unsafeBitCast(get_fp("glDepthRangeIndexed", support: [ss359, ss113]), to: Swift.type(of: fp_glDepthRangeIndexed))
    fp_glDepthRangeIndexed(index, n, f)
}
public
func glDepthRangeIndexed(index:GL.UInt, n:GL.Double, f:GL.Double)
{
    fp_glDepthRangeIndexed(index, n, f)
}
public
func glDepthRangeIndexed(_ index:GL.UInt, _ n:GL.Double, _ f:GL.Double)
{
    fp_glDepthRangeIndexed(index, n, f)
}

var fp_glDepthRangeIndexedfNV:@convention(c) (GL.UInt, GL.Float, GL.Float) -> () = load_glDepthRangeIndexedfNV
func load_glDepthRangeIndexedfNV(index:GL.UInt, n:GL.Float, f:GL.Float)
{
    fp_glDepthRangeIndexedfNV = unsafeBitCast(get_fp("glDepthRangeIndexedfNV", support: [ss281]), to: Swift.type(of: fp_glDepthRangeIndexedfNV))
    fp_glDepthRangeIndexedfNV(index, n, f)
}
public
func glDepthRangeIndexedfNV(index:GL.UInt, n:GL.Float, f:GL.Float)
{
    fp_glDepthRangeIndexedfNV(index, n, f)
}
public
func glDepthRangeIndexedfNV(_ index:GL.UInt, _ n:GL.Float, _ f:GL.Float)
{
    fp_glDepthRangeIndexedfNV(index, n, f)
}

var fp_glDepthRangedNV:@convention(c) (GL.Double, GL.Double) -> () = load_glDepthRangedNV
func load_glDepthRangedNV(zNear:GL.Double, zFar:GL.Double)
{
    fp_glDepthRangedNV = unsafeBitCast(get_fp("glDepthRangedNV", support: [ss236]), to: Swift.type(of: fp_glDepthRangedNV))
    fp_glDepthRangedNV(zNear, zFar)
}
public
func glDepthRangedNV(zNear:GL.Double, zFar:GL.Double)
{
    fp_glDepthRangedNV(zNear, zFar)
}
public
func glDepthRangedNV(_ zNear:GL.Double, _ zFar:GL.Double)
{
    fp_glDepthRangedNV(zNear, zFar)
}

var fp_glDepthRangef:@convention(c) (GL.Float, GL.Float) -> () = load_glDepthRangef
func load_glDepthRangef(n:GL.Float, f:GL.Float)
{
    fp_glDepthRangef = unsafeBitCast(get_fp("glDepthRangef", support: [ss359, ss365, ss48]), to: Swift.type(of: fp_glDepthRangef))
    fp_glDepthRangef(n, f)
}
public
func glDepthRangef(n:GL.Float, f:GL.Float)
{
    fp_glDepthRangef(n, f)
}
public
func glDepthRangef(_ n:GL.Float, _ f:GL.Float)
{
    fp_glDepthRangef(n, f)
}

var fp_glDepthRangefOES:@convention(c) (GL.ClampFloat, GL.ClampFloat) -> () = load_glDepthRangefOES
func load_glDepthRangefOES(n:GL.ClampFloat, f:GL.ClampFloat)
{
    fp_glDepthRangefOES = unsafeBitCast(get_fp("glDepthRangefOES", support: [ss302]), to: Swift.type(of: fp_glDepthRangefOES))
    fp_glDepthRangefOES(n, f)
}
public
func glDepthRangefOES(n:GL.ClampFloat, f:GL.ClampFloat)
{
    fp_glDepthRangefOES(n, f)
}
public
func glDepthRangefOES(_ n:GL.ClampFloat, _ f:GL.ClampFloat)
{
    fp_glDepthRangefOES(n, f)
}

var fp_glDepthRangex:@convention(c) (GL.Fixed, GL.Fixed) -> () = load_glDepthRangex
func load_glDepthRangex(n:GL.Fixed, f:GL.Fixed)
{
    fp_glDepthRangex = unsafeBitCast(get_fp("glDepthRangex", support: [ss364]), to: Swift.type(of: fp_glDepthRangex))
    fp_glDepthRangex(n, f)
}
public
func glDepthRangex(n:GL.Fixed, f:GL.Fixed)
{
    fp_glDepthRangex(n, f)
}
public
func glDepthRangex(_ n:GL.Fixed, _ f:GL.Fixed)
{
    fp_glDepthRangex(n, f)
}

var fp_glDepthRangexOES:@convention(c) (GL.Fixed, GL.Fixed) -> () = load_glDepthRangexOES
func load_glDepthRangexOES(n:GL.Fixed, f:GL.Fixed)
{
    fp_glDepthRangexOES = unsafeBitCast(get_fp("glDepthRangexOES", support: [ss292]), to: Swift.type(of: fp_glDepthRangexOES))
    fp_glDepthRangexOES(n, f)
}
public
func glDepthRangexOES(n:GL.Fixed, f:GL.Fixed)
{
    fp_glDepthRangexOES(n, f)
}
public
func glDepthRangexOES(_ n:GL.Fixed, _ f:GL.Fixed)
{
    fp_glDepthRangexOES(n, f)
}

var fp_glDetachObjectARB:@convention(c) (GL.HandleARB, GL.HandleARB) -> () = load_glDetachObjectARB
func load_glDetachObjectARB(containerObj:GL.HandleARB, attachedObj:GL.HandleARB)
{
    fp_glDetachObjectARB = unsafeBitCast(get_fp("glDetachObjectARB", support: [ss83]), to: Swift.type(of: fp_glDetachObjectARB))
    fp_glDetachObjectARB(containerObj, attachedObj)
}
public
func glDetachObjectARB(containerObj:GL.HandleARB, attachedObj:GL.HandleARB)
{
    fp_glDetachObjectARB(containerObj, attachedObj)
}
public
func glDetachObjectARB(_ containerObj:GL.HandleARB, _ attachedObj:GL.HandleARB)
{
    fp_glDetachObjectARB(containerObj, attachedObj)
}

var fp_glDetachShader:@convention(c) (GL.UInt, GL.UInt) -> () = load_glDetachShader
func load_glDetachShader(program:GL.UInt, shader:GL.UInt)
{
    fp_glDetachShader = unsafeBitCast(get_fp("glDetachShader", support: [ss352, ss365]), to: Swift.type(of: fp_glDetachShader))
    fp_glDetachShader(program, shader)
}
public
func glDetachShader(program:GL.UInt, shader:GL.UInt)
{
    fp_glDetachShader(program, shader)
}
public
func glDetachShader(_ program:GL.UInt, _ shader:GL.UInt)
{
    fp_glDetachShader(program, shader)
}

var fp_glDetailTexFuncSGIS:@convention(c) (GL.Enum, GL.Size, UnsafePointer<GL.Float>?) -> () = load_glDetailTexFuncSGIS
func load_glDetailTexFuncSGIS(target:GL.Enum, n:GL.Size, points:UnsafePointer<GL.Float>?)
{
    fp_glDetailTexFuncSGIS = unsafeBitCast(get_fp("glDetailTexFuncSGIS", support: [ss320]), to: Swift.type(of: fp_glDetailTexFuncSGIS))
    fp_glDetailTexFuncSGIS(target, n, points)
}
public
func glDetailTexFuncSGIS(target:GL.Enum, n:GL.Size, points:UnsafePointer<GL.Float>?)
{
    fp_glDetailTexFuncSGIS(target, n, points)
}
public
func glDetailTexFuncSGIS(_ target:GL.Enum, _ n:GL.Size, _ points:UnsafePointer<GL.Float>?)
{
    fp_glDetailTexFuncSGIS(target, n, points)
}

var fp_glDisable:@convention(c) (GL.Enum) -> () = load_glDisable
func load_glDisable(cap:GL.Enum)
{
    fp_glDisable = unsafeBitCast(get_fp("glDisable", support: [ss346, ss365]), to: Swift.type(of: fp_glDisable))
    fp_glDisable(cap)
}
public
func glDisable(cap:GL.Enum)
{
    fp_glDisable(cap)
}
public
func glDisable(_ cap:GL.Enum)
{
    fp_glDisable(cap)
}

var fp_glDisableClientState:@convention(c) (GL.Enum) -> () = load_glDisableClientState
func load_glDisableClientState(array:GL.Enum)
{
    fp_glDisableClientState = unsafeBitCast(get_fp("glDisableClientState", support: [ss347, ss369, ss364]), to: Swift.type(of: fp_glDisableClientState))
    fp_glDisableClientState(array)
}
public
func glDisableClientState(array:GL.Enum)
{
    fp_glDisableClientState(array)
}
public
func glDisableClientState(_ array:GL.Enum)
{
    fp_glDisableClientState(array)
}

var fp_glDisableClientStateIndexedEXT:@convention(c) (GL.Enum, GL.UInt) -> () = load_glDisableClientStateIndexedEXT
func load_glDisableClientStateIndexedEXT(array:GL.Enum, index:GL.UInt)
{
    fp_glDisableClientStateIndexedEXT = unsafeBitCast(get_fp("glDisableClientStateIndexedEXT", support: [ss143]), to: Swift.type(of: fp_glDisableClientStateIndexedEXT))
    fp_glDisableClientStateIndexedEXT(array, index)
}
public
func glDisableClientStateIndexedEXT(array:GL.Enum, index:GL.UInt)
{
    fp_glDisableClientStateIndexedEXT(array, index)
}
public
func glDisableClientStateIndexedEXT(_ array:GL.Enum, _ index:GL.UInt)
{
    fp_glDisableClientStateIndexedEXT(array, index)
}

var fp_glDisableClientStateiEXT:@convention(c) (GL.Enum, GL.UInt) -> () = load_glDisableClientStateiEXT
func load_glDisableClientStateiEXT(array:GL.Enum, index:GL.UInt)
{
    fp_glDisableClientStateiEXT = unsafeBitCast(get_fp("glDisableClientStateiEXT", support: [ss143]), to: Swift.type(of: fp_glDisableClientStateiEXT))
    fp_glDisableClientStateiEXT(array, index)
}
public
func glDisableClientStateiEXT(array:GL.Enum, index:GL.UInt)
{
    fp_glDisableClientStateiEXT(array, index)
}
public
func glDisableClientStateiEXT(_ array:GL.Enum, _ index:GL.UInt)
{
    fp_glDisableClientStateiEXT(array, index)
}

var fp_glDisableDriverControlQCOM:@convention(c) (GL.UInt) -> () = load_glDisableDriverControlQCOM
func load_glDisableDriverControlQCOM(driverControl:GL.UInt)
{
    fp_glDisableDriverControlQCOM = unsafeBitCast(get_fp("glDisableDriverControlQCOM", support: [ss315]), to: Swift.type(of: fp_glDisableDriverControlQCOM))
    fp_glDisableDriverControlQCOM(driverControl)
}
public
func glDisableDriverControlQCOM(driverControl:GL.UInt)
{
    fp_glDisableDriverControlQCOM(driverControl)
}
public
func glDisableDriverControlQCOM(_ driverControl:GL.UInt)
{
    fp_glDisableDriverControlQCOM(driverControl)
}

var fp_glDisableIndexedEXT:@convention(c) (GL.Enum, GL.UInt) -> () = load_glDisableIndexedEXT
func load_glDisableIndexedEXT(target:GL.Enum, index:GL.UInt)
{
    fp_glDisableIndexedEXT = unsafeBitCast(get_fp("glDisableIndexedEXT", support: [ss143, ss148]), to: Swift.type(of: fp_glDisableIndexedEXT))
    fp_glDisableIndexedEXT(target, index)
}
public
func glDisableIndexedEXT(target:GL.Enum, index:GL.UInt)
{
    fp_glDisableIndexedEXT(target, index)
}
public
func glDisableIndexedEXT(_ target:GL.Enum, _ index:GL.UInt)
{
    fp_glDisableIndexedEXT(target, index)
}

var fp_glDisableVariantClientStateEXT:@convention(c) (GL.UInt) -> () = load_glDisableVariantClientStateEXT
func load_glDisableVariantClientStateEXT(id:GL.UInt)
{
    fp_glDisableVariantClientStateEXT = unsafeBitCast(get_fp("glDisableVariantClientStateEXT", support: [ss204]), to: Swift.type(of: fp_glDisableVariantClientStateEXT))
    fp_glDisableVariantClientStateEXT(id)
}
public
func glDisableVariantClientStateEXT(id:GL.UInt)
{
    fp_glDisableVariantClientStateEXT(id)
}
public
func glDisableVariantClientStateEXT(_ id:GL.UInt)
{
    fp_glDisableVariantClientStateEXT(id)
}

var fp_glDisableVertexArrayAttrib:@convention(c) (GL.UInt, GL.UInt) -> () = load_glDisableVertexArrayAttrib
func load_glDisableVertexArrayAttrib(vaobj:GL.UInt, index:GL.UInt)
{
    fp_glDisableVertexArrayAttrib = unsafeBitCast(get_fp("glDisableVertexArrayAttrib", support: [ss363, ss42]), to: Swift.type(of: fp_glDisableVertexArrayAttrib))
    fp_glDisableVertexArrayAttrib(vaobj, index)
}
public
func glDisableVertexArrayAttrib(vaobj:GL.UInt, index:GL.UInt)
{
    fp_glDisableVertexArrayAttrib(vaobj, index)
}
public
func glDisableVertexArrayAttrib(_ vaobj:GL.UInt, _ index:GL.UInt)
{
    fp_glDisableVertexArrayAttrib(vaobj, index)
}

var fp_glDisableVertexArrayAttribEXT:@convention(c) (GL.UInt, GL.UInt) -> () = load_glDisableVertexArrayAttribEXT
func load_glDisableVertexArrayAttribEXT(vaobj:GL.UInt, index:GL.UInt)
{
    fp_glDisableVertexArrayAttribEXT = unsafeBitCast(get_fp("glDisableVertexArrayAttribEXT", support: [ss143]), to: Swift.type(of: fp_glDisableVertexArrayAttribEXT))
    fp_glDisableVertexArrayAttribEXT(vaobj, index)
}
public
func glDisableVertexArrayAttribEXT(vaobj:GL.UInt, index:GL.UInt)
{
    fp_glDisableVertexArrayAttribEXT(vaobj, index)
}
public
func glDisableVertexArrayAttribEXT(_ vaobj:GL.UInt, _ index:GL.UInt)
{
    fp_glDisableVertexArrayAttribEXT(vaobj, index)
}

var fp_glDisableVertexArrayEXT:@convention(c) (GL.UInt, GL.Enum) -> () = load_glDisableVertexArrayEXT
func load_glDisableVertexArrayEXT(vaobj:GL.UInt, array:GL.Enum)
{
    fp_glDisableVertexArrayEXT = unsafeBitCast(get_fp("glDisableVertexArrayEXT", support: [ss143]), to: Swift.type(of: fp_glDisableVertexArrayEXT))
    fp_glDisableVertexArrayEXT(vaobj, array)
}
public
func glDisableVertexArrayEXT(vaobj:GL.UInt, array:GL.Enum)
{
    fp_glDisableVertexArrayEXT(vaobj, array)
}
public
func glDisableVertexArrayEXT(_ vaobj:GL.UInt, _ array:GL.Enum)
{
    fp_glDisableVertexArrayEXT(vaobj, array)
}

var fp_glDisableVertexAttribAPPLE:@convention(c) (GL.UInt, GL.Enum) -> () = load_glDisableVertexAttribAPPLE
func load_glDisableVertexAttribAPPLE(index:GL.UInt, pname:GL.Enum)
{
    fp_glDisableVertexAttribAPPLE = unsafeBitCast(get_fp("glDisableVertexAttribAPPLE", support: [ss27]), to: Swift.type(of: fp_glDisableVertexAttribAPPLE))
    fp_glDisableVertexAttribAPPLE(index, pname)
}
public
func glDisableVertexAttribAPPLE(index:GL.UInt, pname:GL.Enum)
{
    fp_glDisableVertexAttribAPPLE(index, pname)
}
public
func glDisableVertexAttribAPPLE(_ index:GL.UInt, _ pname:GL.Enum)
{
    fp_glDisableVertexAttribAPPLE(index, pname)
}

var fp_glDisableVertexAttribArray:@convention(c) (GL.UInt) -> () = load_glDisableVertexAttribArray
func load_glDisableVertexAttribArray(index:GL.UInt)
{
    fp_glDisableVertexAttribArray = unsafeBitCast(get_fp("glDisableVertexAttribArray", support: [ss352, ss365]), to: Swift.type(of: fp_glDisableVertexAttribArray))
    fp_glDisableVertexAttribArray(index)
}
public
func glDisableVertexAttribArray(index:GL.UInt)
{
    fp_glDisableVertexAttribArray(index)
}
public
func glDisableVertexAttribArray(_ index:GL.UInt)
{
    fp_glDisableVertexAttribArray(index)
}

var fp_glDisableVertexAttribArrayARB:@convention(c) (GL.UInt) -> () = load_glDisableVertexAttribArrayARB
func load_glDisableVertexAttribArrayARB(index:GL.UInt)
{
    fp_glDisableVertexAttribArrayARB = unsafeBitCast(get_fp("glDisableVertexAttribArrayARB", support: [ss110, ss111]), to: Swift.type(of: fp_glDisableVertexAttribArrayARB))
    fp_glDisableVertexAttribArrayARB(index)
}
public
func glDisableVertexAttribArrayARB(index:GL.UInt)
{
    fp_glDisableVertexAttribArrayARB(index)
}
public
func glDisableVertexAttribArrayARB(_ index:GL.UInt)
{
    fp_glDisableVertexAttribArrayARB(index)
}

var fp_glDisablei:@convention(c) (GL.Enum, GL.UInt) -> () = load_glDisablei
func load_glDisablei(target:GL.Enum, index:GL.UInt)
{
    fp_glDisablei = unsafeBitCast(get_fp("glDisablei", support: [ss354, ss368]), to: Swift.type(of: fp_glDisablei))
    fp_glDisablei(target, index)
}
public
func glDisablei(target:GL.Enum, index:GL.UInt)
{
    fp_glDisablei(target, index)
}
public
func glDisablei(_ target:GL.Enum, _ index:GL.UInt)
{
    fp_glDisablei(target, index)
}

var fp_glDisableiEXT:@convention(c) (GL.Enum, GL.UInt) -> () = load_glDisableiEXT
func load_glDisableiEXT(target:GL.Enum, index:GL.UInt)
{
    fp_glDisableiEXT = unsafeBitCast(get_fp("glDisableiEXT", support: [ss146]), to: Swift.type(of: fp_glDisableiEXT))
    fp_glDisableiEXT(target, index)
}
public
func glDisableiEXT(target:GL.Enum, index:GL.UInt)
{
    fp_glDisableiEXT(target, index)
}
public
func glDisableiEXT(_ target:GL.Enum, _ index:GL.UInt)
{
    fp_glDisableiEXT(target, index)
}

var fp_glDisableiNV:@convention(c) (GL.Enum, GL.UInt) -> () = load_glDisableiNV
func load_glDisableiNV(target:GL.Enum, index:GL.UInt)
{
    fp_glDisableiNV = unsafeBitCast(get_fp("glDisableiNV", support: [ss281]), to: Swift.type(of: fp_glDisableiNV))
    fp_glDisableiNV(target, index)
}
public
func glDisableiNV(target:GL.Enum, index:GL.UInt)
{
    fp_glDisableiNV(target, index)
}
public
func glDisableiNV(_ target:GL.Enum, _ index:GL.UInt)
{
    fp_glDisableiNV(target, index)
}

var fp_glDisableiOES:@convention(c) (GL.Enum, GL.UInt) -> () = load_glDisableiOES
func load_glDisableiOES(target:GL.Enum, index:GL.UInt)
{
    fp_glDisableiOES = unsafeBitCast(get_fp("glDisableiOES", support: [ss288]), to: Swift.type(of: fp_glDisableiOES))
    fp_glDisableiOES(target, index)
}
public
func glDisableiOES(target:GL.Enum, index:GL.UInt)
{
    fp_glDisableiOES(target, index)
}
public
func glDisableiOES(_ target:GL.Enum, _ index:GL.UInt)
{
    fp_glDisableiOES(target, index)
}

var fp_glDiscardFramebufferEXT:@convention(c) (GL.Enum, GL.Size, UnsafePointer<GL.Enum>?) -> () = load_glDiscardFramebufferEXT
func load_glDiscardFramebufferEXT(target:GL.Enum, numAttachments:GL.Size, attachments:UnsafePointer<GL.Enum>?)
{
    fp_glDiscardFramebufferEXT = unsafeBitCast(get_fp("glDiscardFramebufferEXT", support: [ss144]), to: Swift.type(of: fp_glDiscardFramebufferEXT))
    fp_glDiscardFramebufferEXT(target, numAttachments, attachments)
}
public
func glDiscardFramebufferEXT(target:GL.Enum, numAttachments:GL.Size, attachments:UnsafePointer<GL.Enum>?)
{
    fp_glDiscardFramebufferEXT(target, numAttachments, attachments)
}
public
func glDiscardFramebufferEXT(_ target:GL.Enum, _ numAttachments:GL.Size, _ attachments:UnsafePointer<GL.Enum>?)
{
    fp_glDiscardFramebufferEXT(target, numAttachments, attachments)
}

var fp_glDispatchCompute:@convention(c) (GL.UInt, GL.UInt, GL.UInt) -> () = load_glDispatchCompute
func load_glDispatchCompute(num_groups_x:GL.UInt, num_groups_y:GL.UInt, num_groups_z:GL.UInt)
{
    fp_glDispatchCompute = unsafeBitCast(get_fp("glDispatchCompute", support: [ss361, ss367, ss37]), to: Swift.type(of: fp_glDispatchCompute))
    fp_glDispatchCompute(num_groups_x, num_groups_y, num_groups_z)
}
public
func glDispatchCompute(num_groups_x:GL.UInt, num_groups_y:GL.UInt, num_groups_z:GL.UInt)
{
    fp_glDispatchCompute(num_groups_x, num_groups_y, num_groups_z)
}
public
func glDispatchCompute(_ num_groups_x:GL.UInt, _ num_groups_y:GL.UInt, _ num_groups_z:GL.UInt)
{
    fp_glDispatchCompute(num_groups_x, num_groups_y, num_groups_z)
}

var fp_glDispatchComputeGroupSizeARB:@convention(c) (GL.UInt, GL.UInt, GL.UInt, GL.UInt, GL.UInt, GL.UInt) -> () = load_glDispatchComputeGroupSizeARB
func load_glDispatchComputeGroupSizeARB(num_groups_x:GL.UInt, num_groups_y:GL.UInt, num_groups_z:GL.UInt, group_size_x:GL.UInt, group_size_y:GL.UInt, group_size_z:GL.UInt)
{
    fp_glDispatchComputeGroupSizeARB = unsafeBitCast(get_fp("glDispatchComputeGroupSizeARB", support: [ss38]), to: Swift.type(of: fp_glDispatchComputeGroupSizeARB))
    fp_glDispatchComputeGroupSizeARB(num_groups_x, num_groups_y, num_groups_z, group_size_x, group_size_y, group_size_z)
}
public
func glDispatchComputeGroupSizeARB(num_groups_x:GL.UInt, num_groups_y:GL.UInt, num_groups_z:GL.UInt, group_size_x:GL.UInt, group_size_y:GL.UInt, group_size_z:GL.UInt)
{
    fp_glDispatchComputeGroupSizeARB(num_groups_x, num_groups_y, num_groups_z, group_size_x, group_size_y, group_size_z)
}
public
func glDispatchComputeGroupSizeARB(_ num_groups_x:GL.UInt, _ num_groups_y:GL.UInt, _ num_groups_z:GL.UInt, _ group_size_x:GL.UInt, _ group_size_y:GL.UInt, _ group_size_z:GL.UInt)
{
    fp_glDispatchComputeGroupSizeARB(num_groups_x, num_groups_y, num_groups_z, group_size_x, group_size_y, group_size_z)
}

var fp_glDispatchComputeIndirect:@convention(c) (GL.IntPointer) -> () = load_glDispatchComputeIndirect
func load_glDispatchComputeIndirect(indirect:GL.IntPointer)
{
    fp_glDispatchComputeIndirect = unsafeBitCast(get_fp("glDispatchComputeIndirect", support: [ss361, ss367, ss37]), to: Swift.type(of: fp_glDispatchComputeIndirect))
    fp_glDispatchComputeIndirect(indirect)
}
public
func glDispatchComputeIndirect(indirect:GL.IntPointer)
{
    fp_glDispatchComputeIndirect(indirect)
}
public
func glDispatchComputeIndirect(_ indirect:GL.IntPointer)
{
    fp_glDispatchComputeIndirect(indirect)
}

var fp_glDrawArrays:@convention(c) (GL.Enum, GL.Int, GL.Size) -> () = load_glDrawArrays
func load_glDrawArrays(mode:GL.Enum, first:GL.Int, count:GL.Size)
{
    fp_glDrawArrays = unsafeBitCast(get_fp("glDrawArrays", support: [ss347, ss365]), to: Swift.type(of: fp_glDrawArrays))
    fp_glDrawArrays(mode, first, count)
}
public
func glDrawArrays(mode:GL.Enum, first:GL.Int, count:GL.Size)
{
    fp_glDrawArrays(mode, first, count)
}
public
func glDrawArrays(_ mode:GL.Enum, _ first:GL.Int, _ count:GL.Size)
{
    fp_glDrawArrays(mode, first, count)
}

var fp_glDrawArraysEXT:@convention(c) (GL.Enum, GL.Int, GL.Size) -> () = load_glDrawArraysEXT
func load_glDrawArraysEXT(mode:GL.Enum, first:GL.Int, count:GL.Size)
{
    fp_glDrawArraysEXT = unsafeBitCast(get_fp("glDrawArraysEXT", support: [ss202]), to: Swift.type(of: fp_glDrawArraysEXT))
    fp_glDrawArraysEXT(mode, first, count)
}
public
func glDrawArraysEXT(mode:GL.Enum, first:GL.Int, count:GL.Size)
{
    fp_glDrawArraysEXT(mode, first, count)
}
public
func glDrawArraysEXT(_ mode:GL.Enum, _ first:GL.Int, _ count:GL.Size)
{
    fp_glDrawArraysEXT(mode, first, count)
}

var fp_glDrawArraysIndirect:@convention(c) (GL.Enum, UnsafeRawPointer?) -> () = load_glDrawArraysIndirect
func load_glDrawArraysIndirect(mode:GL.Enum, indirect:UnsafeRawPointer?)
{
    fp_glDrawArraysIndirect = unsafeBitCast(get_fp("glDrawArraysIndirect", support: [ss358, ss367, ss46]), to: Swift.type(of: fp_glDrawArraysIndirect))
    fp_glDrawArraysIndirect(mode, indirect)
}
public
func glDrawArraysIndirect(mode:GL.Enum, indirect:UnsafeRawPointer?)
{
    fp_glDrawArraysIndirect(mode, indirect)
}
public
func glDrawArraysIndirect(_ mode:GL.Enum, _ indirect:UnsafeRawPointer?)
{
    fp_glDrawArraysIndirect(mode, indirect)
}

var fp_glDrawArraysInstanced:@convention(c) (GL.Enum, GL.Int, GL.Size, GL.Size) -> () = load_glDrawArraysInstanced
func load_glDrawArraysInstanced(mode:GL.Enum, first:GL.Int, count:GL.Size, instancecount:GL.Size)
{
    fp_glDrawArraysInstanced = unsafeBitCast(get_fp("glDrawArraysInstanced", support: [ss355, ss366]), to: Swift.type(of: fp_glDrawArraysInstanced))
    fp_glDrawArraysInstanced(mode, first, count, instancecount)
}
public
func glDrawArraysInstanced(mode:GL.Enum, first:GL.Int, count:GL.Size, instancecount:GL.Size)
{
    fp_glDrawArraysInstanced(mode, first, count, instancecount)
}
public
func glDrawArraysInstanced(_ mode:GL.Enum, _ first:GL.Int, _ count:GL.Size, _ instancecount:GL.Size)
{
    fp_glDrawArraysInstanced(mode, first, count, instancecount)
}

var fp_glDrawArraysInstancedANGLE:@convention(c) (GL.Enum, GL.Int, GL.Size, GL.Size) -> () = load_glDrawArraysInstancedANGLE
func load_glDrawArraysInstancedANGLE(mode:GL.Enum, first:GL.Int, count:GL.Size, primcount:GL.Size)
{
    fp_glDrawArraysInstancedANGLE = unsafeBitCast(get_fp("glDrawArraysInstancedANGLE", support: [ss15]), to: Swift.type(of: fp_glDrawArraysInstancedANGLE))
    fp_glDrawArraysInstancedANGLE(mode, first, count, primcount)
}
public
func glDrawArraysInstancedANGLE(mode:GL.Enum, first:GL.Int, count:GL.Size, primcount:GL.Size)
{
    fp_glDrawArraysInstancedANGLE(mode, first, count, primcount)
}
public
func glDrawArraysInstancedANGLE(_ mode:GL.Enum, _ first:GL.Int, _ count:GL.Size, _ primcount:GL.Size)
{
    fp_glDrawArraysInstancedANGLE(mode, first, count, primcount)
}

var fp_glDrawArraysInstancedARB:@convention(c) (GL.Enum, GL.Int, GL.Size, GL.Size) -> () = load_glDrawArraysInstancedARB
func load_glDrawArraysInstancedARB(mode:GL.Enum, first:GL.Int, count:GL.Size, primcount:GL.Size)
{
    fp_glDrawArraysInstancedARB = unsafeBitCast(get_fp("glDrawArraysInstancedARB", support: [ss47]), to: Swift.type(of: fp_glDrawArraysInstancedARB))
    fp_glDrawArraysInstancedARB(mode, first, count, primcount)
}
public
func glDrawArraysInstancedARB(mode:GL.Enum, first:GL.Int, count:GL.Size, primcount:GL.Size)
{
    fp_glDrawArraysInstancedARB(mode, first, count, primcount)
}
public
func glDrawArraysInstancedARB(_ mode:GL.Enum, _ first:GL.Int, _ count:GL.Size, _ primcount:GL.Size)
{
    fp_glDrawArraysInstancedARB(mode, first, count, primcount)
}

var fp_glDrawArraysInstancedBaseInstance:@convention(c) (GL.Enum, GL.Int, GL.Size, GL.Size, GL.UInt) -> () = load_glDrawArraysInstancedBaseInstance
func load_glDrawArraysInstancedBaseInstance(mode:GL.Enum, first:GL.Int, count:GL.Size, instancecount:GL.Size, baseinstance:GL.UInt)
{
    fp_glDrawArraysInstancedBaseInstance = unsafeBitCast(get_fp("glDrawArraysInstancedBaseInstance", support: [ss360, ss28]), to: Swift.type(of: fp_glDrawArraysInstancedBaseInstance))
    fp_glDrawArraysInstancedBaseInstance(mode, first, count, instancecount, baseinstance)
}
public
func glDrawArraysInstancedBaseInstance(mode:GL.Enum, first:GL.Int, count:GL.Size, instancecount:GL.Size, baseinstance:GL.UInt)
{
    fp_glDrawArraysInstancedBaseInstance(mode, first, count, instancecount, baseinstance)
}
public
func glDrawArraysInstancedBaseInstance(_ mode:GL.Enum, _ first:GL.Int, _ count:GL.Size, _ instancecount:GL.Size, _ baseinstance:GL.UInt)
{
    fp_glDrawArraysInstancedBaseInstance(mode, first, count, instancecount, baseinstance)
}

var fp_glDrawArraysInstancedBaseInstanceEXT:@convention(c) (GL.Enum, GL.Int, GL.Size, GL.Size, GL.UInt) -> () = load_glDrawArraysInstancedBaseInstanceEXT
func load_glDrawArraysInstancedBaseInstanceEXT(mode:GL.Enum, first:GL.Int, count:GL.Size, instancecount:GL.Size, baseinstance:GL.UInt)
{
    fp_glDrawArraysInstancedBaseInstanceEXT = unsafeBitCast(get_fp("glDrawArraysInstancedBaseInstanceEXT", support: [ss125]), to: Swift.type(of: fp_glDrawArraysInstancedBaseInstanceEXT))
    fp_glDrawArraysInstancedBaseInstanceEXT(mode, first, count, instancecount, baseinstance)
}
public
func glDrawArraysInstancedBaseInstanceEXT(mode:GL.Enum, first:GL.Int, count:GL.Size, instancecount:GL.Size, baseinstance:GL.UInt)
{
    fp_glDrawArraysInstancedBaseInstanceEXT(mode, first, count, instancecount, baseinstance)
}
public
func glDrawArraysInstancedBaseInstanceEXT(_ mode:GL.Enum, _ first:GL.Int, _ count:GL.Size, _ instancecount:GL.Size, _ baseinstance:GL.UInt)
{
    fp_glDrawArraysInstancedBaseInstanceEXT(mode, first, count, instancecount, baseinstance)
}

var fp_glDrawArraysInstancedEXT:@convention(c) (GL.Enum, GL.Int, GL.Size, GL.Size) -> () = load_glDrawArraysInstancedEXT
func load_glDrawArraysInstancedEXT(mode:GL.Enum, start:GL.Int, count:GL.Size, primcount:GL.Size)
{
    fp_glDrawArraysInstancedEXT = unsafeBitCast(get_fp("glDrawArraysInstancedEXT", support: [ss150, ss163]), to: Swift.type(of: fp_glDrawArraysInstancedEXT))
    fp_glDrawArraysInstancedEXT(mode, start, count, primcount)
}
public
func glDrawArraysInstancedEXT(mode:GL.Enum, start:GL.Int, count:GL.Size, primcount:GL.Size)
{
    fp_glDrawArraysInstancedEXT(mode, start, count, primcount)
}
public
func glDrawArraysInstancedEXT(_ mode:GL.Enum, _ start:GL.Int, _ count:GL.Size, _ primcount:GL.Size)
{
    fp_glDrawArraysInstancedEXT(mode, start, count, primcount)
}

var fp_glDrawArraysInstancedNV:@convention(c) (GL.Enum, GL.Int, GL.Size, GL.Size) -> () = load_glDrawArraysInstancedNV
func load_glDrawArraysInstancedNV(mode:GL.Enum, first:GL.Int, count:GL.Size, primcount:GL.Size)
{
    fp_glDrawArraysInstancedNV = unsafeBitCast(get_fp("glDrawArraysInstancedNV", support: [ss238]), to: Swift.type(of: fp_glDrawArraysInstancedNV))
    fp_glDrawArraysInstancedNV(mode, first, count, primcount)
}
public
func glDrawArraysInstancedNV(mode:GL.Enum, first:GL.Int, count:GL.Size, primcount:GL.Size)
{
    fp_glDrawArraysInstancedNV(mode, first, count, primcount)
}
public
func glDrawArraysInstancedNV(_ mode:GL.Enum, _ first:GL.Int, _ count:GL.Size, _ primcount:GL.Size)
{
    fp_glDrawArraysInstancedNV(mode, first, count, primcount)
}

var fp_glDrawBuffer:@convention(c) (GL.Enum) -> () = load_glDrawBuffer
func load_glDrawBuffer(buf:GL.Enum)
{
    fp_glDrawBuffer = unsafeBitCast(get_fp("glDrawBuffer", support: [ss346]), to: Swift.type(of: fp_glDrawBuffer))
    fp_glDrawBuffer(buf)
}
public
func glDrawBuffer(buf:GL.Enum)
{
    fp_glDrawBuffer(buf)
}
public
func glDrawBuffer(_ buf:GL.Enum)
{
    fp_glDrawBuffer(buf)
}

var fp_glDrawBuffers:@convention(c) (GL.Size, UnsafePointer<GL.Enum>?) -> () = load_glDrawBuffers
func load_glDrawBuffers(n:GL.Size, bufs:UnsafePointer<GL.Enum>?)
{
    fp_glDrawBuffers = unsafeBitCast(get_fp("glDrawBuffers", support: [ss352, ss366]), to: Swift.type(of: fp_glDrawBuffers))
    fp_glDrawBuffers(n, bufs)
}
public
func glDrawBuffers(n:GL.Size, bufs:UnsafePointer<GL.Enum>?)
{
    fp_glDrawBuffers(n, bufs)
}
public
func glDrawBuffers(_ n:GL.Size, _ bufs:UnsafePointer<GL.Enum>?)
{
    fp_glDrawBuffers(n, bufs)
}

var fp_glDrawBuffersARB:@convention(c) (GL.Size, UnsafePointer<GL.Enum>?) -> () = load_glDrawBuffersARB
func load_glDrawBuffersARB(n:GL.Size, bufs:UnsafePointer<GL.Enum>?)
{
    fp_glDrawBuffersARB = unsafeBitCast(get_fp("glDrawBuffersARB", support: [ss44]), to: Swift.type(of: fp_glDrawBuffersARB))
    fp_glDrawBuffersARB(n, bufs)
}
public
func glDrawBuffersARB(n:GL.Size, bufs:UnsafePointer<GL.Enum>?)
{
    fp_glDrawBuffersARB(n, bufs)
}
public
func glDrawBuffersARB(_ n:GL.Size, _ bufs:UnsafePointer<GL.Enum>?)
{
    fp_glDrawBuffersARB(n, bufs)
}

var fp_glDrawBuffersATI:@convention(c) (GL.Size, UnsafePointer<GL.Enum>?) -> () = load_glDrawBuffersATI
func load_glDrawBuffersATI(n:GL.Size, bufs:UnsafePointer<GL.Enum>?)
{
    fp_glDrawBuffersATI = unsafeBitCast(get_fp("glDrawBuffersATI", support: [ss115]), to: Swift.type(of: fp_glDrawBuffersATI))
    fp_glDrawBuffersATI(n, bufs)
}
public
func glDrawBuffersATI(n:GL.Size, bufs:UnsafePointer<GL.Enum>?)
{
    fp_glDrawBuffersATI(n, bufs)
}
public
func glDrawBuffersATI(_ n:GL.Size, _ bufs:UnsafePointer<GL.Enum>?)
{
    fp_glDrawBuffersATI(n, bufs)
}

var fp_glDrawBuffersEXT:@convention(c) (GL.Size, UnsafePointer<GL.Enum>?) -> () = load_glDrawBuffersEXT
func load_glDrawBuffersEXT(n:GL.Size, bufs:UnsafePointer<GL.Enum>?)
{
    fp_glDrawBuffersEXT = unsafeBitCast(get_fp("glDrawBuffersEXT", support: [ss147]), to: Swift.type(of: fp_glDrawBuffersEXT))
    fp_glDrawBuffersEXT(n, bufs)
}
public
func glDrawBuffersEXT(n:GL.Size, bufs:UnsafePointer<GL.Enum>?)
{
    fp_glDrawBuffersEXT(n, bufs)
}
public
func glDrawBuffersEXT(_ n:GL.Size, _ bufs:UnsafePointer<GL.Enum>?)
{
    fp_glDrawBuffersEXT(n, bufs)
}

var fp_glDrawBuffersIndexedEXT:@convention(c) (GL.Int, UnsafePointer<GL.Enum>?, UnsafePointer<GL.Int>?) -> () = load_glDrawBuffersIndexedEXT
func load_glDrawBuffersIndexedEXT(n:GL.Int, location:UnsafePointer<GL.Enum>?, indices:UnsafePointer<GL.Int>?)
{
    fp_glDrawBuffersIndexedEXT = unsafeBitCast(get_fp("glDrawBuffersIndexedEXT", support: [ss170]), to: Swift.type(of: fp_glDrawBuffersIndexedEXT))
    fp_glDrawBuffersIndexedEXT(n, location, indices)
}
public
func glDrawBuffersIndexedEXT(n:GL.Int, location:UnsafePointer<GL.Enum>?, indices:UnsafePointer<GL.Int>?)
{
    fp_glDrawBuffersIndexedEXT(n, location, indices)
}
public
func glDrawBuffersIndexedEXT(_ n:GL.Int, _ location:UnsafePointer<GL.Enum>?, _ indices:UnsafePointer<GL.Int>?)
{
    fp_glDrawBuffersIndexedEXT(n, location, indices)
}

var fp_glDrawBuffersNV:@convention(c) (GL.Size, UnsafePointer<GL.Enum>?) -> () = load_glDrawBuffersNV
func load_glDrawBuffersNV(n:GL.Size, bufs:UnsafePointer<GL.Enum>?)
{
    fp_glDrawBuffersNV = unsafeBitCast(get_fp("glDrawBuffersNV", support: [ss237]), to: Swift.type(of: fp_glDrawBuffersNV))
    fp_glDrawBuffersNV(n, bufs)
}
public
func glDrawBuffersNV(n:GL.Size, bufs:UnsafePointer<GL.Enum>?)
{
    fp_glDrawBuffersNV(n, bufs)
}
public
func glDrawBuffersNV(_ n:GL.Size, _ bufs:UnsafePointer<GL.Enum>?)
{
    fp_glDrawBuffersNV(n, bufs)
}

var fp_glDrawCommandsAddressNV:@convention(c) (GL.Enum, UnsafePointer<GL.UInt64>?, UnsafePointer<GL.Size>?, GL.UInt) -> () = load_glDrawCommandsAddressNV
func load_glDrawCommandsAddressNV(primitiveMode:GL.Enum, indirects:UnsafePointer<GL.UInt64>?, sizes:UnsafePointer<GL.Size>?, count:GL.UInt)
{
    fp_glDrawCommandsAddressNV = unsafeBitCast(get_fp("glDrawCommandsAddressNV", support: [ss229]), to: Swift.type(of: fp_glDrawCommandsAddressNV))
    fp_glDrawCommandsAddressNV(primitiveMode, indirects, sizes, count)
}
public
func glDrawCommandsAddressNV(primitiveMode:GL.Enum, indirects:UnsafePointer<GL.UInt64>?, sizes:UnsafePointer<GL.Size>?, count:GL.UInt)
{
    fp_glDrawCommandsAddressNV(primitiveMode, indirects, sizes, count)
}
public
func glDrawCommandsAddressNV(_ primitiveMode:GL.Enum, _ indirects:UnsafePointer<GL.UInt64>?, _ sizes:UnsafePointer<GL.Size>?, _ count:GL.UInt)
{
    fp_glDrawCommandsAddressNV(primitiveMode, indirects, sizes, count)
}

var fp_glDrawCommandsNV:@convention(c) (GL.Enum, GL.UInt, UnsafePointer<GL.IntPointer>?, UnsafePointer<GL.Size>?, GL.UInt) -> () = load_glDrawCommandsNV
func load_glDrawCommandsNV(primitiveMode:GL.Enum, buffer:GL.UInt, indirects:UnsafePointer<GL.IntPointer>?, sizes:UnsafePointer<GL.Size>?, count:GL.UInt)
{
    fp_glDrawCommandsNV = unsafeBitCast(get_fp("glDrawCommandsNV", support: [ss229]), to: Swift.type(of: fp_glDrawCommandsNV))
    fp_glDrawCommandsNV(primitiveMode, buffer, indirects, sizes, count)
}
public
func glDrawCommandsNV(primitiveMode:GL.Enum, buffer:GL.UInt, indirects:UnsafePointer<GL.IntPointer>?, sizes:UnsafePointer<GL.Size>?, count:GL.UInt)
{
    fp_glDrawCommandsNV(primitiveMode, buffer, indirects, sizes, count)
}
public
func glDrawCommandsNV(_ primitiveMode:GL.Enum, _ buffer:GL.UInt, _ indirects:UnsafePointer<GL.IntPointer>?, _ sizes:UnsafePointer<GL.Size>?, _ count:GL.UInt)
{
    fp_glDrawCommandsNV(primitiveMode, buffer, indirects, sizes, count)
}

var fp_glDrawCommandsStatesAddressNV:@convention(c) (UnsafePointer<GL.UInt64>?, UnsafePointer<GL.Size>?, UnsafePointer<GL.UInt>?, UnsafePointer<GL.UInt>?, GL.UInt) -> () = load_glDrawCommandsStatesAddressNV
func load_glDrawCommandsStatesAddressNV(indirects:UnsafePointer<GL.UInt64>?, sizes:UnsafePointer<GL.Size>?, states:UnsafePointer<GL.UInt>?, fbos:UnsafePointer<GL.UInt>?, count:GL.UInt)
{
    fp_glDrawCommandsStatesAddressNV = unsafeBitCast(get_fp("glDrawCommandsStatesAddressNV", support: [ss229]), to: Swift.type(of: fp_glDrawCommandsStatesAddressNV))
    fp_glDrawCommandsStatesAddressNV(indirects, sizes, states, fbos, count)
}
public
func glDrawCommandsStatesAddressNV(indirects:UnsafePointer<GL.UInt64>?, sizes:UnsafePointer<GL.Size>?, states:UnsafePointer<GL.UInt>?, fbos:UnsafePointer<GL.UInt>?, count:GL.UInt)
{
    fp_glDrawCommandsStatesAddressNV(indirects, sizes, states, fbos, count)
}
public
func glDrawCommandsStatesAddressNV(_ indirects:UnsafePointer<GL.UInt64>?, _ sizes:UnsafePointer<GL.Size>?, _ states:UnsafePointer<GL.UInt>?, _ fbos:UnsafePointer<GL.UInt>?, _ count:GL.UInt)
{
    fp_glDrawCommandsStatesAddressNV(indirects, sizes, states, fbos, count)
}

var fp_glDrawCommandsStatesNV:@convention(c) (GL.UInt, UnsafePointer<GL.IntPointer>?, UnsafePointer<GL.Size>?, UnsafePointer<GL.UInt>?, UnsafePointer<GL.UInt>?, GL.UInt) -> () = load_glDrawCommandsStatesNV
func load_glDrawCommandsStatesNV(buffer:GL.UInt, indirects:UnsafePointer<GL.IntPointer>?, sizes:UnsafePointer<GL.Size>?, states:UnsafePointer<GL.UInt>?, fbos:UnsafePointer<GL.UInt>?, count:GL.UInt)
{
    fp_glDrawCommandsStatesNV = unsafeBitCast(get_fp("glDrawCommandsStatesNV", support: [ss229]), to: Swift.type(of: fp_glDrawCommandsStatesNV))
    fp_glDrawCommandsStatesNV(buffer, indirects, sizes, states, fbos, count)
}
public
func glDrawCommandsStatesNV(buffer:GL.UInt, indirects:UnsafePointer<GL.IntPointer>?, sizes:UnsafePointer<GL.Size>?, states:UnsafePointer<GL.UInt>?, fbos:UnsafePointer<GL.UInt>?, count:GL.UInt)
{
    fp_glDrawCommandsStatesNV(buffer, indirects, sizes, states, fbos, count)
}
public
func glDrawCommandsStatesNV(_ buffer:GL.UInt, _ indirects:UnsafePointer<GL.IntPointer>?, _ sizes:UnsafePointer<GL.Size>?, _ states:UnsafePointer<GL.UInt>?, _ fbos:UnsafePointer<GL.UInt>?, _ count:GL.UInt)
{
    fp_glDrawCommandsStatesNV(buffer, indirects, sizes, states, fbos, count)
}

var fp_glDrawElementArrayAPPLE:@convention(c) (GL.Enum, GL.Int, GL.Size) -> () = load_glDrawElementArrayAPPLE
func load_glDrawElementArrayAPPLE(mode:GL.Enum, first:GL.Int, count:GL.Size)
{
    fp_glDrawElementArrayAPPLE = unsafeBitCast(get_fp("glDrawElementArrayAPPLE", support: [ss18]), to: Swift.type(of: fp_glDrawElementArrayAPPLE))
    fp_glDrawElementArrayAPPLE(mode, first, count)
}
public
func glDrawElementArrayAPPLE(mode:GL.Enum, first:GL.Int, count:GL.Size)
{
    fp_glDrawElementArrayAPPLE(mode, first, count)
}
public
func glDrawElementArrayAPPLE(_ mode:GL.Enum, _ first:GL.Int, _ count:GL.Size)
{
    fp_glDrawElementArrayAPPLE(mode, first, count)
}

var fp_glDrawElementArrayATI:@convention(c) (GL.Enum, GL.Size) -> () = load_glDrawElementArrayATI
func load_glDrawElementArrayATI(mode:GL.Enum, count:GL.Size)
{
    fp_glDrawElementArrayATI = unsafeBitCast(get_fp("glDrawElementArrayATI", support: [ss116]), to: Swift.type(of: fp_glDrawElementArrayATI))
    fp_glDrawElementArrayATI(mode, count)
}
public
func glDrawElementArrayATI(mode:GL.Enum, count:GL.Size)
{
    fp_glDrawElementArrayATI(mode, count)
}
public
func glDrawElementArrayATI(_ mode:GL.Enum, _ count:GL.Size)
{
    fp_glDrawElementArrayATI(mode, count)
}

var fp_glDrawElements:@convention(c) (GL.Enum, GL.Size, GL.Enum, UnsafeRawPointer?) -> () = load_glDrawElements
func load_glDrawElements(mode:GL.Enum, count:GL.Size, type:GL.Enum, indices:UnsafeRawPointer?)
{
    fp_glDrawElements = unsafeBitCast(get_fp("glDrawElements", support: [ss347, ss365]), to: Swift.type(of: fp_glDrawElements))
    fp_glDrawElements(mode, count, type, indices)
}
public
func glDrawElements(mode:GL.Enum, count:GL.Size, type:GL.Enum, indices:UnsafeRawPointer?)
{
    fp_glDrawElements(mode, count, type, indices)
}
public
func glDrawElements(_ mode:GL.Enum, _ count:GL.Size, _ type:GL.Enum, _ indices:UnsafeRawPointer?)
{
    fp_glDrawElements(mode, count, type, indices)
}

var fp_glDrawElementsBaseVertex:@convention(c) (GL.Enum, GL.Size, GL.Enum, UnsafeRawPointer?, GL.Int) -> () = load_glDrawElementsBaseVertex
func load_glDrawElementsBaseVertex(mode:GL.Enum, count:GL.Size, type:GL.Enum, indices:UnsafeRawPointer?, basevertex:GL.Int)
{
    fp_glDrawElementsBaseVertex = unsafeBitCast(get_fp("glDrawElementsBaseVertex", support: [ss356, ss368, ss45]), to: Swift.type(of: fp_glDrawElementsBaseVertex))
    fp_glDrawElementsBaseVertex(mode, count, type, indices, basevertex)
}
public
func glDrawElementsBaseVertex(mode:GL.Enum, count:GL.Size, type:GL.Enum, indices:UnsafeRawPointer?, basevertex:GL.Int)
{
    fp_glDrawElementsBaseVertex(mode, count, type, indices, basevertex)
}
public
func glDrawElementsBaseVertex(_ mode:GL.Enum, _ count:GL.Size, _ type:GL.Enum, _ indices:UnsafeRawPointer?, _ basevertex:GL.Int)
{
    fp_glDrawElementsBaseVertex(mode, count, type, indices, basevertex)
}

var fp_glDrawElementsBaseVertexEXT:@convention(c) (GL.Enum, GL.Size, GL.Enum, UnsafeRawPointer?, GL.Int) -> () = load_glDrawElementsBaseVertexEXT
func load_glDrawElementsBaseVertexEXT(mode:GL.Enum, count:GL.Size, type:GL.Enum, indices:UnsafeRawPointer?, basevertex:GL.Int)
{
    fp_glDrawElementsBaseVertexEXT = unsafeBitCast(get_fp("glDrawElementsBaseVertexEXT", support: [ss149]), to: Swift.type(of: fp_glDrawElementsBaseVertexEXT))
    fp_glDrawElementsBaseVertexEXT(mode, count, type, indices, basevertex)
}
public
func glDrawElementsBaseVertexEXT(mode:GL.Enum, count:GL.Size, type:GL.Enum, indices:UnsafeRawPointer?, basevertex:GL.Int)
{
    fp_glDrawElementsBaseVertexEXT(mode, count, type, indices, basevertex)
}
public
func glDrawElementsBaseVertexEXT(_ mode:GL.Enum, _ count:GL.Size, _ type:GL.Enum, _ indices:UnsafeRawPointer?, _ basevertex:GL.Int)
{
    fp_glDrawElementsBaseVertexEXT(mode, count, type, indices, basevertex)
}

var fp_glDrawElementsBaseVertexOES:@convention(c) (GL.Enum, GL.Size, GL.Enum, UnsafeRawPointer?, GL.Int) -> () = load_glDrawElementsBaseVertexOES
func load_glDrawElementsBaseVertexOES(mode:GL.Enum, count:GL.Size, type:GL.Enum, indices:UnsafeRawPointer?, basevertex:GL.Int)
{
    fp_glDrawElementsBaseVertexOES = unsafeBitCast(get_fp("glDrawElementsBaseVertexOES", support: [ss289]), to: Swift.type(of: fp_glDrawElementsBaseVertexOES))
    fp_glDrawElementsBaseVertexOES(mode, count, type, indices, basevertex)
}
public
func glDrawElementsBaseVertexOES(mode:GL.Enum, count:GL.Size, type:GL.Enum, indices:UnsafeRawPointer?, basevertex:GL.Int)
{
    fp_glDrawElementsBaseVertexOES(mode, count, type, indices, basevertex)
}
public
func glDrawElementsBaseVertexOES(_ mode:GL.Enum, _ count:GL.Size, _ type:GL.Enum, _ indices:UnsafeRawPointer?, _ basevertex:GL.Int)
{
    fp_glDrawElementsBaseVertexOES(mode, count, type, indices, basevertex)
}

var fp_glDrawElementsIndirect:@convention(c) (GL.Enum, GL.Enum, UnsafeRawPointer?) -> () = load_glDrawElementsIndirect
func load_glDrawElementsIndirect(mode:GL.Enum, type:GL.Enum, indirect:UnsafeRawPointer?)
{
    fp_glDrawElementsIndirect = unsafeBitCast(get_fp("glDrawElementsIndirect", support: [ss358, ss367, ss46]), to: Swift.type(of: fp_glDrawElementsIndirect))
    fp_glDrawElementsIndirect(mode, type, indirect)
}
public
func glDrawElementsIndirect(mode:GL.Enum, type:GL.Enum, indirect:UnsafeRawPointer?)
{
    fp_glDrawElementsIndirect(mode, type, indirect)
}
public
func glDrawElementsIndirect(_ mode:GL.Enum, _ type:GL.Enum, _ indirect:UnsafeRawPointer?)
{
    fp_glDrawElementsIndirect(mode, type, indirect)
}

var fp_glDrawElementsInstanced:@convention(c) (GL.Enum, GL.Size, GL.Enum, UnsafeRawPointer?, GL.Size) -> () = load_glDrawElementsInstanced
func load_glDrawElementsInstanced(mode:GL.Enum, count:GL.Size, type:GL.Enum, indices:UnsafeRawPointer?, instancecount:GL.Size)
{
    fp_glDrawElementsInstanced = unsafeBitCast(get_fp("glDrawElementsInstanced", support: [ss355, ss366]), to: Swift.type(of: fp_glDrawElementsInstanced))
    fp_glDrawElementsInstanced(mode, count, type, indices, instancecount)
}
public
func glDrawElementsInstanced(mode:GL.Enum, count:GL.Size, type:GL.Enum, indices:UnsafeRawPointer?, instancecount:GL.Size)
{
    fp_glDrawElementsInstanced(mode, count, type, indices, instancecount)
}
public
func glDrawElementsInstanced(_ mode:GL.Enum, _ count:GL.Size, _ type:GL.Enum, _ indices:UnsafeRawPointer?, _ instancecount:GL.Size)
{
    fp_glDrawElementsInstanced(mode, count, type, indices, instancecount)
}

var fp_glDrawElementsInstancedANGLE:@convention(c) (GL.Enum, GL.Size, GL.Enum, UnsafeRawPointer?, GL.Size) -> () = load_glDrawElementsInstancedANGLE
func load_glDrawElementsInstancedANGLE(mode:GL.Enum, count:GL.Size, type:GL.Enum, indices:UnsafeRawPointer?, primcount:GL.Size)
{
    fp_glDrawElementsInstancedANGLE = unsafeBitCast(get_fp("glDrawElementsInstancedANGLE", support: [ss15]), to: Swift.type(of: fp_glDrawElementsInstancedANGLE))
    fp_glDrawElementsInstancedANGLE(mode, count, type, indices, primcount)
}
public
func glDrawElementsInstancedANGLE(mode:GL.Enum, count:GL.Size, type:GL.Enum, indices:UnsafeRawPointer?, primcount:GL.Size)
{
    fp_glDrawElementsInstancedANGLE(mode, count, type, indices, primcount)
}
public
func glDrawElementsInstancedANGLE(_ mode:GL.Enum, _ count:GL.Size, _ type:GL.Enum, _ indices:UnsafeRawPointer?, _ primcount:GL.Size)
{
    fp_glDrawElementsInstancedANGLE(mode, count, type, indices, primcount)
}

var fp_glDrawElementsInstancedARB:@convention(c) (GL.Enum, GL.Size, GL.Enum, UnsafeRawPointer?, GL.Size) -> () = load_glDrawElementsInstancedARB
func load_glDrawElementsInstancedARB(mode:GL.Enum, count:GL.Size, type:GL.Enum, indices:UnsafeRawPointer?, primcount:GL.Size)
{
    fp_glDrawElementsInstancedARB = unsafeBitCast(get_fp("glDrawElementsInstancedARB", support: [ss47]), to: Swift.type(of: fp_glDrawElementsInstancedARB))
    fp_glDrawElementsInstancedARB(mode, count, type, indices, primcount)
}
public
func glDrawElementsInstancedARB(mode:GL.Enum, count:GL.Size, type:GL.Enum, indices:UnsafeRawPointer?, primcount:GL.Size)
{
    fp_glDrawElementsInstancedARB(mode, count, type, indices, primcount)
}
public
func glDrawElementsInstancedARB(_ mode:GL.Enum, _ count:GL.Size, _ type:GL.Enum, _ indices:UnsafeRawPointer?, _ primcount:GL.Size)
{
    fp_glDrawElementsInstancedARB(mode, count, type, indices, primcount)
}

var fp_glDrawElementsInstancedBaseInstance:@convention(c) (GL.Enum, GL.Size, GL.Enum, UnsafeRawPointer?, GL.Size, GL.UInt) -> () = load_glDrawElementsInstancedBaseInstance
func load_glDrawElementsInstancedBaseInstance(mode:GL.Enum, count:GL.Size, type:GL.Enum, indices:UnsafeRawPointer?, instancecount:GL.Size, baseinstance:GL.UInt)
{
    fp_glDrawElementsInstancedBaseInstance = unsafeBitCast(get_fp("glDrawElementsInstancedBaseInstance", support: [ss360, ss28]), to: Swift.type(of: fp_glDrawElementsInstancedBaseInstance))
    fp_glDrawElementsInstancedBaseInstance(mode, count, type, indices, instancecount, baseinstance)
}
public
func glDrawElementsInstancedBaseInstance(mode:GL.Enum, count:GL.Size, type:GL.Enum, indices:UnsafeRawPointer?, instancecount:GL.Size, baseinstance:GL.UInt)
{
    fp_glDrawElementsInstancedBaseInstance(mode, count, type, indices, instancecount, baseinstance)
}
public
func glDrawElementsInstancedBaseInstance(_ mode:GL.Enum, _ count:GL.Size, _ type:GL.Enum, _ indices:UnsafeRawPointer?, _ instancecount:GL.Size, _ baseinstance:GL.UInt)
{
    fp_glDrawElementsInstancedBaseInstance(mode, count, type, indices, instancecount, baseinstance)
}

var fp_glDrawElementsInstancedBaseInstanceEXT:@convention(c) (GL.Enum, GL.Size, GL.Enum, UnsafeRawPointer?, GL.Size, GL.UInt) -> () = load_glDrawElementsInstancedBaseInstanceEXT
func load_glDrawElementsInstancedBaseInstanceEXT(mode:GL.Enum, count:GL.Size, type:GL.Enum, indices:UnsafeRawPointer?, instancecount:GL.Size, baseinstance:GL.UInt)
{
    fp_glDrawElementsInstancedBaseInstanceEXT = unsafeBitCast(get_fp("glDrawElementsInstancedBaseInstanceEXT", support: [ss125]), to: Swift.type(of: fp_glDrawElementsInstancedBaseInstanceEXT))
    fp_glDrawElementsInstancedBaseInstanceEXT(mode, count, type, indices, instancecount, baseinstance)
}
public
func glDrawElementsInstancedBaseInstanceEXT(mode:GL.Enum, count:GL.Size, type:GL.Enum, indices:UnsafeRawPointer?, instancecount:GL.Size, baseinstance:GL.UInt)
{
    fp_glDrawElementsInstancedBaseInstanceEXT(mode, count, type, indices, instancecount, baseinstance)
}
public
func glDrawElementsInstancedBaseInstanceEXT(_ mode:GL.Enum, _ count:GL.Size, _ type:GL.Enum, _ indices:UnsafeRawPointer?, _ instancecount:GL.Size, _ baseinstance:GL.UInt)
{
    fp_glDrawElementsInstancedBaseInstanceEXT(mode, count, type, indices, instancecount, baseinstance)
}

var fp_glDrawElementsInstancedBaseVertex:@convention(c) (GL.Enum, GL.Size, GL.Enum, UnsafeRawPointer?, GL.Size, GL.Int) -> () = load_glDrawElementsInstancedBaseVertex
func load_glDrawElementsInstancedBaseVertex(mode:GL.Enum, count:GL.Size, type:GL.Enum, indices:UnsafeRawPointer?, instancecount:GL.Size, basevertex:GL.Int)
{
    fp_glDrawElementsInstancedBaseVertex = unsafeBitCast(get_fp("glDrawElementsInstancedBaseVertex", support: [ss356, ss368, ss45]), to: Swift.type(of: fp_glDrawElementsInstancedBaseVertex))
    fp_glDrawElementsInstancedBaseVertex(mode, count, type, indices, instancecount, basevertex)
}
public
func glDrawElementsInstancedBaseVertex(mode:GL.Enum, count:GL.Size, type:GL.Enum, indices:UnsafeRawPointer?, instancecount:GL.Size, basevertex:GL.Int)
{
    fp_glDrawElementsInstancedBaseVertex(mode, count, type, indices, instancecount, basevertex)
}
public
func glDrawElementsInstancedBaseVertex(_ mode:GL.Enum, _ count:GL.Size, _ type:GL.Enum, _ indices:UnsafeRawPointer?, _ instancecount:GL.Size, _ basevertex:GL.Int)
{
    fp_glDrawElementsInstancedBaseVertex(mode, count, type, indices, instancecount, basevertex)
}

var fp_glDrawElementsInstancedBaseVertexBaseInstance:@convention(c) (GL.Enum, GL.Size, GL.Enum, UnsafeRawPointer?, GL.Size, GL.Int, GL.UInt) -> () = load_glDrawElementsInstancedBaseVertexBaseInstance
func load_glDrawElementsInstancedBaseVertexBaseInstance(mode:GL.Enum, count:GL.Size, type:GL.Enum, indices:UnsafeRawPointer?, instancecount:GL.Size, basevertex:GL.Int, baseinstance:GL.UInt)
{
    fp_glDrawElementsInstancedBaseVertexBaseInstance = unsafeBitCast(get_fp("glDrawElementsInstancedBaseVertexBaseInstance", support: [ss360, ss28]), to: Swift.type(of: fp_glDrawElementsInstancedBaseVertexBaseInstance))
    fp_glDrawElementsInstancedBaseVertexBaseInstance(mode, count, type, indices, instancecount, basevertex, baseinstance)
}
public
func glDrawElementsInstancedBaseVertexBaseInstance(mode:GL.Enum, count:GL.Size, type:GL.Enum, indices:UnsafeRawPointer?, instancecount:GL.Size, basevertex:GL.Int, baseinstance:GL.UInt)
{
    fp_glDrawElementsInstancedBaseVertexBaseInstance(mode, count, type, indices, instancecount, basevertex, baseinstance)
}
public
func glDrawElementsInstancedBaseVertexBaseInstance(_ mode:GL.Enum, _ count:GL.Size, _ type:GL.Enum, _ indices:UnsafeRawPointer?, _ instancecount:GL.Size, _ basevertex:GL.Int, _ baseinstance:GL.UInt)
{
    fp_glDrawElementsInstancedBaseVertexBaseInstance(mode, count, type, indices, instancecount, basevertex, baseinstance)
}

var fp_glDrawElementsInstancedBaseVertexBaseInstanceEXT:@convention(c) (GL.Enum, GL.Size, GL.Enum, UnsafeRawPointer?, GL.Size, GL.Int, GL.UInt) -> () = load_glDrawElementsInstancedBaseVertexBaseInstanceEXT
func load_glDrawElementsInstancedBaseVertexBaseInstanceEXT(mode:GL.Enum, count:GL.Size, type:GL.Enum, indices:UnsafeRawPointer?, instancecount:GL.Size, basevertex:GL.Int, baseinstance:GL.UInt)
{
    fp_glDrawElementsInstancedBaseVertexBaseInstanceEXT = unsafeBitCast(get_fp("glDrawElementsInstancedBaseVertexBaseInstanceEXT", support: [ss125]), to: Swift.type(of: fp_glDrawElementsInstancedBaseVertexBaseInstanceEXT))
    fp_glDrawElementsInstancedBaseVertexBaseInstanceEXT(mode, count, type, indices, instancecount, basevertex, baseinstance)
}
public
func glDrawElementsInstancedBaseVertexBaseInstanceEXT(mode:GL.Enum, count:GL.Size, type:GL.Enum, indices:UnsafeRawPointer?, instancecount:GL.Size, basevertex:GL.Int, baseinstance:GL.UInt)
{
    fp_glDrawElementsInstancedBaseVertexBaseInstanceEXT(mode, count, type, indices, instancecount, basevertex, baseinstance)
}
public
func glDrawElementsInstancedBaseVertexBaseInstanceEXT(_ mode:GL.Enum, _ count:GL.Size, _ type:GL.Enum, _ indices:UnsafeRawPointer?, _ instancecount:GL.Size, _ basevertex:GL.Int, _ baseinstance:GL.UInt)
{
    fp_glDrawElementsInstancedBaseVertexBaseInstanceEXT(mode, count, type, indices, instancecount, basevertex, baseinstance)
}

var fp_glDrawElementsInstancedBaseVertexEXT:@convention(c) (GL.Enum, GL.Size, GL.Enum, UnsafeRawPointer?, GL.Size, GL.Int) -> () = load_glDrawElementsInstancedBaseVertexEXT
func load_glDrawElementsInstancedBaseVertexEXT(mode:GL.Enum, count:GL.Size, type:GL.Enum, indices:UnsafeRawPointer?, instancecount:GL.Size, basevertex:GL.Int)
{
    fp_glDrawElementsInstancedBaseVertexEXT = unsafeBitCast(get_fp("glDrawElementsInstancedBaseVertexEXT", support: [ss149]), to: Swift.type(of: fp_glDrawElementsInstancedBaseVertexEXT))
    fp_glDrawElementsInstancedBaseVertexEXT(mode, count, type, indices, instancecount, basevertex)
}
public
func glDrawElementsInstancedBaseVertexEXT(mode:GL.Enum, count:GL.Size, type:GL.Enum, indices:UnsafeRawPointer?, instancecount:GL.Size, basevertex:GL.Int)
{
    fp_glDrawElementsInstancedBaseVertexEXT(mode, count, type, indices, instancecount, basevertex)
}
public
func glDrawElementsInstancedBaseVertexEXT(_ mode:GL.Enum, _ count:GL.Size, _ type:GL.Enum, _ indices:UnsafeRawPointer?, _ instancecount:GL.Size, _ basevertex:GL.Int)
{
    fp_glDrawElementsInstancedBaseVertexEXT(mode, count, type, indices, instancecount, basevertex)
}

var fp_glDrawElementsInstancedBaseVertexOES:@convention(c) (GL.Enum, GL.Size, GL.Enum, UnsafeRawPointer?, GL.Size, GL.Int) -> () = load_glDrawElementsInstancedBaseVertexOES
func load_glDrawElementsInstancedBaseVertexOES(mode:GL.Enum, count:GL.Size, type:GL.Enum, indices:UnsafeRawPointer?, instancecount:GL.Size, basevertex:GL.Int)
{
    fp_glDrawElementsInstancedBaseVertexOES = unsafeBitCast(get_fp("glDrawElementsInstancedBaseVertexOES", support: [ss289]), to: Swift.type(of: fp_glDrawElementsInstancedBaseVertexOES))
    fp_glDrawElementsInstancedBaseVertexOES(mode, count, type, indices, instancecount, basevertex)
}
public
func glDrawElementsInstancedBaseVertexOES(mode:GL.Enum, count:GL.Size, type:GL.Enum, indices:UnsafeRawPointer?, instancecount:GL.Size, basevertex:GL.Int)
{
    fp_glDrawElementsInstancedBaseVertexOES(mode, count, type, indices, instancecount, basevertex)
}
public
func glDrawElementsInstancedBaseVertexOES(_ mode:GL.Enum, _ count:GL.Size, _ type:GL.Enum, _ indices:UnsafeRawPointer?, _ instancecount:GL.Size, _ basevertex:GL.Int)
{
    fp_glDrawElementsInstancedBaseVertexOES(mode, count, type, indices, instancecount, basevertex)
}

var fp_glDrawElementsInstancedEXT:@convention(c) (GL.Enum, GL.Size, GL.Enum, UnsafeRawPointer?, GL.Size) -> () = load_glDrawElementsInstancedEXT
func load_glDrawElementsInstancedEXT(mode:GL.Enum, count:GL.Size, type:GL.Enum, indices:UnsafeRawPointer?, primcount:GL.Size)
{
    fp_glDrawElementsInstancedEXT = unsafeBitCast(get_fp("glDrawElementsInstancedEXT", support: [ss150, ss163]), to: Swift.type(of: fp_glDrawElementsInstancedEXT))
    fp_glDrawElementsInstancedEXT(mode, count, type, indices, primcount)
}
public
func glDrawElementsInstancedEXT(mode:GL.Enum, count:GL.Size, type:GL.Enum, indices:UnsafeRawPointer?, primcount:GL.Size)
{
    fp_glDrawElementsInstancedEXT(mode, count, type, indices, primcount)
}
public
func glDrawElementsInstancedEXT(_ mode:GL.Enum, _ count:GL.Size, _ type:GL.Enum, _ indices:UnsafeRawPointer?, _ primcount:GL.Size)
{
    fp_glDrawElementsInstancedEXT(mode, count, type, indices, primcount)
}

var fp_glDrawElementsInstancedNV:@convention(c) (GL.Enum, GL.Size, GL.Enum, UnsafeRawPointer?, GL.Size) -> () = load_glDrawElementsInstancedNV
func load_glDrawElementsInstancedNV(mode:GL.Enum, count:GL.Size, type:GL.Enum, indices:UnsafeRawPointer?, primcount:GL.Size)
{
    fp_glDrawElementsInstancedNV = unsafeBitCast(get_fp("glDrawElementsInstancedNV", support: [ss238]), to: Swift.type(of: fp_glDrawElementsInstancedNV))
    fp_glDrawElementsInstancedNV(mode, count, type, indices, primcount)
}
public
func glDrawElementsInstancedNV(mode:GL.Enum, count:GL.Size, type:GL.Enum, indices:UnsafeRawPointer?, primcount:GL.Size)
{
    fp_glDrawElementsInstancedNV(mode, count, type, indices, primcount)
}
public
func glDrawElementsInstancedNV(_ mode:GL.Enum, _ count:GL.Size, _ type:GL.Enum, _ indices:UnsafeRawPointer?, _ primcount:GL.Size)
{
    fp_glDrawElementsInstancedNV(mode, count, type, indices, primcount)
}

var fp_glDrawMeshArraysSUN:@convention(c) (GL.Enum, GL.Int, GL.Size, GL.Size) -> () = load_glDrawMeshArraysSUN
func load_glDrawMeshArraysSUN(mode:GL.Enum, first:GL.Int, count:GL.Size, width:GL.Size)
{
    fp_glDrawMeshArraysSUN = unsafeBitCast(get_fp("glDrawMeshArraysSUN", support: [ss342]), to: Swift.type(of: fp_glDrawMeshArraysSUN))
    fp_glDrawMeshArraysSUN(mode, first, count, width)
}
public
func glDrawMeshArraysSUN(mode:GL.Enum, first:GL.Int, count:GL.Size, width:GL.Size)
{
    fp_glDrawMeshArraysSUN(mode, first, count, width)
}
public
func glDrawMeshArraysSUN(_ mode:GL.Enum, _ first:GL.Int, _ count:GL.Size, _ width:GL.Size)
{
    fp_glDrawMeshArraysSUN(mode, first, count, width)
}

var fp_glDrawPixels:@convention(c) (GL.Size, GL.Size, GL.Enum, GL.Enum, UnsafeRawPointer?) -> () = load_glDrawPixels
func load_glDrawPixels(width:GL.Size, height:GL.Size, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glDrawPixels = unsafeBitCast(get_fp("glDrawPixels", support: [ss346, ss369]), to: Swift.type(of: fp_glDrawPixels))
    fp_glDrawPixels(width, height, format, type, pixels)
}
public
func glDrawPixels(width:GL.Size, height:GL.Size, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glDrawPixels(width, height, format, type, pixels)
}
public
func glDrawPixels(_ width:GL.Size, _ height:GL.Size, _ format:GL.Enum, _ type:GL.Enum, _ pixels:UnsafeRawPointer?)
{
    fp_glDrawPixels(width, height, format, type, pixels)
}

var fp_glDrawRangeElementArrayAPPLE:@convention(c) (GL.Enum, GL.UInt, GL.UInt, GL.Int, GL.Size) -> () = load_glDrawRangeElementArrayAPPLE
func load_glDrawRangeElementArrayAPPLE(mode:GL.Enum, start:GL.UInt, end:GL.UInt, first:GL.Int, count:GL.Size)
{
    fp_glDrawRangeElementArrayAPPLE = unsafeBitCast(get_fp("glDrawRangeElementArrayAPPLE", support: [ss18]), to: Swift.type(of: fp_glDrawRangeElementArrayAPPLE))
    fp_glDrawRangeElementArrayAPPLE(mode, start, end, first, count)
}
public
func glDrawRangeElementArrayAPPLE(mode:GL.Enum, start:GL.UInt, end:GL.UInt, first:GL.Int, count:GL.Size)
{
    fp_glDrawRangeElementArrayAPPLE(mode, start, end, first, count)
}
public
func glDrawRangeElementArrayAPPLE(_ mode:GL.Enum, _ start:GL.UInt, _ end:GL.UInt, _ first:GL.Int, _ count:GL.Size)
{
    fp_glDrawRangeElementArrayAPPLE(mode, start, end, first, count)
}

var fp_glDrawRangeElementArrayATI:@convention(c) (GL.Enum, GL.UInt, GL.UInt, GL.Size) -> () = load_glDrawRangeElementArrayATI
func load_glDrawRangeElementArrayATI(mode:GL.Enum, start:GL.UInt, end:GL.UInt, count:GL.Size)
{
    fp_glDrawRangeElementArrayATI = unsafeBitCast(get_fp("glDrawRangeElementArrayATI", support: [ss116]), to: Swift.type(of: fp_glDrawRangeElementArrayATI))
    fp_glDrawRangeElementArrayATI(mode, start, end, count)
}
public
func glDrawRangeElementArrayATI(mode:GL.Enum, start:GL.UInt, end:GL.UInt, count:GL.Size)
{
    fp_glDrawRangeElementArrayATI(mode, start, end, count)
}
public
func glDrawRangeElementArrayATI(_ mode:GL.Enum, _ start:GL.UInt, _ end:GL.UInt, _ count:GL.Size)
{
    fp_glDrawRangeElementArrayATI(mode, start, end, count)
}

var fp_glDrawRangeElements:@convention(c) (GL.Enum, GL.UInt, GL.UInt, GL.Size, GL.Enum, UnsafeRawPointer?) -> () = load_glDrawRangeElements
func load_glDrawRangeElements(mode:GL.Enum, start:GL.UInt, end:GL.UInt, count:GL.Size, type:GL.Enum, indices:UnsafeRawPointer?)
{
    fp_glDrawRangeElements = unsafeBitCast(get_fp("glDrawRangeElements", support: [ss348, ss366]), to: Swift.type(of: fp_glDrawRangeElements))
    fp_glDrawRangeElements(mode, start, end, count, type, indices)
}
public
func glDrawRangeElements(mode:GL.Enum, start:GL.UInt, end:GL.UInt, count:GL.Size, type:GL.Enum, indices:UnsafeRawPointer?)
{
    fp_glDrawRangeElements(mode, start, end, count, type, indices)
}
public
func glDrawRangeElements(_ mode:GL.Enum, _ start:GL.UInt, _ end:GL.UInt, _ count:GL.Size, _ type:GL.Enum, _ indices:UnsafeRawPointer?)
{
    fp_glDrawRangeElements(mode, start, end, count, type, indices)
}

var fp_glDrawRangeElementsBaseVertex:@convention(c) (GL.Enum, GL.UInt, GL.UInt, GL.Size, GL.Enum, UnsafeRawPointer?, GL.Int) -> () = load_glDrawRangeElementsBaseVertex
func load_glDrawRangeElementsBaseVertex(mode:GL.Enum, start:GL.UInt, end:GL.UInt, count:GL.Size, type:GL.Enum, indices:UnsafeRawPointer?, basevertex:GL.Int)
{
    fp_glDrawRangeElementsBaseVertex = unsafeBitCast(get_fp("glDrawRangeElementsBaseVertex", support: [ss356, ss368, ss45]), to: Swift.type(of: fp_glDrawRangeElementsBaseVertex))
    fp_glDrawRangeElementsBaseVertex(mode, start, end, count, type, indices, basevertex)
}
public
func glDrawRangeElementsBaseVertex(mode:GL.Enum, start:GL.UInt, end:GL.UInt, count:GL.Size, type:GL.Enum, indices:UnsafeRawPointer?, basevertex:GL.Int)
{
    fp_glDrawRangeElementsBaseVertex(mode, start, end, count, type, indices, basevertex)
}
public
func glDrawRangeElementsBaseVertex(_ mode:GL.Enum, _ start:GL.UInt, _ end:GL.UInt, _ count:GL.Size, _ type:GL.Enum, _ indices:UnsafeRawPointer?, _ basevertex:GL.Int)
{
    fp_glDrawRangeElementsBaseVertex(mode, start, end, count, type, indices, basevertex)
}

var fp_glDrawRangeElementsBaseVertexEXT:@convention(c) (GL.Enum, GL.UInt, GL.UInt, GL.Size, GL.Enum, UnsafeRawPointer?, GL.Int) -> () = load_glDrawRangeElementsBaseVertexEXT
func load_glDrawRangeElementsBaseVertexEXT(mode:GL.Enum, start:GL.UInt, end:GL.UInt, count:GL.Size, type:GL.Enum, indices:UnsafeRawPointer?, basevertex:GL.Int)
{
    fp_glDrawRangeElementsBaseVertexEXT = unsafeBitCast(get_fp("glDrawRangeElementsBaseVertexEXT", support: [ss149]), to: Swift.type(of: fp_glDrawRangeElementsBaseVertexEXT))
    fp_glDrawRangeElementsBaseVertexEXT(mode, start, end, count, type, indices, basevertex)
}
public
func glDrawRangeElementsBaseVertexEXT(mode:GL.Enum, start:GL.UInt, end:GL.UInt, count:GL.Size, type:GL.Enum, indices:UnsafeRawPointer?, basevertex:GL.Int)
{
    fp_glDrawRangeElementsBaseVertexEXT(mode, start, end, count, type, indices, basevertex)
}
public
func glDrawRangeElementsBaseVertexEXT(_ mode:GL.Enum, _ start:GL.UInt, _ end:GL.UInt, _ count:GL.Size, _ type:GL.Enum, _ indices:UnsafeRawPointer?, _ basevertex:GL.Int)
{
    fp_glDrawRangeElementsBaseVertexEXT(mode, start, end, count, type, indices, basevertex)
}

var fp_glDrawRangeElementsBaseVertexOES:@convention(c) (GL.Enum, GL.UInt, GL.UInt, GL.Size, GL.Enum, UnsafeRawPointer?, GL.Int) -> () = load_glDrawRangeElementsBaseVertexOES
func load_glDrawRangeElementsBaseVertexOES(mode:GL.Enum, start:GL.UInt, end:GL.UInt, count:GL.Size, type:GL.Enum, indices:UnsafeRawPointer?, basevertex:GL.Int)
{
    fp_glDrawRangeElementsBaseVertexOES = unsafeBitCast(get_fp("glDrawRangeElementsBaseVertexOES", support: [ss289]), to: Swift.type(of: fp_glDrawRangeElementsBaseVertexOES))
    fp_glDrawRangeElementsBaseVertexOES(mode, start, end, count, type, indices, basevertex)
}
public
func glDrawRangeElementsBaseVertexOES(mode:GL.Enum, start:GL.UInt, end:GL.UInt, count:GL.Size, type:GL.Enum, indices:UnsafeRawPointer?, basevertex:GL.Int)
{
    fp_glDrawRangeElementsBaseVertexOES(mode, start, end, count, type, indices, basevertex)
}
public
func glDrawRangeElementsBaseVertexOES(_ mode:GL.Enum, _ start:GL.UInt, _ end:GL.UInt, _ count:GL.Size, _ type:GL.Enum, _ indices:UnsafeRawPointer?, _ basevertex:GL.Int)
{
    fp_glDrawRangeElementsBaseVertexOES(mode, start, end, count, type, indices, basevertex)
}

var fp_glDrawRangeElementsEXT:@convention(c) (GL.Enum, GL.UInt, GL.UInt, GL.Size, GL.Enum, UnsafeRawPointer?) -> () = load_glDrawRangeElementsEXT
func load_glDrawRangeElementsEXT(mode:GL.Enum, start:GL.UInt, end:GL.UInt, count:GL.Size, type:GL.Enum, indices:UnsafeRawPointer?)
{
    fp_glDrawRangeElementsEXT = unsafeBitCast(get_fp("glDrawRangeElementsEXT", support: [ss151]), to: Swift.type(of: fp_glDrawRangeElementsEXT))
    fp_glDrawRangeElementsEXT(mode, start, end, count, type, indices)
}
public
func glDrawRangeElementsEXT(mode:GL.Enum, start:GL.UInt, end:GL.UInt, count:GL.Size, type:GL.Enum, indices:UnsafeRawPointer?)
{
    fp_glDrawRangeElementsEXT(mode, start, end, count, type, indices)
}
public
func glDrawRangeElementsEXT(_ mode:GL.Enum, _ start:GL.UInt, _ end:GL.UInt, _ count:GL.Size, _ type:GL.Enum, _ indices:UnsafeRawPointer?)
{
    fp_glDrawRangeElementsEXT(mode, start, end, count, type, indices)
}

var fp_glDrawTexfOES:@convention(c) (GL.Float, GL.Float, GL.Float, GL.Float, GL.Float) -> () = load_glDrawTexfOES
func load_glDrawTexfOES(x:GL.Float, y:GL.Float, z:GL.Float, width:GL.Float, height:GL.Float)
{
    fp_glDrawTexfOES = unsafeBitCast(get_fp("glDrawTexfOES", support: [ss290]), to: Swift.type(of: fp_glDrawTexfOES))
    fp_glDrawTexfOES(x, y, z, width, height)
}
public
func glDrawTexfOES(x:GL.Float, y:GL.Float, z:GL.Float, width:GL.Float, height:GL.Float)
{
    fp_glDrawTexfOES(x, y, z, width, height)
}
public
func glDrawTexfOES(_ x:GL.Float, _ y:GL.Float, _ z:GL.Float, _ width:GL.Float, _ height:GL.Float)
{
    fp_glDrawTexfOES(x, y, z, width, height)
}

var fp_glDrawTexfvOES:@convention(c) (UnsafePointer<GL.Float>?) -> () = load_glDrawTexfvOES
func load_glDrawTexfvOES(coords:UnsafePointer<GL.Float>?)
{
    fp_glDrawTexfvOES = unsafeBitCast(get_fp("glDrawTexfvOES", support: [ss290]), to: Swift.type(of: fp_glDrawTexfvOES))
    fp_glDrawTexfvOES(coords)
}
public
func glDrawTexfvOES(coords:UnsafePointer<GL.Float>?)
{
    fp_glDrawTexfvOES(coords)
}
public
func glDrawTexfvOES(_ coords:UnsafePointer<GL.Float>?)
{
    fp_glDrawTexfvOES(coords)
}

var fp_glDrawTexiOES:@convention(c) (GL.Int, GL.Int, GL.Int, GL.Int, GL.Int) -> () = load_glDrawTexiOES
func load_glDrawTexiOES(x:GL.Int, y:GL.Int, z:GL.Int, width:GL.Int, height:GL.Int)
{
    fp_glDrawTexiOES = unsafeBitCast(get_fp("glDrawTexiOES", support: [ss290]), to: Swift.type(of: fp_glDrawTexiOES))
    fp_glDrawTexiOES(x, y, z, width, height)
}
public
func glDrawTexiOES(x:GL.Int, y:GL.Int, z:GL.Int, width:GL.Int, height:GL.Int)
{
    fp_glDrawTexiOES(x, y, z, width, height)
}
public
func glDrawTexiOES(_ x:GL.Int, _ y:GL.Int, _ z:GL.Int, _ width:GL.Int, _ height:GL.Int)
{
    fp_glDrawTexiOES(x, y, z, width, height)
}

var fp_glDrawTexivOES:@convention(c) (UnsafePointer<GL.Int>?) -> () = load_glDrawTexivOES
func load_glDrawTexivOES(coords:UnsafePointer<GL.Int>?)
{
    fp_glDrawTexivOES = unsafeBitCast(get_fp("glDrawTexivOES", support: [ss290]), to: Swift.type(of: fp_glDrawTexivOES))
    fp_glDrawTexivOES(coords)
}
public
func glDrawTexivOES(coords:UnsafePointer<GL.Int>?)
{
    fp_glDrawTexivOES(coords)
}
public
func glDrawTexivOES(_ coords:UnsafePointer<GL.Int>?)
{
    fp_glDrawTexivOES(coords)
}

var fp_glDrawTexsOES:@convention(c) (GL.Short, GL.Short, GL.Short, GL.Short, GL.Short) -> () = load_glDrawTexsOES
func load_glDrawTexsOES(x:GL.Short, y:GL.Short, z:GL.Short, width:GL.Short, height:GL.Short)
{
    fp_glDrawTexsOES = unsafeBitCast(get_fp("glDrawTexsOES", support: [ss290]), to: Swift.type(of: fp_glDrawTexsOES))
    fp_glDrawTexsOES(x, y, z, width, height)
}
public
func glDrawTexsOES(x:GL.Short, y:GL.Short, z:GL.Short, width:GL.Short, height:GL.Short)
{
    fp_glDrawTexsOES(x, y, z, width, height)
}
public
func glDrawTexsOES(_ x:GL.Short, _ y:GL.Short, _ z:GL.Short, _ width:GL.Short, _ height:GL.Short)
{
    fp_glDrawTexsOES(x, y, z, width, height)
}

var fp_glDrawTexsvOES:@convention(c) (UnsafePointer<GL.Short>?) -> () = load_glDrawTexsvOES
func load_glDrawTexsvOES(coords:UnsafePointer<GL.Short>?)
{
    fp_glDrawTexsvOES = unsafeBitCast(get_fp("glDrawTexsvOES", support: [ss290]), to: Swift.type(of: fp_glDrawTexsvOES))
    fp_glDrawTexsvOES(coords)
}
public
func glDrawTexsvOES(coords:UnsafePointer<GL.Short>?)
{
    fp_glDrawTexsvOES(coords)
}
public
func glDrawTexsvOES(_ coords:UnsafePointer<GL.Short>?)
{
    fp_glDrawTexsvOES(coords)
}

var fp_glDrawTextureNV:@convention(c) (GL.UInt, GL.UInt, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float) -> () = load_glDrawTextureNV
func load_glDrawTextureNV(texture:GL.UInt, sampler:GL.UInt, x0:GL.Float, y0:GL.Float, x1:GL.Float, y1:GL.Float, z:GL.Float, s0:GL.Float, t0:GL.Float, s1:GL.Float, t1:GL.Float)
{
    fp_glDrawTextureNV = unsafeBitCast(get_fp("glDrawTextureNV", support: [ss239]), to: Swift.type(of: fp_glDrawTextureNV))
    fp_glDrawTextureNV(texture, sampler, x0, y0, x1, y1, z, s0, t0, s1, t1)
}
public
func glDrawTextureNV(texture:GL.UInt, sampler:GL.UInt, x0:GL.Float, y0:GL.Float, x1:GL.Float, y1:GL.Float, z:GL.Float, s0:GL.Float, t0:GL.Float, s1:GL.Float, t1:GL.Float)
{
    fp_glDrawTextureNV(texture, sampler, x0, y0, x1, y1, z, s0, t0, s1, t1)
}
public
func glDrawTextureNV(_ texture:GL.UInt, _ sampler:GL.UInt, _ x0:GL.Float, _ y0:GL.Float, _ x1:GL.Float, _ y1:GL.Float, _ z:GL.Float, _ s0:GL.Float, _ t0:GL.Float, _ s1:GL.Float, _ t1:GL.Float)
{
    fp_glDrawTextureNV(texture, sampler, x0, y0, x1, y1, z, s0, t0, s1, t1)
}

var fp_glDrawTexxOES:@convention(c) (GL.Fixed, GL.Fixed, GL.Fixed, GL.Fixed, GL.Fixed) -> () = load_glDrawTexxOES
func load_glDrawTexxOES(x:GL.Fixed, y:GL.Fixed, z:GL.Fixed, width:GL.Fixed, height:GL.Fixed)
{
    fp_glDrawTexxOES = unsafeBitCast(get_fp("glDrawTexxOES", support: [ss290]), to: Swift.type(of: fp_glDrawTexxOES))
    fp_glDrawTexxOES(x, y, z, width, height)
}
public
func glDrawTexxOES(x:GL.Fixed, y:GL.Fixed, z:GL.Fixed, width:GL.Fixed, height:GL.Fixed)
{
    fp_glDrawTexxOES(x, y, z, width, height)
}
public
func glDrawTexxOES(_ x:GL.Fixed, _ y:GL.Fixed, _ z:GL.Fixed, _ width:GL.Fixed, _ height:GL.Fixed)
{
    fp_glDrawTexxOES(x, y, z, width, height)
}

var fp_glDrawTexxvOES:@convention(c) (UnsafePointer<GL.Fixed>?) -> () = load_glDrawTexxvOES
func load_glDrawTexxvOES(coords:UnsafePointer<GL.Fixed>?)
{
    fp_glDrawTexxvOES = unsafeBitCast(get_fp("glDrawTexxvOES", support: [ss290]), to: Swift.type(of: fp_glDrawTexxvOES))
    fp_glDrawTexxvOES(coords)
}
public
func glDrawTexxvOES(coords:UnsafePointer<GL.Fixed>?)
{
    fp_glDrawTexxvOES(coords)
}
public
func glDrawTexxvOES(_ coords:UnsafePointer<GL.Fixed>?)
{
    fp_glDrawTexxvOES(coords)
}

var fp_glDrawTransformFeedback:@convention(c) (GL.Enum, GL.UInt) -> () = load_glDrawTransformFeedback
func load_glDrawTransformFeedback(mode:GL.Enum, id:GL.UInt)
{
    fp_glDrawTransformFeedback = unsafeBitCast(get_fp("glDrawTransformFeedback", support: [ss358, ss101]), to: Swift.type(of: fp_glDrawTransformFeedback))
    fp_glDrawTransformFeedback(mode, id)
}
public
func glDrawTransformFeedback(mode:GL.Enum, id:GL.UInt)
{
    fp_glDrawTransformFeedback(mode, id)
}
public
func glDrawTransformFeedback(_ mode:GL.Enum, _ id:GL.UInt)
{
    fp_glDrawTransformFeedback(mode, id)
}

var fp_glDrawTransformFeedbackInstanced:@convention(c) (GL.Enum, GL.UInt, GL.Size) -> () = load_glDrawTransformFeedbackInstanced
func load_glDrawTransformFeedbackInstanced(mode:GL.Enum, id:GL.UInt, instancecount:GL.Size)
{
    fp_glDrawTransformFeedbackInstanced = unsafeBitCast(get_fp("glDrawTransformFeedbackInstanced", support: [ss360, ss100]), to: Swift.type(of: fp_glDrawTransformFeedbackInstanced))
    fp_glDrawTransformFeedbackInstanced(mode, id, instancecount)
}
public
func glDrawTransformFeedbackInstanced(mode:GL.Enum, id:GL.UInt, instancecount:GL.Size)
{
    fp_glDrawTransformFeedbackInstanced(mode, id, instancecount)
}
public
func glDrawTransformFeedbackInstanced(_ mode:GL.Enum, _ id:GL.UInt, _ instancecount:GL.Size)
{
    fp_glDrawTransformFeedbackInstanced(mode, id, instancecount)
}

var fp_glDrawTransformFeedbackNV:@convention(c) (GL.Enum, GL.UInt) -> () = load_glDrawTransformFeedbackNV
func load_glDrawTransformFeedbackNV(mode:GL.Enum, id:GL.UInt)
{
    fp_glDrawTransformFeedbackNV = unsafeBitCast(get_fp("glDrawTransformFeedbackNV", support: [ss273]), to: Swift.type(of: fp_glDrawTransformFeedbackNV))
    fp_glDrawTransformFeedbackNV(mode, id)
}
public
func glDrawTransformFeedbackNV(mode:GL.Enum, id:GL.UInt)
{
    fp_glDrawTransformFeedbackNV(mode, id)
}
public
func glDrawTransformFeedbackNV(_ mode:GL.Enum, _ id:GL.UInt)
{
    fp_glDrawTransformFeedbackNV(mode, id)
}

var fp_glDrawTransformFeedbackStream:@convention(c) (GL.Enum, GL.UInt, GL.UInt) -> () = load_glDrawTransformFeedbackStream
func load_glDrawTransformFeedbackStream(mode:GL.Enum, id:GL.UInt, stream:GL.UInt)
{
    fp_glDrawTransformFeedbackStream = unsafeBitCast(get_fp("glDrawTransformFeedbackStream", support: [ss358, ss102]), to: Swift.type(of: fp_glDrawTransformFeedbackStream))
    fp_glDrawTransformFeedbackStream(mode, id, stream)
}
public
func glDrawTransformFeedbackStream(mode:GL.Enum, id:GL.UInt, stream:GL.UInt)
{
    fp_glDrawTransformFeedbackStream(mode, id, stream)
}
public
func glDrawTransformFeedbackStream(_ mode:GL.Enum, _ id:GL.UInt, _ stream:GL.UInt)
{
    fp_glDrawTransformFeedbackStream(mode, id, stream)
}

var fp_glDrawTransformFeedbackStreamInstanced:@convention(c) (GL.Enum, GL.UInt, GL.UInt, GL.Size) -> () = load_glDrawTransformFeedbackStreamInstanced
func load_glDrawTransformFeedbackStreamInstanced(mode:GL.Enum, id:GL.UInt, stream:GL.UInt, instancecount:GL.Size)
{
    fp_glDrawTransformFeedbackStreamInstanced = unsafeBitCast(get_fp("glDrawTransformFeedbackStreamInstanced", support: [ss360, ss100]), to: Swift.type(of: fp_glDrawTransformFeedbackStreamInstanced))
    fp_glDrawTransformFeedbackStreamInstanced(mode, id, stream, instancecount)
}
public
func glDrawTransformFeedbackStreamInstanced(mode:GL.Enum, id:GL.UInt, stream:GL.UInt, instancecount:GL.Size)
{
    fp_glDrawTransformFeedbackStreamInstanced(mode, id, stream, instancecount)
}
public
func glDrawTransformFeedbackStreamInstanced(_ mode:GL.Enum, _ id:GL.UInt, _ stream:GL.UInt, _ instancecount:GL.Size)
{
    fp_glDrawTransformFeedbackStreamInstanced(mode, id, stream, instancecount)
}

var fp_glEGLImageTargetRenderbufferStorageOES:@convention(c) (GL.Enum, GL.EGLImageOES) -> () = load_glEGLImageTargetRenderbufferStorageOES
func load_glEGLImageTargetRenderbufferStorageOES(target:GL.Enum, image:GL.EGLImageOES)
{
    fp_glEGLImageTargetRenderbufferStorageOES = unsafeBitCast(get_fp("glEGLImageTargetRenderbufferStorageOES", support: [ss291]), to: Swift.type(of: fp_glEGLImageTargetRenderbufferStorageOES))
    fp_glEGLImageTargetRenderbufferStorageOES(target, image)
}
public
func glEGLImageTargetRenderbufferStorageOES(target:GL.Enum, image:GL.EGLImageOES)
{
    fp_glEGLImageTargetRenderbufferStorageOES(target, image)
}
public
func glEGLImageTargetRenderbufferStorageOES(_ target:GL.Enum, _ image:GL.EGLImageOES)
{
    fp_glEGLImageTargetRenderbufferStorageOES(target, image)
}

var fp_glEGLImageTargetTexture2DOES:@convention(c) (GL.Enum, GL.EGLImageOES) -> () = load_glEGLImageTargetTexture2DOES
func load_glEGLImageTargetTexture2DOES(target:GL.Enum, image:GL.EGLImageOES)
{
    fp_glEGLImageTargetTexture2DOES = unsafeBitCast(get_fp("glEGLImageTargetTexture2DOES", support: [ss291]), to: Swift.type(of: fp_glEGLImageTargetTexture2DOES))
    fp_glEGLImageTargetTexture2DOES(target, image)
}
public
func glEGLImageTargetTexture2DOES(target:GL.Enum, image:GL.EGLImageOES)
{
    fp_glEGLImageTargetTexture2DOES(target, image)
}
public
func glEGLImageTargetTexture2DOES(_ target:GL.Enum, _ image:GL.EGLImageOES)
{
    fp_glEGLImageTargetTexture2DOES(target, image)
}

var fp_glEdgeFlag:@convention(c) (GL.Bool) -> () = load_glEdgeFlag
func load_glEdgeFlag(flag:GL.Bool)
{
    fp_glEdgeFlag = unsafeBitCast(get_fp("glEdgeFlag", support: [ss346, ss369]), to: Swift.type(of: fp_glEdgeFlag))
    fp_glEdgeFlag(flag)
}
public
func glEdgeFlag(flag:GL.Bool)
{
    fp_glEdgeFlag(flag)
}
public
func glEdgeFlag(_ flag:GL.Bool)
{
    fp_glEdgeFlag(flag)
}

var fp_glEdgeFlagFormatNV:@convention(c) (GL.Size) -> () = load_glEdgeFlagFormatNV
func load_glEdgeFlagFormatNV(stride:GL.Size)
{
    fp_glEdgeFlagFormatNV = unsafeBitCast(get_fp("glEdgeFlagFormatNV", support: [ss277]), to: Swift.type(of: fp_glEdgeFlagFormatNV))
    fp_glEdgeFlagFormatNV(stride)
}
public
func glEdgeFlagFormatNV(stride:GL.Size)
{
    fp_glEdgeFlagFormatNV(stride)
}
public
func glEdgeFlagFormatNV(_ stride:GL.Size)
{
    fp_glEdgeFlagFormatNV(stride)
}

var fp_glEdgeFlagPointer:@convention(c) (GL.Size, UnsafeRawPointer?) -> () = load_glEdgeFlagPointer
func load_glEdgeFlagPointer(stride:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glEdgeFlagPointer = unsafeBitCast(get_fp("glEdgeFlagPointer", support: [ss347, ss369]), to: Swift.type(of: fp_glEdgeFlagPointer))
    fp_glEdgeFlagPointer(stride, pointer)
}
public
func glEdgeFlagPointer(stride:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glEdgeFlagPointer(stride, pointer)
}
public
func glEdgeFlagPointer(_ stride:GL.Size, _ pointer:UnsafeRawPointer?)
{
    fp_glEdgeFlagPointer(stride, pointer)
}

var fp_glEdgeFlagPointerEXT:@convention(c) (GL.Size, GL.Size, UnsafePointer<GL.Bool>?) -> () = load_glEdgeFlagPointerEXT
func load_glEdgeFlagPointerEXT(stride:GL.Size, count:GL.Size, pointer:UnsafePointer<GL.Bool>?)
{
    fp_glEdgeFlagPointerEXT = unsafeBitCast(get_fp("glEdgeFlagPointerEXT", support: [ss202]), to: Swift.type(of: fp_glEdgeFlagPointerEXT))
    fp_glEdgeFlagPointerEXT(stride, count, pointer)
}
public
func glEdgeFlagPointerEXT(stride:GL.Size, count:GL.Size, pointer:UnsafePointer<GL.Bool>?)
{
    fp_glEdgeFlagPointerEXT(stride, count, pointer)
}
public
func glEdgeFlagPointerEXT(_ stride:GL.Size, _ count:GL.Size, _ pointer:UnsafePointer<GL.Bool>?)
{
    fp_glEdgeFlagPointerEXT(stride, count, pointer)
}

var fp_glEdgeFlagPointerListIBM:@convention(c) (GL.Int, UnsafeMutablePointer<UnsafeMutablePointer<GL.Bool>?>?, GL.Int) -> () = load_glEdgeFlagPointerListIBM
func load_glEdgeFlagPointerListIBM(stride:GL.Int, pointer:UnsafeMutablePointer<UnsafeMutablePointer<GL.Bool>?>?, ptrstride:GL.Int)
{
    fp_glEdgeFlagPointerListIBM = unsafeBitCast(get_fp("glEdgeFlagPointerListIBM", support: [ss212]), to: Swift.type(of: fp_glEdgeFlagPointerListIBM))
    fp_glEdgeFlagPointerListIBM(stride, pointer, ptrstride)
}
public
func glEdgeFlagPointerListIBM(stride:GL.Int, pointer:UnsafeMutablePointer<UnsafeMutablePointer<GL.Bool>?>?, ptrstride:GL.Int)
{
    fp_glEdgeFlagPointerListIBM(stride, pointer, ptrstride)
}
public
func glEdgeFlagPointerListIBM(_ stride:GL.Int, _ pointer:UnsafeMutablePointer<UnsafeMutablePointer<GL.Bool>?>?, _ ptrstride:GL.Int)
{
    fp_glEdgeFlagPointerListIBM(stride, pointer, ptrstride)
}

var fp_glEdgeFlagv:@convention(c) (UnsafePointer<GL.Bool>?) -> () = load_glEdgeFlagv
func load_glEdgeFlagv(flag:UnsafePointer<GL.Bool>?)
{
    fp_glEdgeFlagv = unsafeBitCast(get_fp("glEdgeFlagv", support: [ss346, ss369]), to: Swift.type(of: fp_glEdgeFlagv))
    fp_glEdgeFlagv(flag)
}
public
func glEdgeFlagv(flag:UnsafePointer<GL.Bool>?)
{
    fp_glEdgeFlagv(flag)
}
public
func glEdgeFlagv(_ flag:UnsafePointer<GL.Bool>?)
{
    fp_glEdgeFlagv(flag)
}

var fp_glElementPointerAPPLE:@convention(c) (GL.Enum, UnsafeRawPointer?) -> () = load_glElementPointerAPPLE
func load_glElementPointerAPPLE(type:GL.Enum, pointer:UnsafeRawPointer?)
{
    fp_glElementPointerAPPLE = unsafeBitCast(get_fp("glElementPointerAPPLE", support: [ss18]), to: Swift.type(of: fp_glElementPointerAPPLE))
    fp_glElementPointerAPPLE(type, pointer)
}
public
func glElementPointerAPPLE(type:GL.Enum, pointer:UnsafeRawPointer?)
{
    fp_glElementPointerAPPLE(type, pointer)
}
public
func glElementPointerAPPLE(_ type:GL.Enum, _ pointer:UnsafeRawPointer?)
{
    fp_glElementPointerAPPLE(type, pointer)
}

var fp_glElementPointerATI:@convention(c) (GL.Enum, UnsafeRawPointer?) -> () = load_glElementPointerATI
func load_glElementPointerATI(type:GL.Enum, pointer:UnsafeRawPointer?)
{
    fp_glElementPointerATI = unsafeBitCast(get_fp("glElementPointerATI", support: [ss116]), to: Swift.type(of: fp_glElementPointerATI))
    fp_glElementPointerATI(type, pointer)
}
public
func glElementPointerATI(type:GL.Enum, pointer:UnsafeRawPointer?)
{
    fp_glElementPointerATI(type, pointer)
}
public
func glElementPointerATI(_ type:GL.Enum, _ pointer:UnsafeRawPointer?)
{
    fp_glElementPointerATI(type, pointer)
}

var fp_glEnable:@convention(c) (GL.Enum) -> () = load_glEnable
func load_glEnable(cap:GL.Enum)
{
    fp_glEnable = unsafeBitCast(get_fp("glEnable", support: [ss346, ss365]), to: Swift.type(of: fp_glEnable))
    fp_glEnable(cap)
}
public
func glEnable(cap:GL.Enum)
{
    fp_glEnable(cap)
}
public
func glEnable(_ cap:GL.Enum)
{
    fp_glEnable(cap)
}

var fp_glEnableClientState:@convention(c) (GL.Enum) -> () = load_glEnableClientState
func load_glEnableClientState(array:GL.Enum)
{
    fp_glEnableClientState = unsafeBitCast(get_fp("glEnableClientState", support: [ss347, ss369, ss364]), to: Swift.type(of: fp_glEnableClientState))
    fp_glEnableClientState(array)
}
public
func glEnableClientState(array:GL.Enum)
{
    fp_glEnableClientState(array)
}
public
func glEnableClientState(_ array:GL.Enum)
{
    fp_glEnableClientState(array)
}

var fp_glEnableClientStateIndexedEXT:@convention(c) (GL.Enum, GL.UInt) -> () = load_glEnableClientStateIndexedEXT
func load_glEnableClientStateIndexedEXT(array:GL.Enum, index:GL.UInt)
{
    fp_glEnableClientStateIndexedEXT = unsafeBitCast(get_fp("glEnableClientStateIndexedEXT", support: [ss143]), to: Swift.type(of: fp_glEnableClientStateIndexedEXT))
    fp_glEnableClientStateIndexedEXT(array, index)
}
public
func glEnableClientStateIndexedEXT(array:GL.Enum, index:GL.UInt)
{
    fp_glEnableClientStateIndexedEXT(array, index)
}
public
func glEnableClientStateIndexedEXT(_ array:GL.Enum, _ index:GL.UInt)
{
    fp_glEnableClientStateIndexedEXT(array, index)
}

var fp_glEnableClientStateiEXT:@convention(c) (GL.Enum, GL.UInt) -> () = load_glEnableClientStateiEXT
func load_glEnableClientStateiEXT(array:GL.Enum, index:GL.UInt)
{
    fp_glEnableClientStateiEXT = unsafeBitCast(get_fp("glEnableClientStateiEXT", support: [ss143]), to: Swift.type(of: fp_glEnableClientStateiEXT))
    fp_glEnableClientStateiEXT(array, index)
}
public
func glEnableClientStateiEXT(array:GL.Enum, index:GL.UInt)
{
    fp_glEnableClientStateiEXT(array, index)
}
public
func glEnableClientStateiEXT(_ array:GL.Enum, _ index:GL.UInt)
{
    fp_glEnableClientStateiEXT(array, index)
}

var fp_glEnableDriverControlQCOM:@convention(c) (GL.UInt) -> () = load_glEnableDriverControlQCOM
func load_glEnableDriverControlQCOM(driverControl:GL.UInt)
{
    fp_glEnableDriverControlQCOM = unsafeBitCast(get_fp("glEnableDriverControlQCOM", support: [ss315]), to: Swift.type(of: fp_glEnableDriverControlQCOM))
    fp_glEnableDriverControlQCOM(driverControl)
}
public
func glEnableDriverControlQCOM(driverControl:GL.UInt)
{
    fp_glEnableDriverControlQCOM(driverControl)
}
public
func glEnableDriverControlQCOM(_ driverControl:GL.UInt)
{
    fp_glEnableDriverControlQCOM(driverControl)
}

var fp_glEnableIndexedEXT:@convention(c) (GL.Enum, GL.UInt) -> () = load_glEnableIndexedEXT
func load_glEnableIndexedEXT(target:GL.Enum, index:GL.UInt)
{
    fp_glEnableIndexedEXT = unsafeBitCast(get_fp("glEnableIndexedEXT", support: [ss143, ss148]), to: Swift.type(of: fp_glEnableIndexedEXT))
    fp_glEnableIndexedEXT(target, index)
}
public
func glEnableIndexedEXT(target:GL.Enum, index:GL.UInt)
{
    fp_glEnableIndexedEXT(target, index)
}
public
func glEnableIndexedEXT(_ target:GL.Enum, _ index:GL.UInt)
{
    fp_glEnableIndexedEXT(target, index)
}

var fp_glEnableVariantClientStateEXT:@convention(c) (GL.UInt) -> () = load_glEnableVariantClientStateEXT
func load_glEnableVariantClientStateEXT(id:GL.UInt)
{
    fp_glEnableVariantClientStateEXT = unsafeBitCast(get_fp("glEnableVariantClientStateEXT", support: [ss204]), to: Swift.type(of: fp_glEnableVariantClientStateEXT))
    fp_glEnableVariantClientStateEXT(id)
}
public
func glEnableVariantClientStateEXT(id:GL.UInt)
{
    fp_glEnableVariantClientStateEXT(id)
}
public
func glEnableVariantClientStateEXT(_ id:GL.UInt)
{
    fp_glEnableVariantClientStateEXT(id)
}

var fp_glEnableVertexArrayAttrib:@convention(c) (GL.UInt, GL.UInt) -> () = load_glEnableVertexArrayAttrib
func load_glEnableVertexArrayAttrib(vaobj:GL.UInt, index:GL.UInt)
{
    fp_glEnableVertexArrayAttrib = unsafeBitCast(get_fp("glEnableVertexArrayAttrib", support: [ss363, ss42]), to: Swift.type(of: fp_glEnableVertexArrayAttrib))
    fp_glEnableVertexArrayAttrib(vaobj, index)
}
public
func glEnableVertexArrayAttrib(vaobj:GL.UInt, index:GL.UInt)
{
    fp_glEnableVertexArrayAttrib(vaobj, index)
}
public
func glEnableVertexArrayAttrib(_ vaobj:GL.UInt, _ index:GL.UInt)
{
    fp_glEnableVertexArrayAttrib(vaobj, index)
}

var fp_glEnableVertexArrayAttribEXT:@convention(c) (GL.UInt, GL.UInt) -> () = load_glEnableVertexArrayAttribEXT
func load_glEnableVertexArrayAttribEXT(vaobj:GL.UInt, index:GL.UInt)
{
    fp_glEnableVertexArrayAttribEXT = unsafeBitCast(get_fp("glEnableVertexArrayAttribEXT", support: [ss143]), to: Swift.type(of: fp_glEnableVertexArrayAttribEXT))
    fp_glEnableVertexArrayAttribEXT(vaobj, index)
}
public
func glEnableVertexArrayAttribEXT(vaobj:GL.UInt, index:GL.UInt)
{
    fp_glEnableVertexArrayAttribEXT(vaobj, index)
}
public
func glEnableVertexArrayAttribEXT(_ vaobj:GL.UInt, _ index:GL.UInt)
{
    fp_glEnableVertexArrayAttribEXT(vaobj, index)
}

var fp_glEnableVertexArrayEXT:@convention(c) (GL.UInt, GL.Enum) -> () = load_glEnableVertexArrayEXT
func load_glEnableVertexArrayEXT(vaobj:GL.UInt, array:GL.Enum)
{
    fp_glEnableVertexArrayEXT = unsafeBitCast(get_fp("glEnableVertexArrayEXT", support: [ss143]), to: Swift.type(of: fp_glEnableVertexArrayEXT))
    fp_glEnableVertexArrayEXT(vaobj, array)
}
public
func glEnableVertexArrayEXT(vaobj:GL.UInt, array:GL.Enum)
{
    fp_glEnableVertexArrayEXT(vaobj, array)
}
public
func glEnableVertexArrayEXT(_ vaobj:GL.UInt, _ array:GL.Enum)
{
    fp_glEnableVertexArrayEXT(vaobj, array)
}

var fp_glEnableVertexAttribAPPLE:@convention(c) (GL.UInt, GL.Enum) -> () = load_glEnableVertexAttribAPPLE
func load_glEnableVertexAttribAPPLE(index:GL.UInt, pname:GL.Enum)
{
    fp_glEnableVertexAttribAPPLE = unsafeBitCast(get_fp("glEnableVertexAttribAPPLE", support: [ss27]), to: Swift.type(of: fp_glEnableVertexAttribAPPLE))
    fp_glEnableVertexAttribAPPLE(index, pname)
}
public
func glEnableVertexAttribAPPLE(index:GL.UInt, pname:GL.Enum)
{
    fp_glEnableVertexAttribAPPLE(index, pname)
}
public
func glEnableVertexAttribAPPLE(_ index:GL.UInt, _ pname:GL.Enum)
{
    fp_glEnableVertexAttribAPPLE(index, pname)
}

var fp_glEnableVertexAttribArray:@convention(c) (GL.UInt) -> () = load_glEnableVertexAttribArray
func load_glEnableVertexAttribArray(index:GL.UInt)
{
    fp_glEnableVertexAttribArray = unsafeBitCast(get_fp("glEnableVertexAttribArray", support: [ss352, ss365]), to: Swift.type(of: fp_glEnableVertexAttribArray))
    fp_glEnableVertexAttribArray(index)
}
public
func glEnableVertexAttribArray(index:GL.UInt)
{
    fp_glEnableVertexAttribArray(index)
}
public
func glEnableVertexAttribArray(_ index:GL.UInt)
{
    fp_glEnableVertexAttribArray(index)
}

var fp_glEnableVertexAttribArrayARB:@convention(c) (GL.UInt) -> () = load_glEnableVertexAttribArrayARB
func load_glEnableVertexAttribArrayARB(index:GL.UInt)
{
    fp_glEnableVertexAttribArrayARB = unsafeBitCast(get_fp("glEnableVertexAttribArrayARB", support: [ss110, ss111]), to: Swift.type(of: fp_glEnableVertexAttribArrayARB))
    fp_glEnableVertexAttribArrayARB(index)
}
public
func glEnableVertexAttribArrayARB(index:GL.UInt)
{
    fp_glEnableVertexAttribArrayARB(index)
}
public
func glEnableVertexAttribArrayARB(_ index:GL.UInt)
{
    fp_glEnableVertexAttribArrayARB(index)
}

var fp_glEnablei:@convention(c) (GL.Enum, GL.UInt) -> () = load_glEnablei
func load_glEnablei(target:GL.Enum, index:GL.UInt)
{
    fp_glEnablei = unsafeBitCast(get_fp("glEnablei", support: [ss354, ss368]), to: Swift.type(of: fp_glEnablei))
    fp_glEnablei(target, index)
}
public
func glEnablei(target:GL.Enum, index:GL.UInt)
{
    fp_glEnablei(target, index)
}
public
func glEnablei(_ target:GL.Enum, _ index:GL.UInt)
{
    fp_glEnablei(target, index)
}

var fp_glEnableiEXT:@convention(c) (GL.Enum, GL.UInt) -> () = load_glEnableiEXT
func load_glEnableiEXT(target:GL.Enum, index:GL.UInt)
{
    fp_glEnableiEXT = unsafeBitCast(get_fp("glEnableiEXT", support: [ss146]), to: Swift.type(of: fp_glEnableiEXT))
    fp_glEnableiEXT(target, index)
}
public
func glEnableiEXT(target:GL.Enum, index:GL.UInt)
{
    fp_glEnableiEXT(target, index)
}
public
func glEnableiEXT(_ target:GL.Enum, _ index:GL.UInt)
{
    fp_glEnableiEXT(target, index)
}

var fp_glEnableiNV:@convention(c) (GL.Enum, GL.UInt) -> () = load_glEnableiNV
func load_glEnableiNV(target:GL.Enum, index:GL.UInt)
{
    fp_glEnableiNV = unsafeBitCast(get_fp("glEnableiNV", support: [ss281]), to: Swift.type(of: fp_glEnableiNV))
    fp_glEnableiNV(target, index)
}
public
func glEnableiNV(target:GL.Enum, index:GL.UInt)
{
    fp_glEnableiNV(target, index)
}
public
func glEnableiNV(_ target:GL.Enum, _ index:GL.UInt)
{
    fp_glEnableiNV(target, index)
}

var fp_glEnableiOES:@convention(c) (GL.Enum, GL.UInt) -> () = load_glEnableiOES
func load_glEnableiOES(target:GL.Enum, index:GL.UInt)
{
    fp_glEnableiOES = unsafeBitCast(get_fp("glEnableiOES", support: [ss288]), to: Swift.type(of: fp_glEnableiOES))
    fp_glEnableiOES(target, index)
}
public
func glEnableiOES(target:GL.Enum, index:GL.UInt)
{
    fp_glEnableiOES(target, index)
}
public
func glEnableiOES(_ target:GL.Enum, _ index:GL.UInt)
{
    fp_glEnableiOES(target, index)
}

var fp_glEnd:@convention(c) () -> () = load_glEnd
func load_glEnd()
{
    fp_glEnd = unsafeBitCast(get_fp("glEnd", support: [ss346, ss369]), to: Swift.type(of: fp_glEnd))
    fp_glEnd()
}
public
func glEnd()
{
    fp_glEnd()
}

var fp_glEndConditionalRender:@convention(c) () -> () = load_glEndConditionalRender
func load_glEndConditionalRender()
{
    fp_glEndConditionalRender = unsafeBitCast(get_fp("glEndConditionalRender", support: [ss354]), to: Swift.type(of: fp_glEndConditionalRender))
    fp_glEndConditionalRender()
}
public
func glEndConditionalRender()
{
    fp_glEndConditionalRender()
}

var fp_glEndConditionalRenderNV:@convention(c) () -> () = load_glEndConditionalRenderNV
func load_glEndConditionalRenderNV()
{
    fp_glEndConditionalRenderNV = unsafeBitCast(get_fp("glEndConditionalRenderNV", support: [ss230]), to: Swift.type(of: fp_glEndConditionalRenderNV))
    fp_glEndConditionalRenderNV()
}
public
func glEndConditionalRenderNV()
{
    fp_glEndConditionalRenderNV()
}

var fp_glEndConditionalRenderNVX:@convention(c) () -> () = load_glEndConditionalRenderNVX
func load_glEndConditionalRenderNVX()
{
    fp_glEndConditionalRenderNVX = unsafeBitCast(get_fp("glEndConditionalRenderNVX", support: [ss282]), to: Swift.type(of: fp_glEndConditionalRenderNVX))
    fp_glEndConditionalRenderNVX()
}
public
func glEndConditionalRenderNVX()
{
    fp_glEndConditionalRenderNVX()
}

var fp_glEndFragmentShaderATI:@convention(c) () -> () = load_glEndFragmentShaderATI
func load_glEndFragmentShaderATI()
{
    fp_glEndFragmentShaderATI = unsafeBitCast(get_fp("glEndFragmentShaderATI", support: [ss118]), to: Swift.type(of: fp_glEndFragmentShaderATI))
    fp_glEndFragmentShaderATI()
}
public
func glEndFragmentShaderATI()
{
    fp_glEndFragmentShaderATI()
}

var fp_glEndList:@convention(c) () -> () = load_glEndList
func load_glEndList()
{
    fp_glEndList = unsafeBitCast(get_fp("glEndList", support: [ss346, ss369]), to: Swift.type(of: fp_glEndList))
    fp_glEndList()
}
public
func glEndList()
{
    fp_glEndList()
}

var fp_glEndOcclusionQueryNV:@convention(c) () -> () = load_glEndOcclusionQueryNV
func load_glEndOcclusionQueryNV()
{
    fp_glEndOcclusionQueryNV = unsafeBitCast(get_fp("glEndOcclusionQueryNV", support: [ss257]), to: Swift.type(of: fp_glEndOcclusionQueryNV))
    fp_glEndOcclusionQueryNV()
}
public
func glEndOcclusionQueryNV()
{
    fp_glEndOcclusionQueryNV()
}

var fp_glEndPerfMonitorAMD:@convention(c) (GL.UInt) -> () = load_glEndPerfMonitorAMD
func load_glEndPerfMonitorAMD(monitor:GL.UInt)
{
    fp_glEndPerfMonitorAMD = unsafeBitCast(get_fp("glEndPerfMonitorAMD", support: [ss8]), to: Swift.type(of: fp_glEndPerfMonitorAMD))
    fp_glEndPerfMonitorAMD(monitor)
}
public
func glEndPerfMonitorAMD(monitor:GL.UInt)
{
    fp_glEndPerfMonitorAMD(monitor)
}
public
func glEndPerfMonitorAMD(_ monitor:GL.UInt)
{
    fp_glEndPerfMonitorAMD(monitor)
}

var fp_glEndPerfQueryINTEL:@convention(c) (GL.UInt) -> () = load_glEndPerfQueryINTEL
func load_glEndPerfQueryINTEL(queryHandle:GL.UInt)
{
    fp_glEndPerfQueryINTEL = unsafeBitCast(get_fp("glEndPerfQueryINTEL", support: [ss219]), to: Swift.type(of: fp_glEndPerfQueryINTEL))
    fp_glEndPerfQueryINTEL(queryHandle)
}
public
func glEndPerfQueryINTEL(queryHandle:GL.UInt)
{
    fp_glEndPerfQueryINTEL(queryHandle)
}
public
func glEndPerfQueryINTEL(_ queryHandle:GL.UInt)
{
    fp_glEndPerfQueryINTEL(queryHandle)
}

var fp_glEndQuery:@convention(c) (GL.Enum) -> () = load_glEndQuery
func load_glEndQuery(target:GL.Enum)
{
    fp_glEndQuery = unsafeBitCast(get_fp("glEndQuery", support: [ss351, ss366]), to: Swift.type(of: fp_glEndQuery))
    fp_glEndQuery(target)
}
public
func glEndQuery(target:GL.Enum)
{
    fp_glEndQuery(target)
}
public
func glEndQuery(_ target:GL.Enum)
{
    fp_glEndQuery(target)
}

var fp_glEndQueryARB:@convention(c) (GL.Enum) -> () = load_glEndQueryARB
func load_glEndQueryARB(target:GL.Enum)
{
    fp_glEndQueryARB = unsafeBitCast(get_fp("glEndQueryARB", support: [ss71]), to: Swift.type(of: fp_glEndQueryARB))
    fp_glEndQueryARB(target)
}
public
func glEndQueryARB(target:GL.Enum)
{
    fp_glEndQueryARB(target)
}
public
func glEndQueryARB(_ target:GL.Enum)
{
    fp_glEndQueryARB(target)
}

var fp_glEndQueryEXT:@convention(c) (GL.Enum) -> () = load_glEndQueryEXT
func load_glEndQueryEXT(target:GL.Enum)
{
    fp_glEndQueryEXT = unsafeBitCast(get_fp("glEndQueryEXT", support: [ss145, ss171]), to: Swift.type(of: fp_glEndQueryEXT))
    fp_glEndQueryEXT(target)
}
public
func glEndQueryEXT(target:GL.Enum)
{
    fp_glEndQueryEXT(target)
}
public
func glEndQueryEXT(_ target:GL.Enum)
{
    fp_glEndQueryEXT(target)
}

var fp_glEndQueryIndexed:@convention(c) (GL.Enum, GL.UInt) -> () = load_glEndQueryIndexed
func load_glEndQueryIndexed(target:GL.Enum, index:GL.UInt)
{
    fp_glEndQueryIndexed = unsafeBitCast(get_fp("glEndQueryIndexed", support: [ss358, ss102]), to: Swift.type(of: fp_glEndQueryIndexed))
    fp_glEndQueryIndexed(target, index)
}
public
func glEndQueryIndexed(target:GL.Enum, index:GL.UInt)
{
    fp_glEndQueryIndexed(target, index)
}
public
func glEndQueryIndexed(_ target:GL.Enum, _ index:GL.UInt)
{
    fp_glEndQueryIndexed(target, index)
}

var fp_glEndTilingQCOM:@convention(c) (GL.Bitfield) -> () = load_glEndTilingQCOM
func load_glEndTilingQCOM(preserveMask:GL.Bitfield)
{
    fp_glEndTilingQCOM = unsafeBitCast(get_fp("glEndTilingQCOM", support: [ss318]), to: Swift.type(of: fp_glEndTilingQCOM))
    fp_glEndTilingQCOM(preserveMask)
}
public
func glEndTilingQCOM(preserveMask:GL.Bitfield)
{
    fp_glEndTilingQCOM(preserveMask)
}
public
func glEndTilingQCOM(_ preserveMask:GL.Bitfield)
{
    fp_glEndTilingQCOM(preserveMask)
}

var fp_glEndTransformFeedback:@convention(c) () -> () = load_glEndTransformFeedback
func load_glEndTransformFeedback()
{
    fp_glEndTransformFeedback = unsafeBitCast(get_fp("glEndTransformFeedback", support: [ss354, ss366]), to: Swift.type(of: fp_glEndTransformFeedback))
    fp_glEndTransformFeedback()
}
public
func glEndTransformFeedback()
{
    fp_glEndTransformFeedback()
}

var fp_glEndTransformFeedbackEXT:@convention(c) () -> () = load_glEndTransformFeedbackEXT
func load_glEndTransformFeedbackEXT()
{
    fp_glEndTransformFeedbackEXT = unsafeBitCast(get_fp("glEndTransformFeedbackEXT", support: [ss201]), to: Swift.type(of: fp_glEndTransformFeedbackEXT))
    fp_glEndTransformFeedbackEXT()
}
public
func glEndTransformFeedbackEXT()
{
    fp_glEndTransformFeedbackEXT()
}

var fp_glEndTransformFeedbackNV:@convention(c) () -> () = load_glEndTransformFeedbackNV
func load_glEndTransformFeedbackNV()
{
    fp_glEndTransformFeedbackNV = unsafeBitCast(get_fp("glEndTransformFeedbackNV", support: [ss272]), to: Swift.type(of: fp_glEndTransformFeedbackNV))
    fp_glEndTransformFeedbackNV()
}
public
func glEndTransformFeedbackNV()
{
    fp_glEndTransformFeedbackNV()
}

var fp_glEndVertexShaderEXT:@convention(c) () -> () = load_glEndVertexShaderEXT
func load_glEndVertexShaderEXT()
{
    fp_glEndVertexShaderEXT = unsafeBitCast(get_fp("glEndVertexShaderEXT", support: [ss204]), to: Swift.type(of: fp_glEndVertexShaderEXT))
    fp_glEndVertexShaderEXT()
}
public
func glEndVertexShaderEXT()
{
    fp_glEndVertexShaderEXT()
}

var fp_glEndVideoCaptureNV:@convention(c) (GL.UInt) -> () = load_glEndVideoCaptureNV
func load_glEndVideoCaptureNV(video_capture_slot:GL.UInt)
{
    fp_glEndVideoCaptureNV = unsafeBitCast(get_fp("glEndVideoCaptureNV", support: [ss280]), to: Swift.type(of: fp_glEndVideoCaptureNV))
    fp_glEndVideoCaptureNV(video_capture_slot)
}
public
func glEndVideoCaptureNV(video_capture_slot:GL.UInt)
{
    fp_glEndVideoCaptureNV(video_capture_slot)
}
public
func glEndVideoCaptureNV(_ video_capture_slot:GL.UInt)
{
    fp_glEndVideoCaptureNV(video_capture_slot)
}

var fp_glEvalCoord1d:@convention(c) (GL.Double) -> () = load_glEvalCoord1d
func load_glEvalCoord1d(u:GL.Double)
{
    fp_glEvalCoord1d = unsafeBitCast(get_fp("glEvalCoord1d", support: [ss346, ss369]), to: Swift.type(of: fp_glEvalCoord1d))
    fp_glEvalCoord1d(u)
}
public
func glEvalCoord1d(u:GL.Double)
{
    fp_glEvalCoord1d(u)
}
public
func glEvalCoord1d(_ u:GL.Double)
{
    fp_glEvalCoord1d(u)
}

var fp_glEvalCoord1dv:@convention(c) (UnsafePointer<GL.Double>?) -> () = load_glEvalCoord1dv
func load_glEvalCoord1dv(u:UnsafePointer<GL.Double>?)
{
    fp_glEvalCoord1dv = unsafeBitCast(get_fp("glEvalCoord1dv", support: [ss346, ss369]), to: Swift.type(of: fp_glEvalCoord1dv))
    fp_glEvalCoord1dv(u)
}
public
func glEvalCoord1dv(u:UnsafePointer<GL.Double>?)
{
    fp_glEvalCoord1dv(u)
}
public
func glEvalCoord1dv(_ u:UnsafePointer<GL.Double>?)
{
    fp_glEvalCoord1dv(u)
}

var fp_glEvalCoord1f:@convention(c) (GL.Float) -> () = load_glEvalCoord1f
func load_glEvalCoord1f(u:GL.Float)
{
    fp_glEvalCoord1f = unsafeBitCast(get_fp("glEvalCoord1f", support: [ss346, ss369]), to: Swift.type(of: fp_glEvalCoord1f))
    fp_glEvalCoord1f(u)
}
public
func glEvalCoord1f(u:GL.Float)
{
    fp_glEvalCoord1f(u)
}
public
func glEvalCoord1f(_ u:GL.Float)
{
    fp_glEvalCoord1f(u)
}

var fp_glEvalCoord1fv:@convention(c) (UnsafePointer<GL.Float>?) -> () = load_glEvalCoord1fv
func load_glEvalCoord1fv(u:UnsafePointer<GL.Float>?)
{
    fp_glEvalCoord1fv = unsafeBitCast(get_fp("glEvalCoord1fv", support: [ss346, ss369]), to: Swift.type(of: fp_glEvalCoord1fv))
    fp_glEvalCoord1fv(u)
}
public
func glEvalCoord1fv(u:UnsafePointer<GL.Float>?)
{
    fp_glEvalCoord1fv(u)
}
public
func glEvalCoord1fv(_ u:UnsafePointer<GL.Float>?)
{
    fp_glEvalCoord1fv(u)
}

var fp_glEvalCoord1xOES:@convention(c) (GL.Fixed) -> () = load_glEvalCoord1xOES
func load_glEvalCoord1xOES(u:GL.Fixed)
{
    fp_glEvalCoord1xOES = unsafeBitCast(get_fp("glEvalCoord1xOES", support: [ss292]), to: Swift.type(of: fp_glEvalCoord1xOES))
    fp_glEvalCoord1xOES(u)
}
public
func glEvalCoord1xOES(u:GL.Fixed)
{
    fp_glEvalCoord1xOES(u)
}
public
func glEvalCoord1xOES(_ u:GL.Fixed)
{
    fp_glEvalCoord1xOES(u)
}

var fp_glEvalCoord1xvOES:@convention(c) (UnsafePointer<GL.Fixed>?) -> () = load_glEvalCoord1xvOES
func load_glEvalCoord1xvOES(coords:UnsafePointer<GL.Fixed>?)
{
    fp_glEvalCoord1xvOES = unsafeBitCast(get_fp("glEvalCoord1xvOES", support: [ss292]), to: Swift.type(of: fp_glEvalCoord1xvOES))
    fp_glEvalCoord1xvOES(coords)
}
public
func glEvalCoord1xvOES(coords:UnsafePointer<GL.Fixed>?)
{
    fp_glEvalCoord1xvOES(coords)
}
public
func glEvalCoord1xvOES(_ coords:UnsafePointer<GL.Fixed>?)
{
    fp_glEvalCoord1xvOES(coords)
}

var fp_glEvalCoord2d:@convention(c) (GL.Double, GL.Double) -> () = load_glEvalCoord2d
func load_glEvalCoord2d(u:GL.Double, v:GL.Double)
{
    fp_glEvalCoord2d = unsafeBitCast(get_fp("glEvalCoord2d", support: [ss346, ss369]), to: Swift.type(of: fp_glEvalCoord2d))
    fp_glEvalCoord2d(u, v)
}
public
func glEvalCoord2d(u:GL.Double, v:GL.Double)
{
    fp_glEvalCoord2d(u, v)
}
public
func glEvalCoord2d(_ u:GL.Double, _ v:GL.Double)
{
    fp_glEvalCoord2d(u, v)
}

var fp_glEvalCoord2dv:@convention(c) (UnsafePointer<GL.Double>?) -> () = load_glEvalCoord2dv
func load_glEvalCoord2dv(u:UnsafePointer<GL.Double>?)
{
    fp_glEvalCoord2dv = unsafeBitCast(get_fp("glEvalCoord2dv", support: [ss346, ss369]), to: Swift.type(of: fp_glEvalCoord2dv))
    fp_glEvalCoord2dv(u)
}
public
func glEvalCoord2dv(u:UnsafePointer<GL.Double>?)
{
    fp_glEvalCoord2dv(u)
}
public
func glEvalCoord2dv(_ u:UnsafePointer<GL.Double>?)
{
    fp_glEvalCoord2dv(u)
}

var fp_glEvalCoord2f:@convention(c) (GL.Float, GL.Float) -> () = load_glEvalCoord2f
func load_glEvalCoord2f(u:GL.Float, v:GL.Float)
{
    fp_glEvalCoord2f = unsafeBitCast(get_fp("glEvalCoord2f", support: [ss346, ss369]), to: Swift.type(of: fp_glEvalCoord2f))
    fp_glEvalCoord2f(u, v)
}
public
func glEvalCoord2f(u:GL.Float, v:GL.Float)
{
    fp_glEvalCoord2f(u, v)
}
public
func glEvalCoord2f(_ u:GL.Float, _ v:GL.Float)
{
    fp_glEvalCoord2f(u, v)
}

var fp_glEvalCoord2fv:@convention(c) (UnsafePointer<GL.Float>?) -> () = load_glEvalCoord2fv
func load_glEvalCoord2fv(u:UnsafePointer<GL.Float>?)
{
    fp_glEvalCoord2fv = unsafeBitCast(get_fp("glEvalCoord2fv", support: [ss346, ss369]), to: Swift.type(of: fp_glEvalCoord2fv))
    fp_glEvalCoord2fv(u)
}
public
func glEvalCoord2fv(u:UnsafePointer<GL.Float>?)
{
    fp_glEvalCoord2fv(u)
}
public
func glEvalCoord2fv(_ u:UnsafePointer<GL.Float>?)
{
    fp_glEvalCoord2fv(u)
}

var fp_glEvalCoord2xOES:@convention(c) (GL.Fixed, GL.Fixed) -> () = load_glEvalCoord2xOES
func load_glEvalCoord2xOES(u:GL.Fixed, v:GL.Fixed)
{
    fp_glEvalCoord2xOES = unsafeBitCast(get_fp("glEvalCoord2xOES", support: [ss292]), to: Swift.type(of: fp_glEvalCoord2xOES))
    fp_glEvalCoord2xOES(u, v)
}
public
func glEvalCoord2xOES(u:GL.Fixed, v:GL.Fixed)
{
    fp_glEvalCoord2xOES(u, v)
}
public
func glEvalCoord2xOES(_ u:GL.Fixed, _ v:GL.Fixed)
{
    fp_glEvalCoord2xOES(u, v)
}

var fp_glEvalCoord2xvOES:@convention(c) (UnsafePointer<GL.Fixed>?) -> () = load_glEvalCoord2xvOES
func load_glEvalCoord2xvOES(coords:UnsafePointer<GL.Fixed>?)
{
    fp_glEvalCoord2xvOES = unsafeBitCast(get_fp("glEvalCoord2xvOES", support: [ss292]), to: Swift.type(of: fp_glEvalCoord2xvOES))
    fp_glEvalCoord2xvOES(coords)
}
public
func glEvalCoord2xvOES(coords:UnsafePointer<GL.Fixed>?)
{
    fp_glEvalCoord2xvOES(coords)
}
public
func glEvalCoord2xvOES(_ coords:UnsafePointer<GL.Fixed>?)
{
    fp_glEvalCoord2xvOES(coords)
}

var fp_glEvalMapsNV:@convention(c) (GL.Enum, GL.Enum) -> () = load_glEvalMapsNV
func load_glEvalMapsNV(target:GL.Enum, mode:GL.Enum)
{
    fp_glEvalMapsNV = unsafeBitCast(get_fp("glEvalMapsNV", support: [ss240]), to: Swift.type(of: fp_glEvalMapsNV))
    fp_glEvalMapsNV(target, mode)
}
public
func glEvalMapsNV(target:GL.Enum, mode:GL.Enum)
{
    fp_glEvalMapsNV(target, mode)
}
public
func glEvalMapsNV(_ target:GL.Enum, _ mode:GL.Enum)
{
    fp_glEvalMapsNV(target, mode)
}

var fp_glEvalMesh1:@convention(c) (GL.Enum, GL.Int, GL.Int) -> () = load_glEvalMesh1
func load_glEvalMesh1(mode:GL.Enum, i1:GL.Int, i2:GL.Int)
{
    fp_glEvalMesh1 = unsafeBitCast(get_fp("glEvalMesh1", support: [ss346, ss369]), to: Swift.type(of: fp_glEvalMesh1))
    fp_glEvalMesh1(mode, i1, i2)
}
public
func glEvalMesh1(mode:GL.Enum, i1:GL.Int, i2:GL.Int)
{
    fp_glEvalMesh1(mode, i1, i2)
}
public
func glEvalMesh1(_ mode:GL.Enum, _ i1:GL.Int, _ i2:GL.Int)
{
    fp_glEvalMesh1(mode, i1, i2)
}

var fp_glEvalMesh2:@convention(c) (GL.Enum, GL.Int, GL.Int, GL.Int, GL.Int) -> () = load_glEvalMesh2
func load_glEvalMesh2(mode:GL.Enum, i1:GL.Int, i2:GL.Int, j1:GL.Int, j2:GL.Int)
{
    fp_glEvalMesh2 = unsafeBitCast(get_fp("glEvalMesh2", support: [ss346, ss369]), to: Swift.type(of: fp_glEvalMesh2))
    fp_glEvalMesh2(mode, i1, i2, j1, j2)
}
public
func glEvalMesh2(mode:GL.Enum, i1:GL.Int, i2:GL.Int, j1:GL.Int, j2:GL.Int)
{
    fp_glEvalMesh2(mode, i1, i2, j1, j2)
}
public
func glEvalMesh2(_ mode:GL.Enum, _ i1:GL.Int, _ i2:GL.Int, _ j1:GL.Int, _ j2:GL.Int)
{
    fp_glEvalMesh2(mode, i1, i2, j1, j2)
}

var fp_glEvalPoint1:@convention(c) (GL.Int) -> () = load_glEvalPoint1
func load_glEvalPoint1(i:GL.Int)
{
    fp_glEvalPoint1 = unsafeBitCast(get_fp("glEvalPoint1", support: [ss346, ss369]), to: Swift.type(of: fp_glEvalPoint1))
    fp_glEvalPoint1(i)
}
public
func glEvalPoint1(i:GL.Int)
{
    fp_glEvalPoint1(i)
}
public
func glEvalPoint1(_ i:GL.Int)
{
    fp_glEvalPoint1(i)
}

var fp_glEvalPoint2:@convention(c) (GL.Int, GL.Int) -> () = load_glEvalPoint2
func load_glEvalPoint2(i:GL.Int, j:GL.Int)
{
    fp_glEvalPoint2 = unsafeBitCast(get_fp("glEvalPoint2", support: [ss346, ss369]), to: Swift.type(of: fp_glEvalPoint2))
    fp_glEvalPoint2(i, j)
}
public
func glEvalPoint2(i:GL.Int, j:GL.Int)
{
    fp_glEvalPoint2(i, j)
}
public
func glEvalPoint2(_ i:GL.Int, _ j:GL.Int)
{
    fp_glEvalPoint2(i, j)
}

var fp_glEvaluateDepthValuesARB:@convention(c) () -> () = load_glEvaluateDepthValuesARB
func load_glEvaluateDepthValuesARB()
{
    fp_glEvaluateDepthValuesARB = unsafeBitCast(get_fp("glEvaluateDepthValuesARB", support: [ss77]), to: Swift.type(of: fp_glEvaluateDepthValuesARB))
    fp_glEvaluateDepthValuesARB()
}
public
func glEvaluateDepthValuesARB()
{
    fp_glEvaluateDepthValuesARB()
}

var fp_glExecuteProgramNV:@convention(c) (GL.Enum, GL.UInt, UnsafePointer<GL.Float>?) -> () = load_glExecuteProgramNV
func load_glExecuteProgramNV(target:GL.Enum, id:GL.UInt, params:UnsafePointer<GL.Float>?)
{
    fp_glExecuteProgramNV = unsafeBitCast(get_fp("glExecuteProgramNV", support: [ss278]), to: Swift.type(of: fp_glExecuteProgramNV))
    fp_glExecuteProgramNV(target, id, params)
}
public
func glExecuteProgramNV(target:GL.Enum, id:GL.UInt, params:UnsafePointer<GL.Float>?)
{
    fp_glExecuteProgramNV(target, id, params)
}
public
func glExecuteProgramNV(_ target:GL.Enum, _ id:GL.UInt, _ params:UnsafePointer<GL.Float>?)
{
    fp_glExecuteProgramNV(target, id, params)
}

var fp_glExtGetBufferPointervQCOM:@convention(c) (GL.Enum, UnsafeMutablePointer<UnsafeMutableRawPointer?>?) -> () = load_glExtGetBufferPointervQCOM
func load_glExtGetBufferPointervQCOM(target:GL.Enum, params:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    fp_glExtGetBufferPointervQCOM = unsafeBitCast(get_fp("glExtGetBufferPointervQCOM", support: [ss316]), to: Swift.type(of: fp_glExtGetBufferPointervQCOM))
    fp_glExtGetBufferPointervQCOM(target, params)
}
public
func glExtGetBufferPointervQCOM(target:GL.Enum, params:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    fp_glExtGetBufferPointervQCOM(target, params)
}
public
func glExtGetBufferPointervQCOM(_ target:GL.Enum, _ params:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    fp_glExtGetBufferPointervQCOM(target, params)
}

var fp_glExtGetBuffersQCOM:@convention(c) (UnsafeMutablePointer<GL.UInt>?, GL.Int, UnsafeMutablePointer<GL.Int>?) -> () = load_glExtGetBuffersQCOM
func load_glExtGetBuffersQCOM(buffers:UnsafeMutablePointer<GL.UInt>?, maxBuffers:GL.Int, numBuffers:UnsafeMutablePointer<GL.Int>?)
{
    fp_glExtGetBuffersQCOM = unsafeBitCast(get_fp("glExtGetBuffersQCOM", support: [ss316]), to: Swift.type(of: fp_glExtGetBuffersQCOM))
    fp_glExtGetBuffersQCOM(buffers, maxBuffers, numBuffers)
}
public
func glExtGetBuffersQCOM(buffers:UnsafeMutablePointer<GL.UInt>?, maxBuffers:GL.Int, numBuffers:UnsafeMutablePointer<GL.Int>?)
{
    fp_glExtGetBuffersQCOM(buffers, maxBuffers, numBuffers)
}
public
func glExtGetBuffersQCOM(_ buffers:UnsafeMutablePointer<GL.UInt>?, _ maxBuffers:GL.Int, _ numBuffers:UnsafeMutablePointer<GL.Int>?)
{
    fp_glExtGetBuffersQCOM(buffers, maxBuffers, numBuffers)
}

var fp_glExtGetFramebuffersQCOM:@convention(c) (UnsafeMutablePointer<GL.UInt>?, GL.Int, UnsafeMutablePointer<GL.Int>?) -> () = load_glExtGetFramebuffersQCOM
func load_glExtGetFramebuffersQCOM(framebuffers:UnsafeMutablePointer<GL.UInt>?, maxFramebuffers:GL.Int, numFramebuffers:UnsafeMutablePointer<GL.Int>?)
{
    fp_glExtGetFramebuffersQCOM = unsafeBitCast(get_fp("glExtGetFramebuffersQCOM", support: [ss316]), to: Swift.type(of: fp_glExtGetFramebuffersQCOM))
    fp_glExtGetFramebuffersQCOM(framebuffers, maxFramebuffers, numFramebuffers)
}
public
func glExtGetFramebuffersQCOM(framebuffers:UnsafeMutablePointer<GL.UInt>?, maxFramebuffers:GL.Int, numFramebuffers:UnsafeMutablePointer<GL.Int>?)
{
    fp_glExtGetFramebuffersQCOM(framebuffers, maxFramebuffers, numFramebuffers)
}
public
func glExtGetFramebuffersQCOM(_ framebuffers:UnsafeMutablePointer<GL.UInt>?, _ maxFramebuffers:GL.Int, _ numFramebuffers:UnsafeMutablePointer<GL.Int>?)
{
    fp_glExtGetFramebuffersQCOM(framebuffers, maxFramebuffers, numFramebuffers)
}

var fp_glExtGetProgramBinarySourceQCOM:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Char>?, UnsafeMutablePointer<GL.Int>?) -> () = load_glExtGetProgramBinarySourceQCOM
func load_glExtGetProgramBinarySourceQCOM(program:GL.UInt, shadertype:GL.Enum, source:UnsafeMutablePointer<GL.Char>?, length:UnsafeMutablePointer<GL.Int>?)
{
    fp_glExtGetProgramBinarySourceQCOM = unsafeBitCast(get_fp("glExtGetProgramBinarySourceQCOM", support: [ss317]), to: Swift.type(of: fp_glExtGetProgramBinarySourceQCOM))
    fp_glExtGetProgramBinarySourceQCOM(program, shadertype, source, length)
}
public
func glExtGetProgramBinarySourceQCOM(program:GL.UInt, shadertype:GL.Enum, source:UnsafeMutablePointer<GL.Char>?, length:UnsafeMutablePointer<GL.Int>?)
{
    fp_glExtGetProgramBinarySourceQCOM(program, shadertype, source, length)
}
public
func glExtGetProgramBinarySourceQCOM(_ program:GL.UInt, _ shadertype:GL.Enum, _ source:UnsafeMutablePointer<GL.Char>?, _ length:UnsafeMutablePointer<GL.Int>?)
{
    fp_glExtGetProgramBinarySourceQCOM(program, shadertype, source, length)
}

var fp_glExtGetProgramsQCOM:@convention(c) (UnsafeMutablePointer<GL.UInt>?, GL.Int, UnsafeMutablePointer<GL.Int>?) -> () = load_glExtGetProgramsQCOM
func load_glExtGetProgramsQCOM(programs:UnsafeMutablePointer<GL.UInt>?, maxPrograms:GL.Int, numPrograms:UnsafeMutablePointer<GL.Int>?)
{
    fp_glExtGetProgramsQCOM = unsafeBitCast(get_fp("glExtGetProgramsQCOM", support: [ss317]), to: Swift.type(of: fp_glExtGetProgramsQCOM))
    fp_glExtGetProgramsQCOM(programs, maxPrograms, numPrograms)
}
public
func glExtGetProgramsQCOM(programs:UnsafeMutablePointer<GL.UInt>?, maxPrograms:GL.Int, numPrograms:UnsafeMutablePointer<GL.Int>?)
{
    fp_glExtGetProgramsQCOM(programs, maxPrograms, numPrograms)
}
public
func glExtGetProgramsQCOM(_ programs:UnsafeMutablePointer<GL.UInt>?, _ maxPrograms:GL.Int, _ numPrograms:UnsafeMutablePointer<GL.Int>?)
{
    fp_glExtGetProgramsQCOM(programs, maxPrograms, numPrograms)
}

var fp_glExtGetRenderbuffersQCOM:@convention(c) (UnsafeMutablePointer<GL.UInt>?, GL.Int, UnsafeMutablePointer<GL.Int>?) -> () = load_glExtGetRenderbuffersQCOM
func load_glExtGetRenderbuffersQCOM(renderbuffers:UnsafeMutablePointer<GL.UInt>?, maxRenderbuffers:GL.Int, numRenderbuffers:UnsafeMutablePointer<GL.Int>?)
{
    fp_glExtGetRenderbuffersQCOM = unsafeBitCast(get_fp("glExtGetRenderbuffersQCOM", support: [ss316]), to: Swift.type(of: fp_glExtGetRenderbuffersQCOM))
    fp_glExtGetRenderbuffersQCOM(renderbuffers, maxRenderbuffers, numRenderbuffers)
}
public
func glExtGetRenderbuffersQCOM(renderbuffers:UnsafeMutablePointer<GL.UInt>?, maxRenderbuffers:GL.Int, numRenderbuffers:UnsafeMutablePointer<GL.Int>?)
{
    fp_glExtGetRenderbuffersQCOM(renderbuffers, maxRenderbuffers, numRenderbuffers)
}
public
func glExtGetRenderbuffersQCOM(_ renderbuffers:UnsafeMutablePointer<GL.UInt>?, _ maxRenderbuffers:GL.Int, _ numRenderbuffers:UnsafeMutablePointer<GL.Int>?)
{
    fp_glExtGetRenderbuffersQCOM(renderbuffers, maxRenderbuffers, numRenderbuffers)
}

var fp_glExtGetShadersQCOM:@convention(c) (UnsafeMutablePointer<GL.UInt>?, GL.Int, UnsafeMutablePointer<GL.Int>?) -> () = load_glExtGetShadersQCOM
func load_glExtGetShadersQCOM(shaders:UnsafeMutablePointer<GL.UInt>?, maxShaders:GL.Int, numShaders:UnsafeMutablePointer<GL.Int>?)
{
    fp_glExtGetShadersQCOM = unsafeBitCast(get_fp("glExtGetShadersQCOM", support: [ss317]), to: Swift.type(of: fp_glExtGetShadersQCOM))
    fp_glExtGetShadersQCOM(shaders, maxShaders, numShaders)
}
public
func glExtGetShadersQCOM(shaders:UnsafeMutablePointer<GL.UInt>?, maxShaders:GL.Int, numShaders:UnsafeMutablePointer<GL.Int>?)
{
    fp_glExtGetShadersQCOM(shaders, maxShaders, numShaders)
}
public
func glExtGetShadersQCOM(_ shaders:UnsafeMutablePointer<GL.UInt>?, _ maxShaders:GL.Int, _ numShaders:UnsafeMutablePointer<GL.Int>?)
{
    fp_glExtGetShadersQCOM(shaders, maxShaders, numShaders)
}

var fp_glExtGetTexLevelParameterivQCOM:@convention(c) (GL.UInt, GL.Enum, GL.Int, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glExtGetTexLevelParameterivQCOM
func load_glExtGetTexLevelParameterivQCOM(texture:GL.UInt, face:GL.Enum, level:GL.Int, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glExtGetTexLevelParameterivQCOM = unsafeBitCast(get_fp("glExtGetTexLevelParameterivQCOM", support: [ss316]), to: Swift.type(of: fp_glExtGetTexLevelParameterivQCOM))
    fp_glExtGetTexLevelParameterivQCOM(texture, face, level, pname, params)
}
public
func glExtGetTexLevelParameterivQCOM(texture:GL.UInt, face:GL.Enum, level:GL.Int, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glExtGetTexLevelParameterivQCOM(texture, face, level, pname, params)
}
public
func glExtGetTexLevelParameterivQCOM(_ texture:GL.UInt, _ face:GL.Enum, _ level:GL.Int, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glExtGetTexLevelParameterivQCOM(texture, face, level, pname, params)
}

var fp_glExtGetTexSubImageQCOM:@convention(c) (GL.Enum, GL.Int, GL.Int, GL.Int, GL.Int, GL.Size, GL.Size, GL.Size, GL.Enum, GL.Enum, UnsafeMutableRawPointer?) -> () = load_glExtGetTexSubImageQCOM
func load_glExtGetTexSubImageQCOM(target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, zoffset:GL.Int, width:GL.Size, height:GL.Size, depth:GL.Size, format:GL.Enum, type:GL.Enum, texels:UnsafeMutableRawPointer?)
{
    fp_glExtGetTexSubImageQCOM = unsafeBitCast(get_fp("glExtGetTexSubImageQCOM", support: [ss316]), to: Swift.type(of: fp_glExtGetTexSubImageQCOM))
    fp_glExtGetTexSubImageQCOM(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, texels)
}
public
func glExtGetTexSubImageQCOM(target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, zoffset:GL.Int, width:GL.Size, height:GL.Size, depth:GL.Size, format:GL.Enum, type:GL.Enum, texels:UnsafeMutableRawPointer?)
{
    fp_glExtGetTexSubImageQCOM(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, texels)
}
public
func glExtGetTexSubImageQCOM(_ target:GL.Enum, _ level:GL.Int, _ xoffset:GL.Int, _ yoffset:GL.Int, _ zoffset:GL.Int, _ width:GL.Size, _ height:GL.Size, _ depth:GL.Size, _ format:GL.Enum, _ type:GL.Enum, _ texels:UnsafeMutableRawPointer?)
{
    fp_glExtGetTexSubImageQCOM(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, texels)
}

var fp_glExtGetTexturesQCOM:@convention(c) (UnsafeMutablePointer<GL.UInt>?, GL.Int, UnsafeMutablePointer<GL.Int>?) -> () = load_glExtGetTexturesQCOM
func load_glExtGetTexturesQCOM(textures:UnsafeMutablePointer<GL.UInt>?, maxTextures:GL.Int, numTextures:UnsafeMutablePointer<GL.Int>?)
{
    fp_glExtGetTexturesQCOM = unsafeBitCast(get_fp("glExtGetTexturesQCOM", support: [ss316]), to: Swift.type(of: fp_glExtGetTexturesQCOM))
    fp_glExtGetTexturesQCOM(textures, maxTextures, numTextures)
}
public
func glExtGetTexturesQCOM(textures:UnsafeMutablePointer<GL.UInt>?, maxTextures:GL.Int, numTextures:UnsafeMutablePointer<GL.Int>?)
{
    fp_glExtGetTexturesQCOM(textures, maxTextures, numTextures)
}
public
func glExtGetTexturesQCOM(_ textures:UnsafeMutablePointer<GL.UInt>?, _ maxTextures:GL.Int, _ numTextures:UnsafeMutablePointer<GL.Int>?)
{
    fp_glExtGetTexturesQCOM(textures, maxTextures, numTextures)
}

var fp_glExtIsProgramBinaryQCOM:@convention(c) (GL.UInt) -> GL.Bool = load_glExtIsProgramBinaryQCOM
func load_glExtIsProgramBinaryQCOM(program:GL.UInt) -> GL.Bool
{
    fp_glExtIsProgramBinaryQCOM = unsafeBitCast(get_fp("glExtIsProgramBinaryQCOM", support: [ss317]), to: Swift.type(of: fp_glExtIsProgramBinaryQCOM))
    return fp_glExtIsProgramBinaryQCOM(program)
}
public
func glExtIsProgramBinaryQCOM(program:GL.UInt) -> GL.Bool
{
    return fp_glExtIsProgramBinaryQCOM(program)
}
public
func glExtIsProgramBinaryQCOM(_ program:GL.UInt) -> GL.Bool
{
    return fp_glExtIsProgramBinaryQCOM(program)
}

var fp_glExtTexObjectStateOverrideiQCOM:@convention(c) (GL.Enum, GL.Enum, GL.Int) -> () = load_glExtTexObjectStateOverrideiQCOM
func load_glExtTexObjectStateOverrideiQCOM(target:GL.Enum, pname:GL.Enum, param:GL.Int)
{
    fp_glExtTexObjectStateOverrideiQCOM = unsafeBitCast(get_fp("glExtTexObjectStateOverrideiQCOM", support: [ss316]), to: Swift.type(of: fp_glExtTexObjectStateOverrideiQCOM))
    fp_glExtTexObjectStateOverrideiQCOM(target, pname, param)
}
public
func glExtTexObjectStateOverrideiQCOM(target:GL.Enum, pname:GL.Enum, param:GL.Int)
{
    fp_glExtTexObjectStateOverrideiQCOM(target, pname, param)
}
public
func glExtTexObjectStateOverrideiQCOM(_ target:GL.Enum, _ pname:GL.Enum, _ param:GL.Int)
{
    fp_glExtTexObjectStateOverrideiQCOM(target, pname, param)
}

var fp_glExtractComponentEXT:@convention(c) (GL.UInt, GL.UInt, GL.UInt) -> () = load_glExtractComponentEXT
func load_glExtractComponentEXT(res:GL.UInt, src:GL.UInt, num:GL.UInt)
{
    fp_glExtractComponentEXT = unsafeBitCast(get_fp("glExtractComponentEXT", support: [ss204]), to: Swift.type(of: fp_glExtractComponentEXT))
    fp_glExtractComponentEXT(res, src, num)
}
public
func glExtractComponentEXT(res:GL.UInt, src:GL.UInt, num:GL.UInt)
{
    fp_glExtractComponentEXT(res, src, num)
}
public
func glExtractComponentEXT(_ res:GL.UInt, _ src:GL.UInt, _ num:GL.UInt)
{
    fp_glExtractComponentEXT(res, src, num)
}

var fp_glFeedbackBuffer:@convention(c) (GL.Size, GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glFeedbackBuffer
func load_glFeedbackBuffer(size:GL.Size, type:GL.Enum, buffer:UnsafeMutablePointer<GL.Float>?)
{
    fp_glFeedbackBuffer = unsafeBitCast(get_fp("glFeedbackBuffer", support: [ss346, ss369]), to: Swift.type(of: fp_glFeedbackBuffer))
    fp_glFeedbackBuffer(size, type, buffer)
}
public
func glFeedbackBuffer(size:GL.Size, type:GL.Enum, buffer:UnsafeMutablePointer<GL.Float>?)
{
    fp_glFeedbackBuffer(size, type, buffer)
}
public
func glFeedbackBuffer(_ size:GL.Size, _ type:GL.Enum, _ buffer:UnsafeMutablePointer<GL.Float>?)
{
    fp_glFeedbackBuffer(size, type, buffer)
}

var fp_glFeedbackBufferxOES:@convention(c) (GL.Size, GL.Enum, UnsafePointer<GL.Fixed>?) -> () = load_glFeedbackBufferxOES
func load_glFeedbackBufferxOES(n:GL.Size, type:GL.Enum, buffer:UnsafePointer<GL.Fixed>?)
{
    fp_glFeedbackBufferxOES = unsafeBitCast(get_fp("glFeedbackBufferxOES", support: [ss292]), to: Swift.type(of: fp_glFeedbackBufferxOES))
    fp_glFeedbackBufferxOES(n, type, buffer)
}
public
func glFeedbackBufferxOES(n:GL.Size, type:GL.Enum, buffer:UnsafePointer<GL.Fixed>?)
{
    fp_glFeedbackBufferxOES(n, type, buffer)
}
public
func glFeedbackBufferxOES(_ n:GL.Size, _ type:GL.Enum, _ buffer:UnsafePointer<GL.Fixed>?)
{
    fp_glFeedbackBufferxOES(n, type, buffer)
}

var fp_glFenceSync:@convention(c) (GL.Enum, GL.Bitfield) -> GL.Sync = load_glFenceSync
func load_glFenceSync(condition:GL.Enum, flags:GL.Bitfield) -> GL.Sync
{
    fp_glFenceSync = unsafeBitCast(get_fp("glFenceSync", support: [ss356, ss366, ss89]), to: Swift.type(of: fp_glFenceSync))
    return fp_glFenceSync(condition, flags)
}
public
func glFenceSync(condition:GL.Enum, flags:GL.Bitfield) -> GL.Sync
{
    return fp_glFenceSync(condition, flags)
}
public
func glFenceSync(_ condition:GL.Enum, _ flags:GL.Bitfield) -> GL.Sync
{
    return fp_glFenceSync(condition, flags)
}

var fp_glFenceSyncAPPLE:@convention(c) (GL.Enum, GL.Bitfield) -> GL.Sync = load_glFenceSyncAPPLE
func load_glFenceSyncAPPLE(condition:GL.Enum, flags:GL.Bitfield) -> GL.Sync
{
    fp_glFenceSyncAPPLE = unsafeBitCast(get_fp("glFenceSyncAPPLE", support: [ss23]), to: Swift.type(of: fp_glFenceSyncAPPLE))
    return fp_glFenceSyncAPPLE(condition, flags)
}
public
func glFenceSyncAPPLE(condition:GL.Enum, flags:GL.Bitfield) -> GL.Sync
{
    return fp_glFenceSyncAPPLE(condition, flags)
}
public
func glFenceSyncAPPLE(_ condition:GL.Enum, _ flags:GL.Bitfield) -> GL.Sync
{
    return fp_glFenceSyncAPPLE(condition, flags)
}

var fp_glFinalCombinerInputNV:@convention(c) (GL.Enum, GL.Enum, GL.Enum, GL.Enum) -> () = load_glFinalCombinerInputNV
func load_glFinalCombinerInputNV(variable:GL.Enum, input:GL.Enum, mapping:GL.Enum, componentUsage:GL.Enum)
{
    fp_glFinalCombinerInputNV = unsafeBitCast(get_fp("glFinalCombinerInputNV", support: [ss266]), to: Swift.type(of: fp_glFinalCombinerInputNV))
    fp_glFinalCombinerInputNV(variable, input, mapping, componentUsage)
}
public
func glFinalCombinerInputNV(variable:GL.Enum, input:GL.Enum, mapping:GL.Enum, componentUsage:GL.Enum)
{
    fp_glFinalCombinerInputNV(variable, input, mapping, componentUsage)
}
public
func glFinalCombinerInputNV(_ variable:GL.Enum, _ input:GL.Enum, _ mapping:GL.Enum, _ componentUsage:GL.Enum)
{
    fp_glFinalCombinerInputNV(variable, input, mapping, componentUsage)
}

var fp_glFinish:@convention(c) () -> () = load_glFinish
func load_glFinish()
{
    fp_glFinish = unsafeBitCast(get_fp("glFinish", support: [ss346, ss365]), to: Swift.type(of: fp_glFinish))
    fp_glFinish()
}
public
func glFinish()
{
    fp_glFinish()
}

var fp_glFinishAsyncSGIX:@convention(c) (UnsafeMutablePointer<GL.UInt>?) -> GL.Int = load_glFinishAsyncSGIX
func load_glFinishAsyncSGIX(markerp:UnsafeMutablePointer<GL.UInt>?) -> GL.Int
{
    fp_glFinishAsyncSGIX = unsafeBitCast(get_fp("glFinishAsyncSGIX", support: [ss329]), to: Swift.type(of: fp_glFinishAsyncSGIX))
    return fp_glFinishAsyncSGIX(markerp)
}
public
func glFinishAsyncSGIX(markerp:UnsafeMutablePointer<GL.UInt>?) -> GL.Int
{
    return fp_glFinishAsyncSGIX(markerp)
}
public
func glFinishAsyncSGIX(_ markerp:UnsafeMutablePointer<GL.UInt>?) -> GL.Int
{
    return fp_glFinishAsyncSGIX(markerp)
}

var fp_glFinishFenceAPPLE:@convention(c) (GL.UInt) -> () = load_glFinishFenceAPPLE
func load_glFinishFenceAPPLE(fence:GL.UInt)
{
    fp_glFinishFenceAPPLE = unsafeBitCast(get_fp("glFinishFenceAPPLE", support: [ss19]), to: Swift.type(of: fp_glFinishFenceAPPLE))
    fp_glFinishFenceAPPLE(fence)
}
public
func glFinishFenceAPPLE(fence:GL.UInt)
{
    fp_glFinishFenceAPPLE(fence)
}
public
func glFinishFenceAPPLE(_ fence:GL.UInt)
{
    fp_glFinishFenceAPPLE(fence)
}

var fp_glFinishFenceNV:@convention(c) (GL.UInt) -> () = load_glFinishFenceNV
func load_glFinishFenceNV(fence:GL.UInt)
{
    fp_glFinishFenceNV = unsafeBitCast(get_fp("glFinishFenceNV", support: [ss242]), to: Swift.type(of: fp_glFinishFenceNV))
    fp_glFinishFenceNV(fence)
}
public
func glFinishFenceNV(fence:GL.UInt)
{
    fp_glFinishFenceNV(fence)
}
public
func glFinishFenceNV(_ fence:GL.UInt)
{
    fp_glFinishFenceNV(fence)
}

var fp_glFinishObjectAPPLE:@convention(c) (GL.Enum, GL.Int) -> () = load_glFinishObjectAPPLE
func load_glFinishObjectAPPLE(object:GL.Enum, name:GL.Int)
{
    fp_glFinishObjectAPPLE = unsafeBitCast(get_fp("glFinishObjectAPPLE", support: [ss19]), to: Swift.type(of: fp_glFinishObjectAPPLE))
    fp_glFinishObjectAPPLE(object, name)
}
public
func glFinishObjectAPPLE(object:GL.Enum, name:GL.Int)
{
    fp_glFinishObjectAPPLE(object, name)
}
public
func glFinishObjectAPPLE(_ object:GL.Enum, _ name:GL.Int)
{
    fp_glFinishObjectAPPLE(object, name)
}

var fp_glFinishTextureSUNX:@convention(c) () -> () = load_glFinishTextureSUNX
func load_glFinishTextureSUNX()
{
    fp_glFinishTextureSUNX = unsafeBitCast(get_fp("glFinishTextureSUNX", support: [ss345]), to: Swift.type(of: fp_glFinishTextureSUNX))
    fp_glFinishTextureSUNX()
}
public
func glFinishTextureSUNX()
{
    fp_glFinishTextureSUNX()
}

var fp_glFlush:@convention(c) () -> () = load_glFlush
func load_glFlush()
{
    fp_glFlush = unsafeBitCast(get_fp("glFlush", support: [ss346, ss365]), to: Swift.type(of: fp_glFlush))
    fp_glFlush()
}
public
func glFlush()
{
    fp_glFlush()
}

var fp_glFlushMappedBufferRange:@convention(c) (GL.Enum, GL.IntPointer, GL.SizePointer) -> () = load_glFlushMappedBufferRange
func load_glFlushMappedBufferRange(target:GL.Enum, offset:GL.IntPointer, length:GL.SizePointer)
{
    fp_glFlushMappedBufferRange = unsafeBitCast(get_fp("glFlushMappedBufferRange", support: [ss354, ss366, ss65]), to: Swift.type(of: fp_glFlushMappedBufferRange))
    fp_glFlushMappedBufferRange(target, offset, length)
}
public
func glFlushMappedBufferRange(target:GL.Enum, offset:GL.IntPointer, length:GL.SizePointer)
{
    fp_glFlushMappedBufferRange(target, offset, length)
}
public
func glFlushMappedBufferRange(_ target:GL.Enum, _ offset:GL.IntPointer, _ length:GL.SizePointer)
{
    fp_glFlushMappedBufferRange(target, offset, length)
}

var fp_glFlushMappedBufferRangeAPPLE:@convention(c) (GL.Enum, GL.IntPointer, GL.SizePointer) -> () = load_glFlushMappedBufferRangeAPPLE
func load_glFlushMappedBufferRangeAPPLE(target:GL.Enum, offset:GL.IntPointer, size:GL.SizePointer)
{
    fp_glFlushMappedBufferRangeAPPLE = unsafeBitCast(get_fp("glFlushMappedBufferRangeAPPLE", support: [ss20]), to: Swift.type(of: fp_glFlushMappedBufferRangeAPPLE))
    fp_glFlushMappedBufferRangeAPPLE(target, offset, size)
}
public
func glFlushMappedBufferRangeAPPLE(target:GL.Enum, offset:GL.IntPointer, size:GL.SizePointer)
{
    fp_glFlushMappedBufferRangeAPPLE(target, offset, size)
}
public
func glFlushMappedBufferRangeAPPLE(_ target:GL.Enum, _ offset:GL.IntPointer, _ size:GL.SizePointer)
{
    fp_glFlushMappedBufferRangeAPPLE(target, offset, size)
}

var fp_glFlushMappedBufferRangeEXT:@convention(c) (GL.Enum, GL.IntPointer, GL.SizePointer) -> () = load_glFlushMappedBufferRangeEXT
func load_glFlushMappedBufferRangeEXT(target:GL.Enum, offset:GL.IntPointer, length:GL.SizePointer)
{
    fp_glFlushMappedBufferRangeEXT = unsafeBitCast(get_fp("glFlushMappedBufferRangeEXT", support: [ss165]), to: Swift.type(of: fp_glFlushMappedBufferRangeEXT))
    fp_glFlushMappedBufferRangeEXT(target, offset, length)
}
public
func glFlushMappedBufferRangeEXT(target:GL.Enum, offset:GL.IntPointer, length:GL.SizePointer)
{
    fp_glFlushMappedBufferRangeEXT(target, offset, length)
}
public
func glFlushMappedBufferRangeEXT(_ target:GL.Enum, _ offset:GL.IntPointer, _ length:GL.SizePointer)
{
    fp_glFlushMappedBufferRangeEXT(target, offset, length)
}

var fp_glFlushMappedNamedBufferRange:@convention(c) (GL.UInt, GL.IntPointer, GL.SizePointer) -> () = load_glFlushMappedNamedBufferRange
func load_glFlushMappedNamedBufferRange(buffer:GL.UInt, offset:GL.IntPointer, length:GL.SizePointer)
{
    fp_glFlushMappedNamedBufferRange = unsafeBitCast(get_fp("glFlushMappedNamedBufferRange", support: [ss363, ss42]), to: Swift.type(of: fp_glFlushMappedNamedBufferRange))
    fp_glFlushMappedNamedBufferRange(buffer, offset, length)
}
public
func glFlushMappedNamedBufferRange(buffer:GL.UInt, offset:GL.IntPointer, length:GL.SizePointer)
{
    fp_glFlushMappedNamedBufferRange(buffer, offset, length)
}
public
func glFlushMappedNamedBufferRange(_ buffer:GL.UInt, _ offset:GL.IntPointer, _ length:GL.SizePointer)
{
    fp_glFlushMappedNamedBufferRange(buffer, offset, length)
}

var fp_glFlushMappedNamedBufferRangeEXT:@convention(c) (GL.UInt, GL.IntPointer, GL.SizePointer) -> () = load_glFlushMappedNamedBufferRangeEXT
func load_glFlushMappedNamedBufferRangeEXT(buffer:GL.UInt, offset:GL.IntPointer, length:GL.SizePointer)
{
    fp_glFlushMappedNamedBufferRangeEXT = unsafeBitCast(get_fp("glFlushMappedNamedBufferRangeEXT", support: [ss143]), to: Swift.type(of: fp_glFlushMappedNamedBufferRangeEXT))
    fp_glFlushMappedNamedBufferRangeEXT(buffer, offset, length)
}
public
func glFlushMappedNamedBufferRangeEXT(buffer:GL.UInt, offset:GL.IntPointer, length:GL.SizePointer)
{
    fp_glFlushMappedNamedBufferRangeEXT(buffer, offset, length)
}
public
func glFlushMappedNamedBufferRangeEXT(_ buffer:GL.UInt, _ offset:GL.IntPointer, _ length:GL.SizePointer)
{
    fp_glFlushMappedNamedBufferRangeEXT(buffer, offset, length)
}

var fp_glFlushPixelDataRangeNV:@convention(c) (GL.Enum) -> () = load_glFlushPixelDataRangeNV
func load_glFlushPixelDataRangeNV(target:GL.Enum)
{
    fp_glFlushPixelDataRangeNV = unsafeBitCast(get_fp("glFlushPixelDataRangeNV", support: [ss260]), to: Swift.type(of: fp_glFlushPixelDataRangeNV))
    fp_glFlushPixelDataRangeNV(target)
}
public
func glFlushPixelDataRangeNV(target:GL.Enum)
{
    fp_glFlushPixelDataRangeNV(target)
}
public
func glFlushPixelDataRangeNV(_ target:GL.Enum)
{
    fp_glFlushPixelDataRangeNV(target)
}

var fp_glFlushRasterSGIX:@convention(c) () -> () = load_glFlushRasterSGIX
func load_glFlushRasterSGIX()
{
    fp_glFlushRasterSGIX = unsafeBitCast(get_fp("glFlushRasterSGIX", support: [ss330]), to: Swift.type(of: fp_glFlushRasterSGIX))
    fp_glFlushRasterSGIX()
}
public
func glFlushRasterSGIX()
{
    fp_glFlushRasterSGIX()
}

var fp_glFlushStaticDataIBM:@convention(c) (GL.Enum) -> () = load_glFlushStaticDataIBM
func load_glFlushStaticDataIBM(target:GL.Enum)
{
    fp_glFlushStaticDataIBM = unsafeBitCast(get_fp("glFlushStaticDataIBM", support: [ss211]), to: Swift.type(of: fp_glFlushStaticDataIBM))
    fp_glFlushStaticDataIBM(target)
}
public
func glFlushStaticDataIBM(target:GL.Enum)
{
    fp_glFlushStaticDataIBM(target)
}
public
func glFlushStaticDataIBM(_ target:GL.Enum)
{
    fp_glFlushStaticDataIBM(target)
}

var fp_glFlushVertexArrayRangeAPPLE:@convention(c) (GL.Size, UnsafeMutableRawPointer?) -> () = load_glFlushVertexArrayRangeAPPLE
func load_glFlushVertexArrayRangeAPPLE(length:GL.Size, pointer:UnsafeMutableRawPointer?)
{
    fp_glFlushVertexArrayRangeAPPLE = unsafeBitCast(get_fp("glFlushVertexArrayRangeAPPLE", support: [ss26]), to: Swift.type(of: fp_glFlushVertexArrayRangeAPPLE))
    fp_glFlushVertexArrayRangeAPPLE(length, pointer)
}
public
func glFlushVertexArrayRangeAPPLE(length:GL.Size, pointer:UnsafeMutableRawPointer?)
{
    fp_glFlushVertexArrayRangeAPPLE(length, pointer)
}
public
func glFlushVertexArrayRangeAPPLE(_ length:GL.Size, _ pointer:UnsafeMutableRawPointer?)
{
    fp_glFlushVertexArrayRangeAPPLE(length, pointer)
}

var fp_glFlushVertexArrayRangeNV:@convention(c) () -> () = load_glFlushVertexArrayRangeNV
func load_glFlushVertexArrayRangeNV()
{
    fp_glFlushVertexArrayRangeNV = unsafeBitCast(get_fp("glFlushVertexArrayRangeNV", support: [ss275]), to: Swift.type(of: fp_glFlushVertexArrayRangeNV))
    fp_glFlushVertexArrayRangeNV()
}
public
func glFlushVertexArrayRangeNV()
{
    fp_glFlushVertexArrayRangeNV()
}

var fp_glFogCoordFormatNV:@convention(c) (GL.Enum, GL.Size) -> () = load_glFogCoordFormatNV
func load_glFogCoordFormatNV(type:GL.Enum, stride:GL.Size)
{
    fp_glFogCoordFormatNV = unsafeBitCast(get_fp("glFogCoordFormatNV", support: [ss277]), to: Swift.type(of: fp_glFogCoordFormatNV))
    fp_glFogCoordFormatNV(type, stride)
}
public
func glFogCoordFormatNV(type:GL.Enum, stride:GL.Size)
{
    fp_glFogCoordFormatNV(type, stride)
}
public
func glFogCoordFormatNV(_ type:GL.Enum, _ stride:GL.Size)
{
    fp_glFogCoordFormatNV(type, stride)
}

var fp_glFogCoordPointer:@convention(c) (GL.Enum, GL.Size, UnsafeRawPointer?) -> () = load_glFogCoordPointer
func load_glFogCoordPointer(type:GL.Enum, stride:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glFogCoordPointer = unsafeBitCast(get_fp("glFogCoordPointer", support: [ss350, ss369]), to: Swift.type(of: fp_glFogCoordPointer))
    fp_glFogCoordPointer(type, stride, pointer)
}
public
func glFogCoordPointer(type:GL.Enum, stride:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glFogCoordPointer(type, stride, pointer)
}
public
func glFogCoordPointer(_ type:GL.Enum, _ stride:GL.Size, _ pointer:UnsafeRawPointer?)
{
    fp_glFogCoordPointer(type, stride, pointer)
}

var fp_glFogCoordPointerEXT:@convention(c) (GL.Enum, GL.Size, UnsafeRawPointer?) -> () = load_glFogCoordPointerEXT
func load_glFogCoordPointerEXT(type:GL.Enum, stride:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glFogCoordPointerEXT = unsafeBitCast(get_fp("glFogCoordPointerEXT", support: [ss152]), to: Swift.type(of: fp_glFogCoordPointerEXT))
    fp_glFogCoordPointerEXT(type, stride, pointer)
}
public
func glFogCoordPointerEXT(type:GL.Enum, stride:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glFogCoordPointerEXT(type, stride, pointer)
}
public
func glFogCoordPointerEXT(_ type:GL.Enum, _ stride:GL.Size, _ pointer:UnsafeRawPointer?)
{
    fp_glFogCoordPointerEXT(type, stride, pointer)
}

var fp_glFogCoordPointerListIBM:@convention(c) (GL.Enum, GL.Int, UnsafeMutablePointer<UnsafeRawPointer?>?, GL.Int) -> () = load_glFogCoordPointerListIBM
func load_glFogCoordPointerListIBM(type:GL.Enum, stride:GL.Int, pointer:UnsafeMutablePointer<UnsafeRawPointer?>?, ptrstride:GL.Int)
{
    fp_glFogCoordPointerListIBM = unsafeBitCast(get_fp("glFogCoordPointerListIBM", support: [ss212]), to: Swift.type(of: fp_glFogCoordPointerListIBM))
    fp_glFogCoordPointerListIBM(type, stride, pointer, ptrstride)
}
public
func glFogCoordPointerListIBM(type:GL.Enum, stride:GL.Int, pointer:UnsafeMutablePointer<UnsafeRawPointer?>?, ptrstride:GL.Int)
{
    fp_glFogCoordPointerListIBM(type, stride, pointer, ptrstride)
}
public
func glFogCoordPointerListIBM(_ type:GL.Enum, _ stride:GL.Int, _ pointer:UnsafeMutablePointer<UnsafeRawPointer?>?, _ ptrstride:GL.Int)
{
    fp_glFogCoordPointerListIBM(type, stride, pointer, ptrstride)
}

var fp_glFogCoordd:@convention(c) (GL.Double) -> () = load_glFogCoordd
func load_glFogCoordd(coord:GL.Double)
{
    fp_glFogCoordd = unsafeBitCast(get_fp("glFogCoordd", support: [ss350, ss369]), to: Swift.type(of: fp_glFogCoordd))
    fp_glFogCoordd(coord)
}
public
func glFogCoordd(coord:GL.Double)
{
    fp_glFogCoordd(coord)
}
public
func glFogCoordd(_ coord:GL.Double)
{
    fp_glFogCoordd(coord)
}

var fp_glFogCoorddEXT:@convention(c) (GL.Double) -> () = load_glFogCoorddEXT
func load_glFogCoorddEXT(coord:GL.Double)
{
    fp_glFogCoorddEXT = unsafeBitCast(get_fp("glFogCoorddEXT", support: [ss152]), to: Swift.type(of: fp_glFogCoorddEXT))
    fp_glFogCoorddEXT(coord)
}
public
func glFogCoorddEXT(coord:GL.Double)
{
    fp_glFogCoorddEXT(coord)
}
public
func glFogCoorddEXT(_ coord:GL.Double)
{
    fp_glFogCoorddEXT(coord)
}

var fp_glFogCoorddv:@convention(c) (UnsafePointer<GL.Double>?) -> () = load_glFogCoorddv
func load_glFogCoorddv(coord:UnsafePointer<GL.Double>?)
{
    fp_glFogCoorddv = unsafeBitCast(get_fp("glFogCoorddv", support: [ss350, ss369]), to: Swift.type(of: fp_glFogCoorddv))
    fp_glFogCoorddv(coord)
}
public
func glFogCoorddv(coord:UnsafePointer<GL.Double>?)
{
    fp_glFogCoorddv(coord)
}
public
func glFogCoorddv(_ coord:UnsafePointer<GL.Double>?)
{
    fp_glFogCoorddv(coord)
}

var fp_glFogCoorddvEXT:@convention(c) (UnsafePointer<GL.Double>?) -> () = load_glFogCoorddvEXT
func load_glFogCoorddvEXT(coord:UnsafePointer<GL.Double>?)
{
    fp_glFogCoorddvEXT = unsafeBitCast(get_fp("glFogCoorddvEXT", support: [ss152]), to: Swift.type(of: fp_glFogCoorddvEXT))
    fp_glFogCoorddvEXT(coord)
}
public
func glFogCoorddvEXT(coord:UnsafePointer<GL.Double>?)
{
    fp_glFogCoorddvEXT(coord)
}
public
func glFogCoorddvEXT(_ coord:UnsafePointer<GL.Double>?)
{
    fp_glFogCoorddvEXT(coord)
}

var fp_glFogCoordf:@convention(c) (GL.Float) -> () = load_glFogCoordf
func load_glFogCoordf(coord:GL.Float)
{
    fp_glFogCoordf = unsafeBitCast(get_fp("glFogCoordf", support: [ss350, ss369]), to: Swift.type(of: fp_glFogCoordf))
    fp_glFogCoordf(coord)
}
public
func glFogCoordf(coord:GL.Float)
{
    fp_glFogCoordf(coord)
}
public
func glFogCoordf(_ coord:GL.Float)
{
    fp_glFogCoordf(coord)
}

var fp_glFogCoordfEXT:@convention(c) (GL.Float) -> () = load_glFogCoordfEXT
func load_glFogCoordfEXT(coord:GL.Float)
{
    fp_glFogCoordfEXT = unsafeBitCast(get_fp("glFogCoordfEXT", support: [ss152]), to: Swift.type(of: fp_glFogCoordfEXT))
    fp_glFogCoordfEXT(coord)
}
public
func glFogCoordfEXT(coord:GL.Float)
{
    fp_glFogCoordfEXT(coord)
}
public
func glFogCoordfEXT(_ coord:GL.Float)
{
    fp_glFogCoordfEXT(coord)
}

var fp_glFogCoordfv:@convention(c) (UnsafePointer<GL.Float>?) -> () = load_glFogCoordfv
func load_glFogCoordfv(coord:UnsafePointer<GL.Float>?)
{
    fp_glFogCoordfv = unsafeBitCast(get_fp("glFogCoordfv", support: [ss350, ss369]), to: Swift.type(of: fp_glFogCoordfv))
    fp_glFogCoordfv(coord)
}
public
func glFogCoordfv(coord:UnsafePointer<GL.Float>?)
{
    fp_glFogCoordfv(coord)
}
public
func glFogCoordfv(_ coord:UnsafePointer<GL.Float>?)
{
    fp_glFogCoordfv(coord)
}

var fp_glFogCoordfvEXT:@convention(c) (UnsafePointer<GL.Float>?) -> () = load_glFogCoordfvEXT
func load_glFogCoordfvEXT(coord:UnsafePointer<GL.Float>?)
{
    fp_glFogCoordfvEXT = unsafeBitCast(get_fp("glFogCoordfvEXT", support: [ss152]), to: Swift.type(of: fp_glFogCoordfvEXT))
    fp_glFogCoordfvEXT(coord)
}
public
func glFogCoordfvEXT(coord:UnsafePointer<GL.Float>?)
{
    fp_glFogCoordfvEXT(coord)
}
public
func glFogCoordfvEXT(_ coord:UnsafePointer<GL.Float>?)
{
    fp_glFogCoordfvEXT(coord)
}

var fp_glFogCoordhNV:@convention(c) (GL.HalfNV) -> () = load_glFogCoordhNV
func load_glFogCoordhNV(fog:GL.HalfNV)
{
    fp_glFogCoordhNV = unsafeBitCast(get_fp("glFogCoordhNV", support: [ss253]), to: Swift.type(of: fp_glFogCoordhNV))
    fp_glFogCoordhNV(fog)
}
public
func glFogCoordhNV(fog:GL.HalfNV)
{
    fp_glFogCoordhNV(fog)
}
public
func glFogCoordhNV(_ fog:GL.HalfNV)
{
    fp_glFogCoordhNV(fog)
}

var fp_glFogCoordhvNV:@convention(c) (UnsafePointer<GL.HalfNV>?) -> () = load_glFogCoordhvNV
func load_glFogCoordhvNV(fog:UnsafePointer<GL.HalfNV>?)
{
    fp_glFogCoordhvNV = unsafeBitCast(get_fp("glFogCoordhvNV", support: [ss253]), to: Swift.type(of: fp_glFogCoordhvNV))
    fp_glFogCoordhvNV(fog)
}
public
func glFogCoordhvNV(fog:UnsafePointer<GL.HalfNV>?)
{
    fp_glFogCoordhvNV(fog)
}
public
func glFogCoordhvNV(_ fog:UnsafePointer<GL.HalfNV>?)
{
    fp_glFogCoordhvNV(fog)
}

var fp_glFogFuncSGIS:@convention(c) (GL.Size, UnsafePointer<GL.Float>?) -> () = load_glFogFuncSGIS
func load_glFogFuncSGIS(n:GL.Size, points:UnsafePointer<GL.Float>?)
{
    fp_glFogFuncSGIS = unsafeBitCast(get_fp("glFogFuncSGIS", support: [ss321]), to: Swift.type(of: fp_glFogFuncSGIS))
    fp_glFogFuncSGIS(n, points)
}
public
func glFogFuncSGIS(n:GL.Size, points:UnsafePointer<GL.Float>?)
{
    fp_glFogFuncSGIS(n, points)
}
public
func glFogFuncSGIS(_ n:GL.Size, _ points:UnsafePointer<GL.Float>?)
{
    fp_glFogFuncSGIS(n, points)
}

var fp_glFogf:@convention(c) (GL.Enum, GL.Float) -> () = load_glFogf
func load_glFogf(pname:GL.Enum, param:GL.Float)
{
    fp_glFogf = unsafeBitCast(get_fp("glFogf", support: [ss346, ss369, ss364]), to: Swift.type(of: fp_glFogf))
    fp_glFogf(pname, param)
}
public
func glFogf(pname:GL.Enum, param:GL.Float)
{
    fp_glFogf(pname, param)
}
public
func glFogf(_ pname:GL.Enum, _ param:GL.Float)
{
    fp_glFogf(pname, param)
}

var fp_glFogfv:@convention(c) (GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glFogfv
func load_glFogfv(pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glFogfv = unsafeBitCast(get_fp("glFogfv", support: [ss346, ss369, ss364]), to: Swift.type(of: fp_glFogfv))
    fp_glFogfv(pname, params)
}
public
func glFogfv(pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glFogfv(pname, params)
}
public
func glFogfv(_ pname:GL.Enum, _ params:UnsafePointer<GL.Float>?)
{
    fp_glFogfv(pname, params)
}

var fp_glFogi:@convention(c) (GL.Enum, GL.Int) -> () = load_glFogi
func load_glFogi(pname:GL.Enum, param:GL.Int)
{
    fp_glFogi = unsafeBitCast(get_fp("glFogi", support: [ss346, ss369]), to: Swift.type(of: fp_glFogi))
    fp_glFogi(pname, param)
}
public
func glFogi(pname:GL.Enum, param:GL.Int)
{
    fp_glFogi(pname, param)
}
public
func glFogi(_ pname:GL.Enum, _ param:GL.Int)
{
    fp_glFogi(pname, param)
}

var fp_glFogiv:@convention(c) (GL.Enum, UnsafePointer<GL.Int>?) -> () = load_glFogiv
func load_glFogiv(pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glFogiv = unsafeBitCast(get_fp("glFogiv", support: [ss346, ss369]), to: Swift.type(of: fp_glFogiv))
    fp_glFogiv(pname, params)
}
public
func glFogiv(pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glFogiv(pname, params)
}
public
func glFogiv(_ pname:GL.Enum, _ params:UnsafePointer<GL.Int>?)
{
    fp_glFogiv(pname, params)
}

var fp_glFogx:@convention(c) (GL.Enum, GL.Fixed) -> () = load_glFogx
func load_glFogx(pname:GL.Enum, param:GL.Fixed)
{
    fp_glFogx = unsafeBitCast(get_fp("glFogx", support: [ss364]), to: Swift.type(of: fp_glFogx))
    fp_glFogx(pname, param)
}
public
func glFogx(pname:GL.Enum, param:GL.Fixed)
{
    fp_glFogx(pname, param)
}
public
func glFogx(_ pname:GL.Enum, _ param:GL.Fixed)
{
    fp_glFogx(pname, param)
}

var fp_glFogxOES:@convention(c) (GL.Enum, GL.Fixed) -> () = load_glFogxOES
func load_glFogxOES(pname:GL.Enum, param:GL.Fixed)
{
    fp_glFogxOES = unsafeBitCast(get_fp("glFogxOES", support: [ss292]), to: Swift.type(of: fp_glFogxOES))
    fp_glFogxOES(pname, param)
}
public
func glFogxOES(pname:GL.Enum, param:GL.Fixed)
{
    fp_glFogxOES(pname, param)
}
public
func glFogxOES(_ pname:GL.Enum, _ param:GL.Fixed)
{
    fp_glFogxOES(pname, param)
}

var fp_glFogxv:@convention(c) (GL.Enum, UnsafePointer<GL.Fixed>?) -> () = load_glFogxv
func load_glFogxv(pname:GL.Enum, param:UnsafePointer<GL.Fixed>?)
{
    fp_glFogxv = unsafeBitCast(get_fp("glFogxv", support: [ss364]), to: Swift.type(of: fp_glFogxv))
    fp_glFogxv(pname, param)
}
public
func glFogxv(pname:GL.Enum, param:UnsafePointer<GL.Fixed>?)
{
    fp_glFogxv(pname, param)
}
public
func glFogxv(_ pname:GL.Enum, _ param:UnsafePointer<GL.Fixed>?)
{
    fp_glFogxv(pname, param)
}

var fp_glFogxvOES:@convention(c) (GL.Enum, UnsafePointer<GL.Fixed>?) -> () = load_glFogxvOES
func load_glFogxvOES(pname:GL.Enum, param:UnsafePointer<GL.Fixed>?)
{
    fp_glFogxvOES = unsafeBitCast(get_fp("glFogxvOES", support: [ss292]), to: Swift.type(of: fp_glFogxvOES))
    fp_glFogxvOES(pname, param)
}
public
func glFogxvOES(pname:GL.Enum, param:UnsafePointer<GL.Fixed>?)
{
    fp_glFogxvOES(pname, param)
}
public
func glFogxvOES(_ pname:GL.Enum, _ param:UnsafePointer<GL.Fixed>?)
{
    fp_glFogxvOES(pname, param)
}

var fp_glFragmentColorMaterialSGIX:@convention(c) (GL.Enum, GL.Enum) -> () = load_glFragmentColorMaterialSGIX
func load_glFragmentColorMaterialSGIX(face:GL.Enum, mode:GL.Enum)
{
    fp_glFragmentColorMaterialSGIX = unsafeBitCast(get_fp("glFragmentColorMaterialSGIX", support: [ss331]), to: Swift.type(of: fp_glFragmentColorMaterialSGIX))
    fp_glFragmentColorMaterialSGIX(face, mode)
}
public
func glFragmentColorMaterialSGIX(face:GL.Enum, mode:GL.Enum)
{
    fp_glFragmentColorMaterialSGIX(face, mode)
}
public
func glFragmentColorMaterialSGIX(_ face:GL.Enum, _ mode:GL.Enum)
{
    fp_glFragmentColorMaterialSGIX(face, mode)
}

var fp_glFragmentCoverageColorNV:@convention(c) (GL.UInt) -> () = load_glFragmentCoverageColorNV
func load_glFragmentCoverageColorNV(color:GL.UInt)
{
    fp_glFragmentCoverageColorNV = unsafeBitCast(get_fp("glFragmentCoverageColorNV", support: [ss243]), to: Swift.type(of: fp_glFragmentCoverageColorNV))
    fp_glFragmentCoverageColorNV(color)
}
public
func glFragmentCoverageColorNV(color:GL.UInt)
{
    fp_glFragmentCoverageColorNV(color)
}
public
func glFragmentCoverageColorNV(_ color:GL.UInt)
{
    fp_glFragmentCoverageColorNV(color)
}

var fp_glFragmentLightModelfSGIX:@convention(c) (GL.Enum, GL.Float) -> () = load_glFragmentLightModelfSGIX
func load_glFragmentLightModelfSGIX(pname:GL.Enum, param:GL.Float)
{
    fp_glFragmentLightModelfSGIX = unsafeBitCast(get_fp("glFragmentLightModelfSGIX", support: [ss331]), to: Swift.type(of: fp_glFragmentLightModelfSGIX))
    fp_glFragmentLightModelfSGIX(pname, param)
}
public
func glFragmentLightModelfSGIX(pname:GL.Enum, param:GL.Float)
{
    fp_glFragmentLightModelfSGIX(pname, param)
}
public
func glFragmentLightModelfSGIX(_ pname:GL.Enum, _ param:GL.Float)
{
    fp_glFragmentLightModelfSGIX(pname, param)
}

var fp_glFragmentLightModelfvSGIX:@convention(c) (GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glFragmentLightModelfvSGIX
func load_glFragmentLightModelfvSGIX(pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glFragmentLightModelfvSGIX = unsafeBitCast(get_fp("glFragmentLightModelfvSGIX", support: [ss331]), to: Swift.type(of: fp_glFragmentLightModelfvSGIX))
    fp_glFragmentLightModelfvSGIX(pname, params)
}
public
func glFragmentLightModelfvSGIX(pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glFragmentLightModelfvSGIX(pname, params)
}
public
func glFragmentLightModelfvSGIX(_ pname:GL.Enum, _ params:UnsafePointer<GL.Float>?)
{
    fp_glFragmentLightModelfvSGIX(pname, params)
}

var fp_glFragmentLightModeliSGIX:@convention(c) (GL.Enum, GL.Int) -> () = load_glFragmentLightModeliSGIX
func load_glFragmentLightModeliSGIX(pname:GL.Enum, param:GL.Int)
{
    fp_glFragmentLightModeliSGIX = unsafeBitCast(get_fp("glFragmentLightModeliSGIX", support: [ss331]), to: Swift.type(of: fp_glFragmentLightModeliSGIX))
    fp_glFragmentLightModeliSGIX(pname, param)
}
public
func glFragmentLightModeliSGIX(pname:GL.Enum, param:GL.Int)
{
    fp_glFragmentLightModeliSGIX(pname, param)
}
public
func glFragmentLightModeliSGIX(_ pname:GL.Enum, _ param:GL.Int)
{
    fp_glFragmentLightModeliSGIX(pname, param)
}

var fp_glFragmentLightModelivSGIX:@convention(c) (GL.Enum, UnsafePointer<GL.Int>?) -> () = load_glFragmentLightModelivSGIX
func load_glFragmentLightModelivSGIX(pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glFragmentLightModelivSGIX = unsafeBitCast(get_fp("glFragmentLightModelivSGIX", support: [ss331]), to: Swift.type(of: fp_glFragmentLightModelivSGIX))
    fp_glFragmentLightModelivSGIX(pname, params)
}
public
func glFragmentLightModelivSGIX(pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glFragmentLightModelivSGIX(pname, params)
}
public
func glFragmentLightModelivSGIX(_ pname:GL.Enum, _ params:UnsafePointer<GL.Int>?)
{
    fp_glFragmentLightModelivSGIX(pname, params)
}

var fp_glFragmentLightfSGIX:@convention(c) (GL.Enum, GL.Enum, GL.Float) -> () = load_glFragmentLightfSGIX
func load_glFragmentLightfSGIX(light:GL.Enum, pname:GL.Enum, param:GL.Float)
{
    fp_glFragmentLightfSGIX = unsafeBitCast(get_fp("glFragmentLightfSGIX", support: [ss331]), to: Swift.type(of: fp_glFragmentLightfSGIX))
    fp_glFragmentLightfSGIX(light, pname, param)
}
public
func glFragmentLightfSGIX(light:GL.Enum, pname:GL.Enum, param:GL.Float)
{
    fp_glFragmentLightfSGIX(light, pname, param)
}
public
func glFragmentLightfSGIX(_ light:GL.Enum, _ pname:GL.Enum, _ param:GL.Float)
{
    fp_glFragmentLightfSGIX(light, pname, param)
}

var fp_glFragmentLightfvSGIX:@convention(c) (GL.Enum, GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glFragmentLightfvSGIX
func load_glFragmentLightfvSGIX(light:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glFragmentLightfvSGIX = unsafeBitCast(get_fp("glFragmentLightfvSGIX", support: [ss331]), to: Swift.type(of: fp_glFragmentLightfvSGIX))
    fp_glFragmentLightfvSGIX(light, pname, params)
}
public
func glFragmentLightfvSGIX(light:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glFragmentLightfvSGIX(light, pname, params)
}
public
func glFragmentLightfvSGIX(_ light:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.Float>?)
{
    fp_glFragmentLightfvSGIX(light, pname, params)
}

var fp_glFragmentLightiSGIX:@convention(c) (GL.Enum, GL.Enum, GL.Int) -> () = load_glFragmentLightiSGIX
func load_glFragmentLightiSGIX(light:GL.Enum, pname:GL.Enum, param:GL.Int)
{
    fp_glFragmentLightiSGIX = unsafeBitCast(get_fp("glFragmentLightiSGIX", support: [ss331]), to: Swift.type(of: fp_glFragmentLightiSGIX))
    fp_glFragmentLightiSGIX(light, pname, param)
}
public
func glFragmentLightiSGIX(light:GL.Enum, pname:GL.Enum, param:GL.Int)
{
    fp_glFragmentLightiSGIX(light, pname, param)
}
public
func glFragmentLightiSGIX(_ light:GL.Enum, _ pname:GL.Enum, _ param:GL.Int)
{
    fp_glFragmentLightiSGIX(light, pname, param)
}

var fp_glFragmentLightivSGIX:@convention(c) (GL.Enum, GL.Enum, UnsafePointer<GL.Int>?) -> () = load_glFragmentLightivSGIX
func load_glFragmentLightivSGIX(light:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glFragmentLightivSGIX = unsafeBitCast(get_fp("glFragmentLightivSGIX", support: [ss331]), to: Swift.type(of: fp_glFragmentLightivSGIX))
    fp_glFragmentLightivSGIX(light, pname, params)
}
public
func glFragmentLightivSGIX(light:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glFragmentLightivSGIX(light, pname, params)
}
public
func glFragmentLightivSGIX(_ light:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.Int>?)
{
    fp_glFragmentLightivSGIX(light, pname, params)
}

var fp_glFragmentMaterialfSGIX:@convention(c) (GL.Enum, GL.Enum, GL.Float) -> () = load_glFragmentMaterialfSGIX
func load_glFragmentMaterialfSGIX(face:GL.Enum, pname:GL.Enum, param:GL.Float)
{
    fp_glFragmentMaterialfSGIX = unsafeBitCast(get_fp("glFragmentMaterialfSGIX", support: [ss331]), to: Swift.type(of: fp_glFragmentMaterialfSGIX))
    fp_glFragmentMaterialfSGIX(face, pname, param)
}
public
func glFragmentMaterialfSGIX(face:GL.Enum, pname:GL.Enum, param:GL.Float)
{
    fp_glFragmentMaterialfSGIX(face, pname, param)
}
public
func glFragmentMaterialfSGIX(_ face:GL.Enum, _ pname:GL.Enum, _ param:GL.Float)
{
    fp_glFragmentMaterialfSGIX(face, pname, param)
}

var fp_glFragmentMaterialfvSGIX:@convention(c) (GL.Enum, GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glFragmentMaterialfvSGIX
func load_glFragmentMaterialfvSGIX(face:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glFragmentMaterialfvSGIX = unsafeBitCast(get_fp("glFragmentMaterialfvSGIX", support: [ss331]), to: Swift.type(of: fp_glFragmentMaterialfvSGIX))
    fp_glFragmentMaterialfvSGIX(face, pname, params)
}
public
func glFragmentMaterialfvSGIX(face:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glFragmentMaterialfvSGIX(face, pname, params)
}
public
func glFragmentMaterialfvSGIX(_ face:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.Float>?)
{
    fp_glFragmentMaterialfvSGIX(face, pname, params)
}

var fp_glFragmentMaterialiSGIX:@convention(c) (GL.Enum, GL.Enum, GL.Int) -> () = load_glFragmentMaterialiSGIX
func load_glFragmentMaterialiSGIX(face:GL.Enum, pname:GL.Enum, param:GL.Int)
{
    fp_glFragmentMaterialiSGIX = unsafeBitCast(get_fp("glFragmentMaterialiSGIX", support: [ss331]), to: Swift.type(of: fp_glFragmentMaterialiSGIX))
    fp_glFragmentMaterialiSGIX(face, pname, param)
}
public
func glFragmentMaterialiSGIX(face:GL.Enum, pname:GL.Enum, param:GL.Int)
{
    fp_glFragmentMaterialiSGIX(face, pname, param)
}
public
func glFragmentMaterialiSGIX(_ face:GL.Enum, _ pname:GL.Enum, _ param:GL.Int)
{
    fp_glFragmentMaterialiSGIX(face, pname, param)
}

var fp_glFragmentMaterialivSGIX:@convention(c) (GL.Enum, GL.Enum, UnsafePointer<GL.Int>?) -> () = load_glFragmentMaterialivSGIX
func load_glFragmentMaterialivSGIX(face:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glFragmentMaterialivSGIX = unsafeBitCast(get_fp("glFragmentMaterialivSGIX", support: [ss331]), to: Swift.type(of: fp_glFragmentMaterialivSGIX))
    fp_glFragmentMaterialivSGIX(face, pname, params)
}
public
func glFragmentMaterialivSGIX(face:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glFragmentMaterialivSGIX(face, pname, params)
}
public
func glFragmentMaterialivSGIX(_ face:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.Int>?)
{
    fp_glFragmentMaterialivSGIX(face, pname, params)
}

var fp_glFrameTerminatorGREMEDY:@convention(c) () -> () = load_glFrameTerminatorGREMEDY
func load_glFrameTerminatorGREMEDY()
{
    fp_glFrameTerminatorGREMEDY = unsafeBitCast(get_fp("glFrameTerminatorGREMEDY", support: [ss207]), to: Swift.type(of: fp_glFrameTerminatorGREMEDY))
    fp_glFrameTerminatorGREMEDY()
}
public
func glFrameTerminatorGREMEDY()
{
    fp_glFrameTerminatorGREMEDY()
}

var fp_glFrameZoomSGIX:@convention(c) (GL.Int) -> () = load_glFrameZoomSGIX
func load_glFrameZoomSGIX(factor:GL.Int)
{
    fp_glFrameZoomSGIX = unsafeBitCast(get_fp("glFrameZoomSGIX", support: [ss332]), to: Swift.type(of: fp_glFrameZoomSGIX))
    fp_glFrameZoomSGIX(factor)
}
public
func glFrameZoomSGIX(factor:GL.Int)
{
    fp_glFrameZoomSGIX(factor)
}
public
func glFrameZoomSGIX(_ factor:GL.Int)
{
    fp_glFrameZoomSGIX(factor)
}

var fp_glFramebufferDrawBufferEXT:@convention(c) (GL.UInt, GL.Enum) -> () = load_glFramebufferDrawBufferEXT
func load_glFramebufferDrawBufferEXT(framebuffer:GL.UInt, mode:GL.Enum)
{
    fp_glFramebufferDrawBufferEXT = unsafeBitCast(get_fp("glFramebufferDrawBufferEXT", support: [ss143]), to: Swift.type(of: fp_glFramebufferDrawBufferEXT))
    fp_glFramebufferDrawBufferEXT(framebuffer, mode)
}
public
func glFramebufferDrawBufferEXT(framebuffer:GL.UInt, mode:GL.Enum)
{
    fp_glFramebufferDrawBufferEXT(framebuffer, mode)
}
public
func glFramebufferDrawBufferEXT(_ framebuffer:GL.UInt, _ mode:GL.Enum)
{
    fp_glFramebufferDrawBufferEXT(framebuffer, mode)
}

var fp_glFramebufferDrawBuffersEXT:@convention(c) (GL.UInt, GL.Size, UnsafePointer<GL.Enum>?) -> () = load_glFramebufferDrawBuffersEXT
func load_glFramebufferDrawBuffersEXT(framebuffer:GL.UInt, n:GL.Size, bufs:UnsafePointer<GL.Enum>?)
{
    fp_glFramebufferDrawBuffersEXT = unsafeBitCast(get_fp("glFramebufferDrawBuffersEXT", support: [ss143]), to: Swift.type(of: fp_glFramebufferDrawBuffersEXT))
    fp_glFramebufferDrawBuffersEXT(framebuffer, n, bufs)
}
public
func glFramebufferDrawBuffersEXT(framebuffer:GL.UInt, n:GL.Size, bufs:UnsafePointer<GL.Enum>?)
{
    fp_glFramebufferDrawBuffersEXT(framebuffer, n, bufs)
}
public
func glFramebufferDrawBuffersEXT(_ framebuffer:GL.UInt, _ n:GL.Size, _ bufs:UnsafePointer<GL.Enum>?)
{
    fp_glFramebufferDrawBuffersEXT(framebuffer, n, bufs)
}

var fp_glFramebufferParameteri:@convention(c) (GL.Enum, GL.Enum, GL.Int) -> () = load_glFramebufferParameteri
func load_glFramebufferParameteri(target:GL.Enum, pname:GL.Enum, param:GL.Int)
{
    fp_glFramebufferParameteri = unsafeBitCast(get_fp("glFramebufferParameteri", support: [ss361, ss367, ss52]), to: Swift.type(of: fp_glFramebufferParameteri))
    fp_glFramebufferParameteri(target, pname, param)
}
public
func glFramebufferParameteri(target:GL.Enum, pname:GL.Enum, param:GL.Int)
{
    fp_glFramebufferParameteri(target, pname, param)
}
public
func glFramebufferParameteri(_ target:GL.Enum, _ pname:GL.Enum, _ param:GL.Int)
{
    fp_glFramebufferParameteri(target, pname, param)
}

var fp_glFramebufferReadBufferEXT:@convention(c) (GL.UInt, GL.Enum) -> () = load_glFramebufferReadBufferEXT
func load_glFramebufferReadBufferEXT(framebuffer:GL.UInt, mode:GL.Enum)
{
    fp_glFramebufferReadBufferEXT = unsafeBitCast(get_fp("glFramebufferReadBufferEXT", support: [ss143]), to: Swift.type(of: fp_glFramebufferReadBufferEXT))
    fp_glFramebufferReadBufferEXT(framebuffer, mode)
}
public
func glFramebufferReadBufferEXT(framebuffer:GL.UInt, mode:GL.Enum)
{
    fp_glFramebufferReadBufferEXT(framebuffer, mode)
}
public
func glFramebufferReadBufferEXT(_ framebuffer:GL.UInt, _ mode:GL.Enum)
{
    fp_glFramebufferReadBufferEXT(framebuffer, mode)
}

var fp_glFramebufferRenderbuffer:@convention(c) (GL.Enum, GL.Enum, GL.Enum, GL.UInt) -> () = load_glFramebufferRenderbuffer
func load_glFramebufferRenderbuffer(target:GL.Enum, attachment:GL.Enum, renderbuffertarget:GL.Enum, renderbuffer:GL.UInt)
{
    fp_glFramebufferRenderbuffer = unsafeBitCast(get_fp("glFramebufferRenderbuffer", support: [ss354, ss365, ss53]), to: Swift.type(of: fp_glFramebufferRenderbuffer))
    fp_glFramebufferRenderbuffer(target, attachment, renderbuffertarget, renderbuffer)
}
public
func glFramebufferRenderbuffer(target:GL.Enum, attachment:GL.Enum, renderbuffertarget:GL.Enum, renderbuffer:GL.UInt)
{
    fp_glFramebufferRenderbuffer(target, attachment, renderbuffertarget, renderbuffer)
}
public
func glFramebufferRenderbuffer(_ target:GL.Enum, _ attachment:GL.Enum, _ renderbuffertarget:GL.Enum, _ renderbuffer:GL.UInt)
{
    fp_glFramebufferRenderbuffer(target, attachment, renderbuffertarget, renderbuffer)
}

var fp_glFramebufferRenderbufferEXT:@convention(c) (GL.Enum, GL.Enum, GL.Enum, GL.UInt) -> () = load_glFramebufferRenderbufferEXT
func load_glFramebufferRenderbufferEXT(target:GL.Enum, attachment:GL.Enum, renderbuffertarget:GL.Enum, renderbuffer:GL.UInt)
{
    fp_glFramebufferRenderbufferEXT = unsafeBitCast(get_fp("glFramebufferRenderbufferEXT", support: [ss155]), to: Swift.type(of: fp_glFramebufferRenderbufferEXT))
    fp_glFramebufferRenderbufferEXT(target, attachment, renderbuffertarget, renderbuffer)
}
public
func glFramebufferRenderbufferEXT(target:GL.Enum, attachment:GL.Enum, renderbuffertarget:GL.Enum, renderbuffer:GL.UInt)
{
    fp_glFramebufferRenderbufferEXT(target, attachment, renderbuffertarget, renderbuffer)
}
public
func glFramebufferRenderbufferEXT(_ target:GL.Enum, _ attachment:GL.Enum, _ renderbuffertarget:GL.Enum, _ renderbuffer:GL.UInt)
{
    fp_glFramebufferRenderbufferEXT(target, attachment, renderbuffertarget, renderbuffer)
}

var fp_glFramebufferRenderbufferOES:@convention(c) (GL.Enum, GL.Enum, GL.Enum, GL.UInt) -> () = load_glFramebufferRenderbufferOES
func load_glFramebufferRenderbufferOES(target:GL.Enum, attachment:GL.Enum, renderbuffertarget:GL.Enum, renderbuffer:GL.UInt)
{
    fp_glFramebufferRenderbufferOES = unsafeBitCast(get_fp("glFramebufferRenderbufferOES", support: [ss293]), to: Swift.type(of: fp_glFramebufferRenderbufferOES))
    fp_glFramebufferRenderbufferOES(target, attachment, renderbuffertarget, renderbuffer)
}
public
func glFramebufferRenderbufferOES(target:GL.Enum, attachment:GL.Enum, renderbuffertarget:GL.Enum, renderbuffer:GL.UInt)
{
    fp_glFramebufferRenderbufferOES(target, attachment, renderbuffertarget, renderbuffer)
}
public
func glFramebufferRenderbufferOES(_ target:GL.Enum, _ attachment:GL.Enum, _ renderbuffertarget:GL.Enum, _ renderbuffer:GL.UInt)
{
    fp_glFramebufferRenderbufferOES(target, attachment, renderbuffertarget, renderbuffer)
}

var fp_glFramebufferSampleLocationsfvARB:@convention(c) (GL.Enum, GL.UInt, GL.Size, UnsafePointer<GL.Float>?) -> () = load_glFramebufferSampleLocationsfvARB
func load_glFramebufferSampleLocationsfvARB(target:GL.Enum, start:GL.UInt, count:GL.Size, v:UnsafePointer<GL.Float>?)
{
    fp_glFramebufferSampleLocationsfvARB = unsafeBitCast(get_fp("glFramebufferSampleLocationsfvARB", support: [ss77]), to: Swift.type(of: fp_glFramebufferSampleLocationsfvARB))
    fp_glFramebufferSampleLocationsfvARB(target, start, count, v)
}
public
func glFramebufferSampleLocationsfvARB(target:GL.Enum, start:GL.UInt, count:GL.Size, v:UnsafePointer<GL.Float>?)
{
    fp_glFramebufferSampleLocationsfvARB(target, start, count, v)
}
public
func glFramebufferSampleLocationsfvARB(_ target:GL.Enum, _ start:GL.UInt, _ count:GL.Size, _ v:UnsafePointer<GL.Float>?)
{
    fp_glFramebufferSampleLocationsfvARB(target, start, count, v)
}

var fp_glFramebufferSampleLocationsfvNV:@convention(c) (GL.Enum, GL.UInt, GL.Size, UnsafePointer<GL.Float>?) -> () = load_glFramebufferSampleLocationsfvNV
func load_glFramebufferSampleLocationsfvNV(target:GL.Enum, start:GL.UInt, count:GL.Size, v:UnsafePointer<GL.Float>?)
{
    fp_glFramebufferSampleLocationsfvNV = unsafeBitCast(get_fp("glFramebufferSampleLocationsfvNV", support: [ss268]), to: Swift.type(of: fp_glFramebufferSampleLocationsfvNV))
    fp_glFramebufferSampleLocationsfvNV(target, start, count, v)
}
public
func glFramebufferSampleLocationsfvNV(target:GL.Enum, start:GL.UInt, count:GL.Size, v:UnsafePointer<GL.Float>?)
{
    fp_glFramebufferSampleLocationsfvNV(target, start, count, v)
}
public
func glFramebufferSampleLocationsfvNV(_ target:GL.Enum, _ start:GL.UInt, _ count:GL.Size, _ v:UnsafePointer<GL.Float>?)
{
    fp_glFramebufferSampleLocationsfvNV(target, start, count, v)
}

var fp_glFramebufferTexture:@convention(c) (GL.Enum, GL.Enum, GL.UInt, GL.Int) -> () = load_glFramebufferTexture
func load_glFramebufferTexture(target:GL.Enum, attachment:GL.Enum, texture:GL.UInt, level:GL.Int)
{
    fp_glFramebufferTexture = unsafeBitCast(get_fp("glFramebufferTexture", support: [ss356, ss368]), to: Swift.type(of: fp_glFramebufferTexture))
    fp_glFramebufferTexture(target, attachment, texture, level)
}
public
func glFramebufferTexture(target:GL.Enum, attachment:GL.Enum, texture:GL.UInt, level:GL.Int)
{
    fp_glFramebufferTexture(target, attachment, texture, level)
}
public
func glFramebufferTexture(_ target:GL.Enum, _ attachment:GL.Enum, _ texture:GL.UInt, _ level:GL.Int)
{
    fp_glFramebufferTexture(target, attachment, texture, level)
}

var fp_glFramebufferTexture1D:@convention(c) (GL.Enum, GL.Enum, GL.Enum, GL.UInt, GL.Int) -> () = load_glFramebufferTexture1D
func load_glFramebufferTexture1D(target:GL.Enum, attachment:GL.Enum, textarget:GL.Enum, texture:GL.UInt, level:GL.Int)
{
    fp_glFramebufferTexture1D = unsafeBitCast(get_fp("glFramebufferTexture1D", support: [ss354, ss53]), to: Swift.type(of: fp_glFramebufferTexture1D))
    fp_glFramebufferTexture1D(target, attachment, textarget, texture, level)
}
public
func glFramebufferTexture1D(target:GL.Enum, attachment:GL.Enum, textarget:GL.Enum, texture:GL.UInt, level:GL.Int)
{
    fp_glFramebufferTexture1D(target, attachment, textarget, texture, level)
}
public
func glFramebufferTexture1D(_ target:GL.Enum, _ attachment:GL.Enum, _ textarget:GL.Enum, _ texture:GL.UInt, _ level:GL.Int)
{
    fp_glFramebufferTexture1D(target, attachment, textarget, texture, level)
}

var fp_glFramebufferTexture1DEXT:@convention(c) (GL.Enum, GL.Enum, GL.Enum, GL.UInt, GL.Int) -> () = load_glFramebufferTexture1DEXT
func load_glFramebufferTexture1DEXT(target:GL.Enum, attachment:GL.Enum, textarget:GL.Enum, texture:GL.UInt, level:GL.Int)
{
    fp_glFramebufferTexture1DEXT = unsafeBitCast(get_fp("glFramebufferTexture1DEXT", support: [ss155]), to: Swift.type(of: fp_glFramebufferTexture1DEXT))
    fp_glFramebufferTexture1DEXT(target, attachment, textarget, texture, level)
}
public
func glFramebufferTexture1DEXT(target:GL.Enum, attachment:GL.Enum, textarget:GL.Enum, texture:GL.UInt, level:GL.Int)
{
    fp_glFramebufferTexture1DEXT(target, attachment, textarget, texture, level)
}
public
func glFramebufferTexture1DEXT(_ target:GL.Enum, _ attachment:GL.Enum, _ textarget:GL.Enum, _ texture:GL.UInt, _ level:GL.Int)
{
    fp_glFramebufferTexture1DEXT(target, attachment, textarget, texture, level)
}

var fp_glFramebufferTexture2D:@convention(c) (GL.Enum, GL.Enum, GL.Enum, GL.UInt, GL.Int) -> () = load_glFramebufferTexture2D
func load_glFramebufferTexture2D(target:GL.Enum, attachment:GL.Enum, textarget:GL.Enum, texture:GL.UInt, level:GL.Int)
{
    fp_glFramebufferTexture2D = unsafeBitCast(get_fp("glFramebufferTexture2D", support: [ss354, ss365, ss53]), to: Swift.type(of: fp_glFramebufferTexture2D))
    fp_glFramebufferTexture2D(target, attachment, textarget, texture, level)
}
public
func glFramebufferTexture2D(target:GL.Enum, attachment:GL.Enum, textarget:GL.Enum, texture:GL.UInt, level:GL.Int)
{
    fp_glFramebufferTexture2D(target, attachment, textarget, texture, level)
}
public
func glFramebufferTexture2D(_ target:GL.Enum, _ attachment:GL.Enum, _ textarget:GL.Enum, _ texture:GL.UInt, _ level:GL.Int)
{
    fp_glFramebufferTexture2D(target, attachment, textarget, texture, level)
}

var fp_glFramebufferTexture2DEXT:@convention(c) (GL.Enum, GL.Enum, GL.Enum, GL.UInt, GL.Int) -> () = load_glFramebufferTexture2DEXT
func load_glFramebufferTexture2DEXT(target:GL.Enum, attachment:GL.Enum, textarget:GL.Enum, texture:GL.UInt, level:GL.Int)
{
    fp_glFramebufferTexture2DEXT = unsafeBitCast(get_fp("glFramebufferTexture2DEXT", support: [ss155]), to: Swift.type(of: fp_glFramebufferTexture2DEXT))
    fp_glFramebufferTexture2DEXT(target, attachment, textarget, texture, level)
}
public
func glFramebufferTexture2DEXT(target:GL.Enum, attachment:GL.Enum, textarget:GL.Enum, texture:GL.UInt, level:GL.Int)
{
    fp_glFramebufferTexture2DEXT(target, attachment, textarget, texture, level)
}
public
func glFramebufferTexture2DEXT(_ target:GL.Enum, _ attachment:GL.Enum, _ textarget:GL.Enum, _ texture:GL.UInt, _ level:GL.Int)
{
    fp_glFramebufferTexture2DEXT(target, attachment, textarget, texture, level)
}

var fp_glFramebufferTexture2DMultisampleEXT:@convention(c) (GL.Enum, GL.Enum, GL.Enum, GL.UInt, GL.Int, GL.Size) -> () = load_glFramebufferTexture2DMultisampleEXT
func load_glFramebufferTexture2DMultisampleEXT(target:GL.Enum, attachment:GL.Enum, textarget:GL.Enum, texture:GL.UInt, level:GL.Int, samples:GL.Size)
{
    fp_glFramebufferTexture2DMultisampleEXT = unsafeBitCast(get_fp("glFramebufferTexture2DMultisampleEXT", support: [ss169]), to: Swift.type(of: fp_glFramebufferTexture2DMultisampleEXT))
    fp_glFramebufferTexture2DMultisampleEXT(target, attachment, textarget, texture, level, samples)
}
public
func glFramebufferTexture2DMultisampleEXT(target:GL.Enum, attachment:GL.Enum, textarget:GL.Enum, texture:GL.UInt, level:GL.Int, samples:GL.Size)
{
    fp_glFramebufferTexture2DMultisampleEXT(target, attachment, textarget, texture, level, samples)
}
public
func glFramebufferTexture2DMultisampleEXT(_ target:GL.Enum, _ attachment:GL.Enum, _ textarget:GL.Enum, _ texture:GL.UInt, _ level:GL.Int, _ samples:GL.Size)
{
    fp_glFramebufferTexture2DMultisampleEXT(target, attachment, textarget, texture, level, samples)
}

var fp_glFramebufferTexture2DMultisampleIMG:@convention(c) (GL.Enum, GL.Enum, GL.Enum, GL.UInt, GL.Int, GL.Size) -> () = load_glFramebufferTexture2DMultisampleIMG
func load_glFramebufferTexture2DMultisampleIMG(target:GL.Enum, attachment:GL.Enum, textarget:GL.Enum, texture:GL.UInt, level:GL.Int, samples:GL.Size)
{
    fp_glFramebufferTexture2DMultisampleIMG = unsafeBitCast(get_fp("glFramebufferTexture2DMultisampleIMG", support: [ss213]), to: Swift.type(of: fp_glFramebufferTexture2DMultisampleIMG))
    fp_glFramebufferTexture2DMultisampleIMG(target, attachment, textarget, texture, level, samples)
}
public
func glFramebufferTexture2DMultisampleIMG(target:GL.Enum, attachment:GL.Enum, textarget:GL.Enum, texture:GL.UInt, level:GL.Int, samples:GL.Size)
{
    fp_glFramebufferTexture2DMultisampleIMG(target, attachment, textarget, texture, level, samples)
}
public
func glFramebufferTexture2DMultisampleIMG(_ target:GL.Enum, _ attachment:GL.Enum, _ textarget:GL.Enum, _ texture:GL.UInt, _ level:GL.Int, _ samples:GL.Size)
{
    fp_glFramebufferTexture2DMultisampleIMG(target, attachment, textarget, texture, level, samples)
}

var fp_glFramebufferTexture2DOES:@convention(c) (GL.Enum, GL.Enum, GL.Enum, GL.UInt, GL.Int) -> () = load_glFramebufferTexture2DOES
func load_glFramebufferTexture2DOES(target:GL.Enum, attachment:GL.Enum, textarget:GL.Enum, texture:GL.UInt, level:GL.Int)
{
    fp_glFramebufferTexture2DOES = unsafeBitCast(get_fp("glFramebufferTexture2DOES", support: [ss293]), to: Swift.type(of: fp_glFramebufferTexture2DOES))
    fp_glFramebufferTexture2DOES(target, attachment, textarget, texture, level)
}
public
func glFramebufferTexture2DOES(target:GL.Enum, attachment:GL.Enum, textarget:GL.Enum, texture:GL.UInt, level:GL.Int)
{
    fp_glFramebufferTexture2DOES(target, attachment, textarget, texture, level)
}
public
func glFramebufferTexture2DOES(_ target:GL.Enum, _ attachment:GL.Enum, _ textarget:GL.Enum, _ texture:GL.UInt, _ level:GL.Int)
{
    fp_glFramebufferTexture2DOES(target, attachment, textarget, texture, level)
}

var fp_glFramebufferTexture3D:@convention(c) (GL.Enum, GL.Enum, GL.Enum, GL.UInt, GL.Int, GL.Int) -> () = load_glFramebufferTexture3D
func load_glFramebufferTexture3D(target:GL.Enum, attachment:GL.Enum, textarget:GL.Enum, texture:GL.UInt, level:GL.Int, zoffset:GL.Int)
{
    fp_glFramebufferTexture3D = unsafeBitCast(get_fp("glFramebufferTexture3D", support: [ss354, ss53]), to: Swift.type(of: fp_glFramebufferTexture3D))
    fp_glFramebufferTexture3D(target, attachment, textarget, texture, level, zoffset)
}
public
func glFramebufferTexture3D(target:GL.Enum, attachment:GL.Enum, textarget:GL.Enum, texture:GL.UInt, level:GL.Int, zoffset:GL.Int)
{
    fp_glFramebufferTexture3D(target, attachment, textarget, texture, level, zoffset)
}
public
func glFramebufferTexture3D(_ target:GL.Enum, _ attachment:GL.Enum, _ textarget:GL.Enum, _ texture:GL.UInt, _ level:GL.Int, _ zoffset:GL.Int)
{
    fp_glFramebufferTexture3D(target, attachment, textarget, texture, level, zoffset)
}

var fp_glFramebufferTexture3DEXT:@convention(c) (GL.Enum, GL.Enum, GL.Enum, GL.UInt, GL.Int, GL.Int) -> () = load_glFramebufferTexture3DEXT
func load_glFramebufferTexture3DEXT(target:GL.Enum, attachment:GL.Enum, textarget:GL.Enum, texture:GL.UInt, level:GL.Int, zoffset:GL.Int)
{
    fp_glFramebufferTexture3DEXT = unsafeBitCast(get_fp("glFramebufferTexture3DEXT", support: [ss155]), to: Swift.type(of: fp_glFramebufferTexture3DEXT))
    fp_glFramebufferTexture3DEXT(target, attachment, textarget, texture, level, zoffset)
}
public
func glFramebufferTexture3DEXT(target:GL.Enum, attachment:GL.Enum, textarget:GL.Enum, texture:GL.UInt, level:GL.Int, zoffset:GL.Int)
{
    fp_glFramebufferTexture3DEXT(target, attachment, textarget, texture, level, zoffset)
}
public
func glFramebufferTexture3DEXT(_ target:GL.Enum, _ attachment:GL.Enum, _ textarget:GL.Enum, _ texture:GL.UInt, _ level:GL.Int, _ zoffset:GL.Int)
{
    fp_glFramebufferTexture3DEXT(target, attachment, textarget, texture, level, zoffset)
}

var fp_glFramebufferTexture3DOES:@convention(c) (GL.Enum, GL.Enum, GL.Enum, GL.UInt, GL.Int, GL.Int) -> () = load_glFramebufferTexture3DOES
func load_glFramebufferTexture3DOES(target:GL.Enum, attachment:GL.Enum, textarget:GL.Enum, texture:GL.UInt, level:GL.Int, zoffset:GL.Int)
{
    fp_glFramebufferTexture3DOES = unsafeBitCast(get_fp("glFramebufferTexture3DOES", support: [ss304]), to: Swift.type(of: fp_glFramebufferTexture3DOES))
    fp_glFramebufferTexture3DOES(target, attachment, textarget, texture, level, zoffset)
}
public
func glFramebufferTexture3DOES(target:GL.Enum, attachment:GL.Enum, textarget:GL.Enum, texture:GL.UInt, level:GL.Int, zoffset:GL.Int)
{
    fp_glFramebufferTexture3DOES(target, attachment, textarget, texture, level, zoffset)
}
public
func glFramebufferTexture3DOES(_ target:GL.Enum, _ attachment:GL.Enum, _ textarget:GL.Enum, _ texture:GL.UInt, _ level:GL.Int, _ zoffset:GL.Int)
{
    fp_glFramebufferTexture3DOES(target, attachment, textarget, texture, level, zoffset)
}

var fp_glFramebufferTextureARB:@convention(c) (GL.Enum, GL.Enum, GL.UInt, GL.Int) -> () = load_glFramebufferTextureARB
func load_glFramebufferTextureARB(target:GL.Enum, attachment:GL.Enum, texture:GL.UInt, level:GL.Int)
{
    fp_glFramebufferTextureARB = unsafeBitCast(get_fp("glFramebufferTextureARB", support: [ss54]), to: Swift.type(of: fp_glFramebufferTextureARB))
    fp_glFramebufferTextureARB(target, attachment, texture, level)
}
public
func glFramebufferTextureARB(target:GL.Enum, attachment:GL.Enum, texture:GL.UInt, level:GL.Int)
{
    fp_glFramebufferTextureARB(target, attachment, texture, level)
}
public
func glFramebufferTextureARB(_ target:GL.Enum, _ attachment:GL.Enum, _ texture:GL.UInt, _ level:GL.Int)
{
    fp_glFramebufferTextureARB(target, attachment, texture, level)
}

var fp_glFramebufferTextureEXT:@convention(c) (GL.Enum, GL.Enum, GL.UInt, GL.Int) -> () = load_glFramebufferTextureEXT
func load_glFramebufferTextureEXT(target:GL.Enum, attachment:GL.Enum, texture:GL.UInt, level:GL.Int)
{
    fp_glFramebufferTextureEXT = unsafeBitCast(get_fp("glFramebufferTextureEXT", support: [ss156, ss249]), to: Swift.type(of: fp_glFramebufferTextureEXT))
    fp_glFramebufferTextureEXT(target, attachment, texture, level)
}
public
func glFramebufferTextureEXT(target:GL.Enum, attachment:GL.Enum, texture:GL.UInt, level:GL.Int)
{
    fp_glFramebufferTextureEXT(target, attachment, texture, level)
}
public
func glFramebufferTextureEXT(_ target:GL.Enum, _ attachment:GL.Enum, _ texture:GL.UInt, _ level:GL.Int)
{
    fp_glFramebufferTextureEXT(target, attachment, texture, level)
}

var fp_glFramebufferTextureFaceARB:@convention(c) (GL.Enum, GL.Enum, GL.UInt, GL.Int, GL.Enum) -> () = load_glFramebufferTextureFaceARB
func load_glFramebufferTextureFaceARB(target:GL.Enum, attachment:GL.Enum, texture:GL.UInt, level:GL.Int, face:GL.Enum)
{
    fp_glFramebufferTextureFaceARB = unsafeBitCast(get_fp("glFramebufferTextureFaceARB", support: [ss54]), to: Swift.type(of: fp_glFramebufferTextureFaceARB))
    fp_glFramebufferTextureFaceARB(target, attachment, texture, level, face)
}
public
func glFramebufferTextureFaceARB(target:GL.Enum, attachment:GL.Enum, texture:GL.UInt, level:GL.Int, face:GL.Enum)
{
    fp_glFramebufferTextureFaceARB(target, attachment, texture, level, face)
}
public
func glFramebufferTextureFaceARB(_ target:GL.Enum, _ attachment:GL.Enum, _ texture:GL.UInt, _ level:GL.Int, _ face:GL.Enum)
{
    fp_glFramebufferTextureFaceARB(target, attachment, texture, level, face)
}

var fp_glFramebufferTextureFaceEXT:@convention(c) (GL.Enum, GL.Enum, GL.UInt, GL.Int, GL.Enum) -> () = load_glFramebufferTextureFaceEXT
func load_glFramebufferTextureFaceEXT(target:GL.Enum, attachment:GL.Enum, texture:GL.UInt, level:GL.Int, face:GL.Enum)
{
    fp_glFramebufferTextureFaceEXT = unsafeBitCast(get_fp("glFramebufferTextureFaceEXT", support: [ss249]), to: Swift.type(of: fp_glFramebufferTextureFaceEXT))
    fp_glFramebufferTextureFaceEXT(target, attachment, texture, level, face)
}
public
func glFramebufferTextureFaceEXT(target:GL.Enum, attachment:GL.Enum, texture:GL.UInt, level:GL.Int, face:GL.Enum)
{
    fp_glFramebufferTextureFaceEXT(target, attachment, texture, level, face)
}
public
func glFramebufferTextureFaceEXT(_ target:GL.Enum, _ attachment:GL.Enum, _ texture:GL.UInt, _ level:GL.Int, _ face:GL.Enum)
{
    fp_glFramebufferTextureFaceEXT(target, attachment, texture, level, face)
}

var fp_glFramebufferTextureLayer:@convention(c) (GL.Enum, GL.Enum, GL.UInt, GL.Int, GL.Int) -> () = load_glFramebufferTextureLayer
func load_glFramebufferTextureLayer(target:GL.Enum, attachment:GL.Enum, texture:GL.UInt, level:GL.Int, layer:GL.Int)
{
    fp_glFramebufferTextureLayer = unsafeBitCast(get_fp("glFramebufferTextureLayer", support: [ss354, ss366, ss53]), to: Swift.type(of: fp_glFramebufferTextureLayer))
    fp_glFramebufferTextureLayer(target, attachment, texture, level, layer)
}
public
func glFramebufferTextureLayer(target:GL.Enum, attachment:GL.Enum, texture:GL.UInt, level:GL.Int, layer:GL.Int)
{
    fp_glFramebufferTextureLayer(target, attachment, texture, level, layer)
}
public
func glFramebufferTextureLayer(_ target:GL.Enum, _ attachment:GL.Enum, _ texture:GL.UInt, _ level:GL.Int, _ layer:GL.Int)
{
    fp_glFramebufferTextureLayer(target, attachment, texture, level, layer)
}

var fp_glFramebufferTextureLayerARB:@convention(c) (GL.Enum, GL.Enum, GL.UInt, GL.Int, GL.Int) -> () = load_glFramebufferTextureLayerARB
func load_glFramebufferTextureLayerARB(target:GL.Enum, attachment:GL.Enum, texture:GL.UInt, level:GL.Int, layer:GL.Int)
{
    fp_glFramebufferTextureLayerARB = unsafeBitCast(get_fp("glFramebufferTextureLayerARB", support: [ss54]), to: Swift.type(of: fp_glFramebufferTextureLayerARB))
    fp_glFramebufferTextureLayerARB(target, attachment, texture, level, layer)
}
public
func glFramebufferTextureLayerARB(target:GL.Enum, attachment:GL.Enum, texture:GL.UInt, level:GL.Int, layer:GL.Int)
{
    fp_glFramebufferTextureLayerARB(target, attachment, texture, level, layer)
}
public
func glFramebufferTextureLayerARB(_ target:GL.Enum, _ attachment:GL.Enum, _ texture:GL.UInt, _ level:GL.Int, _ layer:GL.Int)
{
    fp_glFramebufferTextureLayerARB(target, attachment, texture, level, layer)
}

var fp_glFramebufferTextureLayerEXT:@convention(c) (GL.Enum, GL.Enum, GL.UInt, GL.Int, GL.Int) -> () = load_glFramebufferTextureLayerEXT
func load_glFramebufferTextureLayerEXT(target:GL.Enum, attachment:GL.Enum, texture:GL.UInt, level:GL.Int, layer:GL.Int)
{
    fp_glFramebufferTextureLayerEXT = unsafeBitCast(get_fp("glFramebufferTextureLayerEXT", support: [ss189, ss249]), to: Swift.type(of: fp_glFramebufferTextureLayerEXT))
    fp_glFramebufferTextureLayerEXT(target, attachment, texture, level, layer)
}
public
func glFramebufferTextureLayerEXT(target:GL.Enum, attachment:GL.Enum, texture:GL.UInt, level:GL.Int, layer:GL.Int)
{
    fp_glFramebufferTextureLayerEXT(target, attachment, texture, level, layer)
}
public
func glFramebufferTextureLayerEXT(_ target:GL.Enum, _ attachment:GL.Enum, _ texture:GL.UInt, _ level:GL.Int, _ layer:GL.Int)
{
    fp_glFramebufferTextureLayerEXT(target, attachment, texture, level, layer)
}

var fp_glFramebufferTextureMultisampleMultiviewOVR:@convention(c) (GL.Enum, GL.Enum, GL.UInt, GL.Int, GL.Size, GL.Int, GL.Size) -> () = load_glFramebufferTextureMultisampleMultiviewOVR
func load_glFramebufferTextureMultisampleMultiviewOVR(target:GL.Enum, attachment:GL.Enum, texture:GL.UInt, level:GL.Int, samples:GL.Size, baseViewIndex:GL.Int, numViews:GL.Size)
{
    fp_glFramebufferTextureMultisampleMultiviewOVR = unsafeBitCast(get_fp("glFramebufferTextureMultisampleMultiviewOVR", support: [ss311]), to: Swift.type(of: fp_glFramebufferTextureMultisampleMultiviewOVR))
    fp_glFramebufferTextureMultisampleMultiviewOVR(target, attachment, texture, level, samples, baseViewIndex, numViews)
}
public
func glFramebufferTextureMultisampleMultiviewOVR(target:GL.Enum, attachment:GL.Enum, texture:GL.UInt, level:GL.Int, samples:GL.Size, baseViewIndex:GL.Int, numViews:GL.Size)
{
    fp_glFramebufferTextureMultisampleMultiviewOVR(target, attachment, texture, level, samples, baseViewIndex, numViews)
}
public
func glFramebufferTextureMultisampleMultiviewOVR(_ target:GL.Enum, _ attachment:GL.Enum, _ texture:GL.UInt, _ level:GL.Int, _ samples:GL.Size, _ baseViewIndex:GL.Int, _ numViews:GL.Size)
{
    fp_glFramebufferTextureMultisampleMultiviewOVR(target, attachment, texture, level, samples, baseViewIndex, numViews)
}

var fp_glFramebufferTextureMultiviewOVR:@convention(c) (GL.Enum, GL.Enum, GL.UInt, GL.Int, GL.Int, GL.Size) -> () = load_glFramebufferTextureMultiviewOVR
func load_glFramebufferTextureMultiviewOVR(target:GL.Enum, attachment:GL.Enum, texture:GL.UInt, level:GL.Int, baseViewIndex:GL.Int, numViews:GL.Size)
{
    fp_glFramebufferTextureMultiviewOVR = unsafeBitCast(get_fp("glFramebufferTextureMultiviewOVR", support: [ss312]), to: Swift.type(of: fp_glFramebufferTextureMultiviewOVR))
    fp_glFramebufferTextureMultiviewOVR(target, attachment, texture, level, baseViewIndex, numViews)
}
public
func glFramebufferTextureMultiviewOVR(target:GL.Enum, attachment:GL.Enum, texture:GL.UInt, level:GL.Int, baseViewIndex:GL.Int, numViews:GL.Size)
{
    fp_glFramebufferTextureMultiviewOVR(target, attachment, texture, level, baseViewIndex, numViews)
}
public
func glFramebufferTextureMultiviewOVR(_ target:GL.Enum, _ attachment:GL.Enum, _ texture:GL.UInt, _ level:GL.Int, _ baseViewIndex:GL.Int, _ numViews:GL.Size)
{
    fp_glFramebufferTextureMultiviewOVR(target, attachment, texture, level, baseViewIndex, numViews)
}

var fp_glFramebufferTextureOES:@convention(c) (GL.Enum, GL.Enum, GL.UInt, GL.Int) -> () = load_glFramebufferTextureOES
func load_glFramebufferTextureOES(target:GL.Enum, attachment:GL.Enum, texture:GL.UInt, level:GL.Int)
{
    fp_glFramebufferTextureOES = unsafeBitCast(get_fp("glFramebufferTextureOES", support: [ss294]), to: Swift.type(of: fp_glFramebufferTextureOES))
    fp_glFramebufferTextureOES(target, attachment, texture, level)
}
public
func glFramebufferTextureOES(target:GL.Enum, attachment:GL.Enum, texture:GL.UInt, level:GL.Int)
{
    fp_glFramebufferTextureOES(target, attachment, texture, level)
}
public
func glFramebufferTextureOES(_ target:GL.Enum, _ attachment:GL.Enum, _ texture:GL.UInt, _ level:GL.Int)
{
    fp_glFramebufferTextureOES(target, attachment, texture, level)
}

var fp_glFreeObjectBufferATI:@convention(c) (GL.UInt) -> () = load_glFreeObjectBufferATI
func load_glFreeObjectBufferATI(buffer:GL.UInt)
{
    fp_glFreeObjectBufferATI = unsafeBitCast(get_fp("glFreeObjectBufferATI", support: [ss122]), to: Swift.type(of: fp_glFreeObjectBufferATI))
    fp_glFreeObjectBufferATI(buffer)
}
public
func glFreeObjectBufferATI(buffer:GL.UInt)
{
    fp_glFreeObjectBufferATI(buffer)
}
public
func glFreeObjectBufferATI(_ buffer:GL.UInt)
{
    fp_glFreeObjectBufferATI(buffer)
}

var fp_glFrontFace:@convention(c) (GL.Enum) -> () = load_glFrontFace
func load_glFrontFace(mode:GL.Enum)
{
    fp_glFrontFace = unsafeBitCast(get_fp("glFrontFace", support: [ss346, ss365]), to: Swift.type(of: fp_glFrontFace))
    fp_glFrontFace(mode)
}
public
func glFrontFace(mode:GL.Enum)
{
    fp_glFrontFace(mode)
}
public
func glFrontFace(_ mode:GL.Enum)
{
    fp_glFrontFace(mode)
}

var fp_glFrustum:@convention(c) (GL.Double, GL.Double, GL.Double, GL.Double, GL.Double, GL.Double) -> () = load_glFrustum
func load_glFrustum(left:GL.Double, right:GL.Double, bottom:GL.Double, top:GL.Double, zNear:GL.Double, zFar:GL.Double)
{
    fp_glFrustum = unsafeBitCast(get_fp("glFrustum", support: [ss346, ss369]), to: Swift.type(of: fp_glFrustum))
    fp_glFrustum(left, right, bottom, top, zNear, zFar)
}
public
func glFrustum(left:GL.Double, right:GL.Double, bottom:GL.Double, top:GL.Double, zNear:GL.Double, zFar:GL.Double)
{
    fp_glFrustum(left, right, bottom, top, zNear, zFar)
}
public
func glFrustum(_ left:GL.Double, _ right:GL.Double, _ bottom:GL.Double, _ top:GL.Double, _ zNear:GL.Double, _ zFar:GL.Double)
{
    fp_glFrustum(left, right, bottom, top, zNear, zFar)
}

var fp_glFrustumf:@convention(c) (GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float) -> () = load_glFrustumf
func load_glFrustumf(l:GL.Float, r:GL.Float, b:GL.Float, t:GL.Float, n:GL.Float, f:GL.Float)
{
    fp_glFrustumf = unsafeBitCast(get_fp("glFrustumf", support: [ss364]), to: Swift.type(of: fp_glFrustumf))
    fp_glFrustumf(l, r, b, t, n, f)
}
public
func glFrustumf(l:GL.Float, r:GL.Float, b:GL.Float, t:GL.Float, n:GL.Float, f:GL.Float)
{
    fp_glFrustumf(l, r, b, t, n, f)
}
public
func glFrustumf(_ l:GL.Float, _ r:GL.Float, _ b:GL.Float, _ t:GL.Float, _ n:GL.Float, _ f:GL.Float)
{
    fp_glFrustumf(l, r, b, t, n, f)
}

var fp_glFrustumfOES:@convention(c) (GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float) -> () = load_glFrustumfOES
func load_glFrustumfOES(l:GL.Float, r:GL.Float, b:GL.Float, t:GL.Float, n:GL.Float, f:GL.Float)
{
    fp_glFrustumfOES = unsafeBitCast(get_fp("glFrustumfOES", support: [ss302]), to: Swift.type(of: fp_glFrustumfOES))
    fp_glFrustumfOES(l, r, b, t, n, f)
}
public
func glFrustumfOES(l:GL.Float, r:GL.Float, b:GL.Float, t:GL.Float, n:GL.Float, f:GL.Float)
{
    fp_glFrustumfOES(l, r, b, t, n, f)
}
public
func glFrustumfOES(_ l:GL.Float, _ r:GL.Float, _ b:GL.Float, _ t:GL.Float, _ n:GL.Float, _ f:GL.Float)
{
    fp_glFrustumfOES(l, r, b, t, n, f)
}

var fp_glFrustumx:@convention(c) (GL.Fixed, GL.Fixed, GL.Fixed, GL.Fixed, GL.Fixed, GL.Fixed) -> () = load_glFrustumx
func load_glFrustumx(l:GL.Fixed, r:GL.Fixed, b:GL.Fixed, t:GL.Fixed, n:GL.Fixed, f:GL.Fixed)
{
    fp_glFrustumx = unsafeBitCast(get_fp("glFrustumx", support: [ss364]), to: Swift.type(of: fp_glFrustumx))
    fp_glFrustumx(l, r, b, t, n, f)
}
public
func glFrustumx(l:GL.Fixed, r:GL.Fixed, b:GL.Fixed, t:GL.Fixed, n:GL.Fixed, f:GL.Fixed)
{
    fp_glFrustumx(l, r, b, t, n, f)
}
public
func glFrustumx(_ l:GL.Fixed, _ r:GL.Fixed, _ b:GL.Fixed, _ t:GL.Fixed, _ n:GL.Fixed, _ f:GL.Fixed)
{
    fp_glFrustumx(l, r, b, t, n, f)
}

var fp_glFrustumxOES:@convention(c) (GL.Fixed, GL.Fixed, GL.Fixed, GL.Fixed, GL.Fixed, GL.Fixed) -> () = load_glFrustumxOES
func load_glFrustumxOES(l:GL.Fixed, r:GL.Fixed, b:GL.Fixed, t:GL.Fixed, n:GL.Fixed, f:GL.Fixed)
{
    fp_glFrustumxOES = unsafeBitCast(get_fp("glFrustumxOES", support: [ss292]), to: Swift.type(of: fp_glFrustumxOES))
    fp_glFrustumxOES(l, r, b, t, n, f)
}
public
func glFrustumxOES(l:GL.Fixed, r:GL.Fixed, b:GL.Fixed, t:GL.Fixed, n:GL.Fixed, f:GL.Fixed)
{
    fp_glFrustumxOES(l, r, b, t, n, f)
}
public
func glFrustumxOES(_ l:GL.Fixed, _ r:GL.Fixed, _ b:GL.Fixed, _ t:GL.Fixed, _ n:GL.Fixed, _ f:GL.Fixed)
{
    fp_glFrustumxOES(l, r, b, t, n, f)
}

var fp_glGenAsyncMarkersSGIX:@convention(c) (GL.Size) -> GL.UInt = load_glGenAsyncMarkersSGIX
func load_glGenAsyncMarkersSGIX(range:GL.Size) -> GL.UInt
{
    fp_glGenAsyncMarkersSGIX = unsafeBitCast(get_fp("glGenAsyncMarkersSGIX", support: [ss329]), to: Swift.type(of: fp_glGenAsyncMarkersSGIX))
    return fp_glGenAsyncMarkersSGIX(range)
}
public
func glGenAsyncMarkersSGIX(range:GL.Size) -> GL.UInt
{
    return fp_glGenAsyncMarkersSGIX(range)
}
public
func glGenAsyncMarkersSGIX(_ range:GL.Size) -> GL.UInt
{
    return fp_glGenAsyncMarkersSGIX(range)
}

var fp_glGenBuffers:@convention(c) (GL.Size, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGenBuffers
func load_glGenBuffers(n:GL.Size, buffers:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenBuffers = unsafeBitCast(get_fp("glGenBuffers", support: [ss351, ss365]), to: Swift.type(of: fp_glGenBuffers))
    fp_glGenBuffers(n, buffers)
}
public
func glGenBuffers(n:GL.Size, buffers:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenBuffers(n, buffers)
}
public
func glGenBuffers(_ n:GL.Size, _ buffers:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenBuffers(n, buffers)
}

var fp_glGenBuffersARB:@convention(c) (GL.Size, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGenBuffersARB
func load_glGenBuffersARB(n:GL.Size, buffers:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenBuffersARB = unsafeBitCast(get_fp("glGenBuffersARB", support: [ss109]), to: Swift.type(of: fp_glGenBuffersARB))
    fp_glGenBuffersARB(n, buffers)
}
public
func glGenBuffersARB(n:GL.Size, buffers:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenBuffersARB(n, buffers)
}
public
func glGenBuffersARB(_ n:GL.Size, _ buffers:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenBuffersARB(n, buffers)
}

var fp_glGenFencesAPPLE:@convention(c) (GL.Size, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGenFencesAPPLE
func load_glGenFencesAPPLE(n:GL.Size, fences:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenFencesAPPLE = unsafeBitCast(get_fp("glGenFencesAPPLE", support: [ss19]), to: Swift.type(of: fp_glGenFencesAPPLE))
    fp_glGenFencesAPPLE(n, fences)
}
public
func glGenFencesAPPLE(n:GL.Size, fences:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenFencesAPPLE(n, fences)
}
public
func glGenFencesAPPLE(_ n:GL.Size, _ fences:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenFencesAPPLE(n, fences)
}

var fp_glGenFencesNV:@convention(c) (GL.Size, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGenFencesNV
func load_glGenFencesNV(n:GL.Size, fences:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenFencesNV = unsafeBitCast(get_fp("glGenFencesNV", support: [ss242]), to: Swift.type(of: fp_glGenFencesNV))
    fp_glGenFencesNV(n, fences)
}
public
func glGenFencesNV(n:GL.Size, fences:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenFencesNV(n, fences)
}
public
func glGenFencesNV(_ n:GL.Size, _ fences:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenFencesNV(n, fences)
}

var fp_glGenFragmentShadersATI:@convention(c) (GL.UInt) -> GL.UInt = load_glGenFragmentShadersATI
func load_glGenFragmentShadersATI(range:GL.UInt) -> GL.UInt
{
    fp_glGenFragmentShadersATI = unsafeBitCast(get_fp("glGenFragmentShadersATI", support: [ss118]), to: Swift.type(of: fp_glGenFragmentShadersATI))
    return fp_glGenFragmentShadersATI(range)
}
public
func glGenFragmentShadersATI(range:GL.UInt) -> GL.UInt
{
    return fp_glGenFragmentShadersATI(range)
}
public
func glGenFragmentShadersATI(_ range:GL.UInt) -> GL.UInt
{
    return fp_glGenFragmentShadersATI(range)
}

var fp_glGenFramebuffers:@convention(c) (GL.Size, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGenFramebuffers
func load_glGenFramebuffers(n:GL.Size, framebuffers:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenFramebuffers = unsafeBitCast(get_fp("glGenFramebuffers", support: [ss354, ss365, ss53]), to: Swift.type(of: fp_glGenFramebuffers))
    fp_glGenFramebuffers(n, framebuffers)
}
public
func glGenFramebuffers(n:GL.Size, framebuffers:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenFramebuffers(n, framebuffers)
}
public
func glGenFramebuffers(_ n:GL.Size, _ framebuffers:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenFramebuffers(n, framebuffers)
}

var fp_glGenFramebuffersEXT:@convention(c) (GL.Size, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGenFramebuffersEXT
func load_glGenFramebuffersEXT(n:GL.Size, framebuffers:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenFramebuffersEXT = unsafeBitCast(get_fp("glGenFramebuffersEXT", support: [ss155]), to: Swift.type(of: fp_glGenFramebuffersEXT))
    fp_glGenFramebuffersEXT(n, framebuffers)
}
public
func glGenFramebuffersEXT(n:GL.Size, framebuffers:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenFramebuffersEXT(n, framebuffers)
}
public
func glGenFramebuffersEXT(_ n:GL.Size, _ framebuffers:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenFramebuffersEXT(n, framebuffers)
}

var fp_glGenFramebuffersOES:@convention(c) (GL.Size, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGenFramebuffersOES
func load_glGenFramebuffersOES(n:GL.Size, framebuffers:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenFramebuffersOES = unsafeBitCast(get_fp("glGenFramebuffersOES", support: [ss293]), to: Swift.type(of: fp_glGenFramebuffersOES))
    fp_glGenFramebuffersOES(n, framebuffers)
}
public
func glGenFramebuffersOES(n:GL.Size, framebuffers:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenFramebuffersOES(n, framebuffers)
}
public
func glGenFramebuffersOES(_ n:GL.Size, _ framebuffers:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenFramebuffersOES(n, framebuffers)
}

var fp_glGenLists:@convention(c) (GL.Size) -> GL.UInt = load_glGenLists
func load_glGenLists(range:GL.Size) -> GL.UInt
{
    fp_glGenLists = unsafeBitCast(get_fp("glGenLists", support: [ss346, ss369]), to: Swift.type(of: fp_glGenLists))
    return fp_glGenLists(range)
}
public
func glGenLists(range:GL.Size) -> GL.UInt
{
    return fp_glGenLists(range)
}
public
func glGenLists(_ range:GL.Size) -> GL.UInt
{
    return fp_glGenLists(range)
}

var fp_glGenNamesAMD:@convention(c) (GL.Enum, GL.UInt, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGenNamesAMD
func load_glGenNamesAMD(identifier:GL.Enum, num:GL.UInt, names:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenNamesAMD = unsafeBitCast(get_fp("glGenNamesAMD", support: [ss6]), to: Swift.type(of: fp_glGenNamesAMD))
    fp_glGenNamesAMD(identifier, num, names)
}
public
func glGenNamesAMD(identifier:GL.Enum, num:GL.UInt, names:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenNamesAMD(identifier, num, names)
}
public
func glGenNamesAMD(_ identifier:GL.Enum, _ num:GL.UInt, _ names:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenNamesAMD(identifier, num, names)
}

var fp_glGenOcclusionQueriesNV:@convention(c) (GL.Size, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGenOcclusionQueriesNV
func load_glGenOcclusionQueriesNV(n:GL.Size, ids:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenOcclusionQueriesNV = unsafeBitCast(get_fp("glGenOcclusionQueriesNV", support: [ss257]), to: Swift.type(of: fp_glGenOcclusionQueriesNV))
    fp_glGenOcclusionQueriesNV(n, ids)
}
public
func glGenOcclusionQueriesNV(n:GL.Size, ids:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenOcclusionQueriesNV(n, ids)
}
public
func glGenOcclusionQueriesNV(_ n:GL.Size, _ ids:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenOcclusionQueriesNV(n, ids)
}

var fp_glGenPathsNV:@convention(c) (GL.Size) -> GL.UInt = load_glGenPathsNV
func load_glGenPathsNV(range:GL.Size) -> GL.UInt
{
    fp_glGenPathsNV = unsafeBitCast(get_fp("glGenPathsNV", support: [ss259]), to: Swift.type(of: fp_glGenPathsNV))
    return fp_glGenPathsNV(range)
}
public
func glGenPathsNV(range:GL.Size) -> GL.UInt
{
    return fp_glGenPathsNV(range)
}
public
func glGenPathsNV(_ range:GL.Size) -> GL.UInt
{
    return fp_glGenPathsNV(range)
}

var fp_glGenPerfMonitorsAMD:@convention(c) (GL.Size, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGenPerfMonitorsAMD
func load_glGenPerfMonitorsAMD(n:GL.Size, monitors:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenPerfMonitorsAMD = unsafeBitCast(get_fp("glGenPerfMonitorsAMD", support: [ss8]), to: Swift.type(of: fp_glGenPerfMonitorsAMD))
    fp_glGenPerfMonitorsAMD(n, monitors)
}
public
func glGenPerfMonitorsAMD(n:GL.Size, monitors:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenPerfMonitorsAMD(n, monitors)
}
public
func glGenPerfMonitorsAMD(_ n:GL.Size, _ monitors:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenPerfMonitorsAMD(n, monitors)
}

var fp_glGenProgramPipelines:@convention(c) (GL.Size, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGenProgramPipelines
func load_glGenProgramPipelines(n:GL.Size, pipelines:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenProgramPipelines = unsafeBitCast(get_fp("glGenProgramPipelines", support: [ss359, ss367, ss80]), to: Swift.type(of: fp_glGenProgramPipelines))
    fp_glGenProgramPipelines(n, pipelines)
}
public
func glGenProgramPipelines(n:GL.Size, pipelines:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenProgramPipelines(n, pipelines)
}
public
func glGenProgramPipelines(_ n:GL.Size, _ pipelines:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenProgramPipelines(n, pipelines)
}

var fp_glGenProgramPipelinesEXT:@convention(c) (GL.Size, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGenProgramPipelinesEXT
func load_glGenProgramPipelinesEXT(n:GL.Size, pipelines:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenProgramPipelinesEXT = unsafeBitCast(get_fp("glGenProgramPipelinesEXT", support: [ss182]), to: Swift.type(of: fp_glGenProgramPipelinesEXT))
    fp_glGenProgramPipelinesEXT(n, pipelines)
}
public
func glGenProgramPipelinesEXT(n:GL.Size, pipelines:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenProgramPipelinesEXT(n, pipelines)
}
public
func glGenProgramPipelinesEXT(_ n:GL.Size, _ pipelines:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenProgramPipelinesEXT(n, pipelines)
}

var fp_glGenProgramsARB:@convention(c) (GL.Size, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGenProgramsARB
func load_glGenProgramsARB(n:GL.Size, programs:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenProgramsARB = unsafeBitCast(get_fp("glGenProgramsARB", support: [ss51, ss110]), to: Swift.type(of: fp_glGenProgramsARB))
    fp_glGenProgramsARB(n, programs)
}
public
func glGenProgramsARB(n:GL.Size, programs:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenProgramsARB(n, programs)
}
public
func glGenProgramsARB(_ n:GL.Size, _ programs:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenProgramsARB(n, programs)
}

var fp_glGenProgramsNV:@convention(c) (GL.Size, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGenProgramsNV
func load_glGenProgramsNV(n:GL.Size, programs:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenProgramsNV = unsafeBitCast(get_fp("glGenProgramsNV", support: [ss278]), to: Swift.type(of: fp_glGenProgramsNV))
    fp_glGenProgramsNV(n, programs)
}
public
func glGenProgramsNV(n:GL.Size, programs:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenProgramsNV(n, programs)
}
public
func glGenProgramsNV(_ n:GL.Size, _ programs:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenProgramsNV(n, programs)
}

var fp_glGenQueries:@convention(c) (GL.Size, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGenQueries
func load_glGenQueries(n:GL.Size, ids:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenQueries = unsafeBitCast(get_fp("glGenQueries", support: [ss351, ss366]), to: Swift.type(of: fp_glGenQueries))
    fp_glGenQueries(n, ids)
}
public
func glGenQueries(n:GL.Size, ids:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenQueries(n, ids)
}
public
func glGenQueries(_ n:GL.Size, _ ids:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenQueries(n, ids)
}

var fp_glGenQueriesARB:@convention(c) (GL.Size, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGenQueriesARB
func load_glGenQueriesARB(n:GL.Size, ids:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenQueriesARB = unsafeBitCast(get_fp("glGenQueriesARB", support: [ss71]), to: Swift.type(of: fp_glGenQueriesARB))
    fp_glGenQueriesARB(n, ids)
}
public
func glGenQueriesARB(n:GL.Size, ids:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenQueriesARB(n, ids)
}
public
func glGenQueriesARB(_ n:GL.Size, _ ids:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenQueriesARB(n, ids)
}

var fp_glGenQueriesEXT:@convention(c) (GL.Size, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGenQueriesEXT
func load_glGenQueriesEXT(n:GL.Size, ids:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenQueriesEXT = unsafeBitCast(get_fp("glGenQueriesEXT", support: [ss145, ss171]), to: Swift.type(of: fp_glGenQueriesEXT))
    fp_glGenQueriesEXT(n, ids)
}
public
func glGenQueriesEXT(n:GL.Size, ids:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenQueriesEXT(n, ids)
}
public
func glGenQueriesEXT(_ n:GL.Size, _ ids:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenQueriesEXT(n, ids)
}

var fp_glGenRenderbuffers:@convention(c) (GL.Size, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGenRenderbuffers
func load_glGenRenderbuffers(n:GL.Size, renderbuffers:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenRenderbuffers = unsafeBitCast(get_fp("glGenRenderbuffers", support: [ss354, ss365, ss53]), to: Swift.type(of: fp_glGenRenderbuffers))
    fp_glGenRenderbuffers(n, renderbuffers)
}
public
func glGenRenderbuffers(n:GL.Size, renderbuffers:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenRenderbuffers(n, renderbuffers)
}
public
func glGenRenderbuffers(_ n:GL.Size, _ renderbuffers:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenRenderbuffers(n, renderbuffers)
}

var fp_glGenRenderbuffersEXT:@convention(c) (GL.Size, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGenRenderbuffersEXT
func load_glGenRenderbuffersEXT(n:GL.Size, renderbuffers:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenRenderbuffersEXT = unsafeBitCast(get_fp("glGenRenderbuffersEXT", support: [ss155]), to: Swift.type(of: fp_glGenRenderbuffersEXT))
    fp_glGenRenderbuffersEXT(n, renderbuffers)
}
public
func glGenRenderbuffersEXT(n:GL.Size, renderbuffers:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenRenderbuffersEXT(n, renderbuffers)
}
public
func glGenRenderbuffersEXT(_ n:GL.Size, _ renderbuffers:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenRenderbuffersEXT(n, renderbuffers)
}

var fp_glGenRenderbuffersOES:@convention(c) (GL.Size, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGenRenderbuffersOES
func load_glGenRenderbuffersOES(n:GL.Size, renderbuffers:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenRenderbuffersOES = unsafeBitCast(get_fp("glGenRenderbuffersOES", support: [ss293]), to: Swift.type(of: fp_glGenRenderbuffersOES))
    fp_glGenRenderbuffersOES(n, renderbuffers)
}
public
func glGenRenderbuffersOES(n:GL.Size, renderbuffers:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenRenderbuffersOES(n, renderbuffers)
}
public
func glGenRenderbuffersOES(_ n:GL.Size, _ renderbuffers:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenRenderbuffersOES(n, renderbuffers)
}

var fp_glGenSamplers:@convention(c) (GL.Size, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGenSamplers
func load_glGenSamplers(count:GL.Size, samplers:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenSamplers = unsafeBitCast(get_fp("glGenSamplers", support: [ss357, ss366, ss79]), to: Swift.type(of: fp_glGenSamplers))
    fp_glGenSamplers(count, samplers)
}
public
func glGenSamplers(count:GL.Size, samplers:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenSamplers(count, samplers)
}
public
func glGenSamplers(_ count:GL.Size, _ samplers:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenSamplers(count, samplers)
}

var fp_glGenSymbolsEXT:@convention(c) (GL.Enum, GL.Enum, GL.Enum, GL.UInt) -> GL.UInt = load_glGenSymbolsEXT
func load_glGenSymbolsEXT(datatype:GL.Enum, storagetype:GL.Enum, range:GL.Enum, components:GL.UInt) -> GL.UInt
{
    fp_glGenSymbolsEXT = unsafeBitCast(get_fp("glGenSymbolsEXT", support: [ss204]), to: Swift.type(of: fp_glGenSymbolsEXT))
    return fp_glGenSymbolsEXT(datatype, storagetype, range, components)
}
public
func glGenSymbolsEXT(datatype:GL.Enum, storagetype:GL.Enum, range:GL.Enum, components:GL.UInt) -> GL.UInt
{
    return fp_glGenSymbolsEXT(datatype, storagetype, range, components)
}
public
func glGenSymbolsEXT(_ datatype:GL.Enum, _ storagetype:GL.Enum, _ range:GL.Enum, _ components:GL.UInt) -> GL.UInt
{
    return fp_glGenSymbolsEXT(datatype, storagetype, range, components)
}

var fp_glGenTextures:@convention(c) (GL.Size, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGenTextures
func load_glGenTextures(n:GL.Size, textures:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenTextures = unsafeBitCast(get_fp("glGenTextures", support: [ss347, ss365]), to: Swift.type(of: fp_glGenTextures))
    fp_glGenTextures(n, textures)
}
public
func glGenTextures(n:GL.Size, textures:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenTextures(n, textures)
}
public
func glGenTextures(_ n:GL.Size, _ textures:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenTextures(n, textures)
}

var fp_glGenTexturesEXT:@convention(c) (GL.Size, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGenTexturesEXT
func load_glGenTexturesEXT(n:GL.Size, textures:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenTexturesEXT = unsafeBitCast(get_fp("glGenTexturesEXT", support: [ss195]), to: Swift.type(of: fp_glGenTexturesEXT))
    fp_glGenTexturesEXT(n, textures)
}
public
func glGenTexturesEXT(n:GL.Size, textures:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenTexturesEXT(n, textures)
}
public
func glGenTexturesEXT(_ n:GL.Size, _ textures:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenTexturesEXT(n, textures)
}

var fp_glGenTransformFeedbacks:@convention(c) (GL.Size, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGenTransformFeedbacks
func load_glGenTransformFeedbacks(n:GL.Size, ids:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenTransformFeedbacks = unsafeBitCast(get_fp("glGenTransformFeedbacks", support: [ss358, ss366, ss101]), to: Swift.type(of: fp_glGenTransformFeedbacks))
    fp_glGenTransformFeedbacks(n, ids)
}
public
func glGenTransformFeedbacks(n:GL.Size, ids:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenTransformFeedbacks(n, ids)
}
public
func glGenTransformFeedbacks(_ n:GL.Size, _ ids:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenTransformFeedbacks(n, ids)
}

var fp_glGenTransformFeedbacksNV:@convention(c) (GL.Size, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGenTransformFeedbacksNV
func load_glGenTransformFeedbacksNV(n:GL.Size, ids:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenTransformFeedbacksNV = unsafeBitCast(get_fp("glGenTransformFeedbacksNV", support: [ss273]), to: Swift.type(of: fp_glGenTransformFeedbacksNV))
    fp_glGenTransformFeedbacksNV(n, ids)
}
public
func glGenTransformFeedbacksNV(n:GL.Size, ids:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenTransformFeedbacksNV(n, ids)
}
public
func glGenTransformFeedbacksNV(_ n:GL.Size, _ ids:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenTransformFeedbacksNV(n, ids)
}

var fp_glGenVertexArrays:@convention(c) (GL.Size, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGenVertexArrays
func load_glGenVertexArrays(n:GL.Size, arrays:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenVertexArrays = unsafeBitCast(get_fp("glGenVertexArrays", support: [ss354, ss366, ss105]), to: Swift.type(of: fp_glGenVertexArrays))
    fp_glGenVertexArrays(n, arrays)
}
public
func glGenVertexArrays(n:GL.Size, arrays:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenVertexArrays(n, arrays)
}
public
func glGenVertexArrays(_ n:GL.Size, _ arrays:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenVertexArrays(n, arrays)
}

var fp_glGenVertexArraysAPPLE:@convention(c) (GL.Size, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGenVertexArraysAPPLE
func load_glGenVertexArraysAPPLE(n:GL.Size, arrays:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenVertexArraysAPPLE = unsafeBitCast(get_fp("glGenVertexArraysAPPLE", support: [ss25]), to: Swift.type(of: fp_glGenVertexArraysAPPLE))
    fp_glGenVertexArraysAPPLE(n, arrays)
}
public
func glGenVertexArraysAPPLE(n:GL.Size, arrays:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenVertexArraysAPPLE(n, arrays)
}
public
func glGenVertexArraysAPPLE(_ n:GL.Size, _ arrays:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenVertexArraysAPPLE(n, arrays)
}

var fp_glGenVertexArraysOES:@convention(c) (GL.Size, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGenVertexArraysOES
func load_glGenVertexArraysOES(n:GL.Size, arrays:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenVertexArraysOES = unsafeBitCast(get_fp("glGenVertexArraysOES", support: [ss310]), to: Swift.type(of: fp_glGenVertexArraysOES))
    fp_glGenVertexArraysOES(n, arrays)
}
public
func glGenVertexArraysOES(n:GL.Size, arrays:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenVertexArraysOES(n, arrays)
}
public
func glGenVertexArraysOES(_ n:GL.Size, _ arrays:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGenVertexArraysOES(n, arrays)
}

var fp_glGenVertexShadersEXT:@convention(c) (GL.UInt) -> GL.UInt = load_glGenVertexShadersEXT
func load_glGenVertexShadersEXT(range:GL.UInt) -> GL.UInt
{
    fp_glGenVertexShadersEXT = unsafeBitCast(get_fp("glGenVertexShadersEXT", support: [ss204]), to: Swift.type(of: fp_glGenVertexShadersEXT))
    return fp_glGenVertexShadersEXT(range)
}
public
func glGenVertexShadersEXT(range:GL.UInt) -> GL.UInt
{
    return fp_glGenVertexShadersEXT(range)
}
public
func glGenVertexShadersEXT(_ range:GL.UInt) -> GL.UInt
{
    return fp_glGenVertexShadersEXT(range)
}

var fp_glGenerateMipmap:@convention(c) (GL.Enum) -> () = load_glGenerateMipmap
func load_glGenerateMipmap(target:GL.Enum)
{
    fp_glGenerateMipmap = unsafeBitCast(get_fp("glGenerateMipmap", support: [ss354, ss365, ss53]), to: Swift.type(of: fp_glGenerateMipmap))
    fp_glGenerateMipmap(target)
}
public
func glGenerateMipmap(target:GL.Enum)
{
    fp_glGenerateMipmap(target)
}
public
func glGenerateMipmap(_ target:GL.Enum)
{
    fp_glGenerateMipmap(target)
}

var fp_glGenerateMipmapEXT:@convention(c) (GL.Enum) -> () = load_glGenerateMipmapEXT
func load_glGenerateMipmapEXT(target:GL.Enum)
{
    fp_glGenerateMipmapEXT = unsafeBitCast(get_fp("glGenerateMipmapEXT", support: [ss155]), to: Swift.type(of: fp_glGenerateMipmapEXT))
    fp_glGenerateMipmapEXT(target)
}
public
func glGenerateMipmapEXT(target:GL.Enum)
{
    fp_glGenerateMipmapEXT(target)
}
public
func glGenerateMipmapEXT(_ target:GL.Enum)
{
    fp_glGenerateMipmapEXT(target)
}

var fp_glGenerateMipmapOES:@convention(c) (GL.Enum) -> () = load_glGenerateMipmapOES
func load_glGenerateMipmapOES(target:GL.Enum)
{
    fp_glGenerateMipmapOES = unsafeBitCast(get_fp("glGenerateMipmapOES", support: [ss293]), to: Swift.type(of: fp_glGenerateMipmapOES))
    fp_glGenerateMipmapOES(target)
}
public
func glGenerateMipmapOES(target:GL.Enum)
{
    fp_glGenerateMipmapOES(target)
}
public
func glGenerateMipmapOES(_ target:GL.Enum)
{
    fp_glGenerateMipmapOES(target)
}

var fp_glGenerateMultiTexMipmapEXT:@convention(c) (GL.Enum, GL.Enum) -> () = load_glGenerateMultiTexMipmapEXT
func load_glGenerateMultiTexMipmapEXT(texunit:GL.Enum, target:GL.Enum)
{
    fp_glGenerateMultiTexMipmapEXT = unsafeBitCast(get_fp("glGenerateMultiTexMipmapEXT", support: [ss143]), to: Swift.type(of: fp_glGenerateMultiTexMipmapEXT))
    fp_glGenerateMultiTexMipmapEXT(texunit, target)
}
public
func glGenerateMultiTexMipmapEXT(texunit:GL.Enum, target:GL.Enum)
{
    fp_glGenerateMultiTexMipmapEXT(texunit, target)
}
public
func glGenerateMultiTexMipmapEXT(_ texunit:GL.Enum, _ target:GL.Enum)
{
    fp_glGenerateMultiTexMipmapEXT(texunit, target)
}

var fp_glGenerateTextureMipmap:@convention(c) (GL.UInt) -> () = load_glGenerateTextureMipmap
func load_glGenerateTextureMipmap(texture:GL.UInt)
{
    fp_glGenerateTextureMipmap = unsafeBitCast(get_fp("glGenerateTextureMipmap", support: [ss363, ss42]), to: Swift.type(of: fp_glGenerateTextureMipmap))
    fp_glGenerateTextureMipmap(texture)
}
public
func glGenerateTextureMipmap(texture:GL.UInt)
{
    fp_glGenerateTextureMipmap(texture)
}
public
func glGenerateTextureMipmap(_ texture:GL.UInt)
{
    fp_glGenerateTextureMipmap(texture)
}

var fp_glGenerateTextureMipmapEXT:@convention(c) (GL.UInt, GL.Enum) -> () = load_glGenerateTextureMipmapEXT
func load_glGenerateTextureMipmapEXT(texture:GL.UInt, target:GL.Enum)
{
    fp_glGenerateTextureMipmapEXT = unsafeBitCast(get_fp("glGenerateTextureMipmapEXT", support: [ss143]), to: Swift.type(of: fp_glGenerateTextureMipmapEXT))
    fp_glGenerateTextureMipmapEXT(texture, target)
}
public
func glGenerateTextureMipmapEXT(texture:GL.UInt, target:GL.Enum)
{
    fp_glGenerateTextureMipmapEXT(texture, target)
}
public
func glGenerateTextureMipmapEXT(_ texture:GL.UInt, _ target:GL.Enum)
{
    fp_glGenerateTextureMipmapEXT(texture, target)
}

var fp_glGetActiveAtomicCounterBufferiv:@convention(c) (GL.UInt, GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetActiveAtomicCounterBufferiv
func load_glGetActiveAtomicCounterBufferiv(program:GL.UInt, bufferIndex:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetActiveAtomicCounterBufferiv = unsafeBitCast(get_fp("glGetActiveAtomicCounterBufferiv", support: [ss360, ss81]), to: Swift.type(of: fp_glGetActiveAtomicCounterBufferiv))
    fp_glGetActiveAtomicCounterBufferiv(program, bufferIndex, pname, params)
}
public
func glGetActiveAtomicCounterBufferiv(program:GL.UInt, bufferIndex:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetActiveAtomicCounterBufferiv(program, bufferIndex, pname, params)
}
public
func glGetActiveAtomicCounterBufferiv(_ program:GL.UInt, _ bufferIndex:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetActiveAtomicCounterBufferiv(program, bufferIndex, pname, params)
}

var fp_glGetActiveAttrib:@convention(c) (GL.UInt, GL.UInt, GL.Size, UnsafeMutablePointer<GL.Size>?, UnsafeMutablePointer<GL.Int>?, UnsafeMutablePointer<GL.Enum>?, UnsafeMutablePointer<GL.Char>?) -> () = load_glGetActiveAttrib
func load_glGetActiveAttrib(program:GL.UInt, index:GL.UInt, bufSize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, size:UnsafeMutablePointer<GL.Int>?, type:UnsafeMutablePointer<GL.Enum>?, name:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetActiveAttrib = unsafeBitCast(get_fp("glGetActiveAttrib", support: [ss352, ss365]), to: Swift.type(of: fp_glGetActiveAttrib))
    fp_glGetActiveAttrib(program, index, bufSize, length, size, type, name)
}
public
func glGetActiveAttrib(program:GL.UInt, index:GL.UInt, bufSize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, size:UnsafeMutablePointer<GL.Int>?, type:UnsafeMutablePointer<GL.Enum>?, name:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetActiveAttrib(program, index, bufSize, length, size, type, name)
}
public
func glGetActiveAttrib(_ program:GL.UInt, _ index:GL.UInt, _ bufSize:GL.Size, _ length:UnsafeMutablePointer<GL.Size>?, _ size:UnsafeMutablePointer<GL.Int>?, _ type:UnsafeMutablePointer<GL.Enum>?, _ name:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetActiveAttrib(program, index, bufSize, length, size, type, name)
}

var fp_glGetActiveAttribARB:@convention(c) (GL.HandleARB, GL.UInt, GL.Size, UnsafeMutablePointer<GL.Size>?, UnsafeMutablePointer<GL.Int>?, UnsafeMutablePointer<GL.Enum>?, UnsafeMutablePointer<GL.CharARB>?) -> () = load_glGetActiveAttribARB
func load_glGetActiveAttribARB(programObj:GL.HandleARB, index:GL.UInt, maxLength:GL.Size, length:UnsafeMutablePointer<GL.Size>?, size:UnsafeMutablePointer<GL.Int>?, type:UnsafeMutablePointer<GL.Enum>?, name:UnsafeMutablePointer<GL.CharARB>?)
{
    fp_glGetActiveAttribARB = unsafeBitCast(get_fp("glGetActiveAttribARB", support: [ss111]), to: Swift.type(of: fp_glGetActiveAttribARB))
    fp_glGetActiveAttribARB(programObj, index, maxLength, length, size, type, name)
}
public
func glGetActiveAttribARB(programObj:GL.HandleARB, index:GL.UInt, maxLength:GL.Size, length:UnsafeMutablePointer<GL.Size>?, size:UnsafeMutablePointer<GL.Int>?, type:UnsafeMutablePointer<GL.Enum>?, name:UnsafeMutablePointer<GL.CharARB>?)
{
    fp_glGetActiveAttribARB(programObj, index, maxLength, length, size, type, name)
}
public
func glGetActiveAttribARB(_ programObj:GL.HandleARB, _ index:GL.UInt, _ maxLength:GL.Size, _ length:UnsafeMutablePointer<GL.Size>?, _ size:UnsafeMutablePointer<GL.Int>?, _ type:UnsafeMutablePointer<GL.Enum>?, _ name:UnsafeMutablePointer<GL.CharARB>?)
{
    fp_glGetActiveAttribARB(programObj, index, maxLength, length, size, type, name)
}

var fp_glGetActiveSubroutineName:@convention(c) (GL.UInt, GL.Enum, GL.UInt, GL.Size, UnsafeMutablePointer<GL.Size>?, UnsafeMutablePointer<GL.Char>?) -> () = load_glGetActiveSubroutineName
func load_glGetActiveSubroutineName(program:GL.UInt, shadertype:GL.Enum, index:GL.UInt, bufsize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, name:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetActiveSubroutineName = unsafeBitCast(get_fp("glGetActiveSubroutineName", support: [ss358, ss85]), to: Swift.type(of: fp_glGetActiveSubroutineName))
    fp_glGetActiveSubroutineName(program, shadertype, index, bufsize, length, name)
}
public
func glGetActiveSubroutineName(program:GL.UInt, shadertype:GL.Enum, index:GL.UInt, bufsize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, name:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetActiveSubroutineName(program, shadertype, index, bufsize, length, name)
}
public
func glGetActiveSubroutineName(_ program:GL.UInt, _ shadertype:GL.Enum, _ index:GL.UInt, _ bufsize:GL.Size, _ length:UnsafeMutablePointer<GL.Size>?, _ name:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetActiveSubroutineName(program, shadertype, index, bufsize, length, name)
}

var fp_glGetActiveSubroutineUniformName:@convention(c) (GL.UInt, GL.Enum, GL.UInt, GL.Size, UnsafeMutablePointer<GL.Size>?, UnsafeMutablePointer<GL.Char>?) -> () = load_glGetActiveSubroutineUniformName
func load_glGetActiveSubroutineUniformName(program:GL.UInt, shadertype:GL.Enum, index:GL.UInt, bufsize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, name:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetActiveSubroutineUniformName = unsafeBitCast(get_fp("glGetActiveSubroutineUniformName", support: [ss358, ss85]), to: Swift.type(of: fp_glGetActiveSubroutineUniformName))
    fp_glGetActiveSubroutineUniformName(program, shadertype, index, bufsize, length, name)
}
public
func glGetActiveSubroutineUniformName(program:GL.UInt, shadertype:GL.Enum, index:GL.UInt, bufsize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, name:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetActiveSubroutineUniformName(program, shadertype, index, bufsize, length, name)
}
public
func glGetActiveSubroutineUniformName(_ program:GL.UInt, _ shadertype:GL.Enum, _ index:GL.UInt, _ bufsize:GL.Size, _ length:UnsafeMutablePointer<GL.Size>?, _ name:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetActiveSubroutineUniformName(program, shadertype, index, bufsize, length, name)
}

var fp_glGetActiveSubroutineUniformiv:@convention(c) (GL.UInt, GL.Enum, GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetActiveSubroutineUniformiv
func load_glGetActiveSubroutineUniformiv(program:GL.UInt, shadertype:GL.Enum, index:GL.UInt, pname:GL.Enum, values:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetActiveSubroutineUniformiv = unsafeBitCast(get_fp("glGetActiveSubroutineUniformiv", support: [ss358, ss85]), to: Swift.type(of: fp_glGetActiveSubroutineUniformiv))
    fp_glGetActiveSubroutineUniformiv(program, shadertype, index, pname, values)
}
public
func glGetActiveSubroutineUniformiv(program:GL.UInt, shadertype:GL.Enum, index:GL.UInt, pname:GL.Enum, values:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetActiveSubroutineUniformiv(program, shadertype, index, pname, values)
}
public
func glGetActiveSubroutineUniformiv(_ program:GL.UInt, _ shadertype:GL.Enum, _ index:GL.UInt, _ pname:GL.Enum, _ values:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetActiveSubroutineUniformiv(program, shadertype, index, pname, values)
}

var fp_glGetActiveUniform:@convention(c) (GL.UInt, GL.UInt, GL.Size, UnsafeMutablePointer<GL.Size>?, UnsafeMutablePointer<GL.Int>?, UnsafeMutablePointer<GL.Enum>?, UnsafeMutablePointer<GL.Char>?) -> () = load_glGetActiveUniform
func load_glGetActiveUniform(program:GL.UInt, index:GL.UInt, bufSize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, size:UnsafeMutablePointer<GL.Int>?, type:UnsafeMutablePointer<GL.Enum>?, name:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetActiveUniform = unsafeBitCast(get_fp("glGetActiveUniform", support: [ss352, ss365]), to: Swift.type(of: fp_glGetActiveUniform))
    fp_glGetActiveUniform(program, index, bufSize, length, size, type, name)
}
public
func glGetActiveUniform(program:GL.UInt, index:GL.UInt, bufSize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, size:UnsafeMutablePointer<GL.Int>?, type:UnsafeMutablePointer<GL.Enum>?, name:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetActiveUniform(program, index, bufSize, length, size, type, name)
}
public
func glGetActiveUniform(_ program:GL.UInt, _ index:GL.UInt, _ bufSize:GL.Size, _ length:UnsafeMutablePointer<GL.Size>?, _ size:UnsafeMutablePointer<GL.Int>?, _ type:UnsafeMutablePointer<GL.Enum>?, _ name:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetActiveUniform(program, index, bufSize, length, size, type, name)
}

var fp_glGetActiveUniformARB:@convention(c) (GL.HandleARB, GL.UInt, GL.Size, UnsafeMutablePointer<GL.Size>?, UnsafeMutablePointer<GL.Int>?, UnsafeMutablePointer<GL.Enum>?, UnsafeMutablePointer<GL.CharARB>?) -> () = load_glGetActiveUniformARB
func load_glGetActiveUniformARB(programObj:GL.HandleARB, index:GL.UInt, maxLength:GL.Size, length:UnsafeMutablePointer<GL.Size>?, size:UnsafeMutablePointer<GL.Int>?, type:UnsafeMutablePointer<GL.Enum>?, name:UnsafeMutablePointer<GL.CharARB>?)
{
    fp_glGetActiveUniformARB = unsafeBitCast(get_fp("glGetActiveUniformARB", support: [ss83]), to: Swift.type(of: fp_glGetActiveUniformARB))
    fp_glGetActiveUniformARB(programObj, index, maxLength, length, size, type, name)
}
public
func glGetActiveUniformARB(programObj:GL.HandleARB, index:GL.UInt, maxLength:GL.Size, length:UnsafeMutablePointer<GL.Size>?, size:UnsafeMutablePointer<GL.Int>?, type:UnsafeMutablePointer<GL.Enum>?, name:UnsafeMutablePointer<GL.CharARB>?)
{
    fp_glGetActiveUniformARB(programObj, index, maxLength, length, size, type, name)
}
public
func glGetActiveUniformARB(_ programObj:GL.HandleARB, _ index:GL.UInt, _ maxLength:GL.Size, _ length:UnsafeMutablePointer<GL.Size>?, _ size:UnsafeMutablePointer<GL.Int>?, _ type:UnsafeMutablePointer<GL.Enum>?, _ name:UnsafeMutablePointer<GL.CharARB>?)
{
    fp_glGetActiveUniformARB(programObj, index, maxLength, length, size, type, name)
}

var fp_glGetActiveUniformBlockName:@convention(c) (GL.UInt, GL.UInt, GL.Size, UnsafeMutablePointer<GL.Size>?, UnsafeMutablePointer<GL.Char>?) -> () = load_glGetActiveUniformBlockName
func load_glGetActiveUniformBlockName(program:GL.UInt, uniformBlockIndex:GL.UInt, bufSize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, uniformBlockName:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetActiveUniformBlockName = unsafeBitCast(get_fp("glGetActiveUniformBlockName", support: [ss355, ss366, ss104]), to: Swift.type(of: fp_glGetActiveUniformBlockName))
    fp_glGetActiveUniformBlockName(program, uniformBlockIndex, bufSize, length, uniformBlockName)
}
public
func glGetActiveUniformBlockName(program:GL.UInt, uniformBlockIndex:GL.UInt, bufSize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, uniformBlockName:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetActiveUniformBlockName(program, uniformBlockIndex, bufSize, length, uniformBlockName)
}
public
func glGetActiveUniformBlockName(_ program:GL.UInt, _ uniformBlockIndex:GL.UInt, _ bufSize:GL.Size, _ length:UnsafeMutablePointer<GL.Size>?, _ uniformBlockName:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetActiveUniformBlockName(program, uniformBlockIndex, bufSize, length, uniformBlockName)
}

var fp_glGetActiveUniformBlockiv:@convention(c) (GL.UInt, GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetActiveUniformBlockiv
func load_glGetActiveUniformBlockiv(program:GL.UInt, uniformBlockIndex:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetActiveUniformBlockiv = unsafeBitCast(get_fp("glGetActiveUniformBlockiv", support: [ss355, ss366, ss104]), to: Swift.type(of: fp_glGetActiveUniformBlockiv))
    fp_glGetActiveUniformBlockiv(program, uniformBlockIndex, pname, params)
}
public
func glGetActiveUniformBlockiv(program:GL.UInt, uniformBlockIndex:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetActiveUniformBlockiv(program, uniformBlockIndex, pname, params)
}
public
func glGetActiveUniformBlockiv(_ program:GL.UInt, _ uniformBlockIndex:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetActiveUniformBlockiv(program, uniformBlockIndex, pname, params)
}

var fp_glGetActiveUniformName:@convention(c) (GL.UInt, GL.UInt, GL.Size, UnsafeMutablePointer<GL.Size>?, UnsafeMutablePointer<GL.Char>?) -> () = load_glGetActiveUniformName
func load_glGetActiveUniformName(program:GL.UInt, uniformIndex:GL.UInt, bufSize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, uniformName:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetActiveUniformName = unsafeBitCast(get_fp("glGetActiveUniformName", support: [ss355, ss104]), to: Swift.type(of: fp_glGetActiveUniformName))
    fp_glGetActiveUniformName(program, uniformIndex, bufSize, length, uniformName)
}
public
func glGetActiveUniformName(program:GL.UInt, uniformIndex:GL.UInt, bufSize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, uniformName:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetActiveUniformName(program, uniformIndex, bufSize, length, uniformName)
}
public
func glGetActiveUniformName(_ program:GL.UInt, _ uniformIndex:GL.UInt, _ bufSize:GL.Size, _ length:UnsafeMutablePointer<GL.Size>?, _ uniformName:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetActiveUniformName(program, uniformIndex, bufSize, length, uniformName)
}

var fp_glGetActiveUniformsiv:@convention(c) (GL.UInt, GL.Size, UnsafePointer<GL.UInt>?, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetActiveUniformsiv
func load_glGetActiveUniformsiv(program:GL.UInt, uniformCount:GL.Size, uniformIndices:UnsafePointer<GL.UInt>?, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetActiveUniformsiv = unsafeBitCast(get_fp("glGetActiveUniformsiv", support: [ss355, ss366, ss104]), to: Swift.type(of: fp_glGetActiveUniformsiv))
    fp_glGetActiveUniformsiv(program, uniformCount, uniformIndices, pname, params)
}
public
func glGetActiveUniformsiv(program:GL.UInt, uniformCount:GL.Size, uniformIndices:UnsafePointer<GL.UInt>?, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetActiveUniformsiv(program, uniformCount, uniformIndices, pname, params)
}
public
func glGetActiveUniformsiv(_ program:GL.UInt, _ uniformCount:GL.Size, _ uniformIndices:UnsafePointer<GL.UInt>?, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetActiveUniformsiv(program, uniformCount, uniformIndices, pname, params)
}

var fp_glGetActiveVaryingNV:@convention(c) (GL.UInt, GL.UInt, GL.Size, UnsafeMutablePointer<GL.Size>?, UnsafeMutablePointer<GL.Size>?, UnsafeMutablePointer<GL.Enum>?, UnsafeMutablePointer<GL.Char>?) -> () = load_glGetActiveVaryingNV
func load_glGetActiveVaryingNV(program:GL.UInt, index:GL.UInt, bufSize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, size:UnsafeMutablePointer<GL.Size>?, type:UnsafeMutablePointer<GL.Enum>?, name:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetActiveVaryingNV = unsafeBitCast(get_fp("glGetActiveVaryingNV", support: [ss272]), to: Swift.type(of: fp_glGetActiveVaryingNV))
    fp_glGetActiveVaryingNV(program, index, bufSize, length, size, type, name)
}
public
func glGetActiveVaryingNV(program:GL.UInt, index:GL.UInt, bufSize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, size:UnsafeMutablePointer<GL.Size>?, type:UnsafeMutablePointer<GL.Enum>?, name:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetActiveVaryingNV(program, index, bufSize, length, size, type, name)
}
public
func glGetActiveVaryingNV(_ program:GL.UInt, _ index:GL.UInt, _ bufSize:GL.Size, _ length:UnsafeMutablePointer<GL.Size>?, _ size:UnsafeMutablePointer<GL.Size>?, _ type:UnsafeMutablePointer<GL.Enum>?, _ name:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetActiveVaryingNV(program, index, bufSize, length, size, type, name)
}

var fp_glGetArrayObjectfvATI:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetArrayObjectfvATI
func load_glGetArrayObjectfvATI(array:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetArrayObjectfvATI = unsafeBitCast(get_fp("glGetArrayObjectfvATI", support: [ss122]), to: Swift.type(of: fp_glGetArrayObjectfvATI))
    fp_glGetArrayObjectfvATI(array, pname, params)
}
public
func glGetArrayObjectfvATI(array:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetArrayObjectfvATI(array, pname, params)
}
public
func glGetArrayObjectfvATI(_ array:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetArrayObjectfvATI(array, pname, params)
}

var fp_glGetArrayObjectivATI:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetArrayObjectivATI
func load_glGetArrayObjectivATI(array:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetArrayObjectivATI = unsafeBitCast(get_fp("glGetArrayObjectivATI", support: [ss122]), to: Swift.type(of: fp_glGetArrayObjectivATI))
    fp_glGetArrayObjectivATI(array, pname, params)
}
public
func glGetArrayObjectivATI(array:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetArrayObjectivATI(array, pname, params)
}
public
func glGetArrayObjectivATI(_ array:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetArrayObjectivATI(array, pname, params)
}

var fp_glGetAttachedObjectsARB:@convention(c) (GL.HandleARB, GL.Size, UnsafeMutablePointer<GL.Size>?, UnsafeMutablePointer<GL.HandleARB>?) -> () = load_glGetAttachedObjectsARB
func load_glGetAttachedObjectsARB(containerObj:GL.HandleARB, maxCount:GL.Size, count:UnsafeMutablePointer<GL.Size>?, obj:UnsafeMutablePointer<GL.HandleARB>?)
{
    fp_glGetAttachedObjectsARB = unsafeBitCast(get_fp("glGetAttachedObjectsARB", support: [ss83]), to: Swift.type(of: fp_glGetAttachedObjectsARB))
    fp_glGetAttachedObjectsARB(containerObj, maxCount, count, obj)
}
public
func glGetAttachedObjectsARB(containerObj:GL.HandleARB, maxCount:GL.Size, count:UnsafeMutablePointer<GL.Size>?, obj:UnsafeMutablePointer<GL.HandleARB>?)
{
    fp_glGetAttachedObjectsARB(containerObj, maxCount, count, obj)
}
public
func glGetAttachedObjectsARB(_ containerObj:GL.HandleARB, _ maxCount:GL.Size, _ count:UnsafeMutablePointer<GL.Size>?, _ obj:UnsafeMutablePointer<GL.HandleARB>?)
{
    fp_glGetAttachedObjectsARB(containerObj, maxCount, count, obj)
}

var fp_glGetAttachedShaders:@convention(c) (GL.UInt, GL.Size, UnsafeMutablePointer<GL.Size>?, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGetAttachedShaders
func load_glGetAttachedShaders(program:GL.UInt, maxCount:GL.Size, count:UnsafeMutablePointer<GL.Size>?, shaders:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetAttachedShaders = unsafeBitCast(get_fp("glGetAttachedShaders", support: [ss352, ss365]), to: Swift.type(of: fp_glGetAttachedShaders))
    fp_glGetAttachedShaders(program, maxCount, count, shaders)
}
public
func glGetAttachedShaders(program:GL.UInt, maxCount:GL.Size, count:UnsafeMutablePointer<GL.Size>?, shaders:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetAttachedShaders(program, maxCount, count, shaders)
}
public
func glGetAttachedShaders(_ program:GL.UInt, _ maxCount:GL.Size, _ count:UnsafeMutablePointer<GL.Size>?, _ shaders:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetAttachedShaders(program, maxCount, count, shaders)
}

var fp_glGetAttribLocation:@convention(c) (GL.UInt, UnsafePointer<GL.Char>?) -> GL.Int = load_glGetAttribLocation
func load_glGetAttribLocation(program:GL.UInt, name:UnsafePointer<GL.Char>?) -> GL.Int
{
    fp_glGetAttribLocation = unsafeBitCast(get_fp("glGetAttribLocation", support: [ss352, ss365]), to: Swift.type(of: fp_glGetAttribLocation))
    return fp_glGetAttribLocation(program, name)
}
public
func glGetAttribLocation(program:GL.UInt, name:UnsafePointer<GL.Char>?) -> GL.Int
{
    return fp_glGetAttribLocation(program, name)
}
public
func glGetAttribLocation(_ program:GL.UInt, _ name:UnsafePointer<GL.Char>?) -> GL.Int
{
    return fp_glGetAttribLocation(program, name)
}

var fp_glGetAttribLocationARB:@convention(c) (GL.HandleARB, UnsafePointer<GL.CharARB>?) -> GL.Int = load_glGetAttribLocationARB
func load_glGetAttribLocationARB(programObj:GL.HandleARB, name:UnsafePointer<GL.CharARB>?) -> GL.Int
{
    fp_glGetAttribLocationARB = unsafeBitCast(get_fp("glGetAttribLocationARB", support: [ss111]), to: Swift.type(of: fp_glGetAttribLocationARB))
    return fp_glGetAttribLocationARB(programObj, name)
}
public
func glGetAttribLocationARB(programObj:GL.HandleARB, name:UnsafePointer<GL.CharARB>?) -> GL.Int
{
    return fp_glGetAttribLocationARB(programObj, name)
}
public
func glGetAttribLocationARB(_ programObj:GL.HandleARB, _ name:UnsafePointer<GL.CharARB>?) -> GL.Int
{
    return fp_glGetAttribLocationARB(programObj, name)
}

var fp_glGetBooleanIndexedvEXT:@convention(c) (GL.Enum, GL.UInt, UnsafeMutablePointer<GL.Bool>?) -> () = load_glGetBooleanIndexedvEXT
func load_glGetBooleanIndexedvEXT(target:GL.Enum, index:GL.UInt, data:UnsafeMutablePointer<GL.Bool>?)
{
    fp_glGetBooleanIndexedvEXT = unsafeBitCast(get_fp("glGetBooleanIndexedvEXT", support: [ss143, ss148]), to: Swift.type(of: fp_glGetBooleanIndexedvEXT))
    fp_glGetBooleanIndexedvEXT(target, index, data)
}
public
func glGetBooleanIndexedvEXT(target:GL.Enum, index:GL.UInt, data:UnsafeMutablePointer<GL.Bool>?)
{
    fp_glGetBooleanIndexedvEXT(target, index, data)
}
public
func glGetBooleanIndexedvEXT(_ target:GL.Enum, _ index:GL.UInt, _ data:UnsafeMutablePointer<GL.Bool>?)
{
    fp_glGetBooleanIndexedvEXT(target, index, data)
}

var fp_glGetBooleani_v:@convention(c) (GL.Enum, GL.UInt, UnsafeMutablePointer<GL.Bool>?) -> () = load_glGetBooleani_v
func load_glGetBooleani_v(target:GL.Enum, index:GL.UInt, data:UnsafeMutablePointer<GL.Bool>?)
{
    fp_glGetBooleani_v = unsafeBitCast(get_fp("glGetBooleani_v", support: [ss354, ss367]), to: Swift.type(of: fp_glGetBooleani_v))
    fp_glGetBooleani_v(target, index, data)
}
public
func glGetBooleani_v(target:GL.Enum, index:GL.UInt, data:UnsafeMutablePointer<GL.Bool>?)
{
    fp_glGetBooleani_v(target, index, data)
}
public
func glGetBooleani_v(_ target:GL.Enum, _ index:GL.UInt, _ data:UnsafeMutablePointer<GL.Bool>?)
{
    fp_glGetBooleani_v(target, index, data)
}

var fp_glGetBooleanv:@convention(c) (GL.Enum, UnsafeMutablePointer<GL.Bool>?) -> () = load_glGetBooleanv
func load_glGetBooleanv(pname:GL.Enum, data:UnsafeMutablePointer<GL.Bool>?)
{
    fp_glGetBooleanv = unsafeBitCast(get_fp("glGetBooleanv", support: [ss346, ss365]), to: Swift.type(of: fp_glGetBooleanv))
    fp_glGetBooleanv(pname, data)
}
public
func glGetBooleanv(pname:GL.Enum, data:UnsafeMutablePointer<GL.Bool>?)
{
    fp_glGetBooleanv(pname, data)
}
public
func glGetBooleanv(_ pname:GL.Enum, _ data:UnsafeMutablePointer<GL.Bool>?)
{
    fp_glGetBooleanv(pname, data)
}

var fp_glGetBufferParameteri64v:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Int64>?) -> () = load_glGetBufferParameteri64v
func load_glGetBufferParameteri64v(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int64>?)
{
    fp_glGetBufferParameteri64v = unsafeBitCast(get_fp("glGetBufferParameteri64v", support: [ss356, ss366]), to: Swift.type(of: fp_glGetBufferParameteri64v))
    fp_glGetBufferParameteri64v(target, pname, params)
}
public
func glGetBufferParameteri64v(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int64>?)
{
    fp_glGetBufferParameteri64v(target, pname, params)
}
public
func glGetBufferParameteri64v(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int64>?)
{
    fp_glGetBufferParameteri64v(target, pname, params)
}

var fp_glGetBufferParameteriv:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetBufferParameteriv
func load_glGetBufferParameteriv(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetBufferParameteriv = unsafeBitCast(get_fp("glGetBufferParameteriv", support: [ss351, ss365]), to: Swift.type(of: fp_glGetBufferParameteriv))
    fp_glGetBufferParameteriv(target, pname, params)
}
public
func glGetBufferParameteriv(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetBufferParameteriv(target, pname, params)
}
public
func glGetBufferParameteriv(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetBufferParameteriv(target, pname, params)
}

var fp_glGetBufferParameterivARB:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetBufferParameterivARB
func load_glGetBufferParameterivARB(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetBufferParameterivARB = unsafeBitCast(get_fp("glGetBufferParameterivARB", support: [ss109]), to: Swift.type(of: fp_glGetBufferParameterivARB))
    fp_glGetBufferParameterivARB(target, pname, params)
}
public
func glGetBufferParameterivARB(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetBufferParameterivARB(target, pname, params)
}
public
func glGetBufferParameterivARB(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetBufferParameterivARB(target, pname, params)
}

var fp_glGetBufferParameterui64vNV:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.UInt64EXT>?) -> () = load_glGetBufferParameterui64vNV
func load_glGetBufferParameterui64vNV(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.UInt64EXT>?)
{
    fp_glGetBufferParameterui64vNV = unsafeBitCast(get_fp("glGetBufferParameterui64vNV", support: [ss269]), to: Swift.type(of: fp_glGetBufferParameterui64vNV))
    fp_glGetBufferParameterui64vNV(target, pname, params)
}
public
func glGetBufferParameterui64vNV(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.UInt64EXT>?)
{
    fp_glGetBufferParameterui64vNV(target, pname, params)
}
public
func glGetBufferParameterui64vNV(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.UInt64EXT>?)
{
    fp_glGetBufferParameterui64vNV(target, pname, params)
}

var fp_glGetBufferPointerv:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<UnsafeMutableRawPointer?>?) -> () = load_glGetBufferPointerv
func load_glGetBufferPointerv(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    fp_glGetBufferPointerv = unsafeBitCast(get_fp("glGetBufferPointerv", support: [ss351, ss366]), to: Swift.type(of: fp_glGetBufferPointerv))
    fp_glGetBufferPointerv(target, pname, params)
}
public
func glGetBufferPointerv(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    fp_glGetBufferPointerv(target, pname, params)
}
public
func glGetBufferPointerv(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    fp_glGetBufferPointerv(target, pname, params)
}

var fp_glGetBufferPointervARB:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<UnsafeMutableRawPointer?>?) -> () = load_glGetBufferPointervARB
func load_glGetBufferPointervARB(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    fp_glGetBufferPointervARB = unsafeBitCast(get_fp("glGetBufferPointervARB", support: [ss109]), to: Swift.type(of: fp_glGetBufferPointervARB))
    fp_glGetBufferPointervARB(target, pname, params)
}
public
func glGetBufferPointervARB(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    fp_glGetBufferPointervARB(target, pname, params)
}
public
func glGetBufferPointervARB(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    fp_glGetBufferPointervARB(target, pname, params)
}

var fp_glGetBufferPointervOES:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<UnsafeMutableRawPointer?>?) -> () = load_glGetBufferPointervOES
func load_glGetBufferPointervOES(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    fp_glGetBufferPointervOES = unsafeBitCast(get_fp("glGetBufferPointervOES", support: [ss296]), to: Swift.type(of: fp_glGetBufferPointervOES))
    fp_glGetBufferPointervOES(target, pname, params)
}
public
func glGetBufferPointervOES(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    fp_glGetBufferPointervOES(target, pname, params)
}
public
func glGetBufferPointervOES(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    fp_glGetBufferPointervOES(target, pname, params)
}

var fp_glGetBufferSubData:@convention(c) (GL.Enum, GL.IntPointer, GL.SizePointer, UnsafeMutableRawPointer?) -> () = load_glGetBufferSubData
func load_glGetBufferSubData(target:GL.Enum, offset:GL.IntPointer, size:GL.SizePointer, data:UnsafeMutableRawPointer?)
{
    fp_glGetBufferSubData = unsafeBitCast(get_fp("glGetBufferSubData", support: [ss351]), to: Swift.type(of: fp_glGetBufferSubData))
    fp_glGetBufferSubData(target, offset, size, data)
}
public
func glGetBufferSubData(target:GL.Enum, offset:GL.IntPointer, size:GL.SizePointer, data:UnsafeMutableRawPointer?)
{
    fp_glGetBufferSubData(target, offset, size, data)
}
public
func glGetBufferSubData(_ target:GL.Enum, _ offset:GL.IntPointer, _ size:GL.SizePointer, _ data:UnsafeMutableRawPointer?)
{
    fp_glGetBufferSubData(target, offset, size, data)
}

var fp_glGetBufferSubDataARB:@convention(c) (GL.Enum, GL.IntPointerARB, GL.SizePointerARB, UnsafeMutableRawPointer?) -> () = load_glGetBufferSubDataARB
func load_glGetBufferSubDataARB(target:GL.Enum, offset:GL.IntPointerARB, size:GL.SizePointerARB, data:UnsafeMutableRawPointer?)
{
    fp_glGetBufferSubDataARB = unsafeBitCast(get_fp("glGetBufferSubDataARB", support: [ss109]), to: Swift.type(of: fp_glGetBufferSubDataARB))
    fp_glGetBufferSubDataARB(target, offset, size, data)
}
public
func glGetBufferSubDataARB(target:GL.Enum, offset:GL.IntPointerARB, size:GL.SizePointerARB, data:UnsafeMutableRawPointer?)
{
    fp_glGetBufferSubDataARB(target, offset, size, data)
}
public
func glGetBufferSubDataARB(_ target:GL.Enum, _ offset:GL.IntPointerARB, _ size:GL.SizePointerARB, _ data:UnsafeMutableRawPointer?)
{
    fp_glGetBufferSubDataARB(target, offset, size, data)
}

var fp_glGetClipPlane:@convention(c) (GL.Enum, UnsafeMutablePointer<GL.Double>?) -> () = load_glGetClipPlane
func load_glGetClipPlane(plane:GL.Enum, equation:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetClipPlane = unsafeBitCast(get_fp("glGetClipPlane", support: [ss346, ss369]), to: Swift.type(of: fp_glGetClipPlane))
    fp_glGetClipPlane(plane, equation)
}
public
func glGetClipPlane(plane:GL.Enum, equation:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetClipPlane(plane, equation)
}
public
func glGetClipPlane(_ plane:GL.Enum, _ equation:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetClipPlane(plane, equation)
}

var fp_glGetClipPlanef:@convention(c) (GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetClipPlanef
func load_glGetClipPlanef(plane:GL.Enum, equation:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetClipPlanef = unsafeBitCast(get_fp("glGetClipPlanef", support: [ss364]), to: Swift.type(of: fp_glGetClipPlanef))
    fp_glGetClipPlanef(plane, equation)
}
public
func glGetClipPlanef(plane:GL.Enum, equation:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetClipPlanef(plane, equation)
}
public
func glGetClipPlanef(_ plane:GL.Enum, _ equation:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetClipPlanef(plane, equation)
}

var fp_glGetClipPlanefOES:@convention(c) (GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetClipPlanefOES
func load_glGetClipPlanefOES(plane:GL.Enum, equation:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetClipPlanefOES = unsafeBitCast(get_fp("glGetClipPlanefOES", support: [ss302]), to: Swift.type(of: fp_glGetClipPlanefOES))
    fp_glGetClipPlanefOES(plane, equation)
}
public
func glGetClipPlanefOES(plane:GL.Enum, equation:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetClipPlanefOES(plane, equation)
}
public
func glGetClipPlanefOES(_ plane:GL.Enum, _ equation:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetClipPlanefOES(plane, equation)
}

var fp_glGetClipPlanex:@convention(c) (GL.Enum, UnsafeMutablePointer<GL.Fixed>?) -> () = load_glGetClipPlanex
func load_glGetClipPlanex(plane:GL.Enum, equation:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetClipPlanex = unsafeBitCast(get_fp("glGetClipPlanex", support: [ss364]), to: Swift.type(of: fp_glGetClipPlanex))
    fp_glGetClipPlanex(plane, equation)
}
public
func glGetClipPlanex(plane:GL.Enum, equation:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetClipPlanex(plane, equation)
}
public
func glGetClipPlanex(_ plane:GL.Enum, _ equation:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetClipPlanex(plane, equation)
}

var fp_glGetClipPlanexOES:@convention(c) (GL.Enum, UnsafeMutablePointer<GL.Fixed>?) -> () = load_glGetClipPlanexOES
func load_glGetClipPlanexOES(plane:GL.Enum, equation:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetClipPlanexOES = unsafeBitCast(get_fp("glGetClipPlanexOES", support: [ss292]), to: Swift.type(of: fp_glGetClipPlanexOES))
    fp_glGetClipPlanexOES(plane, equation)
}
public
func glGetClipPlanexOES(plane:GL.Enum, equation:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetClipPlanexOES(plane, equation)
}
public
func glGetClipPlanexOES(_ plane:GL.Enum, _ equation:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetClipPlanexOES(plane, equation)
}

var fp_glGetColorTable:@convention(c) (GL.Enum, GL.Enum, GL.Enum, UnsafeMutableRawPointer?) -> () = load_glGetColorTable
func load_glGetColorTable(target:GL.Enum, format:GL.Enum, type:GL.Enum, table:UnsafeMutableRawPointer?)
{
    fp_glGetColorTable = unsafeBitCast(get_fp("glGetColorTable", support: [ss59]), to: Swift.type(of: fp_glGetColorTable))
    fp_glGetColorTable(target, format, type, table)
}
public
func glGetColorTable(target:GL.Enum, format:GL.Enum, type:GL.Enum, table:UnsafeMutableRawPointer?)
{
    fp_glGetColorTable(target, format, type, table)
}
public
func glGetColorTable(_ target:GL.Enum, _ format:GL.Enum, _ type:GL.Enum, _ table:UnsafeMutableRawPointer?)
{
    fp_glGetColorTable(target, format, type, table)
}

var fp_glGetColorTableEXT:@convention(c) (GL.Enum, GL.Enum, GL.Enum, UnsafeMutableRawPointer?) -> () = load_glGetColorTableEXT
func load_glGetColorTableEXT(target:GL.Enum, format:GL.Enum, type:GL.Enum, data:UnsafeMutableRawPointer?)
{
    fp_glGetColorTableEXT = unsafeBitCast(get_fp("glGetColorTableEXT", support: [ss172]), to: Swift.type(of: fp_glGetColorTableEXT))
    fp_glGetColorTableEXT(target, format, type, data)
}
public
func glGetColorTableEXT(target:GL.Enum, format:GL.Enum, type:GL.Enum, data:UnsafeMutableRawPointer?)
{
    fp_glGetColorTableEXT(target, format, type, data)
}
public
func glGetColorTableEXT(_ target:GL.Enum, _ format:GL.Enum, _ type:GL.Enum, _ data:UnsafeMutableRawPointer?)
{
    fp_glGetColorTableEXT(target, format, type, data)
}

var fp_glGetColorTableParameterfv:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetColorTableParameterfv
func load_glGetColorTableParameterfv(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetColorTableParameterfv = unsafeBitCast(get_fp("glGetColorTableParameterfv", support: [ss59]), to: Swift.type(of: fp_glGetColorTableParameterfv))
    fp_glGetColorTableParameterfv(target, pname, params)
}
public
func glGetColorTableParameterfv(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetColorTableParameterfv(target, pname, params)
}
public
func glGetColorTableParameterfv(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetColorTableParameterfv(target, pname, params)
}

var fp_glGetColorTableParameterfvEXT:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetColorTableParameterfvEXT
func load_glGetColorTableParameterfvEXT(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetColorTableParameterfvEXT = unsafeBitCast(get_fp("glGetColorTableParameterfvEXT", support: [ss172]), to: Swift.type(of: fp_glGetColorTableParameterfvEXT))
    fp_glGetColorTableParameterfvEXT(target, pname, params)
}
public
func glGetColorTableParameterfvEXT(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetColorTableParameterfvEXT(target, pname, params)
}
public
func glGetColorTableParameterfvEXT(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetColorTableParameterfvEXT(target, pname, params)
}

var fp_glGetColorTableParameterfvSGI:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetColorTableParameterfvSGI
func load_glGetColorTableParameterfvSGI(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetColorTableParameterfvSGI = unsafeBitCast(get_fp("glGetColorTableParameterfvSGI", support: [ss319]), to: Swift.type(of: fp_glGetColorTableParameterfvSGI))
    fp_glGetColorTableParameterfvSGI(target, pname, params)
}
public
func glGetColorTableParameterfvSGI(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetColorTableParameterfvSGI(target, pname, params)
}
public
func glGetColorTableParameterfvSGI(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetColorTableParameterfvSGI(target, pname, params)
}

var fp_glGetColorTableParameteriv:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetColorTableParameteriv
func load_glGetColorTableParameteriv(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetColorTableParameteriv = unsafeBitCast(get_fp("glGetColorTableParameteriv", support: [ss59]), to: Swift.type(of: fp_glGetColorTableParameteriv))
    fp_glGetColorTableParameteriv(target, pname, params)
}
public
func glGetColorTableParameteriv(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetColorTableParameteriv(target, pname, params)
}
public
func glGetColorTableParameteriv(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetColorTableParameteriv(target, pname, params)
}

var fp_glGetColorTableParameterivEXT:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetColorTableParameterivEXT
func load_glGetColorTableParameterivEXT(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetColorTableParameterivEXT = unsafeBitCast(get_fp("glGetColorTableParameterivEXT", support: [ss172]), to: Swift.type(of: fp_glGetColorTableParameterivEXT))
    fp_glGetColorTableParameterivEXT(target, pname, params)
}
public
func glGetColorTableParameterivEXT(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetColorTableParameterivEXT(target, pname, params)
}
public
func glGetColorTableParameterivEXT(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetColorTableParameterivEXT(target, pname, params)
}

var fp_glGetColorTableParameterivSGI:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetColorTableParameterivSGI
func load_glGetColorTableParameterivSGI(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetColorTableParameterivSGI = unsafeBitCast(get_fp("glGetColorTableParameterivSGI", support: [ss319]), to: Swift.type(of: fp_glGetColorTableParameterivSGI))
    fp_glGetColorTableParameterivSGI(target, pname, params)
}
public
func glGetColorTableParameterivSGI(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetColorTableParameterivSGI(target, pname, params)
}
public
func glGetColorTableParameterivSGI(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetColorTableParameterivSGI(target, pname, params)
}

var fp_glGetColorTableSGI:@convention(c) (GL.Enum, GL.Enum, GL.Enum, UnsafeMutableRawPointer?) -> () = load_glGetColorTableSGI
func load_glGetColorTableSGI(target:GL.Enum, format:GL.Enum, type:GL.Enum, table:UnsafeMutableRawPointer?)
{
    fp_glGetColorTableSGI = unsafeBitCast(get_fp("glGetColorTableSGI", support: [ss319]), to: Swift.type(of: fp_glGetColorTableSGI))
    fp_glGetColorTableSGI(target, format, type, table)
}
public
func glGetColorTableSGI(target:GL.Enum, format:GL.Enum, type:GL.Enum, table:UnsafeMutableRawPointer?)
{
    fp_glGetColorTableSGI(target, format, type, table)
}
public
func glGetColorTableSGI(_ target:GL.Enum, _ format:GL.Enum, _ type:GL.Enum, _ table:UnsafeMutableRawPointer?)
{
    fp_glGetColorTableSGI(target, format, type, table)
}

var fp_glGetCombinerInputParameterfvNV:@convention(c) (GL.Enum, GL.Enum, GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetCombinerInputParameterfvNV
func load_glGetCombinerInputParameterfvNV(stage:GL.Enum, portion:GL.Enum, variable:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetCombinerInputParameterfvNV = unsafeBitCast(get_fp("glGetCombinerInputParameterfvNV", support: [ss266]), to: Swift.type(of: fp_glGetCombinerInputParameterfvNV))
    fp_glGetCombinerInputParameterfvNV(stage, portion, variable, pname, params)
}
public
func glGetCombinerInputParameterfvNV(stage:GL.Enum, portion:GL.Enum, variable:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetCombinerInputParameterfvNV(stage, portion, variable, pname, params)
}
public
func glGetCombinerInputParameterfvNV(_ stage:GL.Enum, _ portion:GL.Enum, _ variable:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetCombinerInputParameterfvNV(stage, portion, variable, pname, params)
}

var fp_glGetCombinerInputParameterivNV:@convention(c) (GL.Enum, GL.Enum, GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetCombinerInputParameterivNV
func load_glGetCombinerInputParameterivNV(stage:GL.Enum, portion:GL.Enum, variable:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetCombinerInputParameterivNV = unsafeBitCast(get_fp("glGetCombinerInputParameterivNV", support: [ss266]), to: Swift.type(of: fp_glGetCombinerInputParameterivNV))
    fp_glGetCombinerInputParameterivNV(stage, portion, variable, pname, params)
}
public
func glGetCombinerInputParameterivNV(stage:GL.Enum, portion:GL.Enum, variable:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetCombinerInputParameterivNV(stage, portion, variable, pname, params)
}
public
func glGetCombinerInputParameterivNV(_ stage:GL.Enum, _ portion:GL.Enum, _ variable:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetCombinerInputParameterivNV(stage, portion, variable, pname, params)
}

var fp_glGetCombinerOutputParameterfvNV:@convention(c) (GL.Enum, GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetCombinerOutputParameterfvNV
func load_glGetCombinerOutputParameterfvNV(stage:GL.Enum, portion:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetCombinerOutputParameterfvNV = unsafeBitCast(get_fp("glGetCombinerOutputParameterfvNV", support: [ss266]), to: Swift.type(of: fp_glGetCombinerOutputParameterfvNV))
    fp_glGetCombinerOutputParameterfvNV(stage, portion, pname, params)
}
public
func glGetCombinerOutputParameterfvNV(stage:GL.Enum, portion:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetCombinerOutputParameterfvNV(stage, portion, pname, params)
}
public
func glGetCombinerOutputParameterfvNV(_ stage:GL.Enum, _ portion:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetCombinerOutputParameterfvNV(stage, portion, pname, params)
}

var fp_glGetCombinerOutputParameterivNV:@convention(c) (GL.Enum, GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetCombinerOutputParameterivNV
func load_glGetCombinerOutputParameterivNV(stage:GL.Enum, portion:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetCombinerOutputParameterivNV = unsafeBitCast(get_fp("glGetCombinerOutputParameterivNV", support: [ss266]), to: Swift.type(of: fp_glGetCombinerOutputParameterivNV))
    fp_glGetCombinerOutputParameterivNV(stage, portion, pname, params)
}
public
func glGetCombinerOutputParameterivNV(stage:GL.Enum, portion:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetCombinerOutputParameterivNV(stage, portion, pname, params)
}
public
func glGetCombinerOutputParameterivNV(_ stage:GL.Enum, _ portion:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetCombinerOutputParameterivNV(stage, portion, pname, params)
}

var fp_glGetCombinerStageParameterfvNV:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetCombinerStageParameterfvNV
func load_glGetCombinerStageParameterfvNV(stage:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetCombinerStageParameterfvNV = unsafeBitCast(get_fp("glGetCombinerStageParameterfvNV", support: [ss267]), to: Swift.type(of: fp_glGetCombinerStageParameterfvNV))
    fp_glGetCombinerStageParameterfvNV(stage, pname, params)
}
public
func glGetCombinerStageParameterfvNV(stage:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetCombinerStageParameterfvNV(stage, pname, params)
}
public
func glGetCombinerStageParameterfvNV(_ stage:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetCombinerStageParameterfvNV(stage, pname, params)
}

var fp_glGetCommandHeaderNV:@convention(c) (GL.Enum, GL.UInt) -> GL.UInt = load_glGetCommandHeaderNV
func load_glGetCommandHeaderNV(tokenID:GL.Enum, size:GL.UInt) -> GL.UInt
{
    fp_glGetCommandHeaderNV = unsafeBitCast(get_fp("glGetCommandHeaderNV", support: [ss229]), to: Swift.type(of: fp_glGetCommandHeaderNV))
    return fp_glGetCommandHeaderNV(tokenID, size)
}
public
func glGetCommandHeaderNV(tokenID:GL.Enum, size:GL.UInt) -> GL.UInt
{
    return fp_glGetCommandHeaderNV(tokenID, size)
}
public
func glGetCommandHeaderNV(_ tokenID:GL.Enum, _ size:GL.UInt) -> GL.UInt
{
    return fp_glGetCommandHeaderNV(tokenID, size)
}

var fp_glGetCompressedMultiTexImageEXT:@convention(c) (GL.Enum, GL.Enum, GL.Int, UnsafeMutableRawPointer?) -> () = load_glGetCompressedMultiTexImageEXT
func load_glGetCompressedMultiTexImageEXT(texunit:GL.Enum, target:GL.Enum, lod:GL.Int, img:UnsafeMutableRawPointer?)
{
    fp_glGetCompressedMultiTexImageEXT = unsafeBitCast(get_fp("glGetCompressedMultiTexImageEXT", support: [ss143]), to: Swift.type(of: fp_glGetCompressedMultiTexImageEXT))
    fp_glGetCompressedMultiTexImageEXT(texunit, target, lod, img)
}
public
func glGetCompressedMultiTexImageEXT(texunit:GL.Enum, target:GL.Enum, lod:GL.Int, img:UnsafeMutableRawPointer?)
{
    fp_glGetCompressedMultiTexImageEXT(texunit, target, lod, img)
}
public
func glGetCompressedMultiTexImageEXT(_ texunit:GL.Enum, _ target:GL.Enum, _ lod:GL.Int, _ img:UnsafeMutableRawPointer?)
{
    fp_glGetCompressedMultiTexImageEXT(texunit, target, lod, img)
}

var fp_glGetCompressedTexImage:@convention(c) (GL.Enum, GL.Int, UnsafeMutableRawPointer?) -> () = load_glGetCompressedTexImage
func load_glGetCompressedTexImage(target:GL.Enum, level:GL.Int, img:UnsafeMutableRawPointer?)
{
    fp_glGetCompressedTexImage = unsafeBitCast(get_fp("glGetCompressedTexImage", support: [ss349]), to: Swift.type(of: fp_glGetCompressedTexImage))
    fp_glGetCompressedTexImage(target, level, img)
}
public
func glGetCompressedTexImage(target:GL.Enum, level:GL.Int, img:UnsafeMutableRawPointer?)
{
    fp_glGetCompressedTexImage(target, level, img)
}
public
func glGetCompressedTexImage(_ target:GL.Enum, _ level:GL.Int, _ img:UnsafeMutableRawPointer?)
{
    fp_glGetCompressedTexImage(target, level, img)
}

var fp_glGetCompressedTexImageARB:@convention(c) (GL.Enum, GL.Int, UnsafeMutableRawPointer?) -> () = load_glGetCompressedTexImageARB
func load_glGetCompressedTexImageARB(target:GL.Enum, level:GL.Int, img:UnsafeMutableRawPointer?)
{
    fp_glGetCompressedTexImageARB = unsafeBitCast(get_fp("glGetCompressedTexImageARB", support: [ss94]), to: Swift.type(of: fp_glGetCompressedTexImageARB))
    fp_glGetCompressedTexImageARB(target, level, img)
}
public
func glGetCompressedTexImageARB(target:GL.Enum, level:GL.Int, img:UnsafeMutableRawPointer?)
{
    fp_glGetCompressedTexImageARB(target, level, img)
}
public
func glGetCompressedTexImageARB(_ target:GL.Enum, _ level:GL.Int, _ img:UnsafeMutableRawPointer?)
{
    fp_glGetCompressedTexImageARB(target, level, img)
}

var fp_glGetCompressedTextureImage:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafeMutableRawPointer?) -> () = load_glGetCompressedTextureImage
func load_glGetCompressedTextureImage(texture:GL.UInt, level:GL.Int, bufSize:GL.Size, pixels:UnsafeMutableRawPointer?)
{
    fp_glGetCompressedTextureImage = unsafeBitCast(get_fp("glGetCompressedTextureImage", support: [ss363, ss42]), to: Swift.type(of: fp_glGetCompressedTextureImage))
    fp_glGetCompressedTextureImage(texture, level, bufSize, pixels)
}
public
func glGetCompressedTextureImage(texture:GL.UInt, level:GL.Int, bufSize:GL.Size, pixels:UnsafeMutableRawPointer?)
{
    fp_glGetCompressedTextureImage(texture, level, bufSize, pixels)
}
public
func glGetCompressedTextureImage(_ texture:GL.UInt, _ level:GL.Int, _ bufSize:GL.Size, _ pixels:UnsafeMutableRawPointer?)
{
    fp_glGetCompressedTextureImage(texture, level, bufSize, pixels)
}

var fp_glGetCompressedTextureImageEXT:@convention(c) (GL.UInt, GL.Enum, GL.Int, UnsafeMutableRawPointer?) -> () = load_glGetCompressedTextureImageEXT
func load_glGetCompressedTextureImageEXT(texture:GL.UInt, target:GL.Enum, lod:GL.Int, img:UnsafeMutableRawPointer?)
{
    fp_glGetCompressedTextureImageEXT = unsafeBitCast(get_fp("glGetCompressedTextureImageEXT", support: [ss143]), to: Swift.type(of: fp_glGetCompressedTextureImageEXT))
    fp_glGetCompressedTextureImageEXT(texture, target, lod, img)
}
public
func glGetCompressedTextureImageEXT(texture:GL.UInt, target:GL.Enum, lod:GL.Int, img:UnsafeMutableRawPointer?)
{
    fp_glGetCompressedTextureImageEXT(texture, target, lod, img)
}
public
func glGetCompressedTextureImageEXT(_ texture:GL.UInt, _ target:GL.Enum, _ lod:GL.Int, _ img:UnsafeMutableRawPointer?)
{
    fp_glGetCompressedTextureImageEXT(texture, target, lod, img)
}

var fp_glGetCompressedTextureSubImage:@convention(c) (GL.UInt, GL.Int, GL.Int, GL.Int, GL.Int, GL.Size, GL.Size, GL.Size, GL.Size, UnsafeMutableRawPointer?) -> () = load_glGetCompressedTextureSubImage
func load_glGetCompressedTextureSubImage(texture:GL.UInt, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, zoffset:GL.Int, width:GL.Size, height:GL.Size, depth:GL.Size, bufSize:GL.Size, pixels:UnsafeMutableRawPointer?)
{
    fp_glGetCompressedTextureSubImage = unsafeBitCast(get_fp("glGetCompressedTextureSubImage", support: [ss363, ss56]), to: Swift.type(of: fp_glGetCompressedTextureSubImage))
    fp_glGetCompressedTextureSubImage(texture, level, xoffset, yoffset, zoffset, width, height, depth, bufSize, pixels)
}
public
func glGetCompressedTextureSubImage(texture:GL.UInt, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, zoffset:GL.Int, width:GL.Size, height:GL.Size, depth:GL.Size, bufSize:GL.Size, pixels:UnsafeMutableRawPointer?)
{
    fp_glGetCompressedTextureSubImage(texture, level, xoffset, yoffset, zoffset, width, height, depth, bufSize, pixels)
}
public
func glGetCompressedTextureSubImage(_ texture:GL.UInt, _ level:GL.Int, _ xoffset:GL.Int, _ yoffset:GL.Int, _ zoffset:GL.Int, _ width:GL.Size, _ height:GL.Size, _ depth:GL.Size, _ bufSize:GL.Size, _ pixels:UnsafeMutableRawPointer?)
{
    fp_glGetCompressedTextureSubImage(texture, level, xoffset, yoffset, zoffset, width, height, depth, bufSize, pixels)
}

var fp_glGetConvolutionFilter:@convention(c) (GL.Enum, GL.Enum, GL.Enum, UnsafeMutableRawPointer?) -> () = load_glGetConvolutionFilter
func load_glGetConvolutionFilter(target:GL.Enum, format:GL.Enum, type:GL.Enum, image:UnsafeMutableRawPointer?)
{
    fp_glGetConvolutionFilter = unsafeBitCast(get_fp("glGetConvolutionFilter", support: [ss59]), to: Swift.type(of: fp_glGetConvolutionFilter))
    fp_glGetConvolutionFilter(target, format, type, image)
}
public
func glGetConvolutionFilter(target:GL.Enum, format:GL.Enum, type:GL.Enum, image:UnsafeMutableRawPointer?)
{
    fp_glGetConvolutionFilter(target, format, type, image)
}
public
func glGetConvolutionFilter(_ target:GL.Enum, _ format:GL.Enum, _ type:GL.Enum, _ image:UnsafeMutableRawPointer?)
{
    fp_glGetConvolutionFilter(target, format, type, image)
}

var fp_glGetConvolutionFilterEXT:@convention(c) (GL.Enum, GL.Enum, GL.Enum, UnsafeMutableRawPointer?) -> () = load_glGetConvolutionFilterEXT
func load_glGetConvolutionFilterEXT(target:GL.Enum, format:GL.Enum, type:GL.Enum, image:UnsafeMutableRawPointer?)
{
    fp_glGetConvolutionFilterEXT = unsafeBitCast(get_fp("glGetConvolutionFilterEXT", support: [ss135]), to: Swift.type(of: fp_glGetConvolutionFilterEXT))
    fp_glGetConvolutionFilterEXT(target, format, type, image)
}
public
func glGetConvolutionFilterEXT(target:GL.Enum, format:GL.Enum, type:GL.Enum, image:UnsafeMutableRawPointer?)
{
    fp_glGetConvolutionFilterEXT(target, format, type, image)
}
public
func glGetConvolutionFilterEXT(_ target:GL.Enum, _ format:GL.Enum, _ type:GL.Enum, _ image:UnsafeMutableRawPointer?)
{
    fp_glGetConvolutionFilterEXT(target, format, type, image)
}

var fp_glGetConvolutionParameterfv:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetConvolutionParameterfv
func load_glGetConvolutionParameterfv(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetConvolutionParameterfv = unsafeBitCast(get_fp("glGetConvolutionParameterfv", support: [ss59]), to: Swift.type(of: fp_glGetConvolutionParameterfv))
    fp_glGetConvolutionParameterfv(target, pname, params)
}
public
func glGetConvolutionParameterfv(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetConvolutionParameterfv(target, pname, params)
}
public
func glGetConvolutionParameterfv(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetConvolutionParameterfv(target, pname, params)
}

var fp_glGetConvolutionParameterfvEXT:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetConvolutionParameterfvEXT
func load_glGetConvolutionParameterfvEXT(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetConvolutionParameterfvEXT = unsafeBitCast(get_fp("glGetConvolutionParameterfvEXT", support: [ss135]), to: Swift.type(of: fp_glGetConvolutionParameterfvEXT))
    fp_glGetConvolutionParameterfvEXT(target, pname, params)
}
public
func glGetConvolutionParameterfvEXT(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetConvolutionParameterfvEXT(target, pname, params)
}
public
func glGetConvolutionParameterfvEXT(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetConvolutionParameterfvEXT(target, pname, params)
}

var fp_glGetConvolutionParameteriv:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetConvolutionParameteriv
func load_glGetConvolutionParameteriv(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetConvolutionParameteriv = unsafeBitCast(get_fp("glGetConvolutionParameteriv", support: [ss59]), to: Swift.type(of: fp_glGetConvolutionParameteriv))
    fp_glGetConvolutionParameteriv(target, pname, params)
}
public
func glGetConvolutionParameteriv(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetConvolutionParameteriv(target, pname, params)
}
public
func glGetConvolutionParameteriv(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetConvolutionParameteriv(target, pname, params)
}

var fp_glGetConvolutionParameterivEXT:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetConvolutionParameterivEXT
func load_glGetConvolutionParameterivEXT(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetConvolutionParameterivEXT = unsafeBitCast(get_fp("glGetConvolutionParameterivEXT", support: [ss135]), to: Swift.type(of: fp_glGetConvolutionParameterivEXT))
    fp_glGetConvolutionParameterivEXT(target, pname, params)
}
public
func glGetConvolutionParameterivEXT(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetConvolutionParameterivEXT(target, pname, params)
}
public
func glGetConvolutionParameterivEXT(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetConvolutionParameterivEXT(target, pname, params)
}

var fp_glGetConvolutionParameterxvOES:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Fixed>?) -> () = load_glGetConvolutionParameterxvOES
func load_glGetConvolutionParameterxvOES(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetConvolutionParameterxvOES = unsafeBitCast(get_fp("glGetConvolutionParameterxvOES", support: [ss292]), to: Swift.type(of: fp_glGetConvolutionParameterxvOES))
    fp_glGetConvolutionParameterxvOES(target, pname, params)
}
public
func glGetConvolutionParameterxvOES(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetConvolutionParameterxvOES(target, pname, params)
}
public
func glGetConvolutionParameterxvOES(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetConvolutionParameterxvOES(target, pname, params)
}

var fp_glGetCoverageModulationTableNV:@convention(c) (GL.Size, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetCoverageModulationTableNV
func load_glGetCoverageModulationTableNV(bufsize:GL.Size, v:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetCoverageModulationTableNV = unsafeBitCast(get_fp("glGetCoverageModulationTableNV", support: [ss246]), to: Swift.type(of: fp_glGetCoverageModulationTableNV))
    fp_glGetCoverageModulationTableNV(bufsize, v)
}
public
func glGetCoverageModulationTableNV(bufsize:GL.Size, v:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetCoverageModulationTableNV(bufsize, v)
}
public
func glGetCoverageModulationTableNV(_ bufsize:GL.Size, _ v:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetCoverageModulationTableNV(bufsize, v)
}

var fp_glGetDebugMessageLog:@convention(c) (GL.UInt, GL.Size, UnsafeMutablePointer<GL.Enum>?, UnsafeMutablePointer<GL.Enum>?, UnsafeMutablePointer<GL.UInt>?, UnsafeMutablePointer<GL.Enum>?, UnsafeMutablePointer<GL.Size>?, UnsafeMutablePointer<GL.Char>?) -> GL.UInt = load_glGetDebugMessageLog
func load_glGetDebugMessageLog(count:GL.UInt, bufSize:GL.Size, sources:UnsafeMutablePointer<GL.Enum>?, types:UnsafeMutablePointer<GL.Enum>?, ids:UnsafeMutablePointer<GL.UInt>?, severities:UnsafeMutablePointer<GL.Enum>?, lengths:UnsafeMutablePointer<GL.Size>?, messageLog:UnsafeMutablePointer<GL.Char>?) -> GL.UInt
{
    fp_glGetDebugMessageLog = unsafeBitCast(get_fp("glGetDebugMessageLog", support: [ss361, ss368, ss221]), to: Swift.type(of: fp_glGetDebugMessageLog))
    return fp_glGetDebugMessageLog(count, bufSize, sources, types, ids, severities, lengths, messageLog)
}
public
func glGetDebugMessageLog(count:GL.UInt, bufSize:GL.Size, sources:UnsafeMutablePointer<GL.Enum>?, types:UnsafeMutablePointer<GL.Enum>?, ids:UnsafeMutablePointer<GL.UInt>?, severities:UnsafeMutablePointer<GL.Enum>?, lengths:UnsafeMutablePointer<GL.Size>?, messageLog:UnsafeMutablePointer<GL.Char>?) -> GL.UInt
{
    return fp_glGetDebugMessageLog(count, bufSize, sources, types, ids, severities, lengths, messageLog)
}
public
func glGetDebugMessageLog(_ count:GL.UInt, _ bufSize:GL.Size, _ sources:UnsafeMutablePointer<GL.Enum>?, _ types:UnsafeMutablePointer<GL.Enum>?, _ ids:UnsafeMutablePointer<GL.UInt>?, _ severities:UnsafeMutablePointer<GL.Enum>?, _ lengths:UnsafeMutablePointer<GL.Size>?, _ messageLog:UnsafeMutablePointer<GL.Char>?) -> GL.UInt
{
    return fp_glGetDebugMessageLog(count, bufSize, sources, types, ids, severities, lengths, messageLog)
}

var fp_glGetDebugMessageLogAMD:@convention(c) (GL.UInt, GL.Size, UnsafeMutablePointer<GL.Enum>?, UnsafeMutablePointer<GL.UInt>?, UnsafeMutablePointer<GL.UInt>?, UnsafeMutablePointer<GL.Size>?, UnsafeMutablePointer<GL.Char>?) -> GL.UInt = load_glGetDebugMessageLogAMD
func load_glGetDebugMessageLogAMD(count:GL.UInt, bufsize:GL.Size, categories:UnsafeMutablePointer<GL.Enum>?, severities:UnsafeMutablePointer<GL.UInt>?, ids:UnsafeMutablePointer<GL.UInt>?, lengths:UnsafeMutablePointer<GL.Size>?, message:UnsafeMutablePointer<GL.Char>?) -> GL.UInt
{
    fp_glGetDebugMessageLogAMD = unsafeBitCast(get_fp("glGetDebugMessageLogAMD", support: [ss1]), to: Swift.type(of: fp_glGetDebugMessageLogAMD))
    return fp_glGetDebugMessageLogAMD(count, bufsize, categories, severities, ids, lengths, message)
}
public
func glGetDebugMessageLogAMD(count:GL.UInt, bufsize:GL.Size, categories:UnsafeMutablePointer<GL.Enum>?, severities:UnsafeMutablePointer<GL.UInt>?, ids:UnsafeMutablePointer<GL.UInt>?, lengths:UnsafeMutablePointer<GL.Size>?, message:UnsafeMutablePointer<GL.Char>?) -> GL.UInt
{
    return fp_glGetDebugMessageLogAMD(count, bufsize, categories, severities, ids, lengths, message)
}
public
func glGetDebugMessageLogAMD(_ count:GL.UInt, _ bufsize:GL.Size, _ categories:UnsafeMutablePointer<GL.Enum>?, _ severities:UnsafeMutablePointer<GL.UInt>?, _ ids:UnsafeMutablePointer<GL.UInt>?, _ lengths:UnsafeMutablePointer<GL.Size>?, _ message:UnsafeMutablePointer<GL.Char>?) -> GL.UInt
{
    return fp_glGetDebugMessageLogAMD(count, bufsize, categories, severities, ids, lengths, message)
}

var fp_glGetDebugMessageLogARB:@convention(c) (GL.UInt, GL.Size, UnsafeMutablePointer<GL.Enum>?, UnsafeMutablePointer<GL.Enum>?, UnsafeMutablePointer<GL.UInt>?, UnsafeMutablePointer<GL.Enum>?, UnsafeMutablePointer<GL.Size>?, UnsafeMutablePointer<GL.Char>?) -> GL.UInt = load_glGetDebugMessageLogARB
func load_glGetDebugMessageLogARB(count:GL.UInt, bufSize:GL.Size, sources:UnsafeMutablePointer<GL.Enum>?, types:UnsafeMutablePointer<GL.Enum>?, ids:UnsafeMutablePointer<GL.UInt>?, severities:UnsafeMutablePointer<GL.Enum>?, lengths:UnsafeMutablePointer<GL.Size>?, messageLog:UnsafeMutablePointer<GL.Char>?) -> GL.UInt
{
    fp_glGetDebugMessageLogARB = unsafeBitCast(get_fp("glGetDebugMessageLogARB", support: [ss41]), to: Swift.type(of: fp_glGetDebugMessageLogARB))
    return fp_glGetDebugMessageLogARB(count, bufSize, sources, types, ids, severities, lengths, messageLog)
}
public
func glGetDebugMessageLogARB(count:GL.UInt, bufSize:GL.Size, sources:UnsafeMutablePointer<GL.Enum>?, types:UnsafeMutablePointer<GL.Enum>?, ids:UnsafeMutablePointer<GL.UInt>?, severities:UnsafeMutablePointer<GL.Enum>?, lengths:UnsafeMutablePointer<GL.Size>?, messageLog:UnsafeMutablePointer<GL.Char>?) -> GL.UInt
{
    return fp_glGetDebugMessageLogARB(count, bufSize, sources, types, ids, severities, lengths, messageLog)
}
public
func glGetDebugMessageLogARB(_ count:GL.UInt, _ bufSize:GL.Size, _ sources:UnsafeMutablePointer<GL.Enum>?, _ types:UnsafeMutablePointer<GL.Enum>?, _ ids:UnsafeMutablePointer<GL.UInt>?, _ severities:UnsafeMutablePointer<GL.Enum>?, _ lengths:UnsafeMutablePointer<GL.Size>?, _ messageLog:UnsafeMutablePointer<GL.Char>?) -> GL.UInt
{
    return fp_glGetDebugMessageLogARB(count, bufSize, sources, types, ids, severities, lengths, messageLog)
}

var fp_glGetDebugMessageLogKHR:@convention(c) (GL.UInt, GL.Size, UnsafeMutablePointer<GL.Enum>?, UnsafeMutablePointer<GL.Enum>?, UnsafeMutablePointer<GL.UInt>?, UnsafeMutablePointer<GL.Enum>?, UnsafeMutablePointer<GL.Size>?, UnsafeMutablePointer<GL.Char>?) -> GL.UInt = load_glGetDebugMessageLogKHR
func load_glGetDebugMessageLogKHR(count:GL.UInt, bufSize:GL.Size, sources:UnsafeMutablePointer<GL.Enum>?, types:UnsafeMutablePointer<GL.Enum>?, ids:UnsafeMutablePointer<GL.UInt>?, severities:UnsafeMutablePointer<GL.Enum>?, lengths:UnsafeMutablePointer<GL.Size>?, messageLog:UnsafeMutablePointer<GL.Char>?) -> GL.UInt
{
    fp_glGetDebugMessageLogKHR = unsafeBitCast(get_fp("glGetDebugMessageLogKHR", support: [ss221]), to: Swift.type(of: fp_glGetDebugMessageLogKHR))
    return fp_glGetDebugMessageLogKHR(count, bufSize, sources, types, ids, severities, lengths, messageLog)
}
public
func glGetDebugMessageLogKHR(count:GL.UInt, bufSize:GL.Size, sources:UnsafeMutablePointer<GL.Enum>?, types:UnsafeMutablePointer<GL.Enum>?, ids:UnsafeMutablePointer<GL.UInt>?, severities:UnsafeMutablePointer<GL.Enum>?, lengths:UnsafeMutablePointer<GL.Size>?, messageLog:UnsafeMutablePointer<GL.Char>?) -> GL.UInt
{
    return fp_glGetDebugMessageLogKHR(count, bufSize, sources, types, ids, severities, lengths, messageLog)
}
public
func glGetDebugMessageLogKHR(_ count:GL.UInt, _ bufSize:GL.Size, _ sources:UnsafeMutablePointer<GL.Enum>?, _ types:UnsafeMutablePointer<GL.Enum>?, _ ids:UnsafeMutablePointer<GL.UInt>?, _ severities:UnsafeMutablePointer<GL.Enum>?, _ lengths:UnsafeMutablePointer<GL.Size>?, _ messageLog:UnsafeMutablePointer<GL.Char>?) -> GL.UInt
{
    return fp_glGetDebugMessageLogKHR(count, bufSize, sources, types, ids, severities, lengths, messageLog)
}

var fp_glGetDetailTexFuncSGIS:@convention(c) (GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetDetailTexFuncSGIS
func load_glGetDetailTexFuncSGIS(target:GL.Enum, points:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetDetailTexFuncSGIS = unsafeBitCast(get_fp("glGetDetailTexFuncSGIS", support: [ss320]), to: Swift.type(of: fp_glGetDetailTexFuncSGIS))
    fp_glGetDetailTexFuncSGIS(target, points)
}
public
func glGetDetailTexFuncSGIS(target:GL.Enum, points:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetDetailTexFuncSGIS(target, points)
}
public
func glGetDetailTexFuncSGIS(_ target:GL.Enum, _ points:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetDetailTexFuncSGIS(target, points)
}

var fp_glGetDoubleIndexedvEXT:@convention(c) (GL.Enum, GL.UInt, UnsafeMutablePointer<GL.Double>?) -> () = load_glGetDoubleIndexedvEXT
func load_glGetDoubleIndexedvEXT(target:GL.Enum, index:GL.UInt, data:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetDoubleIndexedvEXT = unsafeBitCast(get_fp("glGetDoubleIndexedvEXT", support: [ss143]), to: Swift.type(of: fp_glGetDoubleIndexedvEXT))
    fp_glGetDoubleIndexedvEXT(target, index, data)
}
public
func glGetDoubleIndexedvEXT(target:GL.Enum, index:GL.UInt, data:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetDoubleIndexedvEXT(target, index, data)
}
public
func glGetDoubleIndexedvEXT(_ target:GL.Enum, _ index:GL.UInt, _ data:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetDoubleIndexedvEXT(target, index, data)
}

var fp_glGetDoublei_v:@convention(c) (GL.Enum, GL.UInt, UnsafeMutablePointer<GL.Double>?) -> () = load_glGetDoublei_v
func load_glGetDoublei_v(target:GL.Enum, index:GL.UInt, data:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetDoublei_v = unsafeBitCast(get_fp("glGetDoublei_v", support: [ss359, ss113]), to: Swift.type(of: fp_glGetDoublei_v))
    fp_glGetDoublei_v(target, index, data)
}
public
func glGetDoublei_v(target:GL.Enum, index:GL.UInt, data:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetDoublei_v(target, index, data)
}
public
func glGetDoublei_v(_ target:GL.Enum, _ index:GL.UInt, _ data:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetDoublei_v(target, index, data)
}

var fp_glGetDoublei_vEXT:@convention(c) (GL.Enum, GL.UInt, UnsafeMutablePointer<GL.Double>?) -> () = load_glGetDoublei_vEXT
func load_glGetDoublei_vEXT(pname:GL.Enum, index:GL.UInt, params:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetDoublei_vEXT = unsafeBitCast(get_fp("glGetDoublei_vEXT", support: [ss143]), to: Swift.type(of: fp_glGetDoublei_vEXT))
    fp_glGetDoublei_vEXT(pname, index, params)
}
public
func glGetDoublei_vEXT(pname:GL.Enum, index:GL.UInt, params:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetDoublei_vEXT(pname, index, params)
}
public
func glGetDoublei_vEXT(_ pname:GL.Enum, _ index:GL.UInt, _ params:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetDoublei_vEXT(pname, index, params)
}

var fp_glGetDoublev:@convention(c) (GL.Enum, UnsafeMutablePointer<GL.Double>?) -> () = load_glGetDoublev
func load_glGetDoublev(pname:GL.Enum, data:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetDoublev = unsafeBitCast(get_fp("glGetDoublev", support: [ss346]), to: Swift.type(of: fp_glGetDoublev))
    fp_glGetDoublev(pname, data)
}
public
func glGetDoublev(pname:GL.Enum, data:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetDoublev(pname, data)
}
public
func glGetDoublev(_ pname:GL.Enum, _ data:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetDoublev(pname, data)
}

var fp_glGetDriverControlStringQCOM:@convention(c) (GL.UInt, GL.Size, UnsafeMutablePointer<GL.Size>?, UnsafeMutablePointer<GL.Char>?) -> () = load_glGetDriverControlStringQCOM
func load_glGetDriverControlStringQCOM(driverControl:GL.UInt, bufSize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, driverControlString:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetDriverControlStringQCOM = unsafeBitCast(get_fp("glGetDriverControlStringQCOM", support: [ss315]), to: Swift.type(of: fp_glGetDriverControlStringQCOM))
    fp_glGetDriverControlStringQCOM(driverControl, bufSize, length, driverControlString)
}
public
func glGetDriverControlStringQCOM(driverControl:GL.UInt, bufSize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, driverControlString:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetDriverControlStringQCOM(driverControl, bufSize, length, driverControlString)
}
public
func glGetDriverControlStringQCOM(_ driverControl:GL.UInt, _ bufSize:GL.Size, _ length:UnsafeMutablePointer<GL.Size>?, _ driverControlString:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetDriverControlStringQCOM(driverControl, bufSize, length, driverControlString)
}

var fp_glGetDriverControlsQCOM:@convention(c) (UnsafeMutablePointer<GL.Int>?, GL.Size, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGetDriverControlsQCOM
func load_glGetDriverControlsQCOM(num:UnsafeMutablePointer<GL.Int>?, size:GL.Size, driverControls:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetDriverControlsQCOM = unsafeBitCast(get_fp("glGetDriverControlsQCOM", support: [ss315]), to: Swift.type(of: fp_glGetDriverControlsQCOM))
    fp_glGetDriverControlsQCOM(num, size, driverControls)
}
public
func glGetDriverControlsQCOM(num:UnsafeMutablePointer<GL.Int>?, size:GL.Size, driverControls:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetDriverControlsQCOM(num, size, driverControls)
}
public
func glGetDriverControlsQCOM(_ num:UnsafeMutablePointer<GL.Int>?, _ size:GL.Size, _ driverControls:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetDriverControlsQCOM(num, size, driverControls)
}

var fp_glGetError:@convention(c) () -> GL.Enum = load_glGetError
func load_glGetError() -> GL.Enum
{
    fp_glGetError = unsafeBitCast(get_fp("glGetError", support: [ss346, ss365]), to: Swift.type(of: fp_glGetError))
    return fp_glGetError()
}
public
func glGetError() -> GL.Enum
{
    return fp_glGetError()
}

var fp_glGetFenceivNV:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetFenceivNV
func load_glGetFenceivNV(fence:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetFenceivNV = unsafeBitCast(get_fp("glGetFenceivNV", support: [ss242]), to: Swift.type(of: fp_glGetFenceivNV))
    fp_glGetFenceivNV(fence, pname, params)
}
public
func glGetFenceivNV(fence:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetFenceivNV(fence, pname, params)
}
public
func glGetFenceivNV(_ fence:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetFenceivNV(fence, pname, params)
}

var fp_glGetFinalCombinerInputParameterfvNV:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetFinalCombinerInputParameterfvNV
func load_glGetFinalCombinerInputParameterfvNV(variable:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetFinalCombinerInputParameterfvNV = unsafeBitCast(get_fp("glGetFinalCombinerInputParameterfvNV", support: [ss266]), to: Swift.type(of: fp_glGetFinalCombinerInputParameterfvNV))
    fp_glGetFinalCombinerInputParameterfvNV(variable, pname, params)
}
public
func glGetFinalCombinerInputParameterfvNV(variable:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetFinalCombinerInputParameterfvNV(variable, pname, params)
}
public
func glGetFinalCombinerInputParameterfvNV(_ variable:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetFinalCombinerInputParameterfvNV(variable, pname, params)
}

var fp_glGetFinalCombinerInputParameterivNV:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetFinalCombinerInputParameterivNV
func load_glGetFinalCombinerInputParameterivNV(variable:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetFinalCombinerInputParameterivNV = unsafeBitCast(get_fp("glGetFinalCombinerInputParameterivNV", support: [ss266]), to: Swift.type(of: fp_glGetFinalCombinerInputParameterivNV))
    fp_glGetFinalCombinerInputParameterivNV(variable, pname, params)
}
public
func glGetFinalCombinerInputParameterivNV(variable:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetFinalCombinerInputParameterivNV(variable, pname, params)
}
public
func glGetFinalCombinerInputParameterivNV(_ variable:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetFinalCombinerInputParameterivNV(variable, pname, params)
}

var fp_glGetFirstPerfQueryIdINTEL:@convention(c) (UnsafeMutablePointer<GL.UInt>?) -> () = load_glGetFirstPerfQueryIdINTEL
func load_glGetFirstPerfQueryIdINTEL(queryId:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetFirstPerfQueryIdINTEL = unsafeBitCast(get_fp("glGetFirstPerfQueryIdINTEL", support: [ss219]), to: Swift.type(of: fp_glGetFirstPerfQueryIdINTEL))
    fp_glGetFirstPerfQueryIdINTEL(queryId)
}
public
func glGetFirstPerfQueryIdINTEL(queryId:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetFirstPerfQueryIdINTEL(queryId)
}
public
func glGetFirstPerfQueryIdINTEL(_ queryId:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetFirstPerfQueryIdINTEL(queryId)
}

var fp_glGetFixedv:@convention(c) (GL.Enum, UnsafeMutablePointer<GL.Fixed>?) -> () = load_glGetFixedv
func load_glGetFixedv(pname:GL.Enum, params:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetFixedv = unsafeBitCast(get_fp("glGetFixedv", support: [ss364]), to: Swift.type(of: fp_glGetFixedv))
    fp_glGetFixedv(pname, params)
}
public
func glGetFixedv(pname:GL.Enum, params:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetFixedv(pname, params)
}
public
func glGetFixedv(_ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetFixedv(pname, params)
}

var fp_glGetFixedvOES:@convention(c) (GL.Enum, UnsafeMutablePointer<GL.Fixed>?) -> () = load_glGetFixedvOES
func load_glGetFixedvOES(pname:GL.Enum, params:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetFixedvOES = unsafeBitCast(get_fp("glGetFixedvOES", support: [ss292]), to: Swift.type(of: fp_glGetFixedvOES))
    fp_glGetFixedvOES(pname, params)
}
public
func glGetFixedvOES(pname:GL.Enum, params:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetFixedvOES(pname, params)
}
public
func glGetFixedvOES(_ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetFixedvOES(pname, params)
}

var fp_glGetFloatIndexedvEXT:@convention(c) (GL.Enum, GL.UInt, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetFloatIndexedvEXT
func load_glGetFloatIndexedvEXT(target:GL.Enum, index:GL.UInt, data:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetFloatIndexedvEXT = unsafeBitCast(get_fp("glGetFloatIndexedvEXT", support: [ss143]), to: Swift.type(of: fp_glGetFloatIndexedvEXT))
    fp_glGetFloatIndexedvEXT(target, index, data)
}
public
func glGetFloatIndexedvEXT(target:GL.Enum, index:GL.UInt, data:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetFloatIndexedvEXT(target, index, data)
}
public
func glGetFloatIndexedvEXT(_ target:GL.Enum, _ index:GL.UInt, _ data:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetFloatIndexedvEXT(target, index, data)
}

var fp_glGetFloati_v:@convention(c) (GL.Enum, GL.UInt, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetFloati_v
func load_glGetFloati_v(target:GL.Enum, index:GL.UInt, data:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetFloati_v = unsafeBitCast(get_fp("glGetFloati_v", support: [ss359, ss113]), to: Swift.type(of: fp_glGetFloati_v))
    fp_glGetFloati_v(target, index, data)
}
public
func glGetFloati_v(target:GL.Enum, index:GL.UInt, data:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetFloati_v(target, index, data)
}
public
func glGetFloati_v(_ target:GL.Enum, _ index:GL.UInt, _ data:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetFloati_v(target, index, data)
}

var fp_glGetFloati_vEXT:@convention(c) (GL.Enum, GL.UInt, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetFloati_vEXT
func load_glGetFloati_vEXT(pname:GL.Enum, index:GL.UInt, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetFloati_vEXT = unsafeBitCast(get_fp("glGetFloati_vEXT", support: [ss143]), to: Swift.type(of: fp_glGetFloati_vEXT))
    fp_glGetFloati_vEXT(pname, index, params)
}
public
func glGetFloati_vEXT(pname:GL.Enum, index:GL.UInt, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetFloati_vEXT(pname, index, params)
}
public
func glGetFloati_vEXT(_ pname:GL.Enum, _ index:GL.UInt, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetFloati_vEXT(pname, index, params)
}

var fp_glGetFloati_vNV:@convention(c) (GL.Enum, GL.UInt, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetFloati_vNV
func load_glGetFloati_vNV(target:GL.Enum, index:GL.UInt, data:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetFloati_vNV = unsafeBitCast(get_fp("glGetFloati_vNV", support: [ss281]), to: Swift.type(of: fp_glGetFloati_vNV))
    fp_glGetFloati_vNV(target, index, data)
}
public
func glGetFloati_vNV(target:GL.Enum, index:GL.UInt, data:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetFloati_vNV(target, index, data)
}
public
func glGetFloati_vNV(_ target:GL.Enum, _ index:GL.UInt, _ data:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetFloati_vNV(target, index, data)
}

var fp_glGetFloatv:@convention(c) (GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetFloatv
func load_glGetFloatv(pname:GL.Enum, data:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetFloatv = unsafeBitCast(get_fp("glGetFloatv", support: [ss346, ss365]), to: Swift.type(of: fp_glGetFloatv))
    fp_glGetFloatv(pname, data)
}
public
func glGetFloatv(pname:GL.Enum, data:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetFloatv(pname, data)
}
public
func glGetFloatv(_ pname:GL.Enum, _ data:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetFloatv(pname, data)
}

var fp_glGetFogFuncSGIS:@convention(c) (UnsafeMutablePointer<GL.Float>?) -> () = load_glGetFogFuncSGIS
func load_glGetFogFuncSGIS(points:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetFogFuncSGIS = unsafeBitCast(get_fp("glGetFogFuncSGIS", support: [ss321]), to: Swift.type(of: fp_glGetFogFuncSGIS))
    fp_glGetFogFuncSGIS(points)
}
public
func glGetFogFuncSGIS(points:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetFogFuncSGIS(points)
}
public
func glGetFogFuncSGIS(_ points:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetFogFuncSGIS(points)
}

var fp_glGetFragDataIndex:@convention(c) (GL.UInt, UnsafePointer<GL.Char>?) -> GL.Int = load_glGetFragDataIndex
func load_glGetFragDataIndex(program:GL.UInt, name:UnsafePointer<GL.Char>?) -> GL.Int
{
    fp_glGetFragDataIndex = unsafeBitCast(get_fp("glGetFragDataIndex", support: [ss357, ss30]), to: Swift.type(of: fp_glGetFragDataIndex))
    return fp_glGetFragDataIndex(program, name)
}
public
func glGetFragDataIndex(program:GL.UInt, name:UnsafePointer<GL.Char>?) -> GL.Int
{
    return fp_glGetFragDataIndex(program, name)
}
public
func glGetFragDataIndex(_ program:GL.UInt, _ name:UnsafePointer<GL.Char>?) -> GL.Int
{
    return fp_glGetFragDataIndex(program, name)
}

var fp_glGetFragDataIndexEXT:@convention(c) (GL.UInt, UnsafePointer<GL.Char>?) -> GL.Int = load_glGetFragDataIndexEXT
func load_glGetFragDataIndexEXT(program:GL.UInt, name:UnsafePointer<GL.Char>?) -> GL.Int
{
    fp_glGetFragDataIndexEXT = unsafeBitCast(get_fp("glGetFragDataIndexEXT", support: [ss129]), to: Swift.type(of: fp_glGetFragDataIndexEXT))
    return fp_glGetFragDataIndexEXT(program, name)
}
public
func glGetFragDataIndexEXT(program:GL.UInt, name:UnsafePointer<GL.Char>?) -> GL.Int
{
    return fp_glGetFragDataIndexEXT(program, name)
}
public
func glGetFragDataIndexEXT(_ program:GL.UInt, _ name:UnsafePointer<GL.Char>?) -> GL.Int
{
    return fp_glGetFragDataIndexEXT(program, name)
}

var fp_glGetFragDataLocation:@convention(c) (GL.UInt, UnsafePointer<GL.Char>?) -> GL.Int = load_glGetFragDataLocation
func load_glGetFragDataLocation(program:GL.UInt, name:UnsafePointer<GL.Char>?) -> GL.Int
{
    fp_glGetFragDataLocation = unsafeBitCast(get_fp("glGetFragDataLocation", support: [ss354, ss366]), to: Swift.type(of: fp_glGetFragDataLocation))
    return fp_glGetFragDataLocation(program, name)
}
public
func glGetFragDataLocation(program:GL.UInt, name:UnsafePointer<GL.Char>?) -> GL.Int
{
    return fp_glGetFragDataLocation(program, name)
}
public
func glGetFragDataLocation(_ program:GL.UInt, _ name:UnsafePointer<GL.Char>?) -> GL.Int
{
    return fp_glGetFragDataLocation(program, name)
}

var fp_glGetFragDataLocationEXT:@convention(c) (GL.UInt, UnsafePointer<GL.Char>?) -> GL.Int = load_glGetFragDataLocationEXT
func load_glGetFragDataLocationEXT(program:GL.UInt, name:UnsafePointer<GL.Char>?) -> GL.Int
{
    fp_glGetFragDataLocationEXT = unsafeBitCast(get_fp("glGetFragDataLocationEXT", support: [ss159]), to: Swift.type(of: fp_glGetFragDataLocationEXT))
    return fp_glGetFragDataLocationEXT(program, name)
}
public
func glGetFragDataLocationEXT(program:GL.UInt, name:UnsafePointer<GL.Char>?) -> GL.Int
{
    return fp_glGetFragDataLocationEXT(program, name)
}
public
func glGetFragDataLocationEXT(_ program:GL.UInt, _ name:UnsafePointer<GL.Char>?) -> GL.Int
{
    return fp_glGetFragDataLocationEXT(program, name)
}

var fp_glGetFragmentLightfvSGIX:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetFragmentLightfvSGIX
func load_glGetFragmentLightfvSGIX(light:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetFragmentLightfvSGIX = unsafeBitCast(get_fp("glGetFragmentLightfvSGIX", support: [ss331]), to: Swift.type(of: fp_glGetFragmentLightfvSGIX))
    fp_glGetFragmentLightfvSGIX(light, pname, params)
}
public
func glGetFragmentLightfvSGIX(light:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetFragmentLightfvSGIX(light, pname, params)
}
public
func glGetFragmentLightfvSGIX(_ light:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetFragmentLightfvSGIX(light, pname, params)
}

var fp_glGetFragmentLightivSGIX:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetFragmentLightivSGIX
func load_glGetFragmentLightivSGIX(light:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetFragmentLightivSGIX = unsafeBitCast(get_fp("glGetFragmentLightivSGIX", support: [ss331]), to: Swift.type(of: fp_glGetFragmentLightivSGIX))
    fp_glGetFragmentLightivSGIX(light, pname, params)
}
public
func glGetFragmentLightivSGIX(light:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetFragmentLightivSGIX(light, pname, params)
}
public
func glGetFragmentLightivSGIX(_ light:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetFragmentLightivSGIX(light, pname, params)
}

var fp_glGetFragmentMaterialfvSGIX:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetFragmentMaterialfvSGIX
func load_glGetFragmentMaterialfvSGIX(face:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetFragmentMaterialfvSGIX = unsafeBitCast(get_fp("glGetFragmentMaterialfvSGIX", support: [ss331]), to: Swift.type(of: fp_glGetFragmentMaterialfvSGIX))
    fp_glGetFragmentMaterialfvSGIX(face, pname, params)
}
public
func glGetFragmentMaterialfvSGIX(face:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetFragmentMaterialfvSGIX(face, pname, params)
}
public
func glGetFragmentMaterialfvSGIX(_ face:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetFragmentMaterialfvSGIX(face, pname, params)
}

var fp_glGetFragmentMaterialivSGIX:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetFragmentMaterialivSGIX
func load_glGetFragmentMaterialivSGIX(face:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetFragmentMaterialivSGIX = unsafeBitCast(get_fp("glGetFragmentMaterialivSGIX", support: [ss331]), to: Swift.type(of: fp_glGetFragmentMaterialivSGIX))
    fp_glGetFragmentMaterialivSGIX(face, pname, params)
}
public
func glGetFragmentMaterialivSGIX(face:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetFragmentMaterialivSGIX(face, pname, params)
}
public
func glGetFragmentMaterialivSGIX(_ face:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetFragmentMaterialivSGIX(face, pname, params)
}

var fp_glGetFramebufferAttachmentParameteriv:@convention(c) (GL.Enum, GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetFramebufferAttachmentParameteriv
func load_glGetFramebufferAttachmentParameteriv(target:GL.Enum, attachment:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetFramebufferAttachmentParameteriv = unsafeBitCast(get_fp("glGetFramebufferAttachmentParameteriv", support: [ss354, ss365, ss53]), to: Swift.type(of: fp_glGetFramebufferAttachmentParameteriv))
    fp_glGetFramebufferAttachmentParameteriv(target, attachment, pname, params)
}
public
func glGetFramebufferAttachmentParameteriv(target:GL.Enum, attachment:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetFramebufferAttachmentParameteriv(target, attachment, pname, params)
}
public
func glGetFramebufferAttachmentParameteriv(_ target:GL.Enum, _ attachment:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetFramebufferAttachmentParameteriv(target, attachment, pname, params)
}

var fp_glGetFramebufferAttachmentParameterivEXT:@convention(c) (GL.Enum, GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetFramebufferAttachmentParameterivEXT
func load_glGetFramebufferAttachmentParameterivEXT(target:GL.Enum, attachment:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetFramebufferAttachmentParameterivEXT = unsafeBitCast(get_fp("glGetFramebufferAttachmentParameterivEXT", support: [ss155]), to: Swift.type(of: fp_glGetFramebufferAttachmentParameterivEXT))
    fp_glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params)
}
public
func glGetFramebufferAttachmentParameterivEXT(target:GL.Enum, attachment:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params)
}
public
func glGetFramebufferAttachmentParameterivEXT(_ target:GL.Enum, _ attachment:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params)
}

var fp_glGetFramebufferAttachmentParameterivOES:@convention(c) (GL.Enum, GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetFramebufferAttachmentParameterivOES
func load_glGetFramebufferAttachmentParameterivOES(target:GL.Enum, attachment:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetFramebufferAttachmentParameterivOES = unsafeBitCast(get_fp("glGetFramebufferAttachmentParameterivOES", support: [ss293]), to: Swift.type(of: fp_glGetFramebufferAttachmentParameterivOES))
    fp_glGetFramebufferAttachmentParameterivOES(target, attachment, pname, params)
}
public
func glGetFramebufferAttachmentParameterivOES(target:GL.Enum, attachment:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetFramebufferAttachmentParameterivOES(target, attachment, pname, params)
}
public
func glGetFramebufferAttachmentParameterivOES(_ target:GL.Enum, _ attachment:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetFramebufferAttachmentParameterivOES(target, attachment, pname, params)
}

var fp_glGetFramebufferParameteriv:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetFramebufferParameteriv
func load_glGetFramebufferParameteriv(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetFramebufferParameteriv = unsafeBitCast(get_fp("glGetFramebufferParameteriv", support: [ss361, ss367, ss52]), to: Swift.type(of: fp_glGetFramebufferParameteriv))
    fp_glGetFramebufferParameteriv(target, pname, params)
}
public
func glGetFramebufferParameteriv(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetFramebufferParameteriv(target, pname, params)
}
public
func glGetFramebufferParameteriv(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetFramebufferParameteriv(target, pname, params)
}

var fp_glGetFramebufferParameterivEXT:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetFramebufferParameterivEXT
func load_glGetFramebufferParameterivEXT(framebuffer:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetFramebufferParameterivEXT = unsafeBitCast(get_fp("glGetFramebufferParameterivEXT", support: [ss143]), to: Swift.type(of: fp_glGetFramebufferParameterivEXT))
    fp_glGetFramebufferParameterivEXT(framebuffer, pname, params)
}
public
func glGetFramebufferParameterivEXT(framebuffer:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetFramebufferParameterivEXT(framebuffer, pname, params)
}
public
func glGetFramebufferParameterivEXT(_ framebuffer:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetFramebufferParameterivEXT(framebuffer, pname, params)
}

var fp_glGetGraphicsResetStatus:@convention(c) () -> GL.Enum = load_glGetGraphicsResetStatus
func load_glGetGraphicsResetStatus() -> GL.Enum
{
    fp_glGetGraphicsResetStatus = unsafeBitCast(get_fp("glGetGraphicsResetStatus", support: [ss363, ss368, ss222]), to: Swift.type(of: fp_glGetGraphicsResetStatus))
    return fp_glGetGraphicsResetStatus()
}
public
func glGetGraphicsResetStatus() -> GL.Enum
{
    return fp_glGetGraphicsResetStatus()
}

var fp_glGetGraphicsResetStatusARB:@convention(c) () -> GL.Enum = load_glGetGraphicsResetStatusARB
func load_glGetGraphicsResetStatusARB() -> GL.Enum
{
    fp_glGetGraphicsResetStatusARB = unsafeBitCast(get_fp("glGetGraphicsResetStatusARB", support: [ss76]), to: Swift.type(of: fp_glGetGraphicsResetStatusARB))
    return fp_glGetGraphicsResetStatusARB()
}
public
func glGetGraphicsResetStatusARB() -> GL.Enum
{
    return fp_glGetGraphicsResetStatusARB()
}

var fp_glGetGraphicsResetStatusEXT:@convention(c) () -> GL.Enum = load_glGetGraphicsResetStatusEXT
func load_glGetGraphicsResetStatusEXT() -> GL.Enum
{
    fp_glGetGraphicsResetStatusEXT = unsafeBitCast(get_fp("glGetGraphicsResetStatusEXT", support: [ss180]), to: Swift.type(of: fp_glGetGraphicsResetStatusEXT))
    return fp_glGetGraphicsResetStatusEXT()
}
public
func glGetGraphicsResetStatusEXT() -> GL.Enum
{
    return fp_glGetGraphicsResetStatusEXT()
}

var fp_glGetGraphicsResetStatusKHR:@convention(c) () -> GL.Enum = load_glGetGraphicsResetStatusKHR
func load_glGetGraphicsResetStatusKHR() -> GL.Enum
{
    fp_glGetGraphicsResetStatusKHR = unsafeBitCast(get_fp("glGetGraphicsResetStatusKHR", support: [ss222]), to: Swift.type(of: fp_glGetGraphicsResetStatusKHR))
    return fp_glGetGraphicsResetStatusKHR()
}
public
func glGetGraphicsResetStatusKHR() -> GL.Enum
{
    return fp_glGetGraphicsResetStatusKHR()
}

var fp_glGetHandleARB:@convention(c) (GL.Enum) -> GL.HandleARB = load_glGetHandleARB
func load_glGetHandleARB(pname:GL.Enum) -> GL.HandleARB
{
    fp_glGetHandleARB = unsafeBitCast(get_fp("glGetHandleARB", support: [ss83]), to: Swift.type(of: fp_glGetHandleARB))
    return fp_glGetHandleARB(pname)
}
public
func glGetHandleARB(pname:GL.Enum) -> GL.HandleARB
{
    return fp_glGetHandleARB(pname)
}
public
func glGetHandleARB(_ pname:GL.Enum) -> GL.HandleARB
{
    return fp_glGetHandleARB(pname)
}

var fp_glGetHistogram:@convention(c) (GL.Enum, GL.Bool, GL.Enum, GL.Enum, UnsafeMutableRawPointer?) -> () = load_glGetHistogram
func load_glGetHistogram(target:GL.Enum, reset:GL.Bool, format:GL.Enum, type:GL.Enum, values:UnsafeMutableRawPointer?)
{
    fp_glGetHistogram = unsafeBitCast(get_fp("glGetHistogram", support: [ss59]), to: Swift.type(of: fp_glGetHistogram))
    fp_glGetHistogram(target, reset, format, type, values)
}
public
func glGetHistogram(target:GL.Enum, reset:GL.Bool, format:GL.Enum, type:GL.Enum, values:UnsafeMutableRawPointer?)
{
    fp_glGetHistogram(target, reset, format, type, values)
}
public
func glGetHistogram(_ target:GL.Enum, _ reset:GL.Bool, _ format:GL.Enum, _ type:GL.Enum, _ values:UnsafeMutableRawPointer?)
{
    fp_glGetHistogram(target, reset, format, type, values)
}

var fp_glGetHistogramEXT:@convention(c) (GL.Enum, GL.Bool, GL.Enum, GL.Enum, UnsafeMutableRawPointer?) -> () = load_glGetHistogramEXT
func load_glGetHistogramEXT(target:GL.Enum, reset:GL.Bool, format:GL.Enum, type:GL.Enum, values:UnsafeMutableRawPointer?)
{
    fp_glGetHistogramEXT = unsafeBitCast(get_fp("glGetHistogramEXT", support: [ss160]), to: Swift.type(of: fp_glGetHistogramEXT))
    fp_glGetHistogramEXT(target, reset, format, type, values)
}
public
func glGetHistogramEXT(target:GL.Enum, reset:GL.Bool, format:GL.Enum, type:GL.Enum, values:UnsafeMutableRawPointer?)
{
    fp_glGetHistogramEXT(target, reset, format, type, values)
}
public
func glGetHistogramEXT(_ target:GL.Enum, _ reset:GL.Bool, _ format:GL.Enum, _ type:GL.Enum, _ values:UnsafeMutableRawPointer?)
{
    fp_glGetHistogramEXT(target, reset, format, type, values)
}

var fp_glGetHistogramParameterfv:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetHistogramParameterfv
func load_glGetHistogramParameterfv(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetHistogramParameterfv = unsafeBitCast(get_fp("glGetHistogramParameterfv", support: [ss59]), to: Swift.type(of: fp_glGetHistogramParameterfv))
    fp_glGetHistogramParameterfv(target, pname, params)
}
public
func glGetHistogramParameterfv(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetHistogramParameterfv(target, pname, params)
}
public
func glGetHistogramParameterfv(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetHistogramParameterfv(target, pname, params)
}

var fp_glGetHistogramParameterfvEXT:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetHistogramParameterfvEXT
func load_glGetHistogramParameterfvEXT(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetHistogramParameterfvEXT = unsafeBitCast(get_fp("glGetHistogramParameterfvEXT", support: [ss160]), to: Swift.type(of: fp_glGetHistogramParameterfvEXT))
    fp_glGetHistogramParameterfvEXT(target, pname, params)
}
public
func glGetHistogramParameterfvEXT(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetHistogramParameterfvEXT(target, pname, params)
}
public
func glGetHistogramParameterfvEXT(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetHistogramParameterfvEXT(target, pname, params)
}

var fp_glGetHistogramParameteriv:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetHistogramParameteriv
func load_glGetHistogramParameteriv(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetHistogramParameteriv = unsafeBitCast(get_fp("glGetHistogramParameteriv", support: [ss59]), to: Swift.type(of: fp_glGetHistogramParameteriv))
    fp_glGetHistogramParameteriv(target, pname, params)
}
public
func glGetHistogramParameteriv(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetHistogramParameteriv(target, pname, params)
}
public
func glGetHistogramParameteriv(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetHistogramParameteriv(target, pname, params)
}

var fp_glGetHistogramParameterivEXT:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetHistogramParameterivEXT
func load_glGetHistogramParameterivEXT(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetHistogramParameterivEXT = unsafeBitCast(get_fp("glGetHistogramParameterivEXT", support: [ss160]), to: Swift.type(of: fp_glGetHistogramParameterivEXT))
    fp_glGetHistogramParameterivEXT(target, pname, params)
}
public
func glGetHistogramParameterivEXT(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetHistogramParameterivEXT(target, pname, params)
}
public
func glGetHistogramParameterivEXT(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetHistogramParameterivEXT(target, pname, params)
}

var fp_glGetHistogramParameterxvOES:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Fixed>?) -> () = load_glGetHistogramParameterxvOES
func load_glGetHistogramParameterxvOES(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetHistogramParameterxvOES = unsafeBitCast(get_fp("glGetHistogramParameterxvOES", support: [ss292]), to: Swift.type(of: fp_glGetHistogramParameterxvOES))
    fp_glGetHistogramParameterxvOES(target, pname, params)
}
public
func glGetHistogramParameterxvOES(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetHistogramParameterxvOES(target, pname, params)
}
public
func glGetHistogramParameterxvOES(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetHistogramParameterxvOES(target, pname, params)
}

var fp_glGetImageHandleARB:@convention(c) (GL.UInt, GL.Int, GL.Bool, GL.Int, GL.Enum) -> GL.UInt64 = load_glGetImageHandleARB
func load_glGetImageHandleARB(texture:GL.UInt, level:GL.Int, layered:GL.Bool, layer:GL.Int, format:GL.Enum) -> GL.UInt64
{
    fp_glGetImageHandleARB = unsafeBitCast(get_fp("glGetImageHandleARB", support: [ss29]), to: Swift.type(of: fp_glGetImageHandleARB))
    return fp_glGetImageHandleARB(texture, level, layered, layer, format)
}
public
func glGetImageHandleARB(texture:GL.UInt, level:GL.Int, layered:GL.Bool, layer:GL.Int, format:GL.Enum) -> GL.UInt64
{
    return fp_glGetImageHandleARB(texture, level, layered, layer, format)
}
public
func glGetImageHandleARB(_ texture:GL.UInt, _ level:GL.Int, _ layered:GL.Bool, _ layer:GL.Int, _ format:GL.Enum) -> GL.UInt64
{
    return fp_glGetImageHandleARB(texture, level, layered, layer, format)
}

var fp_glGetImageHandleNV:@convention(c) (GL.UInt, GL.Int, GL.Bool, GL.Int, GL.Enum) -> GL.UInt64 = load_glGetImageHandleNV
func load_glGetImageHandleNV(texture:GL.UInt, level:GL.Int, layered:GL.Bool, layer:GL.Int, format:GL.Enum) -> GL.UInt64
{
    fp_glGetImageHandleNV = unsafeBitCast(get_fp("glGetImageHandleNV", support: [ss227]), to: Swift.type(of: fp_glGetImageHandleNV))
    return fp_glGetImageHandleNV(texture, level, layered, layer, format)
}
public
func glGetImageHandleNV(texture:GL.UInt, level:GL.Int, layered:GL.Bool, layer:GL.Int, format:GL.Enum) -> GL.UInt64
{
    return fp_glGetImageHandleNV(texture, level, layered, layer, format)
}
public
func glGetImageHandleNV(_ texture:GL.UInt, _ level:GL.Int, _ layered:GL.Bool, _ layer:GL.Int, _ format:GL.Enum) -> GL.UInt64
{
    return fp_glGetImageHandleNV(texture, level, layered, layer, format)
}

var fp_glGetImageTransformParameterfvHP:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetImageTransformParameterfvHP
func load_glGetImageTransformParameterfvHP(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetImageTransformParameterfvHP = unsafeBitCast(get_fp("glGetImageTransformParameterfvHP", support: [ss209]), to: Swift.type(of: fp_glGetImageTransformParameterfvHP))
    fp_glGetImageTransformParameterfvHP(target, pname, params)
}
public
func glGetImageTransformParameterfvHP(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetImageTransformParameterfvHP(target, pname, params)
}
public
func glGetImageTransformParameterfvHP(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetImageTransformParameterfvHP(target, pname, params)
}

var fp_glGetImageTransformParameterivHP:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetImageTransformParameterivHP
func load_glGetImageTransformParameterivHP(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetImageTransformParameterivHP = unsafeBitCast(get_fp("glGetImageTransformParameterivHP", support: [ss209]), to: Swift.type(of: fp_glGetImageTransformParameterivHP))
    fp_glGetImageTransformParameterivHP(target, pname, params)
}
public
func glGetImageTransformParameterivHP(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetImageTransformParameterivHP(target, pname, params)
}
public
func glGetImageTransformParameterivHP(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetImageTransformParameterivHP(target, pname, params)
}

var fp_glGetInfoLogARB:@convention(c) (GL.HandleARB, GL.Size, UnsafeMutablePointer<GL.Size>?, UnsafeMutablePointer<GL.CharARB>?) -> () = load_glGetInfoLogARB
func load_glGetInfoLogARB(obj:GL.HandleARB, maxLength:GL.Size, length:UnsafeMutablePointer<GL.Size>?, infoLog:UnsafeMutablePointer<GL.CharARB>?)
{
    fp_glGetInfoLogARB = unsafeBitCast(get_fp("glGetInfoLogARB", support: [ss83]), to: Swift.type(of: fp_glGetInfoLogARB))
    fp_glGetInfoLogARB(obj, maxLength, length, infoLog)
}
public
func glGetInfoLogARB(obj:GL.HandleARB, maxLength:GL.Size, length:UnsafeMutablePointer<GL.Size>?, infoLog:UnsafeMutablePointer<GL.CharARB>?)
{
    fp_glGetInfoLogARB(obj, maxLength, length, infoLog)
}
public
func glGetInfoLogARB(_ obj:GL.HandleARB, _ maxLength:GL.Size, _ length:UnsafeMutablePointer<GL.Size>?, _ infoLog:UnsafeMutablePointer<GL.CharARB>?)
{
    fp_glGetInfoLogARB(obj, maxLength, length, infoLog)
}

var fp_glGetInstrumentsSGIX:@convention(c) () -> GL.Int = load_glGetInstrumentsSGIX
func load_glGetInstrumentsSGIX() -> GL.Int
{
    fp_glGetInstrumentsSGIX = unsafeBitCast(get_fp("glGetInstrumentsSGIX", support: [ss334]), to: Swift.type(of: fp_glGetInstrumentsSGIX))
    return fp_glGetInstrumentsSGIX()
}
public
func glGetInstrumentsSGIX() -> GL.Int
{
    return fp_glGetInstrumentsSGIX()
}

var fp_glGetInteger64i_v:@convention(c) (GL.Enum, GL.UInt, UnsafeMutablePointer<GL.Int64>?) -> () = load_glGetInteger64i_v
func load_glGetInteger64i_v(target:GL.Enum, index:GL.UInt, data:UnsafeMutablePointer<GL.Int64>?)
{
    fp_glGetInteger64i_v = unsafeBitCast(get_fp("glGetInteger64i_v", support: [ss356, ss366]), to: Swift.type(of: fp_glGetInteger64i_v))
    fp_glGetInteger64i_v(target, index, data)
}
public
func glGetInteger64i_v(target:GL.Enum, index:GL.UInt, data:UnsafeMutablePointer<GL.Int64>?)
{
    fp_glGetInteger64i_v(target, index, data)
}
public
func glGetInteger64i_v(_ target:GL.Enum, _ index:GL.UInt, _ data:UnsafeMutablePointer<GL.Int64>?)
{
    fp_glGetInteger64i_v(target, index, data)
}

var fp_glGetInteger64v:@convention(c) (GL.Enum, UnsafeMutablePointer<GL.Int64>?) -> () = load_glGetInteger64v
func load_glGetInteger64v(pname:GL.Enum, data:UnsafeMutablePointer<GL.Int64>?)
{
    fp_glGetInteger64v = unsafeBitCast(get_fp("glGetInteger64v", support: [ss356, ss366, ss89]), to: Swift.type(of: fp_glGetInteger64v))
    fp_glGetInteger64v(pname, data)
}
public
func glGetInteger64v(pname:GL.Enum, data:UnsafeMutablePointer<GL.Int64>?)
{
    fp_glGetInteger64v(pname, data)
}
public
func glGetInteger64v(_ pname:GL.Enum, _ data:UnsafeMutablePointer<GL.Int64>?)
{
    fp_glGetInteger64v(pname, data)
}

var fp_glGetInteger64vAPPLE:@convention(c) (GL.Enum, UnsafeMutablePointer<GL.Int64>?) -> () = load_glGetInteger64vAPPLE
func load_glGetInteger64vAPPLE(pname:GL.Enum, params:UnsafeMutablePointer<GL.Int64>?)
{
    fp_glGetInteger64vAPPLE = unsafeBitCast(get_fp("glGetInteger64vAPPLE", support: [ss23]), to: Swift.type(of: fp_glGetInteger64vAPPLE))
    fp_glGetInteger64vAPPLE(pname, params)
}
public
func glGetInteger64vAPPLE(pname:GL.Enum, params:UnsafeMutablePointer<GL.Int64>?)
{
    fp_glGetInteger64vAPPLE(pname, params)
}
public
func glGetInteger64vAPPLE(_ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int64>?)
{
    fp_glGetInteger64vAPPLE(pname, params)
}

var fp_glGetIntegerIndexedvEXT:@convention(c) (GL.Enum, GL.UInt, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetIntegerIndexedvEXT
func load_glGetIntegerIndexedvEXT(target:GL.Enum, index:GL.UInt, data:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetIntegerIndexedvEXT = unsafeBitCast(get_fp("glGetIntegerIndexedvEXT", support: [ss143, ss148]), to: Swift.type(of: fp_glGetIntegerIndexedvEXT))
    fp_glGetIntegerIndexedvEXT(target, index, data)
}
public
func glGetIntegerIndexedvEXT(target:GL.Enum, index:GL.UInt, data:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetIntegerIndexedvEXT(target, index, data)
}
public
func glGetIntegerIndexedvEXT(_ target:GL.Enum, _ index:GL.UInt, _ data:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetIntegerIndexedvEXT(target, index, data)
}

var fp_glGetIntegeri_v:@convention(c) (GL.Enum, GL.UInt, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetIntegeri_v
func load_glGetIntegeri_v(target:GL.Enum, index:GL.UInt, data:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetIntegeri_v = unsafeBitCast(get_fp("glGetIntegeri_v", support: [ss354, ss355, ss366, ss104]), to: Swift.type(of: fp_glGetIntegeri_v))
    fp_glGetIntegeri_v(target, index, data)
}
public
func glGetIntegeri_v(target:GL.Enum, index:GL.UInt, data:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetIntegeri_v(target, index, data)
}
public
func glGetIntegeri_v(_ target:GL.Enum, _ index:GL.UInt, _ data:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetIntegeri_v(target, index, data)
}

var fp_glGetIntegeri_vEXT:@convention(c) (GL.Enum, GL.UInt, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetIntegeri_vEXT
func load_glGetIntegeri_vEXT(target:GL.Enum, index:GL.UInt, data:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetIntegeri_vEXT = unsafeBitCast(get_fp("glGetIntegeri_vEXT", support: [ss170]), to: Swift.type(of: fp_glGetIntegeri_vEXT))
    fp_glGetIntegeri_vEXT(target, index, data)
}
public
func glGetIntegeri_vEXT(target:GL.Enum, index:GL.UInt, data:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetIntegeri_vEXT(target, index, data)
}
public
func glGetIntegeri_vEXT(_ target:GL.Enum, _ index:GL.UInt, _ data:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetIntegeri_vEXT(target, index, data)
}

var fp_glGetIntegerui64i_vNV:@convention(c) (GL.Enum, GL.UInt, UnsafeMutablePointer<GL.UInt64EXT>?) -> () = load_glGetIntegerui64i_vNV
func load_glGetIntegerui64i_vNV(value:GL.Enum, index:GL.UInt, result:UnsafeMutablePointer<GL.UInt64EXT>?)
{
    fp_glGetIntegerui64i_vNV = unsafeBitCast(get_fp("glGetIntegerui64i_vNV", support: [ss277]), to: Swift.type(of: fp_glGetIntegerui64i_vNV))
    fp_glGetIntegerui64i_vNV(value, index, result)
}
public
func glGetIntegerui64i_vNV(value:GL.Enum, index:GL.UInt, result:UnsafeMutablePointer<GL.UInt64EXT>?)
{
    fp_glGetIntegerui64i_vNV(value, index, result)
}
public
func glGetIntegerui64i_vNV(_ value:GL.Enum, _ index:GL.UInt, _ result:UnsafeMutablePointer<GL.UInt64EXT>?)
{
    fp_glGetIntegerui64i_vNV(value, index, result)
}

var fp_glGetIntegerui64vNV:@convention(c) (GL.Enum, UnsafeMutablePointer<GL.UInt64EXT>?) -> () = load_glGetIntegerui64vNV
func load_glGetIntegerui64vNV(value:GL.Enum, result:UnsafeMutablePointer<GL.UInt64EXT>?)
{
    fp_glGetIntegerui64vNV = unsafeBitCast(get_fp("glGetIntegerui64vNV", support: [ss269]), to: Swift.type(of: fp_glGetIntegerui64vNV))
    fp_glGetIntegerui64vNV(value, result)
}
public
func glGetIntegerui64vNV(value:GL.Enum, result:UnsafeMutablePointer<GL.UInt64EXT>?)
{
    fp_glGetIntegerui64vNV(value, result)
}
public
func glGetIntegerui64vNV(_ value:GL.Enum, _ result:UnsafeMutablePointer<GL.UInt64EXT>?)
{
    fp_glGetIntegerui64vNV(value, result)
}

var fp_glGetIntegerv:@convention(c) (GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetIntegerv
func load_glGetIntegerv(pname:GL.Enum, data:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetIntegerv = unsafeBitCast(get_fp("glGetIntegerv", support: [ss346, ss365]), to: Swift.type(of: fp_glGetIntegerv))
    fp_glGetIntegerv(pname, data)
}
public
func glGetIntegerv(pname:GL.Enum, data:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetIntegerv(pname, data)
}
public
func glGetIntegerv(_ pname:GL.Enum, _ data:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetIntegerv(pname, data)
}

var fp_glGetInternalformatSampleivNV:@convention(c) (GL.Enum, GL.Enum, GL.Size, GL.Enum, GL.Size, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetInternalformatSampleivNV
func load_glGetInternalformatSampleivNV(target:GL.Enum, internalformat:GL.Enum, samples:GL.Size, pname:GL.Enum, bufSize:GL.Size, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetInternalformatSampleivNV = unsafeBitCast(get_fp("glGetInternalformatSampleivNV", support: [ss255]), to: Swift.type(of: fp_glGetInternalformatSampleivNV))
    fp_glGetInternalformatSampleivNV(target, internalformat, samples, pname, bufSize, params)
}
public
func glGetInternalformatSampleivNV(target:GL.Enum, internalformat:GL.Enum, samples:GL.Size, pname:GL.Enum, bufSize:GL.Size, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetInternalformatSampleivNV(target, internalformat, samples, pname, bufSize, params)
}
public
func glGetInternalformatSampleivNV(_ target:GL.Enum, _ internalformat:GL.Enum, _ samples:GL.Size, _ pname:GL.Enum, _ bufSize:GL.Size, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetInternalformatSampleivNV(target, internalformat, samples, pname, bufSize, params)
}

var fp_glGetInternalformati64v:@convention(c) (GL.Enum, GL.Enum, GL.Enum, GL.Size, UnsafeMutablePointer<GL.Int64>?) -> () = load_glGetInternalformati64v
func load_glGetInternalformati64v(target:GL.Enum, internalformat:GL.Enum, pname:GL.Enum, bufSize:GL.Size, params:UnsafeMutablePointer<GL.Int64>?)
{
    fp_glGetInternalformati64v = unsafeBitCast(get_fp("glGetInternalformati64v", support: [ss361, ss63]), to: Swift.type(of: fp_glGetInternalformati64v))
    fp_glGetInternalformati64v(target, internalformat, pname, bufSize, params)
}
public
func glGetInternalformati64v(target:GL.Enum, internalformat:GL.Enum, pname:GL.Enum, bufSize:GL.Size, params:UnsafeMutablePointer<GL.Int64>?)
{
    fp_glGetInternalformati64v(target, internalformat, pname, bufSize, params)
}
public
func glGetInternalformati64v(_ target:GL.Enum, _ internalformat:GL.Enum, _ pname:GL.Enum, _ bufSize:GL.Size, _ params:UnsafeMutablePointer<GL.Int64>?)
{
    fp_glGetInternalformati64v(target, internalformat, pname, bufSize, params)
}

var fp_glGetInternalformativ:@convention(c) (GL.Enum, GL.Enum, GL.Enum, GL.Size, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetInternalformativ
func load_glGetInternalformativ(target:GL.Enum, internalformat:GL.Enum, pname:GL.Enum, bufSize:GL.Size, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetInternalformativ = unsafeBitCast(get_fp("glGetInternalformativ", support: [ss360, ss366, ss62]), to: Swift.type(of: fp_glGetInternalformativ))
    fp_glGetInternalformativ(target, internalformat, pname, bufSize, params)
}
public
func glGetInternalformativ(target:GL.Enum, internalformat:GL.Enum, pname:GL.Enum, bufSize:GL.Size, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetInternalformativ(target, internalformat, pname, bufSize, params)
}
public
func glGetInternalformativ(_ target:GL.Enum, _ internalformat:GL.Enum, _ pname:GL.Enum, _ bufSize:GL.Size, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetInternalformativ(target, internalformat, pname, bufSize, params)
}

var fp_glGetInvariantBooleanvEXT:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Bool>?) -> () = load_glGetInvariantBooleanvEXT
func load_glGetInvariantBooleanvEXT(id:GL.UInt, value:GL.Enum, data:UnsafeMutablePointer<GL.Bool>?)
{
    fp_glGetInvariantBooleanvEXT = unsafeBitCast(get_fp("glGetInvariantBooleanvEXT", support: [ss204]), to: Swift.type(of: fp_glGetInvariantBooleanvEXT))
    fp_glGetInvariantBooleanvEXT(id, value, data)
}
public
func glGetInvariantBooleanvEXT(id:GL.UInt, value:GL.Enum, data:UnsafeMutablePointer<GL.Bool>?)
{
    fp_glGetInvariantBooleanvEXT(id, value, data)
}
public
func glGetInvariantBooleanvEXT(_ id:GL.UInt, _ value:GL.Enum, _ data:UnsafeMutablePointer<GL.Bool>?)
{
    fp_glGetInvariantBooleanvEXT(id, value, data)
}

var fp_glGetInvariantFloatvEXT:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetInvariantFloatvEXT
func load_glGetInvariantFloatvEXT(id:GL.UInt, value:GL.Enum, data:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetInvariantFloatvEXT = unsafeBitCast(get_fp("glGetInvariantFloatvEXT", support: [ss204]), to: Swift.type(of: fp_glGetInvariantFloatvEXT))
    fp_glGetInvariantFloatvEXT(id, value, data)
}
public
func glGetInvariantFloatvEXT(id:GL.UInt, value:GL.Enum, data:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetInvariantFloatvEXT(id, value, data)
}
public
func glGetInvariantFloatvEXT(_ id:GL.UInt, _ value:GL.Enum, _ data:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetInvariantFloatvEXT(id, value, data)
}

var fp_glGetInvariantIntegervEXT:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetInvariantIntegervEXT
func load_glGetInvariantIntegervEXT(id:GL.UInt, value:GL.Enum, data:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetInvariantIntegervEXT = unsafeBitCast(get_fp("glGetInvariantIntegervEXT", support: [ss204]), to: Swift.type(of: fp_glGetInvariantIntegervEXT))
    fp_glGetInvariantIntegervEXT(id, value, data)
}
public
func glGetInvariantIntegervEXT(id:GL.UInt, value:GL.Enum, data:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetInvariantIntegervEXT(id, value, data)
}
public
func glGetInvariantIntegervEXT(_ id:GL.UInt, _ value:GL.Enum, _ data:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetInvariantIntegervEXT(id, value, data)
}

var fp_glGetLightfv:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetLightfv
func load_glGetLightfv(light:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetLightfv = unsafeBitCast(get_fp("glGetLightfv", support: [ss346, ss369, ss364]), to: Swift.type(of: fp_glGetLightfv))
    fp_glGetLightfv(light, pname, params)
}
public
func glGetLightfv(light:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetLightfv(light, pname, params)
}
public
func glGetLightfv(_ light:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetLightfv(light, pname, params)
}

var fp_glGetLightiv:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetLightiv
func load_glGetLightiv(light:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetLightiv = unsafeBitCast(get_fp("glGetLightiv", support: [ss346, ss369]), to: Swift.type(of: fp_glGetLightiv))
    fp_glGetLightiv(light, pname, params)
}
public
func glGetLightiv(light:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetLightiv(light, pname, params)
}
public
func glGetLightiv(_ light:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetLightiv(light, pname, params)
}

var fp_glGetLightxOES:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Fixed>?) -> () = load_glGetLightxOES
func load_glGetLightxOES(light:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetLightxOES = unsafeBitCast(get_fp("glGetLightxOES", support: [ss292]), to: Swift.type(of: fp_glGetLightxOES))
    fp_glGetLightxOES(light, pname, params)
}
public
func glGetLightxOES(light:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetLightxOES(light, pname, params)
}
public
func glGetLightxOES(_ light:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetLightxOES(light, pname, params)
}

var fp_glGetLightxv:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Fixed>?) -> () = load_glGetLightxv
func load_glGetLightxv(light:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetLightxv = unsafeBitCast(get_fp("glGetLightxv", support: [ss364]), to: Swift.type(of: fp_glGetLightxv))
    fp_glGetLightxv(light, pname, params)
}
public
func glGetLightxv(light:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetLightxv(light, pname, params)
}
public
func glGetLightxv(_ light:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetLightxv(light, pname, params)
}

var fp_glGetLightxvOES:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Fixed>?) -> () = load_glGetLightxvOES
func load_glGetLightxvOES(light:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetLightxvOES = unsafeBitCast(get_fp("glGetLightxvOES", support: [ss292]), to: Swift.type(of: fp_glGetLightxvOES))
    fp_glGetLightxvOES(light, pname, params)
}
public
func glGetLightxvOES(light:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetLightxvOES(light, pname, params)
}
public
func glGetLightxvOES(_ light:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetLightxvOES(light, pname, params)
}

var fp_glGetListParameterfvSGIX:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetListParameterfvSGIX
func load_glGetListParameterfvSGIX(list:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetListParameterfvSGIX = unsafeBitCast(get_fp("glGetListParameterfvSGIX", support: [ss335]), to: Swift.type(of: fp_glGetListParameterfvSGIX))
    fp_glGetListParameterfvSGIX(list, pname, params)
}
public
func glGetListParameterfvSGIX(list:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetListParameterfvSGIX(list, pname, params)
}
public
func glGetListParameterfvSGIX(_ list:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetListParameterfvSGIX(list, pname, params)
}

var fp_glGetListParameterivSGIX:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetListParameterivSGIX
func load_glGetListParameterivSGIX(list:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetListParameterivSGIX = unsafeBitCast(get_fp("glGetListParameterivSGIX", support: [ss335]), to: Swift.type(of: fp_glGetListParameterivSGIX))
    fp_glGetListParameterivSGIX(list, pname, params)
}
public
func glGetListParameterivSGIX(list:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetListParameterivSGIX(list, pname, params)
}
public
func glGetListParameterivSGIX(_ list:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetListParameterivSGIX(list, pname, params)
}

var fp_glGetLocalConstantBooleanvEXT:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Bool>?) -> () = load_glGetLocalConstantBooleanvEXT
func load_glGetLocalConstantBooleanvEXT(id:GL.UInt, value:GL.Enum, data:UnsafeMutablePointer<GL.Bool>?)
{
    fp_glGetLocalConstantBooleanvEXT = unsafeBitCast(get_fp("glGetLocalConstantBooleanvEXT", support: [ss204]), to: Swift.type(of: fp_glGetLocalConstantBooleanvEXT))
    fp_glGetLocalConstantBooleanvEXT(id, value, data)
}
public
func glGetLocalConstantBooleanvEXT(id:GL.UInt, value:GL.Enum, data:UnsafeMutablePointer<GL.Bool>?)
{
    fp_glGetLocalConstantBooleanvEXT(id, value, data)
}
public
func glGetLocalConstantBooleanvEXT(_ id:GL.UInt, _ value:GL.Enum, _ data:UnsafeMutablePointer<GL.Bool>?)
{
    fp_glGetLocalConstantBooleanvEXT(id, value, data)
}

var fp_glGetLocalConstantFloatvEXT:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetLocalConstantFloatvEXT
func load_glGetLocalConstantFloatvEXT(id:GL.UInt, value:GL.Enum, data:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetLocalConstantFloatvEXT = unsafeBitCast(get_fp("glGetLocalConstantFloatvEXT", support: [ss204]), to: Swift.type(of: fp_glGetLocalConstantFloatvEXT))
    fp_glGetLocalConstantFloatvEXT(id, value, data)
}
public
func glGetLocalConstantFloatvEXT(id:GL.UInt, value:GL.Enum, data:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetLocalConstantFloatvEXT(id, value, data)
}
public
func glGetLocalConstantFloatvEXT(_ id:GL.UInt, _ value:GL.Enum, _ data:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetLocalConstantFloatvEXT(id, value, data)
}

var fp_glGetLocalConstantIntegervEXT:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetLocalConstantIntegervEXT
func load_glGetLocalConstantIntegervEXT(id:GL.UInt, value:GL.Enum, data:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetLocalConstantIntegervEXT = unsafeBitCast(get_fp("glGetLocalConstantIntegervEXT", support: [ss204]), to: Swift.type(of: fp_glGetLocalConstantIntegervEXT))
    fp_glGetLocalConstantIntegervEXT(id, value, data)
}
public
func glGetLocalConstantIntegervEXT(id:GL.UInt, value:GL.Enum, data:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetLocalConstantIntegervEXT(id, value, data)
}
public
func glGetLocalConstantIntegervEXT(_ id:GL.UInt, _ value:GL.Enum, _ data:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetLocalConstantIntegervEXT(id, value, data)
}

var fp_glGetMapAttribParameterfvNV:@convention(c) (GL.Enum, GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetMapAttribParameterfvNV
func load_glGetMapAttribParameterfvNV(target:GL.Enum, index:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetMapAttribParameterfvNV = unsafeBitCast(get_fp("glGetMapAttribParameterfvNV", support: [ss240]), to: Swift.type(of: fp_glGetMapAttribParameterfvNV))
    fp_glGetMapAttribParameterfvNV(target, index, pname, params)
}
public
func glGetMapAttribParameterfvNV(target:GL.Enum, index:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetMapAttribParameterfvNV(target, index, pname, params)
}
public
func glGetMapAttribParameterfvNV(_ target:GL.Enum, _ index:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetMapAttribParameterfvNV(target, index, pname, params)
}

var fp_glGetMapAttribParameterivNV:@convention(c) (GL.Enum, GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetMapAttribParameterivNV
func load_glGetMapAttribParameterivNV(target:GL.Enum, index:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetMapAttribParameterivNV = unsafeBitCast(get_fp("glGetMapAttribParameterivNV", support: [ss240]), to: Swift.type(of: fp_glGetMapAttribParameterivNV))
    fp_glGetMapAttribParameterivNV(target, index, pname, params)
}
public
func glGetMapAttribParameterivNV(target:GL.Enum, index:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetMapAttribParameterivNV(target, index, pname, params)
}
public
func glGetMapAttribParameterivNV(_ target:GL.Enum, _ index:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetMapAttribParameterivNV(target, index, pname, params)
}

var fp_glGetMapControlPointsNV:@convention(c) (GL.Enum, GL.UInt, GL.Enum, GL.Size, GL.Size, GL.Bool, UnsafeMutableRawPointer?) -> () = load_glGetMapControlPointsNV
func load_glGetMapControlPointsNV(target:GL.Enum, index:GL.UInt, type:GL.Enum, ustride:GL.Size, vstride:GL.Size, packed:GL.Bool, points:UnsafeMutableRawPointer?)
{
    fp_glGetMapControlPointsNV = unsafeBitCast(get_fp("glGetMapControlPointsNV", support: [ss240]), to: Swift.type(of: fp_glGetMapControlPointsNV))
    fp_glGetMapControlPointsNV(target, index, type, ustride, vstride, packed, points)
}
public
func glGetMapControlPointsNV(target:GL.Enum, index:GL.UInt, type:GL.Enum, ustride:GL.Size, vstride:GL.Size, packed:GL.Bool, points:UnsafeMutableRawPointer?)
{
    fp_glGetMapControlPointsNV(target, index, type, ustride, vstride, packed, points)
}
public
func glGetMapControlPointsNV(_ target:GL.Enum, _ index:GL.UInt, _ type:GL.Enum, _ ustride:GL.Size, _ vstride:GL.Size, _ packed:GL.Bool, _ points:UnsafeMutableRawPointer?)
{
    fp_glGetMapControlPointsNV(target, index, type, ustride, vstride, packed, points)
}

var fp_glGetMapParameterfvNV:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetMapParameterfvNV
func load_glGetMapParameterfvNV(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetMapParameterfvNV = unsafeBitCast(get_fp("glGetMapParameterfvNV", support: [ss240]), to: Swift.type(of: fp_glGetMapParameterfvNV))
    fp_glGetMapParameterfvNV(target, pname, params)
}
public
func glGetMapParameterfvNV(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetMapParameterfvNV(target, pname, params)
}
public
func glGetMapParameterfvNV(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetMapParameterfvNV(target, pname, params)
}

var fp_glGetMapParameterivNV:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetMapParameterivNV
func load_glGetMapParameterivNV(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetMapParameterivNV = unsafeBitCast(get_fp("glGetMapParameterivNV", support: [ss240]), to: Swift.type(of: fp_glGetMapParameterivNV))
    fp_glGetMapParameterivNV(target, pname, params)
}
public
func glGetMapParameterivNV(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetMapParameterivNV(target, pname, params)
}
public
func glGetMapParameterivNV(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetMapParameterivNV(target, pname, params)
}

var fp_glGetMapdv:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Double>?) -> () = load_glGetMapdv
func load_glGetMapdv(target:GL.Enum, query:GL.Enum, v:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetMapdv = unsafeBitCast(get_fp("glGetMapdv", support: [ss346, ss369]), to: Swift.type(of: fp_glGetMapdv))
    fp_glGetMapdv(target, query, v)
}
public
func glGetMapdv(target:GL.Enum, query:GL.Enum, v:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetMapdv(target, query, v)
}
public
func glGetMapdv(_ target:GL.Enum, _ query:GL.Enum, _ v:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetMapdv(target, query, v)
}

var fp_glGetMapfv:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetMapfv
func load_glGetMapfv(target:GL.Enum, query:GL.Enum, v:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetMapfv = unsafeBitCast(get_fp("glGetMapfv", support: [ss346, ss369]), to: Swift.type(of: fp_glGetMapfv))
    fp_glGetMapfv(target, query, v)
}
public
func glGetMapfv(target:GL.Enum, query:GL.Enum, v:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetMapfv(target, query, v)
}
public
func glGetMapfv(_ target:GL.Enum, _ query:GL.Enum, _ v:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetMapfv(target, query, v)
}

var fp_glGetMapiv:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetMapiv
func load_glGetMapiv(target:GL.Enum, query:GL.Enum, v:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetMapiv = unsafeBitCast(get_fp("glGetMapiv", support: [ss346, ss369]), to: Swift.type(of: fp_glGetMapiv))
    fp_glGetMapiv(target, query, v)
}
public
func glGetMapiv(target:GL.Enum, query:GL.Enum, v:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetMapiv(target, query, v)
}
public
func glGetMapiv(_ target:GL.Enum, _ query:GL.Enum, _ v:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetMapiv(target, query, v)
}

var fp_glGetMapxvOES:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Fixed>?) -> () = load_glGetMapxvOES
func load_glGetMapxvOES(target:GL.Enum, query:GL.Enum, v:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetMapxvOES = unsafeBitCast(get_fp("glGetMapxvOES", support: [ss292]), to: Swift.type(of: fp_glGetMapxvOES))
    fp_glGetMapxvOES(target, query, v)
}
public
func glGetMapxvOES(target:GL.Enum, query:GL.Enum, v:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetMapxvOES(target, query, v)
}
public
func glGetMapxvOES(_ target:GL.Enum, _ query:GL.Enum, _ v:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetMapxvOES(target, query, v)
}

var fp_glGetMaterialfv:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetMaterialfv
func load_glGetMaterialfv(face:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetMaterialfv = unsafeBitCast(get_fp("glGetMaterialfv", support: [ss346, ss369, ss364]), to: Swift.type(of: fp_glGetMaterialfv))
    fp_glGetMaterialfv(face, pname, params)
}
public
func glGetMaterialfv(face:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetMaterialfv(face, pname, params)
}
public
func glGetMaterialfv(_ face:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetMaterialfv(face, pname, params)
}

var fp_glGetMaterialiv:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetMaterialiv
func load_glGetMaterialiv(face:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetMaterialiv = unsafeBitCast(get_fp("glGetMaterialiv", support: [ss346, ss369]), to: Swift.type(of: fp_glGetMaterialiv))
    fp_glGetMaterialiv(face, pname, params)
}
public
func glGetMaterialiv(face:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetMaterialiv(face, pname, params)
}
public
func glGetMaterialiv(_ face:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetMaterialiv(face, pname, params)
}

var fp_glGetMaterialxOES:@convention(c) (GL.Enum, GL.Enum, GL.Fixed) -> () = load_glGetMaterialxOES
func load_glGetMaterialxOES(face:GL.Enum, pname:GL.Enum, param:GL.Fixed)
{
    fp_glGetMaterialxOES = unsafeBitCast(get_fp("glGetMaterialxOES", support: [ss292]), to: Swift.type(of: fp_glGetMaterialxOES))
    fp_glGetMaterialxOES(face, pname, param)
}
public
func glGetMaterialxOES(face:GL.Enum, pname:GL.Enum, param:GL.Fixed)
{
    fp_glGetMaterialxOES(face, pname, param)
}
public
func glGetMaterialxOES(_ face:GL.Enum, _ pname:GL.Enum, _ param:GL.Fixed)
{
    fp_glGetMaterialxOES(face, pname, param)
}

var fp_glGetMaterialxv:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Fixed>?) -> () = load_glGetMaterialxv
func load_glGetMaterialxv(face:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetMaterialxv = unsafeBitCast(get_fp("glGetMaterialxv", support: [ss364]), to: Swift.type(of: fp_glGetMaterialxv))
    fp_glGetMaterialxv(face, pname, params)
}
public
func glGetMaterialxv(face:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetMaterialxv(face, pname, params)
}
public
func glGetMaterialxv(_ face:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetMaterialxv(face, pname, params)
}

var fp_glGetMaterialxvOES:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Fixed>?) -> () = load_glGetMaterialxvOES
func load_glGetMaterialxvOES(face:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetMaterialxvOES = unsafeBitCast(get_fp("glGetMaterialxvOES", support: [ss292]), to: Swift.type(of: fp_glGetMaterialxvOES))
    fp_glGetMaterialxvOES(face, pname, params)
}
public
func glGetMaterialxvOES(face:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetMaterialxvOES(face, pname, params)
}
public
func glGetMaterialxvOES(_ face:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetMaterialxvOES(face, pname, params)
}

var fp_glGetMinmax:@convention(c) (GL.Enum, GL.Bool, GL.Enum, GL.Enum, UnsafeMutableRawPointer?) -> () = load_glGetMinmax
func load_glGetMinmax(target:GL.Enum, reset:GL.Bool, format:GL.Enum, type:GL.Enum, values:UnsafeMutableRawPointer?)
{
    fp_glGetMinmax = unsafeBitCast(get_fp("glGetMinmax", support: [ss59]), to: Swift.type(of: fp_glGetMinmax))
    fp_glGetMinmax(target, reset, format, type, values)
}
public
func glGetMinmax(target:GL.Enum, reset:GL.Bool, format:GL.Enum, type:GL.Enum, values:UnsafeMutableRawPointer?)
{
    fp_glGetMinmax(target, reset, format, type, values)
}
public
func glGetMinmax(_ target:GL.Enum, _ reset:GL.Bool, _ format:GL.Enum, _ type:GL.Enum, _ values:UnsafeMutableRawPointer?)
{
    fp_glGetMinmax(target, reset, format, type, values)
}

var fp_glGetMinmaxEXT:@convention(c) (GL.Enum, GL.Bool, GL.Enum, GL.Enum, UnsafeMutableRawPointer?) -> () = load_glGetMinmaxEXT
func load_glGetMinmaxEXT(target:GL.Enum, reset:GL.Bool, format:GL.Enum, type:GL.Enum, values:UnsafeMutableRawPointer?)
{
    fp_glGetMinmaxEXT = unsafeBitCast(get_fp("glGetMinmaxEXT", support: [ss160]), to: Swift.type(of: fp_glGetMinmaxEXT))
    fp_glGetMinmaxEXT(target, reset, format, type, values)
}
public
func glGetMinmaxEXT(target:GL.Enum, reset:GL.Bool, format:GL.Enum, type:GL.Enum, values:UnsafeMutableRawPointer?)
{
    fp_glGetMinmaxEXT(target, reset, format, type, values)
}
public
func glGetMinmaxEXT(_ target:GL.Enum, _ reset:GL.Bool, _ format:GL.Enum, _ type:GL.Enum, _ values:UnsafeMutableRawPointer?)
{
    fp_glGetMinmaxEXT(target, reset, format, type, values)
}

var fp_glGetMinmaxParameterfv:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetMinmaxParameterfv
func load_glGetMinmaxParameterfv(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetMinmaxParameterfv = unsafeBitCast(get_fp("glGetMinmaxParameterfv", support: [ss59]), to: Swift.type(of: fp_glGetMinmaxParameterfv))
    fp_glGetMinmaxParameterfv(target, pname, params)
}
public
func glGetMinmaxParameterfv(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetMinmaxParameterfv(target, pname, params)
}
public
func glGetMinmaxParameterfv(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetMinmaxParameterfv(target, pname, params)
}

var fp_glGetMinmaxParameterfvEXT:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetMinmaxParameterfvEXT
func load_glGetMinmaxParameterfvEXT(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetMinmaxParameterfvEXT = unsafeBitCast(get_fp("glGetMinmaxParameterfvEXT", support: [ss160]), to: Swift.type(of: fp_glGetMinmaxParameterfvEXT))
    fp_glGetMinmaxParameterfvEXT(target, pname, params)
}
public
func glGetMinmaxParameterfvEXT(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetMinmaxParameterfvEXT(target, pname, params)
}
public
func glGetMinmaxParameterfvEXT(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetMinmaxParameterfvEXT(target, pname, params)
}

var fp_glGetMinmaxParameteriv:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetMinmaxParameteriv
func load_glGetMinmaxParameteriv(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetMinmaxParameteriv = unsafeBitCast(get_fp("glGetMinmaxParameteriv", support: [ss59]), to: Swift.type(of: fp_glGetMinmaxParameteriv))
    fp_glGetMinmaxParameteriv(target, pname, params)
}
public
func glGetMinmaxParameteriv(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetMinmaxParameteriv(target, pname, params)
}
public
func glGetMinmaxParameteriv(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetMinmaxParameteriv(target, pname, params)
}

var fp_glGetMinmaxParameterivEXT:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetMinmaxParameterivEXT
func load_glGetMinmaxParameterivEXT(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetMinmaxParameterivEXT = unsafeBitCast(get_fp("glGetMinmaxParameterivEXT", support: [ss160]), to: Swift.type(of: fp_glGetMinmaxParameterivEXT))
    fp_glGetMinmaxParameterivEXT(target, pname, params)
}
public
func glGetMinmaxParameterivEXT(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetMinmaxParameterivEXT(target, pname, params)
}
public
func glGetMinmaxParameterivEXT(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetMinmaxParameterivEXT(target, pname, params)
}

var fp_glGetMultiTexEnvfvEXT:@convention(c) (GL.Enum, GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetMultiTexEnvfvEXT
func load_glGetMultiTexEnvfvEXT(texunit:GL.Enum, target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetMultiTexEnvfvEXT = unsafeBitCast(get_fp("glGetMultiTexEnvfvEXT", support: [ss143]), to: Swift.type(of: fp_glGetMultiTexEnvfvEXT))
    fp_glGetMultiTexEnvfvEXT(texunit, target, pname, params)
}
public
func glGetMultiTexEnvfvEXT(texunit:GL.Enum, target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetMultiTexEnvfvEXT(texunit, target, pname, params)
}
public
func glGetMultiTexEnvfvEXT(_ texunit:GL.Enum, _ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetMultiTexEnvfvEXT(texunit, target, pname, params)
}

var fp_glGetMultiTexEnvivEXT:@convention(c) (GL.Enum, GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetMultiTexEnvivEXT
func load_glGetMultiTexEnvivEXT(texunit:GL.Enum, target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetMultiTexEnvivEXT = unsafeBitCast(get_fp("glGetMultiTexEnvivEXT", support: [ss143]), to: Swift.type(of: fp_glGetMultiTexEnvivEXT))
    fp_glGetMultiTexEnvivEXT(texunit, target, pname, params)
}
public
func glGetMultiTexEnvivEXT(texunit:GL.Enum, target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetMultiTexEnvivEXT(texunit, target, pname, params)
}
public
func glGetMultiTexEnvivEXT(_ texunit:GL.Enum, _ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetMultiTexEnvivEXT(texunit, target, pname, params)
}

var fp_glGetMultiTexGendvEXT:@convention(c) (GL.Enum, GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Double>?) -> () = load_glGetMultiTexGendvEXT
func load_glGetMultiTexGendvEXT(texunit:GL.Enum, coord:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetMultiTexGendvEXT = unsafeBitCast(get_fp("glGetMultiTexGendvEXT", support: [ss143]), to: Swift.type(of: fp_glGetMultiTexGendvEXT))
    fp_glGetMultiTexGendvEXT(texunit, coord, pname, params)
}
public
func glGetMultiTexGendvEXT(texunit:GL.Enum, coord:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetMultiTexGendvEXT(texunit, coord, pname, params)
}
public
func glGetMultiTexGendvEXT(_ texunit:GL.Enum, _ coord:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetMultiTexGendvEXT(texunit, coord, pname, params)
}

var fp_glGetMultiTexGenfvEXT:@convention(c) (GL.Enum, GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetMultiTexGenfvEXT
func load_glGetMultiTexGenfvEXT(texunit:GL.Enum, coord:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetMultiTexGenfvEXT = unsafeBitCast(get_fp("glGetMultiTexGenfvEXT", support: [ss143]), to: Swift.type(of: fp_glGetMultiTexGenfvEXT))
    fp_glGetMultiTexGenfvEXT(texunit, coord, pname, params)
}
public
func glGetMultiTexGenfvEXT(texunit:GL.Enum, coord:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetMultiTexGenfvEXT(texunit, coord, pname, params)
}
public
func glGetMultiTexGenfvEXT(_ texunit:GL.Enum, _ coord:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetMultiTexGenfvEXT(texunit, coord, pname, params)
}

var fp_glGetMultiTexGenivEXT:@convention(c) (GL.Enum, GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetMultiTexGenivEXT
func load_glGetMultiTexGenivEXT(texunit:GL.Enum, coord:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetMultiTexGenivEXT = unsafeBitCast(get_fp("glGetMultiTexGenivEXT", support: [ss143]), to: Swift.type(of: fp_glGetMultiTexGenivEXT))
    fp_glGetMultiTexGenivEXT(texunit, coord, pname, params)
}
public
func glGetMultiTexGenivEXT(texunit:GL.Enum, coord:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetMultiTexGenivEXT(texunit, coord, pname, params)
}
public
func glGetMultiTexGenivEXT(_ texunit:GL.Enum, _ coord:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetMultiTexGenivEXT(texunit, coord, pname, params)
}

var fp_glGetMultiTexImageEXT:@convention(c) (GL.Enum, GL.Enum, GL.Int, GL.Enum, GL.Enum, UnsafeMutableRawPointer?) -> () = load_glGetMultiTexImageEXT
func load_glGetMultiTexImageEXT(texunit:GL.Enum, target:GL.Enum, level:GL.Int, format:GL.Enum, type:GL.Enum, pixels:UnsafeMutableRawPointer?)
{
    fp_glGetMultiTexImageEXT = unsafeBitCast(get_fp("glGetMultiTexImageEXT", support: [ss143]), to: Swift.type(of: fp_glGetMultiTexImageEXT))
    fp_glGetMultiTexImageEXT(texunit, target, level, format, type, pixels)
}
public
func glGetMultiTexImageEXT(texunit:GL.Enum, target:GL.Enum, level:GL.Int, format:GL.Enum, type:GL.Enum, pixels:UnsafeMutableRawPointer?)
{
    fp_glGetMultiTexImageEXT(texunit, target, level, format, type, pixels)
}
public
func glGetMultiTexImageEXT(_ texunit:GL.Enum, _ target:GL.Enum, _ level:GL.Int, _ format:GL.Enum, _ type:GL.Enum, _ pixels:UnsafeMutableRawPointer?)
{
    fp_glGetMultiTexImageEXT(texunit, target, level, format, type, pixels)
}

var fp_glGetMultiTexLevelParameterfvEXT:@convention(c) (GL.Enum, GL.Enum, GL.Int, GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetMultiTexLevelParameterfvEXT
func load_glGetMultiTexLevelParameterfvEXT(texunit:GL.Enum, target:GL.Enum, level:GL.Int, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetMultiTexLevelParameterfvEXT = unsafeBitCast(get_fp("glGetMultiTexLevelParameterfvEXT", support: [ss143]), to: Swift.type(of: fp_glGetMultiTexLevelParameterfvEXT))
    fp_glGetMultiTexLevelParameterfvEXT(texunit, target, level, pname, params)
}
public
func glGetMultiTexLevelParameterfvEXT(texunit:GL.Enum, target:GL.Enum, level:GL.Int, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetMultiTexLevelParameterfvEXT(texunit, target, level, pname, params)
}
public
func glGetMultiTexLevelParameterfvEXT(_ texunit:GL.Enum, _ target:GL.Enum, _ level:GL.Int, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetMultiTexLevelParameterfvEXT(texunit, target, level, pname, params)
}

var fp_glGetMultiTexLevelParameterivEXT:@convention(c) (GL.Enum, GL.Enum, GL.Int, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetMultiTexLevelParameterivEXT
func load_glGetMultiTexLevelParameterivEXT(texunit:GL.Enum, target:GL.Enum, level:GL.Int, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetMultiTexLevelParameterivEXT = unsafeBitCast(get_fp("glGetMultiTexLevelParameterivEXT", support: [ss143]), to: Swift.type(of: fp_glGetMultiTexLevelParameterivEXT))
    fp_glGetMultiTexLevelParameterivEXT(texunit, target, level, pname, params)
}
public
func glGetMultiTexLevelParameterivEXT(texunit:GL.Enum, target:GL.Enum, level:GL.Int, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetMultiTexLevelParameterivEXT(texunit, target, level, pname, params)
}
public
func glGetMultiTexLevelParameterivEXT(_ texunit:GL.Enum, _ target:GL.Enum, _ level:GL.Int, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetMultiTexLevelParameterivEXT(texunit, target, level, pname, params)
}

var fp_glGetMultiTexParameterIivEXT:@convention(c) (GL.Enum, GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetMultiTexParameterIivEXT
func load_glGetMultiTexParameterIivEXT(texunit:GL.Enum, target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetMultiTexParameterIivEXT = unsafeBitCast(get_fp("glGetMultiTexParameterIivEXT", support: [ss143]), to: Swift.type(of: fp_glGetMultiTexParameterIivEXT))
    fp_glGetMultiTexParameterIivEXT(texunit, target, pname, params)
}
public
func glGetMultiTexParameterIivEXT(texunit:GL.Enum, target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetMultiTexParameterIivEXT(texunit, target, pname, params)
}
public
func glGetMultiTexParameterIivEXT(_ texunit:GL.Enum, _ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetMultiTexParameterIivEXT(texunit, target, pname, params)
}

var fp_glGetMultiTexParameterIuivEXT:@convention(c) (GL.Enum, GL.Enum, GL.Enum, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGetMultiTexParameterIuivEXT
func load_glGetMultiTexParameterIuivEXT(texunit:GL.Enum, target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetMultiTexParameterIuivEXT = unsafeBitCast(get_fp("glGetMultiTexParameterIuivEXT", support: [ss143]), to: Swift.type(of: fp_glGetMultiTexParameterIuivEXT))
    fp_glGetMultiTexParameterIuivEXT(texunit, target, pname, params)
}
public
func glGetMultiTexParameterIuivEXT(texunit:GL.Enum, target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetMultiTexParameterIuivEXT(texunit, target, pname, params)
}
public
func glGetMultiTexParameterIuivEXT(_ texunit:GL.Enum, _ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetMultiTexParameterIuivEXT(texunit, target, pname, params)
}

var fp_glGetMultiTexParameterfvEXT:@convention(c) (GL.Enum, GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetMultiTexParameterfvEXT
func load_glGetMultiTexParameterfvEXT(texunit:GL.Enum, target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetMultiTexParameterfvEXT = unsafeBitCast(get_fp("glGetMultiTexParameterfvEXT", support: [ss143]), to: Swift.type(of: fp_glGetMultiTexParameterfvEXT))
    fp_glGetMultiTexParameterfvEXT(texunit, target, pname, params)
}
public
func glGetMultiTexParameterfvEXT(texunit:GL.Enum, target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetMultiTexParameterfvEXT(texunit, target, pname, params)
}
public
func glGetMultiTexParameterfvEXT(_ texunit:GL.Enum, _ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetMultiTexParameterfvEXT(texunit, target, pname, params)
}

var fp_glGetMultiTexParameterivEXT:@convention(c) (GL.Enum, GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetMultiTexParameterivEXT
func load_glGetMultiTexParameterivEXT(texunit:GL.Enum, target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetMultiTexParameterivEXT = unsafeBitCast(get_fp("glGetMultiTexParameterivEXT", support: [ss143]), to: Swift.type(of: fp_glGetMultiTexParameterivEXT))
    fp_glGetMultiTexParameterivEXT(texunit, target, pname, params)
}
public
func glGetMultiTexParameterivEXT(texunit:GL.Enum, target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetMultiTexParameterivEXT(texunit, target, pname, params)
}
public
func glGetMultiTexParameterivEXT(_ texunit:GL.Enum, _ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetMultiTexParameterivEXT(texunit, target, pname, params)
}

var fp_glGetMultisamplefv:@convention(c) (GL.Enum, GL.UInt, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetMultisamplefv
func load_glGetMultisamplefv(pname:GL.Enum, index:GL.UInt, val:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetMultisamplefv = unsafeBitCast(get_fp("glGetMultisamplefv", support: [ss356, ss367, ss95]), to: Swift.type(of: fp_glGetMultisamplefv))
    fp_glGetMultisamplefv(pname, index, val)
}
public
func glGetMultisamplefv(pname:GL.Enum, index:GL.UInt, val:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetMultisamplefv(pname, index, val)
}
public
func glGetMultisamplefv(_ pname:GL.Enum, _ index:GL.UInt, _ val:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetMultisamplefv(pname, index, val)
}

var fp_glGetMultisamplefvNV:@convention(c) (GL.Enum, GL.UInt, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetMultisamplefvNV
func load_glGetMultisamplefvNV(pname:GL.Enum, index:GL.UInt, val:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetMultisamplefvNV = unsafeBitCast(get_fp("glGetMultisamplefvNV", support: [ss241]), to: Swift.type(of: fp_glGetMultisamplefvNV))
    fp_glGetMultisamplefvNV(pname, index, val)
}
public
func glGetMultisamplefvNV(pname:GL.Enum, index:GL.UInt, val:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetMultisamplefvNV(pname, index, val)
}
public
func glGetMultisamplefvNV(_ pname:GL.Enum, _ index:GL.UInt, _ val:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetMultisamplefvNV(pname, index, val)
}

var fp_glGetNamedBufferParameteri64v:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int64>?) -> () = load_glGetNamedBufferParameteri64v
func load_glGetNamedBufferParameteri64v(buffer:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int64>?)
{
    fp_glGetNamedBufferParameteri64v = unsafeBitCast(get_fp("glGetNamedBufferParameteri64v", support: [ss363, ss42]), to: Swift.type(of: fp_glGetNamedBufferParameteri64v))
    fp_glGetNamedBufferParameteri64v(buffer, pname, params)
}
public
func glGetNamedBufferParameteri64v(buffer:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int64>?)
{
    fp_glGetNamedBufferParameteri64v(buffer, pname, params)
}
public
func glGetNamedBufferParameteri64v(_ buffer:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int64>?)
{
    fp_glGetNamedBufferParameteri64v(buffer, pname, params)
}

var fp_glGetNamedBufferParameteriv:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetNamedBufferParameteriv
func load_glGetNamedBufferParameteriv(buffer:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetNamedBufferParameteriv = unsafeBitCast(get_fp("glGetNamedBufferParameteriv", support: [ss363, ss42]), to: Swift.type(of: fp_glGetNamedBufferParameteriv))
    fp_glGetNamedBufferParameteriv(buffer, pname, params)
}
public
func glGetNamedBufferParameteriv(buffer:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetNamedBufferParameteriv(buffer, pname, params)
}
public
func glGetNamedBufferParameteriv(_ buffer:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetNamedBufferParameteriv(buffer, pname, params)
}

var fp_glGetNamedBufferParameterivEXT:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetNamedBufferParameterivEXT
func load_glGetNamedBufferParameterivEXT(buffer:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetNamedBufferParameterivEXT = unsafeBitCast(get_fp("glGetNamedBufferParameterivEXT", support: [ss143]), to: Swift.type(of: fp_glGetNamedBufferParameterivEXT))
    fp_glGetNamedBufferParameterivEXT(buffer, pname, params)
}
public
func glGetNamedBufferParameterivEXT(buffer:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetNamedBufferParameterivEXT(buffer, pname, params)
}
public
func glGetNamedBufferParameterivEXT(_ buffer:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetNamedBufferParameterivEXT(buffer, pname, params)
}

var fp_glGetNamedBufferParameterui64vNV:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.UInt64EXT>?) -> () = load_glGetNamedBufferParameterui64vNV
func load_glGetNamedBufferParameterui64vNV(buffer:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.UInt64EXT>?)
{
    fp_glGetNamedBufferParameterui64vNV = unsafeBitCast(get_fp("glGetNamedBufferParameterui64vNV", support: [ss269]), to: Swift.type(of: fp_glGetNamedBufferParameterui64vNV))
    fp_glGetNamedBufferParameterui64vNV(buffer, pname, params)
}
public
func glGetNamedBufferParameterui64vNV(buffer:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.UInt64EXT>?)
{
    fp_glGetNamedBufferParameterui64vNV(buffer, pname, params)
}
public
func glGetNamedBufferParameterui64vNV(_ buffer:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.UInt64EXT>?)
{
    fp_glGetNamedBufferParameterui64vNV(buffer, pname, params)
}

var fp_glGetNamedBufferPointerv:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<UnsafeMutableRawPointer?>?) -> () = load_glGetNamedBufferPointerv
func load_glGetNamedBufferPointerv(buffer:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    fp_glGetNamedBufferPointerv = unsafeBitCast(get_fp("glGetNamedBufferPointerv", support: [ss363, ss42]), to: Swift.type(of: fp_glGetNamedBufferPointerv))
    fp_glGetNamedBufferPointerv(buffer, pname, params)
}
public
func glGetNamedBufferPointerv(buffer:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    fp_glGetNamedBufferPointerv(buffer, pname, params)
}
public
func glGetNamedBufferPointerv(_ buffer:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    fp_glGetNamedBufferPointerv(buffer, pname, params)
}

var fp_glGetNamedBufferPointervEXT:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<UnsafeMutableRawPointer?>?) -> () = load_glGetNamedBufferPointervEXT
func load_glGetNamedBufferPointervEXT(buffer:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    fp_glGetNamedBufferPointervEXT = unsafeBitCast(get_fp("glGetNamedBufferPointervEXT", support: [ss143]), to: Swift.type(of: fp_glGetNamedBufferPointervEXT))
    fp_glGetNamedBufferPointervEXT(buffer, pname, params)
}
public
func glGetNamedBufferPointervEXT(buffer:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    fp_glGetNamedBufferPointervEXT(buffer, pname, params)
}
public
func glGetNamedBufferPointervEXT(_ buffer:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    fp_glGetNamedBufferPointervEXT(buffer, pname, params)
}

var fp_glGetNamedBufferSubData:@convention(c) (GL.UInt, GL.IntPointer, GL.SizePointer, UnsafeMutableRawPointer?) -> () = load_glGetNamedBufferSubData
func load_glGetNamedBufferSubData(buffer:GL.UInt, offset:GL.IntPointer, size:GL.SizePointer, data:UnsafeMutableRawPointer?)
{
    fp_glGetNamedBufferSubData = unsafeBitCast(get_fp("glGetNamedBufferSubData", support: [ss363, ss42]), to: Swift.type(of: fp_glGetNamedBufferSubData))
    fp_glGetNamedBufferSubData(buffer, offset, size, data)
}
public
func glGetNamedBufferSubData(buffer:GL.UInt, offset:GL.IntPointer, size:GL.SizePointer, data:UnsafeMutableRawPointer?)
{
    fp_glGetNamedBufferSubData(buffer, offset, size, data)
}
public
func glGetNamedBufferSubData(_ buffer:GL.UInt, _ offset:GL.IntPointer, _ size:GL.SizePointer, _ data:UnsafeMutableRawPointer?)
{
    fp_glGetNamedBufferSubData(buffer, offset, size, data)
}

var fp_glGetNamedBufferSubDataEXT:@convention(c) (GL.UInt, GL.IntPointer, GL.SizePointer, UnsafeMutableRawPointer?) -> () = load_glGetNamedBufferSubDataEXT
func load_glGetNamedBufferSubDataEXT(buffer:GL.UInt, offset:GL.IntPointer, size:GL.SizePointer, data:UnsafeMutableRawPointer?)
{
    fp_glGetNamedBufferSubDataEXT = unsafeBitCast(get_fp("glGetNamedBufferSubDataEXT", support: [ss143]), to: Swift.type(of: fp_glGetNamedBufferSubDataEXT))
    fp_glGetNamedBufferSubDataEXT(buffer, offset, size, data)
}
public
func glGetNamedBufferSubDataEXT(buffer:GL.UInt, offset:GL.IntPointer, size:GL.SizePointer, data:UnsafeMutableRawPointer?)
{
    fp_glGetNamedBufferSubDataEXT(buffer, offset, size, data)
}
public
func glGetNamedBufferSubDataEXT(_ buffer:GL.UInt, _ offset:GL.IntPointer, _ size:GL.SizePointer, _ data:UnsafeMutableRawPointer?)
{
    fp_glGetNamedBufferSubDataEXT(buffer, offset, size, data)
}

var fp_glGetNamedFramebufferAttachmentParameteriv:@convention(c) (GL.UInt, GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetNamedFramebufferAttachmentParameteriv
func load_glGetNamedFramebufferAttachmentParameteriv(framebuffer:GL.UInt, attachment:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetNamedFramebufferAttachmentParameteriv = unsafeBitCast(get_fp("glGetNamedFramebufferAttachmentParameteriv", support: [ss363, ss42]), to: Swift.type(of: fp_glGetNamedFramebufferAttachmentParameteriv))
    fp_glGetNamedFramebufferAttachmentParameteriv(framebuffer, attachment, pname, params)
}
public
func glGetNamedFramebufferAttachmentParameteriv(framebuffer:GL.UInt, attachment:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetNamedFramebufferAttachmentParameteriv(framebuffer, attachment, pname, params)
}
public
func glGetNamedFramebufferAttachmentParameteriv(_ framebuffer:GL.UInt, _ attachment:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetNamedFramebufferAttachmentParameteriv(framebuffer, attachment, pname, params)
}

var fp_glGetNamedFramebufferAttachmentParameterivEXT:@convention(c) (GL.UInt, GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetNamedFramebufferAttachmentParameterivEXT
func load_glGetNamedFramebufferAttachmentParameterivEXT(framebuffer:GL.UInt, attachment:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetNamedFramebufferAttachmentParameterivEXT = unsafeBitCast(get_fp("glGetNamedFramebufferAttachmentParameterivEXT", support: [ss143]), to: Swift.type(of: fp_glGetNamedFramebufferAttachmentParameterivEXT))
    fp_glGetNamedFramebufferAttachmentParameterivEXT(framebuffer, attachment, pname, params)
}
public
func glGetNamedFramebufferAttachmentParameterivEXT(framebuffer:GL.UInt, attachment:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetNamedFramebufferAttachmentParameterivEXT(framebuffer, attachment, pname, params)
}
public
func glGetNamedFramebufferAttachmentParameterivEXT(_ framebuffer:GL.UInt, _ attachment:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetNamedFramebufferAttachmentParameterivEXT(framebuffer, attachment, pname, params)
}

var fp_glGetNamedFramebufferParameteriv:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetNamedFramebufferParameteriv
func load_glGetNamedFramebufferParameteriv(framebuffer:GL.UInt, pname:GL.Enum, param:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetNamedFramebufferParameteriv = unsafeBitCast(get_fp("glGetNamedFramebufferParameteriv", support: [ss363, ss42]), to: Swift.type(of: fp_glGetNamedFramebufferParameteriv))
    fp_glGetNamedFramebufferParameteriv(framebuffer, pname, param)
}
public
func glGetNamedFramebufferParameteriv(framebuffer:GL.UInt, pname:GL.Enum, param:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetNamedFramebufferParameteriv(framebuffer, pname, param)
}
public
func glGetNamedFramebufferParameteriv(_ framebuffer:GL.UInt, _ pname:GL.Enum, _ param:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetNamedFramebufferParameteriv(framebuffer, pname, param)
}

var fp_glGetNamedFramebufferParameterivEXT:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetNamedFramebufferParameterivEXT
func load_glGetNamedFramebufferParameterivEXT(framebuffer:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetNamedFramebufferParameterivEXT = unsafeBitCast(get_fp("glGetNamedFramebufferParameterivEXT", support: [ss143]), to: Swift.type(of: fp_glGetNamedFramebufferParameterivEXT))
    fp_glGetNamedFramebufferParameterivEXT(framebuffer, pname, params)
}
public
func glGetNamedFramebufferParameterivEXT(framebuffer:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetNamedFramebufferParameterivEXT(framebuffer, pname, params)
}
public
func glGetNamedFramebufferParameterivEXT(_ framebuffer:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetNamedFramebufferParameterivEXT(framebuffer, pname, params)
}

var fp_glGetNamedProgramLocalParameterIivEXT:@convention(c) (GL.UInt, GL.Enum, GL.UInt, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetNamedProgramLocalParameterIivEXT
func load_glGetNamedProgramLocalParameterIivEXT(program:GL.UInt, target:GL.Enum, index:GL.UInt, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetNamedProgramLocalParameterIivEXT = unsafeBitCast(get_fp("glGetNamedProgramLocalParameterIivEXT", support: [ss143]), to: Swift.type(of: fp_glGetNamedProgramLocalParameterIivEXT))
    fp_glGetNamedProgramLocalParameterIivEXT(program, target, index, params)
}
public
func glGetNamedProgramLocalParameterIivEXT(program:GL.UInt, target:GL.Enum, index:GL.UInt, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetNamedProgramLocalParameterIivEXT(program, target, index, params)
}
public
func glGetNamedProgramLocalParameterIivEXT(_ program:GL.UInt, _ target:GL.Enum, _ index:GL.UInt, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetNamedProgramLocalParameterIivEXT(program, target, index, params)
}

var fp_glGetNamedProgramLocalParameterIuivEXT:@convention(c) (GL.UInt, GL.Enum, GL.UInt, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGetNamedProgramLocalParameterIuivEXT
func load_glGetNamedProgramLocalParameterIuivEXT(program:GL.UInt, target:GL.Enum, index:GL.UInt, params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetNamedProgramLocalParameterIuivEXT = unsafeBitCast(get_fp("glGetNamedProgramLocalParameterIuivEXT", support: [ss143]), to: Swift.type(of: fp_glGetNamedProgramLocalParameterIuivEXT))
    fp_glGetNamedProgramLocalParameterIuivEXT(program, target, index, params)
}
public
func glGetNamedProgramLocalParameterIuivEXT(program:GL.UInt, target:GL.Enum, index:GL.UInt, params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetNamedProgramLocalParameterIuivEXT(program, target, index, params)
}
public
func glGetNamedProgramLocalParameterIuivEXT(_ program:GL.UInt, _ target:GL.Enum, _ index:GL.UInt, _ params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetNamedProgramLocalParameterIuivEXT(program, target, index, params)
}

var fp_glGetNamedProgramLocalParameterdvEXT:@convention(c) (GL.UInt, GL.Enum, GL.UInt, UnsafeMutablePointer<GL.Double>?) -> () = load_glGetNamedProgramLocalParameterdvEXT
func load_glGetNamedProgramLocalParameterdvEXT(program:GL.UInt, target:GL.Enum, index:GL.UInt, params:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetNamedProgramLocalParameterdvEXT = unsafeBitCast(get_fp("glGetNamedProgramLocalParameterdvEXT", support: [ss143]), to: Swift.type(of: fp_glGetNamedProgramLocalParameterdvEXT))
    fp_glGetNamedProgramLocalParameterdvEXT(program, target, index, params)
}
public
func glGetNamedProgramLocalParameterdvEXT(program:GL.UInt, target:GL.Enum, index:GL.UInt, params:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetNamedProgramLocalParameterdvEXT(program, target, index, params)
}
public
func glGetNamedProgramLocalParameterdvEXT(_ program:GL.UInt, _ target:GL.Enum, _ index:GL.UInt, _ params:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetNamedProgramLocalParameterdvEXT(program, target, index, params)
}

var fp_glGetNamedProgramLocalParameterfvEXT:@convention(c) (GL.UInt, GL.Enum, GL.UInt, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetNamedProgramLocalParameterfvEXT
func load_glGetNamedProgramLocalParameterfvEXT(program:GL.UInt, target:GL.Enum, index:GL.UInt, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetNamedProgramLocalParameterfvEXT = unsafeBitCast(get_fp("glGetNamedProgramLocalParameterfvEXT", support: [ss143]), to: Swift.type(of: fp_glGetNamedProgramLocalParameterfvEXT))
    fp_glGetNamedProgramLocalParameterfvEXT(program, target, index, params)
}
public
func glGetNamedProgramLocalParameterfvEXT(program:GL.UInt, target:GL.Enum, index:GL.UInt, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetNamedProgramLocalParameterfvEXT(program, target, index, params)
}
public
func glGetNamedProgramLocalParameterfvEXT(_ program:GL.UInt, _ target:GL.Enum, _ index:GL.UInt, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetNamedProgramLocalParameterfvEXT(program, target, index, params)
}

var fp_glGetNamedProgramStringEXT:@convention(c) (GL.UInt, GL.Enum, GL.Enum, UnsafeMutableRawPointer?) -> () = load_glGetNamedProgramStringEXT
func load_glGetNamedProgramStringEXT(program:GL.UInt, target:GL.Enum, pname:GL.Enum, string:UnsafeMutableRawPointer?)
{
    fp_glGetNamedProgramStringEXT = unsafeBitCast(get_fp("glGetNamedProgramStringEXT", support: [ss143]), to: Swift.type(of: fp_glGetNamedProgramStringEXT))
    fp_glGetNamedProgramStringEXT(program, target, pname, string)
}
public
func glGetNamedProgramStringEXT(program:GL.UInt, target:GL.Enum, pname:GL.Enum, string:UnsafeMutableRawPointer?)
{
    fp_glGetNamedProgramStringEXT(program, target, pname, string)
}
public
func glGetNamedProgramStringEXT(_ program:GL.UInt, _ target:GL.Enum, _ pname:GL.Enum, _ string:UnsafeMutableRawPointer?)
{
    fp_glGetNamedProgramStringEXT(program, target, pname, string)
}

var fp_glGetNamedProgramivEXT:@convention(c) (GL.UInt, GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetNamedProgramivEXT
func load_glGetNamedProgramivEXT(program:GL.UInt, target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetNamedProgramivEXT = unsafeBitCast(get_fp("glGetNamedProgramivEXT", support: [ss143]), to: Swift.type(of: fp_glGetNamedProgramivEXT))
    fp_glGetNamedProgramivEXT(program, target, pname, params)
}
public
func glGetNamedProgramivEXT(program:GL.UInt, target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetNamedProgramivEXT(program, target, pname, params)
}
public
func glGetNamedProgramivEXT(_ program:GL.UInt, _ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetNamedProgramivEXT(program, target, pname, params)
}

var fp_glGetNamedRenderbufferParameteriv:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetNamedRenderbufferParameteriv
func load_glGetNamedRenderbufferParameteriv(renderbuffer:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetNamedRenderbufferParameteriv = unsafeBitCast(get_fp("glGetNamedRenderbufferParameteriv", support: [ss363, ss42]), to: Swift.type(of: fp_glGetNamedRenderbufferParameteriv))
    fp_glGetNamedRenderbufferParameteriv(renderbuffer, pname, params)
}
public
func glGetNamedRenderbufferParameteriv(renderbuffer:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetNamedRenderbufferParameteriv(renderbuffer, pname, params)
}
public
func glGetNamedRenderbufferParameteriv(_ renderbuffer:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetNamedRenderbufferParameteriv(renderbuffer, pname, params)
}

var fp_glGetNamedRenderbufferParameterivEXT:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetNamedRenderbufferParameterivEXT
func load_glGetNamedRenderbufferParameterivEXT(renderbuffer:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetNamedRenderbufferParameterivEXT = unsafeBitCast(get_fp("glGetNamedRenderbufferParameterivEXT", support: [ss143]), to: Swift.type(of: fp_glGetNamedRenderbufferParameterivEXT))
    fp_glGetNamedRenderbufferParameterivEXT(renderbuffer, pname, params)
}
public
func glGetNamedRenderbufferParameterivEXT(renderbuffer:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetNamedRenderbufferParameterivEXT(renderbuffer, pname, params)
}
public
func glGetNamedRenderbufferParameterivEXT(_ renderbuffer:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetNamedRenderbufferParameterivEXT(renderbuffer, pname, params)
}

var fp_glGetNamedStringARB:@convention(c) (GL.Int, UnsafePointer<GL.Char>?, GL.Size, UnsafeMutablePointer<GL.Int>?, UnsafeMutablePointer<GL.Char>?) -> () = load_glGetNamedStringARB
func load_glGetNamedStringARB(namelen:GL.Int, name:UnsafePointer<GL.Char>?, bufSize:GL.Size, stringlen:UnsafeMutablePointer<GL.Int>?, string:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetNamedStringARB = unsafeBitCast(get_fp("glGetNamedStringARB", support: [ss86]), to: Swift.type(of: fp_glGetNamedStringARB))
    fp_glGetNamedStringARB(namelen, name, bufSize, stringlen, string)
}
public
func glGetNamedStringARB(namelen:GL.Int, name:UnsafePointer<GL.Char>?, bufSize:GL.Size, stringlen:UnsafeMutablePointer<GL.Int>?, string:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetNamedStringARB(namelen, name, bufSize, stringlen, string)
}
public
func glGetNamedStringARB(_ namelen:GL.Int, _ name:UnsafePointer<GL.Char>?, _ bufSize:GL.Size, _ stringlen:UnsafeMutablePointer<GL.Int>?, _ string:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetNamedStringARB(namelen, name, bufSize, stringlen, string)
}

var fp_glGetNamedStringivARB:@convention(c) (GL.Int, UnsafePointer<GL.Char>?, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetNamedStringivARB
func load_glGetNamedStringivARB(namelen:GL.Int, name:UnsafePointer<GL.Char>?, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetNamedStringivARB = unsafeBitCast(get_fp("glGetNamedStringivARB", support: [ss86]), to: Swift.type(of: fp_glGetNamedStringivARB))
    fp_glGetNamedStringivARB(namelen, name, pname, params)
}
public
func glGetNamedStringivARB(namelen:GL.Int, name:UnsafePointer<GL.Char>?, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetNamedStringivARB(namelen, name, pname, params)
}
public
func glGetNamedStringivARB(_ namelen:GL.Int, _ name:UnsafePointer<GL.Char>?, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetNamedStringivARB(namelen, name, pname, params)
}

var fp_glGetNextPerfQueryIdINTEL:@convention(c) (GL.UInt, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGetNextPerfQueryIdINTEL
func load_glGetNextPerfQueryIdINTEL(queryId:GL.UInt, nextQueryId:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetNextPerfQueryIdINTEL = unsafeBitCast(get_fp("glGetNextPerfQueryIdINTEL", support: [ss219]), to: Swift.type(of: fp_glGetNextPerfQueryIdINTEL))
    fp_glGetNextPerfQueryIdINTEL(queryId, nextQueryId)
}
public
func glGetNextPerfQueryIdINTEL(queryId:GL.UInt, nextQueryId:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetNextPerfQueryIdINTEL(queryId, nextQueryId)
}
public
func glGetNextPerfQueryIdINTEL(_ queryId:GL.UInt, _ nextQueryId:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetNextPerfQueryIdINTEL(queryId, nextQueryId)
}

var fp_glGetObjectBufferfvATI:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetObjectBufferfvATI
func load_glGetObjectBufferfvATI(buffer:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetObjectBufferfvATI = unsafeBitCast(get_fp("glGetObjectBufferfvATI", support: [ss122]), to: Swift.type(of: fp_glGetObjectBufferfvATI))
    fp_glGetObjectBufferfvATI(buffer, pname, params)
}
public
func glGetObjectBufferfvATI(buffer:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetObjectBufferfvATI(buffer, pname, params)
}
public
func glGetObjectBufferfvATI(_ buffer:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetObjectBufferfvATI(buffer, pname, params)
}

var fp_glGetObjectBufferivATI:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetObjectBufferivATI
func load_glGetObjectBufferivATI(buffer:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetObjectBufferivATI = unsafeBitCast(get_fp("glGetObjectBufferivATI", support: [ss122]), to: Swift.type(of: fp_glGetObjectBufferivATI))
    fp_glGetObjectBufferivATI(buffer, pname, params)
}
public
func glGetObjectBufferivATI(buffer:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetObjectBufferivATI(buffer, pname, params)
}
public
func glGetObjectBufferivATI(_ buffer:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetObjectBufferivATI(buffer, pname, params)
}

var fp_glGetObjectLabel:@convention(c) (GL.Enum, GL.UInt, GL.Size, UnsafeMutablePointer<GL.Size>?, UnsafeMutablePointer<GL.Char>?) -> () = load_glGetObjectLabel
func load_glGetObjectLabel(identifier:GL.Enum, name:GL.UInt, bufSize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, label:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetObjectLabel = unsafeBitCast(get_fp("glGetObjectLabel", support: [ss361, ss368, ss221]), to: Swift.type(of: fp_glGetObjectLabel))
    fp_glGetObjectLabel(identifier, name, bufSize, length, label)
}
public
func glGetObjectLabel(identifier:GL.Enum, name:GL.UInt, bufSize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, label:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetObjectLabel(identifier, name, bufSize, length, label)
}
public
func glGetObjectLabel(_ identifier:GL.Enum, _ name:GL.UInt, _ bufSize:GL.Size, _ length:UnsafeMutablePointer<GL.Size>?, _ label:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetObjectLabel(identifier, name, bufSize, length, label)
}

var fp_glGetObjectLabelEXT:@convention(c) (GL.Enum, GL.UInt, GL.Size, UnsafeMutablePointer<GL.Size>?, UnsafeMutablePointer<GL.Char>?) -> () = load_glGetObjectLabelEXT
func load_glGetObjectLabelEXT(type:GL.Enum, object:GL.UInt, bufSize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, label:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetObjectLabelEXT = unsafeBitCast(get_fp("glGetObjectLabelEXT", support: [ss140]), to: Swift.type(of: fp_glGetObjectLabelEXT))
    fp_glGetObjectLabelEXT(type, object, bufSize, length, label)
}
public
func glGetObjectLabelEXT(type:GL.Enum, object:GL.UInt, bufSize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, label:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetObjectLabelEXT(type, object, bufSize, length, label)
}
public
func glGetObjectLabelEXT(_ type:GL.Enum, _ object:GL.UInt, _ bufSize:GL.Size, _ length:UnsafeMutablePointer<GL.Size>?, _ label:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetObjectLabelEXT(type, object, bufSize, length, label)
}

var fp_glGetObjectLabelKHR:@convention(c) (GL.Enum, GL.UInt, GL.Size, UnsafeMutablePointer<GL.Size>?, UnsafeMutablePointer<GL.Char>?) -> () = load_glGetObjectLabelKHR
func load_glGetObjectLabelKHR(identifier:GL.Enum, name:GL.UInt, bufSize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, label:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetObjectLabelKHR = unsafeBitCast(get_fp("glGetObjectLabelKHR", support: [ss221]), to: Swift.type(of: fp_glGetObjectLabelKHR))
    fp_glGetObjectLabelKHR(identifier, name, bufSize, length, label)
}
public
func glGetObjectLabelKHR(identifier:GL.Enum, name:GL.UInt, bufSize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, label:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetObjectLabelKHR(identifier, name, bufSize, length, label)
}
public
func glGetObjectLabelKHR(_ identifier:GL.Enum, _ name:GL.UInt, _ bufSize:GL.Size, _ length:UnsafeMutablePointer<GL.Size>?, _ label:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetObjectLabelKHR(identifier, name, bufSize, length, label)
}

var fp_glGetObjectParameterfvARB:@convention(c) (GL.HandleARB, GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetObjectParameterfvARB
func load_glGetObjectParameterfvARB(obj:GL.HandleARB, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetObjectParameterfvARB = unsafeBitCast(get_fp("glGetObjectParameterfvARB", support: [ss83]), to: Swift.type(of: fp_glGetObjectParameterfvARB))
    fp_glGetObjectParameterfvARB(obj, pname, params)
}
public
func glGetObjectParameterfvARB(obj:GL.HandleARB, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetObjectParameterfvARB(obj, pname, params)
}
public
func glGetObjectParameterfvARB(_ obj:GL.HandleARB, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetObjectParameterfvARB(obj, pname, params)
}

var fp_glGetObjectParameterivAPPLE:@convention(c) (GL.Enum, GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetObjectParameterivAPPLE
func load_glGetObjectParameterivAPPLE(objectType:GL.Enum, name:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetObjectParameterivAPPLE = unsafeBitCast(get_fp("glGetObjectParameterivAPPLE", support: [ss22]), to: Swift.type(of: fp_glGetObjectParameterivAPPLE))
    fp_glGetObjectParameterivAPPLE(objectType, name, pname, params)
}
public
func glGetObjectParameterivAPPLE(objectType:GL.Enum, name:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetObjectParameterivAPPLE(objectType, name, pname, params)
}
public
func glGetObjectParameterivAPPLE(_ objectType:GL.Enum, _ name:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetObjectParameterivAPPLE(objectType, name, pname, params)
}

var fp_glGetObjectParameterivARB:@convention(c) (GL.HandleARB, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetObjectParameterivARB
func load_glGetObjectParameterivARB(obj:GL.HandleARB, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetObjectParameterivARB = unsafeBitCast(get_fp("glGetObjectParameterivARB", support: [ss83]), to: Swift.type(of: fp_glGetObjectParameterivARB))
    fp_glGetObjectParameterivARB(obj, pname, params)
}
public
func glGetObjectParameterivARB(obj:GL.HandleARB, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetObjectParameterivARB(obj, pname, params)
}
public
func glGetObjectParameterivARB(_ obj:GL.HandleARB, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetObjectParameterivARB(obj, pname, params)
}

var fp_glGetObjectPtrLabel:@convention(c) (UnsafeRawPointer?, GL.Size, UnsafeMutablePointer<GL.Size>?, UnsafeMutablePointer<GL.Char>?) -> () = load_glGetObjectPtrLabel
func load_glGetObjectPtrLabel(ptr:UnsafeRawPointer?, bufSize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, label:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetObjectPtrLabel = unsafeBitCast(get_fp("glGetObjectPtrLabel", support: [ss361, ss368, ss221]), to: Swift.type(of: fp_glGetObjectPtrLabel))
    fp_glGetObjectPtrLabel(ptr, bufSize, length, label)
}
public
func glGetObjectPtrLabel(ptr:UnsafeRawPointer?, bufSize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, label:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetObjectPtrLabel(ptr, bufSize, length, label)
}
public
func glGetObjectPtrLabel(_ ptr:UnsafeRawPointer?, _ bufSize:GL.Size, _ length:UnsafeMutablePointer<GL.Size>?, _ label:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetObjectPtrLabel(ptr, bufSize, length, label)
}

var fp_glGetObjectPtrLabelKHR:@convention(c) (UnsafeRawPointer?, GL.Size, UnsafeMutablePointer<GL.Size>?, UnsafeMutablePointer<GL.Char>?) -> () = load_glGetObjectPtrLabelKHR
func load_glGetObjectPtrLabelKHR(ptr:UnsafeRawPointer?, bufSize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, label:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetObjectPtrLabelKHR = unsafeBitCast(get_fp("glGetObjectPtrLabelKHR", support: [ss221]), to: Swift.type(of: fp_glGetObjectPtrLabelKHR))
    fp_glGetObjectPtrLabelKHR(ptr, bufSize, length, label)
}
public
func glGetObjectPtrLabelKHR(ptr:UnsafeRawPointer?, bufSize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, label:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetObjectPtrLabelKHR(ptr, bufSize, length, label)
}
public
func glGetObjectPtrLabelKHR(_ ptr:UnsafeRawPointer?, _ bufSize:GL.Size, _ length:UnsafeMutablePointer<GL.Size>?, _ label:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetObjectPtrLabelKHR(ptr, bufSize, length, label)
}

var fp_glGetOcclusionQueryivNV:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetOcclusionQueryivNV
func load_glGetOcclusionQueryivNV(id:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetOcclusionQueryivNV = unsafeBitCast(get_fp("glGetOcclusionQueryivNV", support: [ss257]), to: Swift.type(of: fp_glGetOcclusionQueryivNV))
    fp_glGetOcclusionQueryivNV(id, pname, params)
}
public
func glGetOcclusionQueryivNV(id:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetOcclusionQueryivNV(id, pname, params)
}
public
func glGetOcclusionQueryivNV(_ id:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetOcclusionQueryivNV(id, pname, params)
}

var fp_glGetOcclusionQueryuivNV:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGetOcclusionQueryuivNV
func load_glGetOcclusionQueryuivNV(id:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetOcclusionQueryuivNV = unsafeBitCast(get_fp("glGetOcclusionQueryuivNV", support: [ss257]), to: Swift.type(of: fp_glGetOcclusionQueryuivNV))
    fp_glGetOcclusionQueryuivNV(id, pname, params)
}
public
func glGetOcclusionQueryuivNV(id:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetOcclusionQueryuivNV(id, pname, params)
}
public
func glGetOcclusionQueryuivNV(_ id:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetOcclusionQueryuivNV(id, pname, params)
}

var fp_glGetPathColorGenfvNV:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetPathColorGenfvNV
func load_glGetPathColorGenfvNV(color:GL.Enum, pname:GL.Enum, value:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetPathColorGenfvNV = unsafeBitCast(get_fp("glGetPathColorGenfvNV", support: [ss259]), to: Swift.type(of: fp_glGetPathColorGenfvNV))
    fp_glGetPathColorGenfvNV(color, pname, value)
}
public
func glGetPathColorGenfvNV(color:GL.Enum, pname:GL.Enum, value:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetPathColorGenfvNV(color, pname, value)
}
public
func glGetPathColorGenfvNV(_ color:GL.Enum, _ pname:GL.Enum, _ value:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetPathColorGenfvNV(color, pname, value)
}

var fp_glGetPathColorGenivNV:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetPathColorGenivNV
func load_glGetPathColorGenivNV(color:GL.Enum, pname:GL.Enum, value:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetPathColorGenivNV = unsafeBitCast(get_fp("glGetPathColorGenivNV", support: [ss259]), to: Swift.type(of: fp_glGetPathColorGenivNV))
    fp_glGetPathColorGenivNV(color, pname, value)
}
public
func glGetPathColorGenivNV(color:GL.Enum, pname:GL.Enum, value:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetPathColorGenivNV(color, pname, value)
}
public
func glGetPathColorGenivNV(_ color:GL.Enum, _ pname:GL.Enum, _ value:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetPathColorGenivNV(color, pname, value)
}

var fp_glGetPathCommandsNV:@convention(c) (GL.UInt, UnsafeMutablePointer<GL.UByte>?) -> () = load_glGetPathCommandsNV
func load_glGetPathCommandsNV(path:GL.UInt, commands:UnsafeMutablePointer<GL.UByte>?)
{
    fp_glGetPathCommandsNV = unsafeBitCast(get_fp("glGetPathCommandsNV", support: [ss259]), to: Swift.type(of: fp_glGetPathCommandsNV))
    fp_glGetPathCommandsNV(path, commands)
}
public
func glGetPathCommandsNV(path:GL.UInt, commands:UnsafeMutablePointer<GL.UByte>?)
{
    fp_glGetPathCommandsNV(path, commands)
}
public
func glGetPathCommandsNV(_ path:GL.UInt, _ commands:UnsafeMutablePointer<GL.UByte>?)
{
    fp_glGetPathCommandsNV(path, commands)
}

var fp_glGetPathCoordsNV:@convention(c) (GL.UInt, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetPathCoordsNV
func load_glGetPathCoordsNV(path:GL.UInt, coords:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetPathCoordsNV = unsafeBitCast(get_fp("glGetPathCoordsNV", support: [ss259]), to: Swift.type(of: fp_glGetPathCoordsNV))
    fp_glGetPathCoordsNV(path, coords)
}
public
func glGetPathCoordsNV(path:GL.UInt, coords:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetPathCoordsNV(path, coords)
}
public
func glGetPathCoordsNV(_ path:GL.UInt, _ coords:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetPathCoordsNV(path, coords)
}

var fp_glGetPathDashArrayNV:@convention(c) (GL.UInt, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetPathDashArrayNV
func load_glGetPathDashArrayNV(path:GL.UInt, dashArray:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetPathDashArrayNV = unsafeBitCast(get_fp("glGetPathDashArrayNV", support: [ss259]), to: Swift.type(of: fp_glGetPathDashArrayNV))
    fp_glGetPathDashArrayNV(path, dashArray)
}
public
func glGetPathDashArrayNV(path:GL.UInt, dashArray:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetPathDashArrayNV(path, dashArray)
}
public
func glGetPathDashArrayNV(_ path:GL.UInt, _ dashArray:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetPathDashArrayNV(path, dashArray)
}

var fp_glGetPathLengthNV:@convention(c) (GL.UInt, GL.Size, GL.Size) -> GL.Float = load_glGetPathLengthNV
func load_glGetPathLengthNV(path:GL.UInt, startSegment:GL.Size, numSegments:GL.Size) -> GL.Float
{
    fp_glGetPathLengthNV = unsafeBitCast(get_fp("glGetPathLengthNV", support: [ss259]), to: Swift.type(of: fp_glGetPathLengthNV))
    return fp_glGetPathLengthNV(path, startSegment, numSegments)
}
public
func glGetPathLengthNV(path:GL.UInt, startSegment:GL.Size, numSegments:GL.Size) -> GL.Float
{
    return fp_glGetPathLengthNV(path, startSegment, numSegments)
}
public
func glGetPathLengthNV(_ path:GL.UInt, _ startSegment:GL.Size, _ numSegments:GL.Size) -> GL.Float
{
    return fp_glGetPathLengthNV(path, startSegment, numSegments)
}

var fp_glGetPathMetricRangeNV:@convention(c) (GL.Bitfield, GL.UInt, GL.Size, GL.Size, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetPathMetricRangeNV
func load_glGetPathMetricRangeNV(metricQueryMask:GL.Bitfield, firstPathName:GL.UInt, numPaths:GL.Size, stride:GL.Size, metrics:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetPathMetricRangeNV = unsafeBitCast(get_fp("glGetPathMetricRangeNV", support: [ss259]), to: Swift.type(of: fp_glGetPathMetricRangeNV))
    fp_glGetPathMetricRangeNV(metricQueryMask, firstPathName, numPaths, stride, metrics)
}
public
func glGetPathMetricRangeNV(metricQueryMask:GL.Bitfield, firstPathName:GL.UInt, numPaths:GL.Size, stride:GL.Size, metrics:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetPathMetricRangeNV(metricQueryMask, firstPathName, numPaths, stride, metrics)
}
public
func glGetPathMetricRangeNV(_ metricQueryMask:GL.Bitfield, _ firstPathName:GL.UInt, _ numPaths:GL.Size, _ stride:GL.Size, _ metrics:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetPathMetricRangeNV(metricQueryMask, firstPathName, numPaths, stride, metrics)
}

var fp_glGetPathMetricsNV:@convention(c) (GL.Bitfield, GL.Size, GL.Enum, UnsafeRawPointer?, GL.UInt, GL.Size, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetPathMetricsNV
func load_glGetPathMetricsNV(metricQueryMask:GL.Bitfield, numPaths:GL.Size, pathNameType:GL.Enum, paths:UnsafeRawPointer?, pathBase:GL.UInt, stride:GL.Size, metrics:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetPathMetricsNV = unsafeBitCast(get_fp("glGetPathMetricsNV", support: [ss259]), to: Swift.type(of: fp_glGetPathMetricsNV))
    fp_glGetPathMetricsNV(metricQueryMask, numPaths, pathNameType, paths, pathBase, stride, metrics)
}
public
func glGetPathMetricsNV(metricQueryMask:GL.Bitfield, numPaths:GL.Size, pathNameType:GL.Enum, paths:UnsafeRawPointer?, pathBase:GL.UInt, stride:GL.Size, metrics:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetPathMetricsNV(metricQueryMask, numPaths, pathNameType, paths, pathBase, stride, metrics)
}
public
func glGetPathMetricsNV(_ metricQueryMask:GL.Bitfield, _ numPaths:GL.Size, _ pathNameType:GL.Enum, _ paths:UnsafeRawPointer?, _ pathBase:GL.UInt, _ stride:GL.Size, _ metrics:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetPathMetricsNV(metricQueryMask, numPaths, pathNameType, paths, pathBase, stride, metrics)
}

var fp_glGetPathParameterfvNV:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetPathParameterfvNV
func load_glGetPathParameterfvNV(path:GL.UInt, pname:GL.Enum, value:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetPathParameterfvNV = unsafeBitCast(get_fp("glGetPathParameterfvNV", support: [ss259]), to: Swift.type(of: fp_glGetPathParameterfvNV))
    fp_glGetPathParameterfvNV(path, pname, value)
}
public
func glGetPathParameterfvNV(path:GL.UInt, pname:GL.Enum, value:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetPathParameterfvNV(path, pname, value)
}
public
func glGetPathParameterfvNV(_ path:GL.UInt, _ pname:GL.Enum, _ value:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetPathParameterfvNV(path, pname, value)
}

var fp_glGetPathParameterivNV:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetPathParameterivNV
func load_glGetPathParameterivNV(path:GL.UInt, pname:GL.Enum, value:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetPathParameterivNV = unsafeBitCast(get_fp("glGetPathParameterivNV", support: [ss259]), to: Swift.type(of: fp_glGetPathParameterivNV))
    fp_glGetPathParameterivNV(path, pname, value)
}
public
func glGetPathParameterivNV(path:GL.UInt, pname:GL.Enum, value:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetPathParameterivNV(path, pname, value)
}
public
func glGetPathParameterivNV(_ path:GL.UInt, _ pname:GL.Enum, _ value:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetPathParameterivNV(path, pname, value)
}

var fp_glGetPathSpacingNV:@convention(c) (GL.Enum, GL.Size, GL.Enum, UnsafeRawPointer?, GL.UInt, GL.Float, GL.Float, GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetPathSpacingNV
func load_glGetPathSpacingNV(pathListMode:GL.Enum, numPaths:GL.Size, pathNameType:GL.Enum, paths:UnsafeRawPointer?, pathBase:GL.UInt, advanceScale:GL.Float, kerningScale:GL.Float, transformType:GL.Enum, returnedSpacing:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetPathSpacingNV = unsafeBitCast(get_fp("glGetPathSpacingNV", support: [ss259]), to: Swift.type(of: fp_glGetPathSpacingNV))
    fp_glGetPathSpacingNV(pathListMode, numPaths, pathNameType, paths, pathBase, advanceScale, kerningScale, transformType, returnedSpacing)
}
public
func glGetPathSpacingNV(pathListMode:GL.Enum, numPaths:GL.Size, pathNameType:GL.Enum, paths:UnsafeRawPointer?, pathBase:GL.UInt, advanceScale:GL.Float, kerningScale:GL.Float, transformType:GL.Enum, returnedSpacing:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetPathSpacingNV(pathListMode, numPaths, pathNameType, paths, pathBase, advanceScale, kerningScale, transformType, returnedSpacing)
}
public
func glGetPathSpacingNV(_ pathListMode:GL.Enum, _ numPaths:GL.Size, _ pathNameType:GL.Enum, _ paths:UnsafeRawPointer?, _ pathBase:GL.UInt, _ advanceScale:GL.Float, _ kerningScale:GL.Float, _ transformType:GL.Enum, _ returnedSpacing:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetPathSpacingNV(pathListMode, numPaths, pathNameType, paths, pathBase, advanceScale, kerningScale, transformType, returnedSpacing)
}

var fp_glGetPathTexGenfvNV:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetPathTexGenfvNV
func load_glGetPathTexGenfvNV(texCoordSet:GL.Enum, pname:GL.Enum, value:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetPathTexGenfvNV = unsafeBitCast(get_fp("glGetPathTexGenfvNV", support: [ss259]), to: Swift.type(of: fp_glGetPathTexGenfvNV))
    fp_glGetPathTexGenfvNV(texCoordSet, pname, value)
}
public
func glGetPathTexGenfvNV(texCoordSet:GL.Enum, pname:GL.Enum, value:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetPathTexGenfvNV(texCoordSet, pname, value)
}
public
func glGetPathTexGenfvNV(_ texCoordSet:GL.Enum, _ pname:GL.Enum, _ value:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetPathTexGenfvNV(texCoordSet, pname, value)
}

var fp_glGetPathTexGenivNV:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetPathTexGenivNV
func load_glGetPathTexGenivNV(texCoordSet:GL.Enum, pname:GL.Enum, value:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetPathTexGenivNV = unsafeBitCast(get_fp("glGetPathTexGenivNV", support: [ss259]), to: Swift.type(of: fp_glGetPathTexGenivNV))
    fp_glGetPathTexGenivNV(texCoordSet, pname, value)
}
public
func glGetPathTexGenivNV(texCoordSet:GL.Enum, pname:GL.Enum, value:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetPathTexGenivNV(texCoordSet, pname, value)
}
public
func glGetPathTexGenivNV(_ texCoordSet:GL.Enum, _ pname:GL.Enum, _ value:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetPathTexGenivNV(texCoordSet, pname, value)
}

var fp_glGetPerfCounterInfoINTEL:@convention(c) (GL.UInt, GL.UInt, GL.UInt, UnsafeMutablePointer<GL.Char>?, GL.UInt, UnsafeMutablePointer<GL.Char>?, UnsafeMutablePointer<GL.UInt>?, UnsafeMutablePointer<GL.UInt>?, UnsafeMutablePointer<GL.UInt>?, UnsafeMutablePointer<GL.UInt>?, UnsafeMutablePointer<GL.UInt64>?) -> () = load_glGetPerfCounterInfoINTEL
func load_glGetPerfCounterInfoINTEL(queryId:GL.UInt, counterId:GL.UInt, counterNameLength:GL.UInt, counterName:UnsafeMutablePointer<GL.Char>?, counterDescLength:GL.UInt, counterDesc:UnsafeMutablePointer<GL.Char>?, counterOffset:UnsafeMutablePointer<GL.UInt>?, counterDataSize:UnsafeMutablePointer<GL.UInt>?, counterTypeEnum:UnsafeMutablePointer<GL.UInt>?, counterDataTypeEnum:UnsafeMutablePointer<GL.UInt>?, rawCounterMaxValue:UnsafeMutablePointer<GL.UInt64>?)
{
    fp_glGetPerfCounterInfoINTEL = unsafeBitCast(get_fp("glGetPerfCounterInfoINTEL", support: [ss219]), to: Swift.type(of: fp_glGetPerfCounterInfoINTEL))
    fp_glGetPerfCounterInfoINTEL(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, counterOffset, counterDataSize, counterTypeEnum, counterDataTypeEnum, rawCounterMaxValue)
}
public
func glGetPerfCounterInfoINTEL(queryId:GL.UInt, counterId:GL.UInt, counterNameLength:GL.UInt, counterName:UnsafeMutablePointer<GL.Char>?, counterDescLength:GL.UInt, counterDesc:UnsafeMutablePointer<GL.Char>?, counterOffset:UnsafeMutablePointer<GL.UInt>?, counterDataSize:UnsafeMutablePointer<GL.UInt>?, counterTypeEnum:UnsafeMutablePointer<GL.UInt>?, counterDataTypeEnum:UnsafeMutablePointer<GL.UInt>?, rawCounterMaxValue:UnsafeMutablePointer<GL.UInt64>?)
{
    fp_glGetPerfCounterInfoINTEL(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, counterOffset, counterDataSize, counterTypeEnum, counterDataTypeEnum, rawCounterMaxValue)
}
public
func glGetPerfCounterInfoINTEL(_ queryId:GL.UInt, _ counterId:GL.UInt, _ counterNameLength:GL.UInt, _ counterName:UnsafeMutablePointer<GL.Char>?, _ counterDescLength:GL.UInt, _ counterDesc:UnsafeMutablePointer<GL.Char>?, _ counterOffset:UnsafeMutablePointer<GL.UInt>?, _ counterDataSize:UnsafeMutablePointer<GL.UInt>?, _ counterTypeEnum:UnsafeMutablePointer<GL.UInt>?, _ counterDataTypeEnum:UnsafeMutablePointer<GL.UInt>?, _ rawCounterMaxValue:UnsafeMutablePointer<GL.UInt64>?)
{
    fp_glGetPerfCounterInfoINTEL(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, counterOffset, counterDataSize, counterTypeEnum, counterDataTypeEnum, rawCounterMaxValue)
}

var fp_glGetPerfMonitorCounterDataAMD:@convention(c) (GL.UInt, GL.Enum, GL.Size, UnsafeMutablePointer<GL.UInt>?, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetPerfMonitorCounterDataAMD
func load_glGetPerfMonitorCounterDataAMD(monitor:GL.UInt, pname:GL.Enum, dataSize:GL.Size, data:UnsafeMutablePointer<GL.UInt>?, bytesWritten:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetPerfMonitorCounterDataAMD = unsafeBitCast(get_fp("glGetPerfMonitorCounterDataAMD", support: [ss8]), to: Swift.type(of: fp_glGetPerfMonitorCounterDataAMD))
    fp_glGetPerfMonitorCounterDataAMD(monitor, pname, dataSize, data, bytesWritten)
}
public
func glGetPerfMonitorCounterDataAMD(monitor:GL.UInt, pname:GL.Enum, dataSize:GL.Size, data:UnsafeMutablePointer<GL.UInt>?, bytesWritten:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetPerfMonitorCounterDataAMD(monitor, pname, dataSize, data, bytesWritten)
}
public
func glGetPerfMonitorCounterDataAMD(_ monitor:GL.UInt, _ pname:GL.Enum, _ dataSize:GL.Size, _ data:UnsafeMutablePointer<GL.UInt>?, _ bytesWritten:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetPerfMonitorCounterDataAMD(monitor, pname, dataSize, data, bytesWritten)
}

var fp_glGetPerfMonitorCounterInfoAMD:@convention(c) (GL.UInt, GL.UInt, GL.Enum, UnsafeMutableRawPointer?) -> () = load_glGetPerfMonitorCounterInfoAMD
func load_glGetPerfMonitorCounterInfoAMD(group:GL.UInt, counter:GL.UInt, pname:GL.Enum, data:UnsafeMutableRawPointer?)
{
    fp_glGetPerfMonitorCounterInfoAMD = unsafeBitCast(get_fp("glGetPerfMonitorCounterInfoAMD", support: [ss8]), to: Swift.type(of: fp_glGetPerfMonitorCounterInfoAMD))
    fp_glGetPerfMonitorCounterInfoAMD(group, counter, pname, data)
}
public
func glGetPerfMonitorCounterInfoAMD(group:GL.UInt, counter:GL.UInt, pname:GL.Enum, data:UnsafeMutableRawPointer?)
{
    fp_glGetPerfMonitorCounterInfoAMD(group, counter, pname, data)
}
public
func glGetPerfMonitorCounterInfoAMD(_ group:GL.UInt, _ counter:GL.UInt, _ pname:GL.Enum, _ data:UnsafeMutableRawPointer?)
{
    fp_glGetPerfMonitorCounterInfoAMD(group, counter, pname, data)
}

var fp_glGetPerfMonitorCounterStringAMD:@convention(c) (GL.UInt, GL.UInt, GL.Size, UnsafeMutablePointer<GL.Size>?, UnsafeMutablePointer<GL.Char>?) -> () = load_glGetPerfMonitorCounterStringAMD
func load_glGetPerfMonitorCounterStringAMD(group:GL.UInt, counter:GL.UInt, bufSize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, counterString:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetPerfMonitorCounterStringAMD = unsafeBitCast(get_fp("glGetPerfMonitorCounterStringAMD", support: [ss8]), to: Swift.type(of: fp_glGetPerfMonitorCounterStringAMD))
    fp_glGetPerfMonitorCounterStringAMD(group, counter, bufSize, length, counterString)
}
public
func glGetPerfMonitorCounterStringAMD(group:GL.UInt, counter:GL.UInt, bufSize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, counterString:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetPerfMonitorCounterStringAMD(group, counter, bufSize, length, counterString)
}
public
func glGetPerfMonitorCounterStringAMD(_ group:GL.UInt, _ counter:GL.UInt, _ bufSize:GL.Size, _ length:UnsafeMutablePointer<GL.Size>?, _ counterString:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetPerfMonitorCounterStringAMD(group, counter, bufSize, length, counterString)
}

var fp_glGetPerfMonitorCountersAMD:@convention(c) (GL.UInt, UnsafeMutablePointer<GL.Int>?, UnsafeMutablePointer<GL.Int>?, GL.Size, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGetPerfMonitorCountersAMD
func load_glGetPerfMonitorCountersAMD(group:GL.UInt, numCounters:UnsafeMutablePointer<GL.Int>?, maxActiveCounters:UnsafeMutablePointer<GL.Int>?, counterSize:GL.Size, counters:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetPerfMonitorCountersAMD = unsafeBitCast(get_fp("glGetPerfMonitorCountersAMD", support: [ss8]), to: Swift.type(of: fp_glGetPerfMonitorCountersAMD))
    fp_glGetPerfMonitorCountersAMD(group, numCounters, maxActiveCounters, counterSize, counters)
}
public
func glGetPerfMonitorCountersAMD(group:GL.UInt, numCounters:UnsafeMutablePointer<GL.Int>?, maxActiveCounters:UnsafeMutablePointer<GL.Int>?, counterSize:GL.Size, counters:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetPerfMonitorCountersAMD(group, numCounters, maxActiveCounters, counterSize, counters)
}
public
func glGetPerfMonitorCountersAMD(_ group:GL.UInt, _ numCounters:UnsafeMutablePointer<GL.Int>?, _ maxActiveCounters:UnsafeMutablePointer<GL.Int>?, _ counterSize:GL.Size, _ counters:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetPerfMonitorCountersAMD(group, numCounters, maxActiveCounters, counterSize, counters)
}

var fp_glGetPerfMonitorGroupStringAMD:@convention(c) (GL.UInt, GL.Size, UnsafeMutablePointer<GL.Size>?, UnsafeMutablePointer<GL.Char>?) -> () = load_glGetPerfMonitorGroupStringAMD
func load_glGetPerfMonitorGroupStringAMD(group:GL.UInt, bufSize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, groupString:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetPerfMonitorGroupStringAMD = unsafeBitCast(get_fp("glGetPerfMonitorGroupStringAMD", support: [ss8]), to: Swift.type(of: fp_glGetPerfMonitorGroupStringAMD))
    fp_glGetPerfMonitorGroupStringAMD(group, bufSize, length, groupString)
}
public
func glGetPerfMonitorGroupStringAMD(group:GL.UInt, bufSize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, groupString:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetPerfMonitorGroupStringAMD(group, bufSize, length, groupString)
}
public
func glGetPerfMonitorGroupStringAMD(_ group:GL.UInt, _ bufSize:GL.Size, _ length:UnsafeMutablePointer<GL.Size>?, _ groupString:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetPerfMonitorGroupStringAMD(group, bufSize, length, groupString)
}

var fp_glGetPerfMonitorGroupsAMD:@convention(c) (UnsafeMutablePointer<GL.Int>?, GL.Size, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGetPerfMonitorGroupsAMD
func load_glGetPerfMonitorGroupsAMD(numGroups:UnsafeMutablePointer<GL.Int>?, groupsSize:GL.Size, groups:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetPerfMonitorGroupsAMD = unsafeBitCast(get_fp("glGetPerfMonitorGroupsAMD", support: [ss8]), to: Swift.type(of: fp_glGetPerfMonitorGroupsAMD))
    fp_glGetPerfMonitorGroupsAMD(numGroups, groupsSize, groups)
}
public
func glGetPerfMonitorGroupsAMD(numGroups:UnsafeMutablePointer<GL.Int>?, groupsSize:GL.Size, groups:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetPerfMonitorGroupsAMD(numGroups, groupsSize, groups)
}
public
func glGetPerfMonitorGroupsAMD(_ numGroups:UnsafeMutablePointer<GL.Int>?, _ groupsSize:GL.Size, _ groups:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetPerfMonitorGroupsAMD(numGroups, groupsSize, groups)
}

var fp_glGetPerfQueryDataINTEL:@convention(c) (GL.UInt, GL.UInt, GL.Size, UnsafeMutableRawPointer?, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGetPerfQueryDataINTEL
func load_glGetPerfQueryDataINTEL(queryHandle:GL.UInt, flags:GL.UInt, dataSize:GL.Size, data:UnsafeMutableRawPointer?, bytesWritten:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetPerfQueryDataINTEL = unsafeBitCast(get_fp("glGetPerfQueryDataINTEL", support: [ss219]), to: Swift.type(of: fp_glGetPerfQueryDataINTEL))
    fp_glGetPerfQueryDataINTEL(queryHandle, flags, dataSize, data, bytesWritten)
}
public
func glGetPerfQueryDataINTEL(queryHandle:GL.UInt, flags:GL.UInt, dataSize:GL.Size, data:UnsafeMutableRawPointer?, bytesWritten:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetPerfQueryDataINTEL(queryHandle, flags, dataSize, data, bytesWritten)
}
public
func glGetPerfQueryDataINTEL(_ queryHandle:GL.UInt, _ flags:GL.UInt, _ dataSize:GL.Size, _ data:UnsafeMutableRawPointer?, _ bytesWritten:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetPerfQueryDataINTEL(queryHandle, flags, dataSize, data, bytesWritten)
}

var fp_glGetPerfQueryIdByNameINTEL:@convention(c) (UnsafeMutablePointer<GL.Char>?, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGetPerfQueryIdByNameINTEL
func load_glGetPerfQueryIdByNameINTEL(queryName:UnsafeMutablePointer<GL.Char>?, queryId:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetPerfQueryIdByNameINTEL = unsafeBitCast(get_fp("glGetPerfQueryIdByNameINTEL", support: [ss219]), to: Swift.type(of: fp_glGetPerfQueryIdByNameINTEL))
    fp_glGetPerfQueryIdByNameINTEL(queryName, queryId)
}
public
func glGetPerfQueryIdByNameINTEL(queryName:UnsafeMutablePointer<GL.Char>?, queryId:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetPerfQueryIdByNameINTEL(queryName, queryId)
}
public
func glGetPerfQueryIdByNameINTEL(_ queryName:UnsafeMutablePointer<GL.Char>?, _ queryId:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetPerfQueryIdByNameINTEL(queryName, queryId)
}

var fp_glGetPerfQueryInfoINTEL:@convention(c) (GL.UInt, GL.UInt, UnsafeMutablePointer<GL.Char>?, UnsafeMutablePointer<GL.UInt>?, UnsafeMutablePointer<GL.UInt>?, UnsafeMutablePointer<GL.UInt>?, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGetPerfQueryInfoINTEL
func load_glGetPerfQueryInfoINTEL(queryId:GL.UInt, queryNameLength:GL.UInt, queryName:UnsafeMutablePointer<GL.Char>?, dataSize:UnsafeMutablePointer<GL.UInt>?, noCounters:UnsafeMutablePointer<GL.UInt>?, noInstances:UnsafeMutablePointer<GL.UInt>?, capsMask:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetPerfQueryInfoINTEL = unsafeBitCast(get_fp("glGetPerfQueryInfoINTEL", support: [ss219]), to: Swift.type(of: fp_glGetPerfQueryInfoINTEL))
    fp_glGetPerfQueryInfoINTEL(queryId, queryNameLength, queryName, dataSize, noCounters, noInstances, capsMask)
}
public
func glGetPerfQueryInfoINTEL(queryId:GL.UInt, queryNameLength:GL.UInt, queryName:UnsafeMutablePointer<GL.Char>?, dataSize:UnsafeMutablePointer<GL.UInt>?, noCounters:UnsafeMutablePointer<GL.UInt>?, noInstances:UnsafeMutablePointer<GL.UInt>?, capsMask:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetPerfQueryInfoINTEL(queryId, queryNameLength, queryName, dataSize, noCounters, noInstances, capsMask)
}
public
func glGetPerfQueryInfoINTEL(_ queryId:GL.UInt, _ queryNameLength:GL.UInt, _ queryName:UnsafeMutablePointer<GL.Char>?, _ dataSize:UnsafeMutablePointer<GL.UInt>?, _ noCounters:UnsafeMutablePointer<GL.UInt>?, _ noInstances:UnsafeMutablePointer<GL.UInt>?, _ capsMask:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetPerfQueryInfoINTEL(queryId, queryNameLength, queryName, dataSize, noCounters, noInstances, capsMask)
}

var fp_glGetPixelMapfv:@convention(c) (GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetPixelMapfv
func load_glGetPixelMapfv(map:GL.Enum, values:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetPixelMapfv = unsafeBitCast(get_fp("glGetPixelMapfv", support: [ss346, ss369]), to: Swift.type(of: fp_glGetPixelMapfv))
    fp_glGetPixelMapfv(map, values)
}
public
func glGetPixelMapfv(map:GL.Enum, values:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetPixelMapfv(map, values)
}
public
func glGetPixelMapfv(_ map:GL.Enum, _ values:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetPixelMapfv(map, values)
}

var fp_glGetPixelMapuiv:@convention(c) (GL.Enum, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGetPixelMapuiv
func load_glGetPixelMapuiv(map:GL.Enum, values:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetPixelMapuiv = unsafeBitCast(get_fp("glGetPixelMapuiv", support: [ss346, ss369]), to: Swift.type(of: fp_glGetPixelMapuiv))
    fp_glGetPixelMapuiv(map, values)
}
public
func glGetPixelMapuiv(map:GL.Enum, values:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetPixelMapuiv(map, values)
}
public
func glGetPixelMapuiv(_ map:GL.Enum, _ values:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetPixelMapuiv(map, values)
}

var fp_glGetPixelMapusv:@convention(c) (GL.Enum, UnsafeMutablePointer<GL.UShort>?) -> () = load_glGetPixelMapusv
func load_glGetPixelMapusv(map:GL.Enum, values:UnsafeMutablePointer<GL.UShort>?)
{
    fp_glGetPixelMapusv = unsafeBitCast(get_fp("glGetPixelMapusv", support: [ss346, ss369]), to: Swift.type(of: fp_glGetPixelMapusv))
    fp_glGetPixelMapusv(map, values)
}
public
func glGetPixelMapusv(map:GL.Enum, values:UnsafeMutablePointer<GL.UShort>?)
{
    fp_glGetPixelMapusv(map, values)
}
public
func glGetPixelMapusv(_ map:GL.Enum, _ values:UnsafeMutablePointer<GL.UShort>?)
{
    fp_glGetPixelMapusv(map, values)
}

var fp_glGetPixelMapxv:@convention(c) (GL.Enum, GL.Int, UnsafeMutablePointer<GL.Fixed>?) -> () = load_glGetPixelMapxv
func load_glGetPixelMapxv(map:GL.Enum, size:GL.Int, values:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetPixelMapxv = unsafeBitCast(get_fp("glGetPixelMapxv", support: [ss292]), to: Swift.type(of: fp_glGetPixelMapxv))
    fp_glGetPixelMapxv(map, size, values)
}
public
func glGetPixelMapxv(map:GL.Enum, size:GL.Int, values:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetPixelMapxv(map, size, values)
}
public
func glGetPixelMapxv(_ map:GL.Enum, _ size:GL.Int, _ values:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetPixelMapxv(map, size, values)
}

var fp_glGetPixelTexGenParameterfvSGIS:@convention(c) (GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetPixelTexGenParameterfvSGIS
func load_glGetPixelTexGenParameterfvSGIS(pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetPixelTexGenParameterfvSGIS = unsafeBitCast(get_fp("glGetPixelTexGenParameterfvSGIS", support: [ss323]), to: Swift.type(of: fp_glGetPixelTexGenParameterfvSGIS))
    fp_glGetPixelTexGenParameterfvSGIS(pname, params)
}
public
func glGetPixelTexGenParameterfvSGIS(pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetPixelTexGenParameterfvSGIS(pname, params)
}
public
func glGetPixelTexGenParameterfvSGIS(_ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetPixelTexGenParameterfvSGIS(pname, params)
}

var fp_glGetPixelTexGenParameterivSGIS:@convention(c) (GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetPixelTexGenParameterivSGIS
func load_glGetPixelTexGenParameterivSGIS(pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetPixelTexGenParameterivSGIS = unsafeBitCast(get_fp("glGetPixelTexGenParameterivSGIS", support: [ss323]), to: Swift.type(of: fp_glGetPixelTexGenParameterivSGIS))
    fp_glGetPixelTexGenParameterivSGIS(pname, params)
}
public
func glGetPixelTexGenParameterivSGIS(pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetPixelTexGenParameterivSGIS(pname, params)
}
public
func glGetPixelTexGenParameterivSGIS(_ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetPixelTexGenParameterivSGIS(pname, params)
}

var fp_glGetPixelTransformParameterfvEXT:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetPixelTransformParameterfvEXT
func load_glGetPixelTransformParameterfvEXT(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetPixelTransformParameterfvEXT = unsafeBitCast(get_fp("glGetPixelTransformParameterfvEXT", support: [ss173]), to: Swift.type(of: fp_glGetPixelTransformParameterfvEXT))
    fp_glGetPixelTransformParameterfvEXT(target, pname, params)
}
public
func glGetPixelTransformParameterfvEXT(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetPixelTransformParameterfvEXT(target, pname, params)
}
public
func glGetPixelTransformParameterfvEXT(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetPixelTransformParameterfvEXT(target, pname, params)
}

var fp_glGetPixelTransformParameterivEXT:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetPixelTransformParameterivEXT
func load_glGetPixelTransformParameterivEXT(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetPixelTransformParameterivEXT = unsafeBitCast(get_fp("glGetPixelTransformParameterivEXT", support: [ss173]), to: Swift.type(of: fp_glGetPixelTransformParameterivEXT))
    fp_glGetPixelTransformParameterivEXT(target, pname, params)
}
public
func glGetPixelTransformParameterivEXT(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetPixelTransformParameterivEXT(target, pname, params)
}
public
func glGetPixelTransformParameterivEXT(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetPixelTransformParameterivEXT(target, pname, params)
}

var fp_glGetPointerIndexedvEXT:@convention(c) (GL.Enum, GL.UInt, UnsafeMutablePointer<UnsafeMutableRawPointer?>?) -> () = load_glGetPointerIndexedvEXT
func load_glGetPointerIndexedvEXT(target:GL.Enum, index:GL.UInt, data:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    fp_glGetPointerIndexedvEXT = unsafeBitCast(get_fp("glGetPointerIndexedvEXT", support: [ss143]), to: Swift.type(of: fp_glGetPointerIndexedvEXT))
    fp_glGetPointerIndexedvEXT(target, index, data)
}
public
func glGetPointerIndexedvEXT(target:GL.Enum, index:GL.UInt, data:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    fp_glGetPointerIndexedvEXT(target, index, data)
}
public
func glGetPointerIndexedvEXT(_ target:GL.Enum, _ index:GL.UInt, _ data:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    fp_glGetPointerIndexedvEXT(target, index, data)
}

var fp_glGetPointeri_vEXT:@convention(c) (GL.Enum, GL.UInt, UnsafeMutablePointer<UnsafeMutableRawPointer?>?) -> () = load_glGetPointeri_vEXT
func load_glGetPointeri_vEXT(pname:GL.Enum, index:GL.UInt, params:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    fp_glGetPointeri_vEXT = unsafeBitCast(get_fp("glGetPointeri_vEXT", support: [ss143]), to: Swift.type(of: fp_glGetPointeri_vEXT))
    fp_glGetPointeri_vEXT(pname, index, params)
}
public
func glGetPointeri_vEXT(pname:GL.Enum, index:GL.UInt, params:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    fp_glGetPointeri_vEXT(pname, index, params)
}
public
func glGetPointeri_vEXT(_ pname:GL.Enum, _ index:GL.UInt, _ params:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    fp_glGetPointeri_vEXT(pname, index, params)
}

var fp_glGetPointerv:@convention(c) (GL.Enum, UnsafeMutablePointer<UnsafeMutableRawPointer?>?) -> () = load_glGetPointerv
func load_glGetPointerv(pname:GL.Enum, params:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    fp_glGetPointerv = unsafeBitCast(get_fp("glGetPointerv", support: [ss347, ss369, ss361, ss361, ss364, ss368, ss221]), to: Swift.type(of: fp_glGetPointerv))
    fp_glGetPointerv(pname, params)
}
public
func glGetPointerv(pname:GL.Enum, params:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    fp_glGetPointerv(pname, params)
}
public
func glGetPointerv(_ pname:GL.Enum, _ params:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    fp_glGetPointerv(pname, params)
}

var fp_glGetPointervEXT:@convention(c) (GL.Enum, UnsafeMutablePointer<UnsafeMutableRawPointer?>?) -> () = load_glGetPointervEXT
func load_glGetPointervEXT(pname:GL.Enum, params:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    fp_glGetPointervEXT = unsafeBitCast(get_fp("glGetPointervEXT", support: [ss202]), to: Swift.type(of: fp_glGetPointervEXT))
    fp_glGetPointervEXT(pname, params)
}
public
func glGetPointervEXT(pname:GL.Enum, params:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    fp_glGetPointervEXT(pname, params)
}
public
func glGetPointervEXT(_ pname:GL.Enum, _ params:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    fp_glGetPointervEXT(pname, params)
}

var fp_glGetPointervKHR:@convention(c) (GL.Enum, UnsafeMutablePointer<UnsafeMutableRawPointer?>?) -> () = load_glGetPointervKHR
func load_glGetPointervKHR(pname:GL.Enum, params:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    fp_glGetPointervKHR = unsafeBitCast(get_fp("glGetPointervKHR", support: [ss221]), to: Swift.type(of: fp_glGetPointervKHR))
    fp_glGetPointervKHR(pname, params)
}
public
func glGetPointervKHR(pname:GL.Enum, params:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    fp_glGetPointervKHR(pname, params)
}
public
func glGetPointervKHR(_ pname:GL.Enum, _ params:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    fp_glGetPointervKHR(pname, params)
}

var fp_glGetPolygonStipple:@convention(c) (UnsafeMutablePointer<GL.UByte>?) -> () = load_glGetPolygonStipple
func load_glGetPolygonStipple(mask:UnsafeMutablePointer<GL.UByte>?)
{
    fp_glGetPolygonStipple = unsafeBitCast(get_fp("glGetPolygonStipple", support: [ss346, ss369]), to: Swift.type(of: fp_glGetPolygonStipple))
    fp_glGetPolygonStipple(mask)
}
public
func glGetPolygonStipple(mask:UnsafeMutablePointer<GL.UByte>?)
{
    fp_glGetPolygonStipple(mask)
}
public
func glGetPolygonStipple(_ mask:UnsafeMutablePointer<GL.UByte>?)
{
    fp_glGetPolygonStipple(mask)
}

var fp_glGetProgramBinary:@convention(c) (GL.UInt, GL.Size, UnsafeMutablePointer<GL.Size>?, UnsafeMutablePointer<GL.Enum>?, UnsafeMutableRawPointer?) -> () = load_glGetProgramBinary
func load_glGetProgramBinary(program:GL.UInt, bufSize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, binaryFormat:UnsafeMutablePointer<GL.Enum>?, binary:UnsafeMutableRawPointer?)
{
    fp_glGetProgramBinary = unsafeBitCast(get_fp("glGetProgramBinary", support: [ss359, ss366, ss55]), to: Swift.type(of: fp_glGetProgramBinary))
    fp_glGetProgramBinary(program, bufSize, length, binaryFormat, binary)
}
public
func glGetProgramBinary(program:GL.UInt, bufSize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, binaryFormat:UnsafeMutablePointer<GL.Enum>?, binary:UnsafeMutableRawPointer?)
{
    fp_glGetProgramBinary(program, bufSize, length, binaryFormat, binary)
}
public
func glGetProgramBinary(_ program:GL.UInt, _ bufSize:GL.Size, _ length:UnsafeMutablePointer<GL.Size>?, _ binaryFormat:UnsafeMutablePointer<GL.Enum>?, _ binary:UnsafeMutableRawPointer?)
{
    fp_glGetProgramBinary(program, bufSize, length, binaryFormat, binary)
}

var fp_glGetProgramBinaryOES:@convention(c) (GL.UInt, GL.Size, UnsafeMutablePointer<GL.Size>?, UnsafeMutablePointer<GL.Enum>?, UnsafeMutableRawPointer?) -> () = load_glGetProgramBinaryOES
func load_glGetProgramBinaryOES(program:GL.UInt, bufSize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, binaryFormat:UnsafeMutablePointer<GL.Enum>?, binary:UnsafeMutableRawPointer?)
{
    fp_glGetProgramBinaryOES = unsafeBitCast(get_fp("glGetProgramBinaryOES", support: [ss295]), to: Swift.type(of: fp_glGetProgramBinaryOES))
    fp_glGetProgramBinaryOES(program, bufSize, length, binaryFormat, binary)
}
public
func glGetProgramBinaryOES(program:GL.UInt, bufSize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, binaryFormat:UnsafeMutablePointer<GL.Enum>?, binary:UnsafeMutableRawPointer?)
{
    fp_glGetProgramBinaryOES(program, bufSize, length, binaryFormat, binary)
}
public
func glGetProgramBinaryOES(_ program:GL.UInt, _ bufSize:GL.Size, _ length:UnsafeMutablePointer<GL.Size>?, _ binaryFormat:UnsafeMutablePointer<GL.Enum>?, _ binary:UnsafeMutableRawPointer?)
{
    fp_glGetProgramBinaryOES(program, bufSize, length, binaryFormat, binary)
}

var fp_glGetProgramEnvParameterIivNV:@convention(c) (GL.Enum, GL.UInt, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetProgramEnvParameterIivNV
func load_glGetProgramEnvParameterIivNV(target:GL.Enum, index:GL.UInt, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetProgramEnvParameterIivNV = unsafeBitCast(get_fp("glGetProgramEnvParameterIivNV", support: [ss250]), to: Swift.type(of: fp_glGetProgramEnvParameterIivNV))
    fp_glGetProgramEnvParameterIivNV(target, index, params)
}
public
func glGetProgramEnvParameterIivNV(target:GL.Enum, index:GL.UInt, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetProgramEnvParameterIivNV(target, index, params)
}
public
func glGetProgramEnvParameterIivNV(_ target:GL.Enum, _ index:GL.UInt, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetProgramEnvParameterIivNV(target, index, params)
}

var fp_glGetProgramEnvParameterIuivNV:@convention(c) (GL.Enum, GL.UInt, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGetProgramEnvParameterIuivNV
func load_glGetProgramEnvParameterIuivNV(target:GL.Enum, index:GL.UInt, params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetProgramEnvParameterIuivNV = unsafeBitCast(get_fp("glGetProgramEnvParameterIuivNV", support: [ss250]), to: Swift.type(of: fp_glGetProgramEnvParameterIuivNV))
    fp_glGetProgramEnvParameterIuivNV(target, index, params)
}
public
func glGetProgramEnvParameterIuivNV(target:GL.Enum, index:GL.UInt, params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetProgramEnvParameterIuivNV(target, index, params)
}
public
func glGetProgramEnvParameterIuivNV(_ target:GL.Enum, _ index:GL.UInt, _ params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetProgramEnvParameterIuivNV(target, index, params)
}

var fp_glGetProgramEnvParameterdvARB:@convention(c) (GL.Enum, GL.UInt, UnsafeMutablePointer<GL.Double>?) -> () = load_glGetProgramEnvParameterdvARB
func load_glGetProgramEnvParameterdvARB(target:GL.Enum, index:GL.UInt, params:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetProgramEnvParameterdvARB = unsafeBitCast(get_fp("glGetProgramEnvParameterdvARB", support: [ss51, ss110]), to: Swift.type(of: fp_glGetProgramEnvParameterdvARB))
    fp_glGetProgramEnvParameterdvARB(target, index, params)
}
public
func glGetProgramEnvParameterdvARB(target:GL.Enum, index:GL.UInt, params:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetProgramEnvParameterdvARB(target, index, params)
}
public
func glGetProgramEnvParameterdvARB(_ target:GL.Enum, _ index:GL.UInt, _ params:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetProgramEnvParameterdvARB(target, index, params)
}

var fp_glGetProgramEnvParameterfvARB:@convention(c) (GL.Enum, GL.UInt, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetProgramEnvParameterfvARB
func load_glGetProgramEnvParameterfvARB(target:GL.Enum, index:GL.UInt, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetProgramEnvParameterfvARB = unsafeBitCast(get_fp("glGetProgramEnvParameterfvARB", support: [ss51, ss110]), to: Swift.type(of: fp_glGetProgramEnvParameterfvARB))
    fp_glGetProgramEnvParameterfvARB(target, index, params)
}
public
func glGetProgramEnvParameterfvARB(target:GL.Enum, index:GL.UInt, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetProgramEnvParameterfvARB(target, index, params)
}
public
func glGetProgramEnvParameterfvARB(_ target:GL.Enum, _ index:GL.UInt, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetProgramEnvParameterfvARB(target, index, params)
}

var fp_glGetProgramInfoLog:@convention(c) (GL.UInt, GL.Size, UnsafeMutablePointer<GL.Size>?, UnsafeMutablePointer<GL.Char>?) -> () = load_glGetProgramInfoLog
func load_glGetProgramInfoLog(program:GL.UInt, bufSize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, infoLog:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetProgramInfoLog = unsafeBitCast(get_fp("glGetProgramInfoLog", support: [ss352, ss365]), to: Swift.type(of: fp_glGetProgramInfoLog))
    fp_glGetProgramInfoLog(program, bufSize, length, infoLog)
}
public
func glGetProgramInfoLog(program:GL.UInt, bufSize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, infoLog:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetProgramInfoLog(program, bufSize, length, infoLog)
}
public
func glGetProgramInfoLog(_ program:GL.UInt, _ bufSize:GL.Size, _ length:UnsafeMutablePointer<GL.Size>?, _ infoLog:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetProgramInfoLog(program, bufSize, length, infoLog)
}

var fp_glGetProgramInterfaceiv:@convention(c) (GL.UInt, GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetProgramInterfaceiv
func load_glGetProgramInterfaceiv(program:GL.UInt, programInterface:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetProgramInterfaceiv = unsafeBitCast(get_fp("glGetProgramInterfaceiv", support: [ss361, ss367, ss74]), to: Swift.type(of: fp_glGetProgramInterfaceiv))
    fp_glGetProgramInterfaceiv(program, programInterface, pname, params)
}
public
func glGetProgramInterfaceiv(program:GL.UInt, programInterface:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetProgramInterfaceiv(program, programInterface, pname, params)
}
public
func glGetProgramInterfaceiv(_ program:GL.UInt, _ programInterface:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetProgramInterfaceiv(program, programInterface, pname, params)
}

var fp_glGetProgramLocalParameterIivNV:@convention(c) (GL.Enum, GL.UInt, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetProgramLocalParameterIivNV
func load_glGetProgramLocalParameterIivNV(target:GL.Enum, index:GL.UInt, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetProgramLocalParameterIivNV = unsafeBitCast(get_fp("glGetProgramLocalParameterIivNV", support: [ss250]), to: Swift.type(of: fp_glGetProgramLocalParameterIivNV))
    fp_glGetProgramLocalParameterIivNV(target, index, params)
}
public
func glGetProgramLocalParameterIivNV(target:GL.Enum, index:GL.UInt, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetProgramLocalParameterIivNV(target, index, params)
}
public
func glGetProgramLocalParameterIivNV(_ target:GL.Enum, _ index:GL.UInt, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetProgramLocalParameterIivNV(target, index, params)
}

var fp_glGetProgramLocalParameterIuivNV:@convention(c) (GL.Enum, GL.UInt, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGetProgramLocalParameterIuivNV
func load_glGetProgramLocalParameterIuivNV(target:GL.Enum, index:GL.UInt, params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetProgramLocalParameterIuivNV = unsafeBitCast(get_fp("glGetProgramLocalParameterIuivNV", support: [ss250]), to: Swift.type(of: fp_glGetProgramLocalParameterIuivNV))
    fp_glGetProgramLocalParameterIuivNV(target, index, params)
}
public
func glGetProgramLocalParameterIuivNV(target:GL.Enum, index:GL.UInt, params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetProgramLocalParameterIuivNV(target, index, params)
}
public
func glGetProgramLocalParameterIuivNV(_ target:GL.Enum, _ index:GL.UInt, _ params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetProgramLocalParameterIuivNV(target, index, params)
}

var fp_glGetProgramLocalParameterdvARB:@convention(c) (GL.Enum, GL.UInt, UnsafeMutablePointer<GL.Double>?) -> () = load_glGetProgramLocalParameterdvARB
func load_glGetProgramLocalParameterdvARB(target:GL.Enum, index:GL.UInt, params:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetProgramLocalParameterdvARB = unsafeBitCast(get_fp("glGetProgramLocalParameterdvARB", support: [ss51, ss110]), to: Swift.type(of: fp_glGetProgramLocalParameterdvARB))
    fp_glGetProgramLocalParameterdvARB(target, index, params)
}
public
func glGetProgramLocalParameterdvARB(target:GL.Enum, index:GL.UInt, params:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetProgramLocalParameterdvARB(target, index, params)
}
public
func glGetProgramLocalParameterdvARB(_ target:GL.Enum, _ index:GL.UInt, _ params:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetProgramLocalParameterdvARB(target, index, params)
}

var fp_glGetProgramLocalParameterfvARB:@convention(c) (GL.Enum, GL.UInt, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetProgramLocalParameterfvARB
func load_glGetProgramLocalParameterfvARB(target:GL.Enum, index:GL.UInt, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetProgramLocalParameterfvARB = unsafeBitCast(get_fp("glGetProgramLocalParameterfvARB", support: [ss51, ss110]), to: Swift.type(of: fp_glGetProgramLocalParameterfvARB))
    fp_glGetProgramLocalParameterfvARB(target, index, params)
}
public
func glGetProgramLocalParameterfvARB(target:GL.Enum, index:GL.UInt, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetProgramLocalParameterfvARB(target, index, params)
}
public
func glGetProgramLocalParameterfvARB(_ target:GL.Enum, _ index:GL.UInt, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetProgramLocalParameterfvARB(target, index, params)
}

var fp_glGetProgramNamedParameterdvNV:@convention(c) (GL.UInt, GL.Size, UnsafePointer<GL.UByte>?, UnsafeMutablePointer<GL.Double>?) -> () = load_glGetProgramNamedParameterdvNV
func load_glGetProgramNamedParameterdvNV(id:GL.UInt, len:GL.Size, name:UnsafePointer<GL.UByte>?, params:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetProgramNamedParameterdvNV = unsafeBitCast(get_fp("glGetProgramNamedParameterdvNV", support: [ss244]), to: Swift.type(of: fp_glGetProgramNamedParameterdvNV))
    fp_glGetProgramNamedParameterdvNV(id, len, name, params)
}
public
func glGetProgramNamedParameterdvNV(id:GL.UInt, len:GL.Size, name:UnsafePointer<GL.UByte>?, params:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetProgramNamedParameterdvNV(id, len, name, params)
}
public
func glGetProgramNamedParameterdvNV(_ id:GL.UInt, _ len:GL.Size, _ name:UnsafePointer<GL.UByte>?, _ params:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetProgramNamedParameterdvNV(id, len, name, params)
}

var fp_glGetProgramNamedParameterfvNV:@convention(c) (GL.UInt, GL.Size, UnsafePointer<GL.UByte>?, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetProgramNamedParameterfvNV
func load_glGetProgramNamedParameterfvNV(id:GL.UInt, len:GL.Size, name:UnsafePointer<GL.UByte>?, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetProgramNamedParameterfvNV = unsafeBitCast(get_fp("glGetProgramNamedParameterfvNV", support: [ss244]), to: Swift.type(of: fp_glGetProgramNamedParameterfvNV))
    fp_glGetProgramNamedParameterfvNV(id, len, name, params)
}
public
func glGetProgramNamedParameterfvNV(id:GL.UInt, len:GL.Size, name:UnsafePointer<GL.UByte>?, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetProgramNamedParameterfvNV(id, len, name, params)
}
public
func glGetProgramNamedParameterfvNV(_ id:GL.UInt, _ len:GL.Size, _ name:UnsafePointer<GL.UByte>?, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetProgramNamedParameterfvNV(id, len, name, params)
}

var fp_glGetProgramParameterdvNV:@convention(c) (GL.Enum, GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Double>?) -> () = load_glGetProgramParameterdvNV
func load_glGetProgramParameterdvNV(target:GL.Enum, index:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetProgramParameterdvNV = unsafeBitCast(get_fp("glGetProgramParameterdvNV", support: [ss278]), to: Swift.type(of: fp_glGetProgramParameterdvNV))
    fp_glGetProgramParameterdvNV(target, index, pname, params)
}
public
func glGetProgramParameterdvNV(target:GL.Enum, index:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetProgramParameterdvNV(target, index, pname, params)
}
public
func glGetProgramParameterdvNV(_ target:GL.Enum, _ index:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetProgramParameterdvNV(target, index, pname, params)
}

var fp_glGetProgramParameterfvNV:@convention(c) (GL.Enum, GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetProgramParameterfvNV
func load_glGetProgramParameterfvNV(target:GL.Enum, index:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetProgramParameterfvNV = unsafeBitCast(get_fp("glGetProgramParameterfvNV", support: [ss278]), to: Swift.type(of: fp_glGetProgramParameterfvNV))
    fp_glGetProgramParameterfvNV(target, index, pname, params)
}
public
func glGetProgramParameterfvNV(target:GL.Enum, index:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetProgramParameterfvNV(target, index, pname, params)
}
public
func glGetProgramParameterfvNV(_ target:GL.Enum, _ index:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetProgramParameterfvNV(target, index, pname, params)
}

var fp_glGetProgramPipelineInfoLog:@convention(c) (GL.UInt, GL.Size, UnsafeMutablePointer<GL.Size>?, UnsafeMutablePointer<GL.Char>?) -> () = load_glGetProgramPipelineInfoLog
func load_glGetProgramPipelineInfoLog(pipeline:GL.UInt, bufSize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, infoLog:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetProgramPipelineInfoLog = unsafeBitCast(get_fp("glGetProgramPipelineInfoLog", support: [ss359, ss367, ss80]), to: Swift.type(of: fp_glGetProgramPipelineInfoLog))
    fp_glGetProgramPipelineInfoLog(pipeline, bufSize, length, infoLog)
}
public
func glGetProgramPipelineInfoLog(pipeline:GL.UInt, bufSize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, infoLog:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetProgramPipelineInfoLog(pipeline, bufSize, length, infoLog)
}
public
func glGetProgramPipelineInfoLog(_ pipeline:GL.UInt, _ bufSize:GL.Size, _ length:UnsafeMutablePointer<GL.Size>?, _ infoLog:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetProgramPipelineInfoLog(pipeline, bufSize, length, infoLog)
}

var fp_glGetProgramPipelineInfoLogEXT:@convention(c) (GL.UInt, GL.Size, UnsafeMutablePointer<GL.Size>?, UnsafeMutablePointer<GL.Char>?) -> () = load_glGetProgramPipelineInfoLogEXT
func load_glGetProgramPipelineInfoLogEXT(pipeline:GL.UInt, bufSize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, infoLog:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetProgramPipelineInfoLogEXT = unsafeBitCast(get_fp("glGetProgramPipelineInfoLogEXT", support: [ss182]), to: Swift.type(of: fp_glGetProgramPipelineInfoLogEXT))
    fp_glGetProgramPipelineInfoLogEXT(pipeline, bufSize, length, infoLog)
}
public
func glGetProgramPipelineInfoLogEXT(pipeline:GL.UInt, bufSize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, infoLog:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetProgramPipelineInfoLogEXT(pipeline, bufSize, length, infoLog)
}
public
func glGetProgramPipelineInfoLogEXT(_ pipeline:GL.UInt, _ bufSize:GL.Size, _ length:UnsafeMutablePointer<GL.Size>?, _ infoLog:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetProgramPipelineInfoLogEXT(pipeline, bufSize, length, infoLog)
}

var fp_glGetProgramPipelineiv:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetProgramPipelineiv
func load_glGetProgramPipelineiv(pipeline:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetProgramPipelineiv = unsafeBitCast(get_fp("glGetProgramPipelineiv", support: [ss359, ss367, ss80]), to: Swift.type(of: fp_glGetProgramPipelineiv))
    fp_glGetProgramPipelineiv(pipeline, pname, params)
}
public
func glGetProgramPipelineiv(pipeline:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetProgramPipelineiv(pipeline, pname, params)
}
public
func glGetProgramPipelineiv(_ pipeline:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetProgramPipelineiv(pipeline, pname, params)
}

var fp_glGetProgramPipelineivEXT:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetProgramPipelineivEXT
func load_glGetProgramPipelineivEXT(pipeline:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetProgramPipelineivEXT = unsafeBitCast(get_fp("glGetProgramPipelineivEXT", support: [ss182]), to: Swift.type(of: fp_glGetProgramPipelineivEXT))
    fp_glGetProgramPipelineivEXT(pipeline, pname, params)
}
public
func glGetProgramPipelineivEXT(pipeline:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetProgramPipelineivEXT(pipeline, pname, params)
}
public
func glGetProgramPipelineivEXT(_ pipeline:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetProgramPipelineivEXT(pipeline, pname, params)
}

var fp_glGetProgramResourceIndex:@convention(c) (GL.UInt, GL.Enum, UnsafePointer<GL.Char>?) -> GL.UInt = load_glGetProgramResourceIndex
func load_glGetProgramResourceIndex(program:GL.UInt, programInterface:GL.Enum, name:UnsafePointer<GL.Char>?) -> GL.UInt
{
    fp_glGetProgramResourceIndex = unsafeBitCast(get_fp("glGetProgramResourceIndex", support: [ss361, ss367, ss74]), to: Swift.type(of: fp_glGetProgramResourceIndex))
    return fp_glGetProgramResourceIndex(program, programInterface, name)
}
public
func glGetProgramResourceIndex(program:GL.UInt, programInterface:GL.Enum, name:UnsafePointer<GL.Char>?) -> GL.UInt
{
    return fp_glGetProgramResourceIndex(program, programInterface, name)
}
public
func glGetProgramResourceIndex(_ program:GL.UInt, _ programInterface:GL.Enum, _ name:UnsafePointer<GL.Char>?) -> GL.UInt
{
    return fp_glGetProgramResourceIndex(program, programInterface, name)
}

var fp_glGetProgramResourceLocation:@convention(c) (GL.UInt, GL.Enum, UnsafePointer<GL.Char>?) -> GL.Int = load_glGetProgramResourceLocation
func load_glGetProgramResourceLocation(program:GL.UInt, programInterface:GL.Enum, name:UnsafePointer<GL.Char>?) -> GL.Int
{
    fp_glGetProgramResourceLocation = unsafeBitCast(get_fp("glGetProgramResourceLocation", support: [ss361, ss367, ss74]), to: Swift.type(of: fp_glGetProgramResourceLocation))
    return fp_glGetProgramResourceLocation(program, programInterface, name)
}
public
func glGetProgramResourceLocation(program:GL.UInt, programInterface:GL.Enum, name:UnsafePointer<GL.Char>?) -> GL.Int
{
    return fp_glGetProgramResourceLocation(program, programInterface, name)
}
public
func glGetProgramResourceLocation(_ program:GL.UInt, _ programInterface:GL.Enum, _ name:UnsafePointer<GL.Char>?) -> GL.Int
{
    return fp_glGetProgramResourceLocation(program, programInterface, name)
}

var fp_glGetProgramResourceLocationIndex:@convention(c) (GL.UInt, GL.Enum, UnsafePointer<GL.Char>?) -> GL.Int = load_glGetProgramResourceLocationIndex
func load_glGetProgramResourceLocationIndex(program:GL.UInt, programInterface:GL.Enum, name:UnsafePointer<GL.Char>?) -> GL.Int
{
    fp_glGetProgramResourceLocationIndex = unsafeBitCast(get_fp("glGetProgramResourceLocationIndex", support: [ss361, ss74]), to: Swift.type(of: fp_glGetProgramResourceLocationIndex))
    return fp_glGetProgramResourceLocationIndex(program, programInterface, name)
}
public
func glGetProgramResourceLocationIndex(program:GL.UInt, programInterface:GL.Enum, name:UnsafePointer<GL.Char>?) -> GL.Int
{
    return fp_glGetProgramResourceLocationIndex(program, programInterface, name)
}
public
func glGetProgramResourceLocationIndex(_ program:GL.UInt, _ programInterface:GL.Enum, _ name:UnsafePointer<GL.Char>?) -> GL.Int
{
    return fp_glGetProgramResourceLocationIndex(program, programInterface, name)
}

var fp_glGetProgramResourceLocationIndexEXT:@convention(c) (GL.UInt, GL.Enum, UnsafePointer<GL.Char>?) -> GL.Int = load_glGetProgramResourceLocationIndexEXT
func load_glGetProgramResourceLocationIndexEXT(program:GL.UInt, programInterface:GL.Enum, name:UnsafePointer<GL.Char>?) -> GL.Int
{
    fp_glGetProgramResourceLocationIndexEXT = unsafeBitCast(get_fp("glGetProgramResourceLocationIndexEXT", support: [ss129]), to: Swift.type(of: fp_glGetProgramResourceLocationIndexEXT))
    return fp_glGetProgramResourceLocationIndexEXT(program, programInterface, name)
}
public
func glGetProgramResourceLocationIndexEXT(program:GL.UInt, programInterface:GL.Enum, name:UnsafePointer<GL.Char>?) -> GL.Int
{
    return fp_glGetProgramResourceLocationIndexEXT(program, programInterface, name)
}
public
func glGetProgramResourceLocationIndexEXT(_ program:GL.UInt, _ programInterface:GL.Enum, _ name:UnsafePointer<GL.Char>?) -> GL.Int
{
    return fp_glGetProgramResourceLocationIndexEXT(program, programInterface, name)
}

var fp_glGetProgramResourceName:@convention(c) (GL.UInt, GL.Enum, GL.UInt, GL.Size, UnsafeMutablePointer<GL.Size>?, UnsafeMutablePointer<GL.Char>?) -> () = load_glGetProgramResourceName
func load_glGetProgramResourceName(program:GL.UInt, programInterface:GL.Enum, index:GL.UInt, bufSize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, name:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetProgramResourceName = unsafeBitCast(get_fp("glGetProgramResourceName", support: [ss361, ss367, ss74]), to: Swift.type(of: fp_glGetProgramResourceName))
    fp_glGetProgramResourceName(program, programInterface, index, bufSize, length, name)
}
public
func glGetProgramResourceName(program:GL.UInt, programInterface:GL.Enum, index:GL.UInt, bufSize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, name:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetProgramResourceName(program, programInterface, index, bufSize, length, name)
}
public
func glGetProgramResourceName(_ program:GL.UInt, _ programInterface:GL.Enum, _ index:GL.UInt, _ bufSize:GL.Size, _ length:UnsafeMutablePointer<GL.Size>?, _ name:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetProgramResourceName(program, programInterface, index, bufSize, length, name)
}

var fp_glGetProgramResourcefvNV:@convention(c) (GL.UInt, GL.Enum, GL.UInt, GL.Size, UnsafePointer<GL.Enum>?, GL.Size, UnsafeMutablePointer<GL.Size>?, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetProgramResourcefvNV
func load_glGetProgramResourcefvNV(program:GL.UInt, programInterface:GL.Enum, index:GL.UInt, propCount:GL.Size, props:UnsafePointer<GL.Enum>?, bufSize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetProgramResourcefvNV = unsafeBitCast(get_fp("glGetProgramResourcefvNV", support: [ss259]), to: Swift.type(of: fp_glGetProgramResourcefvNV))
    fp_glGetProgramResourcefvNV(program, programInterface, index, propCount, props, bufSize, length, params)
}
public
func glGetProgramResourcefvNV(program:GL.UInt, programInterface:GL.Enum, index:GL.UInt, propCount:GL.Size, props:UnsafePointer<GL.Enum>?, bufSize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetProgramResourcefvNV(program, programInterface, index, propCount, props, bufSize, length, params)
}
public
func glGetProgramResourcefvNV(_ program:GL.UInt, _ programInterface:GL.Enum, _ index:GL.UInt, _ propCount:GL.Size, _ props:UnsafePointer<GL.Enum>?, _ bufSize:GL.Size, _ length:UnsafeMutablePointer<GL.Size>?, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetProgramResourcefvNV(program, programInterface, index, propCount, props, bufSize, length, params)
}

var fp_glGetProgramResourceiv:@convention(c) (GL.UInt, GL.Enum, GL.UInt, GL.Size, UnsafePointer<GL.Enum>?, GL.Size, UnsafeMutablePointer<GL.Size>?, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetProgramResourceiv
func load_glGetProgramResourceiv(program:GL.UInt, programInterface:GL.Enum, index:GL.UInt, propCount:GL.Size, props:UnsafePointer<GL.Enum>?, bufSize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetProgramResourceiv = unsafeBitCast(get_fp("glGetProgramResourceiv", support: [ss361, ss367, ss74]), to: Swift.type(of: fp_glGetProgramResourceiv))
    fp_glGetProgramResourceiv(program, programInterface, index, propCount, props, bufSize, length, params)
}
public
func glGetProgramResourceiv(program:GL.UInt, programInterface:GL.Enum, index:GL.UInt, propCount:GL.Size, props:UnsafePointer<GL.Enum>?, bufSize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetProgramResourceiv(program, programInterface, index, propCount, props, bufSize, length, params)
}
public
func glGetProgramResourceiv(_ program:GL.UInt, _ programInterface:GL.Enum, _ index:GL.UInt, _ propCount:GL.Size, _ props:UnsafePointer<GL.Enum>?, _ bufSize:GL.Size, _ length:UnsafeMutablePointer<GL.Size>?, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetProgramResourceiv(program, programInterface, index, propCount, props, bufSize, length, params)
}

var fp_glGetProgramStageiv:@convention(c) (GL.UInt, GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetProgramStageiv
func load_glGetProgramStageiv(program:GL.UInt, shadertype:GL.Enum, pname:GL.Enum, values:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetProgramStageiv = unsafeBitCast(get_fp("glGetProgramStageiv", support: [ss358, ss85]), to: Swift.type(of: fp_glGetProgramStageiv))
    fp_glGetProgramStageiv(program, shadertype, pname, values)
}
public
func glGetProgramStageiv(program:GL.UInt, shadertype:GL.Enum, pname:GL.Enum, values:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetProgramStageiv(program, shadertype, pname, values)
}
public
func glGetProgramStageiv(_ program:GL.UInt, _ shadertype:GL.Enum, _ pname:GL.Enum, _ values:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetProgramStageiv(program, shadertype, pname, values)
}

var fp_glGetProgramStringARB:@convention(c) (GL.Enum, GL.Enum, UnsafeMutableRawPointer?) -> () = load_glGetProgramStringARB
func load_glGetProgramStringARB(target:GL.Enum, pname:GL.Enum, string:UnsafeMutableRawPointer?)
{
    fp_glGetProgramStringARB = unsafeBitCast(get_fp("glGetProgramStringARB", support: [ss51, ss110]), to: Swift.type(of: fp_glGetProgramStringARB))
    fp_glGetProgramStringARB(target, pname, string)
}
public
func glGetProgramStringARB(target:GL.Enum, pname:GL.Enum, string:UnsafeMutableRawPointer?)
{
    fp_glGetProgramStringARB(target, pname, string)
}
public
func glGetProgramStringARB(_ target:GL.Enum, _ pname:GL.Enum, _ string:UnsafeMutableRawPointer?)
{
    fp_glGetProgramStringARB(target, pname, string)
}

var fp_glGetProgramStringNV:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.UByte>?) -> () = load_glGetProgramStringNV
func load_glGetProgramStringNV(id:GL.UInt, pname:GL.Enum, program:UnsafeMutablePointer<GL.UByte>?)
{
    fp_glGetProgramStringNV = unsafeBitCast(get_fp("glGetProgramStringNV", support: [ss278]), to: Swift.type(of: fp_glGetProgramStringNV))
    fp_glGetProgramStringNV(id, pname, program)
}
public
func glGetProgramStringNV(id:GL.UInt, pname:GL.Enum, program:UnsafeMutablePointer<GL.UByte>?)
{
    fp_glGetProgramStringNV(id, pname, program)
}
public
func glGetProgramStringNV(_ id:GL.UInt, _ pname:GL.Enum, _ program:UnsafeMutablePointer<GL.UByte>?)
{
    fp_glGetProgramStringNV(id, pname, program)
}

var fp_glGetProgramSubroutineParameteruivNV:@convention(c) (GL.Enum, GL.UInt, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGetProgramSubroutineParameteruivNV
func load_glGetProgramSubroutineParameteruivNV(target:GL.Enum, index:GL.UInt, param:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetProgramSubroutineParameteruivNV = unsafeBitCast(get_fp("glGetProgramSubroutineParameteruivNV", support: [ss251]), to: Swift.type(of: fp_glGetProgramSubroutineParameteruivNV))
    fp_glGetProgramSubroutineParameteruivNV(target, index, param)
}
public
func glGetProgramSubroutineParameteruivNV(target:GL.Enum, index:GL.UInt, param:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetProgramSubroutineParameteruivNV(target, index, param)
}
public
func glGetProgramSubroutineParameteruivNV(_ target:GL.Enum, _ index:GL.UInt, _ param:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetProgramSubroutineParameteruivNV(target, index, param)
}

var fp_glGetProgramiv:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetProgramiv
func load_glGetProgramiv(program:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetProgramiv = unsafeBitCast(get_fp("glGetProgramiv", support: [ss352, ss365]), to: Swift.type(of: fp_glGetProgramiv))
    fp_glGetProgramiv(program, pname, params)
}
public
func glGetProgramiv(program:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetProgramiv(program, pname, params)
}
public
func glGetProgramiv(_ program:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetProgramiv(program, pname, params)
}

var fp_glGetProgramivARB:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetProgramivARB
func load_glGetProgramivARB(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetProgramivARB = unsafeBitCast(get_fp("glGetProgramivARB", support: [ss51, ss110]), to: Swift.type(of: fp_glGetProgramivARB))
    fp_glGetProgramivARB(target, pname, params)
}
public
func glGetProgramivARB(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetProgramivARB(target, pname, params)
}
public
func glGetProgramivARB(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetProgramivARB(target, pname, params)
}

var fp_glGetProgramivNV:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetProgramivNV
func load_glGetProgramivNV(id:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetProgramivNV = unsafeBitCast(get_fp("glGetProgramivNV", support: [ss278]), to: Swift.type(of: fp_glGetProgramivNV))
    fp_glGetProgramivNV(id, pname, params)
}
public
func glGetProgramivNV(id:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetProgramivNV(id, pname, params)
}
public
func glGetProgramivNV(_ id:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetProgramivNV(id, pname, params)
}

var fp_glGetQueryBufferObjecti64v:@convention(c) (GL.UInt, GL.UInt, GL.Enum, GL.IntPointer) -> () = load_glGetQueryBufferObjecti64v
func load_glGetQueryBufferObjecti64v(id:GL.UInt, buffer:GL.UInt, pname:GL.Enum, offset:GL.IntPointer)
{
    fp_glGetQueryBufferObjecti64v = unsafeBitCast(get_fp("glGetQueryBufferObjecti64v", support: [ss363, ss42]), to: Swift.type(of: fp_glGetQueryBufferObjecti64v))
    fp_glGetQueryBufferObjecti64v(id, buffer, pname, offset)
}
public
func glGetQueryBufferObjecti64v(id:GL.UInt, buffer:GL.UInt, pname:GL.Enum, offset:GL.IntPointer)
{
    fp_glGetQueryBufferObjecti64v(id, buffer, pname, offset)
}
public
func glGetQueryBufferObjecti64v(_ id:GL.UInt, _ buffer:GL.UInt, _ pname:GL.Enum, _ offset:GL.IntPointer)
{
    fp_glGetQueryBufferObjecti64v(id, buffer, pname, offset)
}

var fp_glGetQueryBufferObjectiv:@convention(c) (GL.UInt, GL.UInt, GL.Enum, GL.IntPointer) -> () = load_glGetQueryBufferObjectiv
func load_glGetQueryBufferObjectiv(id:GL.UInt, buffer:GL.UInt, pname:GL.Enum, offset:GL.IntPointer)
{
    fp_glGetQueryBufferObjectiv = unsafeBitCast(get_fp("glGetQueryBufferObjectiv", support: [ss363, ss42]), to: Swift.type(of: fp_glGetQueryBufferObjectiv))
    fp_glGetQueryBufferObjectiv(id, buffer, pname, offset)
}
public
func glGetQueryBufferObjectiv(id:GL.UInt, buffer:GL.UInt, pname:GL.Enum, offset:GL.IntPointer)
{
    fp_glGetQueryBufferObjectiv(id, buffer, pname, offset)
}
public
func glGetQueryBufferObjectiv(_ id:GL.UInt, _ buffer:GL.UInt, _ pname:GL.Enum, _ offset:GL.IntPointer)
{
    fp_glGetQueryBufferObjectiv(id, buffer, pname, offset)
}

var fp_glGetQueryBufferObjectui64v:@convention(c) (GL.UInt, GL.UInt, GL.Enum, GL.IntPointer) -> () = load_glGetQueryBufferObjectui64v
func load_glGetQueryBufferObjectui64v(id:GL.UInt, buffer:GL.UInt, pname:GL.Enum, offset:GL.IntPointer)
{
    fp_glGetQueryBufferObjectui64v = unsafeBitCast(get_fp("glGetQueryBufferObjectui64v", support: [ss363, ss42]), to: Swift.type(of: fp_glGetQueryBufferObjectui64v))
    fp_glGetQueryBufferObjectui64v(id, buffer, pname, offset)
}
public
func glGetQueryBufferObjectui64v(id:GL.UInt, buffer:GL.UInt, pname:GL.Enum, offset:GL.IntPointer)
{
    fp_glGetQueryBufferObjectui64v(id, buffer, pname, offset)
}
public
func glGetQueryBufferObjectui64v(_ id:GL.UInt, _ buffer:GL.UInt, _ pname:GL.Enum, _ offset:GL.IntPointer)
{
    fp_glGetQueryBufferObjectui64v(id, buffer, pname, offset)
}

var fp_glGetQueryBufferObjectuiv:@convention(c) (GL.UInt, GL.UInt, GL.Enum, GL.IntPointer) -> () = load_glGetQueryBufferObjectuiv
func load_glGetQueryBufferObjectuiv(id:GL.UInt, buffer:GL.UInt, pname:GL.Enum, offset:GL.IntPointer)
{
    fp_glGetQueryBufferObjectuiv = unsafeBitCast(get_fp("glGetQueryBufferObjectuiv", support: [ss363, ss42]), to: Swift.type(of: fp_glGetQueryBufferObjectuiv))
    fp_glGetQueryBufferObjectuiv(id, buffer, pname, offset)
}
public
func glGetQueryBufferObjectuiv(id:GL.UInt, buffer:GL.UInt, pname:GL.Enum, offset:GL.IntPointer)
{
    fp_glGetQueryBufferObjectuiv(id, buffer, pname, offset)
}
public
func glGetQueryBufferObjectuiv(_ id:GL.UInt, _ buffer:GL.UInt, _ pname:GL.Enum, _ offset:GL.IntPointer)
{
    fp_glGetQueryBufferObjectuiv(id, buffer, pname, offset)
}

var fp_glGetQueryIndexediv:@convention(c) (GL.Enum, GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetQueryIndexediv
func load_glGetQueryIndexediv(target:GL.Enum, index:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetQueryIndexediv = unsafeBitCast(get_fp("glGetQueryIndexediv", support: [ss358, ss102]), to: Swift.type(of: fp_glGetQueryIndexediv))
    fp_glGetQueryIndexediv(target, index, pname, params)
}
public
func glGetQueryIndexediv(target:GL.Enum, index:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetQueryIndexediv(target, index, pname, params)
}
public
func glGetQueryIndexediv(_ target:GL.Enum, _ index:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetQueryIndexediv(target, index, pname, params)
}

var fp_glGetQueryObjecti64v:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int64>?) -> () = load_glGetQueryObjecti64v
func load_glGetQueryObjecti64v(id:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int64>?)
{
    fp_glGetQueryObjecti64v = unsafeBitCast(get_fp("glGetQueryObjecti64v", support: [ss357, ss99]), to: Swift.type(of: fp_glGetQueryObjecti64v))
    fp_glGetQueryObjecti64v(id, pname, params)
}
public
func glGetQueryObjecti64v(id:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int64>?)
{
    fp_glGetQueryObjecti64v(id, pname, params)
}
public
func glGetQueryObjecti64v(_ id:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int64>?)
{
    fp_glGetQueryObjecti64v(id, pname, params)
}

var fp_glGetQueryObjecti64vEXT:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int64>?) -> () = load_glGetQueryObjecti64vEXT
func load_glGetQueryObjecti64vEXT(id:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int64>?)
{
    fp_glGetQueryObjecti64vEXT = unsafeBitCast(get_fp("glGetQueryObjecti64vEXT", support: [ss145, ss200]), to: Swift.type(of: fp_glGetQueryObjecti64vEXT))
    fp_glGetQueryObjecti64vEXT(id, pname, params)
}
public
func glGetQueryObjecti64vEXT(id:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int64>?)
{
    fp_glGetQueryObjecti64vEXT(id, pname, params)
}
public
func glGetQueryObjecti64vEXT(_ id:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int64>?)
{
    fp_glGetQueryObjecti64vEXT(id, pname, params)
}

var fp_glGetQueryObjectiv:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetQueryObjectiv
func load_glGetQueryObjectiv(id:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetQueryObjectiv = unsafeBitCast(get_fp("glGetQueryObjectiv", support: [ss351]), to: Swift.type(of: fp_glGetQueryObjectiv))
    fp_glGetQueryObjectiv(id, pname, params)
}
public
func glGetQueryObjectiv(id:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetQueryObjectiv(id, pname, params)
}
public
func glGetQueryObjectiv(_ id:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetQueryObjectiv(id, pname, params)
}

var fp_glGetQueryObjectivARB:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetQueryObjectivARB
func load_glGetQueryObjectivARB(id:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetQueryObjectivARB = unsafeBitCast(get_fp("glGetQueryObjectivARB", support: [ss71]), to: Swift.type(of: fp_glGetQueryObjectivARB))
    fp_glGetQueryObjectivARB(id, pname, params)
}
public
func glGetQueryObjectivARB(id:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetQueryObjectivARB(id, pname, params)
}
public
func glGetQueryObjectivARB(_ id:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetQueryObjectivARB(id, pname, params)
}

var fp_glGetQueryObjectivEXT:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetQueryObjectivEXT
func load_glGetQueryObjectivEXT(id:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetQueryObjectivEXT = unsafeBitCast(get_fp("glGetQueryObjectivEXT", support: [ss145]), to: Swift.type(of: fp_glGetQueryObjectivEXT))
    fp_glGetQueryObjectivEXT(id, pname, params)
}
public
func glGetQueryObjectivEXT(id:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetQueryObjectivEXT(id, pname, params)
}
public
func glGetQueryObjectivEXT(_ id:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetQueryObjectivEXT(id, pname, params)
}

var fp_glGetQueryObjectui64v:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.UInt64>?) -> () = load_glGetQueryObjectui64v
func load_glGetQueryObjectui64v(id:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.UInt64>?)
{
    fp_glGetQueryObjectui64v = unsafeBitCast(get_fp("glGetQueryObjectui64v", support: [ss357, ss99]), to: Swift.type(of: fp_glGetQueryObjectui64v))
    fp_glGetQueryObjectui64v(id, pname, params)
}
public
func glGetQueryObjectui64v(id:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.UInt64>?)
{
    fp_glGetQueryObjectui64v(id, pname, params)
}
public
func glGetQueryObjectui64v(_ id:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.UInt64>?)
{
    fp_glGetQueryObjectui64v(id, pname, params)
}

var fp_glGetQueryObjectui64vEXT:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.UInt64>?) -> () = load_glGetQueryObjectui64vEXT
func load_glGetQueryObjectui64vEXT(id:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.UInt64>?)
{
    fp_glGetQueryObjectui64vEXT = unsafeBitCast(get_fp("glGetQueryObjectui64vEXT", support: [ss145, ss200]), to: Swift.type(of: fp_glGetQueryObjectui64vEXT))
    fp_glGetQueryObjectui64vEXT(id, pname, params)
}
public
func glGetQueryObjectui64vEXT(id:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.UInt64>?)
{
    fp_glGetQueryObjectui64vEXT(id, pname, params)
}
public
func glGetQueryObjectui64vEXT(_ id:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.UInt64>?)
{
    fp_glGetQueryObjectui64vEXT(id, pname, params)
}

var fp_glGetQueryObjectuiv:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGetQueryObjectuiv
func load_glGetQueryObjectuiv(id:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetQueryObjectuiv = unsafeBitCast(get_fp("glGetQueryObjectuiv", support: [ss351, ss366]), to: Swift.type(of: fp_glGetQueryObjectuiv))
    fp_glGetQueryObjectuiv(id, pname, params)
}
public
func glGetQueryObjectuiv(id:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetQueryObjectuiv(id, pname, params)
}
public
func glGetQueryObjectuiv(_ id:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetQueryObjectuiv(id, pname, params)
}

var fp_glGetQueryObjectuivARB:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGetQueryObjectuivARB
func load_glGetQueryObjectuivARB(id:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetQueryObjectuivARB = unsafeBitCast(get_fp("glGetQueryObjectuivARB", support: [ss71]), to: Swift.type(of: fp_glGetQueryObjectuivARB))
    fp_glGetQueryObjectuivARB(id, pname, params)
}
public
func glGetQueryObjectuivARB(id:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetQueryObjectuivARB(id, pname, params)
}
public
func glGetQueryObjectuivARB(_ id:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetQueryObjectuivARB(id, pname, params)
}

var fp_glGetQueryObjectuivEXT:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGetQueryObjectuivEXT
func load_glGetQueryObjectuivEXT(id:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetQueryObjectuivEXT = unsafeBitCast(get_fp("glGetQueryObjectuivEXT", support: [ss145, ss171]), to: Swift.type(of: fp_glGetQueryObjectuivEXT))
    fp_glGetQueryObjectuivEXT(id, pname, params)
}
public
func glGetQueryObjectuivEXT(id:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetQueryObjectuivEXT(id, pname, params)
}
public
func glGetQueryObjectuivEXT(_ id:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetQueryObjectuivEXT(id, pname, params)
}

var fp_glGetQueryiv:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetQueryiv
func load_glGetQueryiv(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetQueryiv = unsafeBitCast(get_fp("glGetQueryiv", support: [ss351, ss366]), to: Swift.type(of: fp_glGetQueryiv))
    fp_glGetQueryiv(target, pname, params)
}
public
func glGetQueryiv(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetQueryiv(target, pname, params)
}
public
func glGetQueryiv(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetQueryiv(target, pname, params)
}

var fp_glGetQueryivARB:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetQueryivARB
func load_glGetQueryivARB(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetQueryivARB = unsafeBitCast(get_fp("glGetQueryivARB", support: [ss71]), to: Swift.type(of: fp_glGetQueryivARB))
    fp_glGetQueryivARB(target, pname, params)
}
public
func glGetQueryivARB(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetQueryivARB(target, pname, params)
}
public
func glGetQueryivARB(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetQueryivARB(target, pname, params)
}

var fp_glGetQueryivEXT:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetQueryivEXT
func load_glGetQueryivEXT(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetQueryivEXT = unsafeBitCast(get_fp("glGetQueryivEXT", support: [ss145, ss171]), to: Swift.type(of: fp_glGetQueryivEXT))
    fp_glGetQueryivEXT(target, pname, params)
}
public
func glGetQueryivEXT(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetQueryivEXT(target, pname, params)
}
public
func glGetQueryivEXT(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetQueryivEXT(target, pname, params)
}

var fp_glGetRenderbufferParameteriv:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetRenderbufferParameteriv
func load_glGetRenderbufferParameteriv(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetRenderbufferParameteriv = unsafeBitCast(get_fp("glGetRenderbufferParameteriv", support: [ss354, ss365, ss53]), to: Swift.type(of: fp_glGetRenderbufferParameteriv))
    fp_glGetRenderbufferParameteriv(target, pname, params)
}
public
func glGetRenderbufferParameteriv(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetRenderbufferParameteriv(target, pname, params)
}
public
func glGetRenderbufferParameteriv(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetRenderbufferParameteriv(target, pname, params)
}

var fp_glGetRenderbufferParameterivEXT:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetRenderbufferParameterivEXT
func load_glGetRenderbufferParameterivEXT(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetRenderbufferParameterivEXT = unsafeBitCast(get_fp("glGetRenderbufferParameterivEXT", support: [ss155]), to: Swift.type(of: fp_glGetRenderbufferParameterivEXT))
    fp_glGetRenderbufferParameterivEXT(target, pname, params)
}
public
func glGetRenderbufferParameterivEXT(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetRenderbufferParameterivEXT(target, pname, params)
}
public
func glGetRenderbufferParameterivEXT(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetRenderbufferParameterivEXT(target, pname, params)
}

var fp_glGetRenderbufferParameterivOES:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetRenderbufferParameterivOES
func load_glGetRenderbufferParameterivOES(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetRenderbufferParameterivOES = unsafeBitCast(get_fp("glGetRenderbufferParameterivOES", support: [ss293]), to: Swift.type(of: fp_glGetRenderbufferParameterivOES))
    fp_glGetRenderbufferParameterivOES(target, pname, params)
}
public
func glGetRenderbufferParameterivOES(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetRenderbufferParameterivOES(target, pname, params)
}
public
func glGetRenderbufferParameterivOES(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetRenderbufferParameterivOES(target, pname, params)
}

var fp_glGetSamplerParameterIiv:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetSamplerParameterIiv
func load_glGetSamplerParameterIiv(sampler:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetSamplerParameterIiv = unsafeBitCast(get_fp("glGetSamplerParameterIiv", support: [ss357, ss368, ss79]), to: Swift.type(of: fp_glGetSamplerParameterIiv))
    fp_glGetSamplerParameterIiv(sampler, pname, params)
}
public
func glGetSamplerParameterIiv(sampler:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetSamplerParameterIiv(sampler, pname, params)
}
public
func glGetSamplerParameterIiv(_ sampler:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetSamplerParameterIiv(sampler, pname, params)
}

var fp_glGetSamplerParameterIivEXT:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetSamplerParameterIivEXT
func load_glGetSamplerParameterIivEXT(sampler:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetSamplerParameterIivEXT = unsafeBitCast(get_fp("glGetSamplerParameterIivEXT", support: [ss190]), to: Swift.type(of: fp_glGetSamplerParameterIivEXT))
    fp_glGetSamplerParameterIivEXT(sampler, pname, params)
}
public
func glGetSamplerParameterIivEXT(sampler:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetSamplerParameterIivEXT(sampler, pname, params)
}
public
func glGetSamplerParameterIivEXT(_ sampler:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetSamplerParameterIivEXT(sampler, pname, params)
}

var fp_glGetSamplerParameterIivOES:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetSamplerParameterIivOES
func load_glGetSamplerParameterIivOES(sampler:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetSamplerParameterIivOES = unsafeBitCast(get_fp("glGetSamplerParameterIivOES", support: [ss305]), to: Swift.type(of: fp_glGetSamplerParameterIivOES))
    fp_glGetSamplerParameterIivOES(sampler, pname, params)
}
public
func glGetSamplerParameterIivOES(sampler:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetSamplerParameterIivOES(sampler, pname, params)
}
public
func glGetSamplerParameterIivOES(_ sampler:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetSamplerParameterIivOES(sampler, pname, params)
}

var fp_glGetSamplerParameterIuiv:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGetSamplerParameterIuiv
func load_glGetSamplerParameterIuiv(sampler:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetSamplerParameterIuiv = unsafeBitCast(get_fp("glGetSamplerParameterIuiv", support: [ss357, ss368, ss79]), to: Swift.type(of: fp_glGetSamplerParameterIuiv))
    fp_glGetSamplerParameterIuiv(sampler, pname, params)
}
public
func glGetSamplerParameterIuiv(sampler:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetSamplerParameterIuiv(sampler, pname, params)
}
public
func glGetSamplerParameterIuiv(_ sampler:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetSamplerParameterIuiv(sampler, pname, params)
}

var fp_glGetSamplerParameterIuivEXT:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGetSamplerParameterIuivEXT
func load_glGetSamplerParameterIuivEXT(sampler:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetSamplerParameterIuivEXT = unsafeBitCast(get_fp("glGetSamplerParameterIuivEXT", support: [ss190]), to: Swift.type(of: fp_glGetSamplerParameterIuivEXT))
    fp_glGetSamplerParameterIuivEXT(sampler, pname, params)
}
public
func glGetSamplerParameterIuivEXT(sampler:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetSamplerParameterIuivEXT(sampler, pname, params)
}
public
func glGetSamplerParameterIuivEXT(_ sampler:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetSamplerParameterIuivEXT(sampler, pname, params)
}

var fp_glGetSamplerParameterIuivOES:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGetSamplerParameterIuivOES
func load_glGetSamplerParameterIuivOES(sampler:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetSamplerParameterIuivOES = unsafeBitCast(get_fp("glGetSamplerParameterIuivOES", support: [ss305]), to: Swift.type(of: fp_glGetSamplerParameterIuivOES))
    fp_glGetSamplerParameterIuivOES(sampler, pname, params)
}
public
func glGetSamplerParameterIuivOES(sampler:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetSamplerParameterIuivOES(sampler, pname, params)
}
public
func glGetSamplerParameterIuivOES(_ sampler:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetSamplerParameterIuivOES(sampler, pname, params)
}

var fp_glGetSamplerParameterfv:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetSamplerParameterfv
func load_glGetSamplerParameterfv(sampler:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetSamplerParameterfv = unsafeBitCast(get_fp("glGetSamplerParameterfv", support: [ss357, ss366, ss79]), to: Swift.type(of: fp_glGetSamplerParameterfv))
    fp_glGetSamplerParameterfv(sampler, pname, params)
}
public
func glGetSamplerParameterfv(sampler:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetSamplerParameterfv(sampler, pname, params)
}
public
func glGetSamplerParameterfv(_ sampler:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetSamplerParameterfv(sampler, pname, params)
}

var fp_glGetSamplerParameteriv:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetSamplerParameteriv
func load_glGetSamplerParameteriv(sampler:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetSamplerParameteriv = unsafeBitCast(get_fp("glGetSamplerParameteriv", support: [ss357, ss366, ss79]), to: Swift.type(of: fp_glGetSamplerParameteriv))
    fp_glGetSamplerParameteriv(sampler, pname, params)
}
public
func glGetSamplerParameteriv(sampler:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetSamplerParameteriv(sampler, pname, params)
}
public
func glGetSamplerParameteriv(_ sampler:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetSamplerParameteriv(sampler, pname, params)
}

var fp_glGetSeparableFilter:@convention(c) (GL.Enum, GL.Enum, GL.Enum, UnsafeMutableRawPointer?, UnsafeMutableRawPointer?, UnsafeMutableRawPointer?) -> () = load_glGetSeparableFilter
func load_glGetSeparableFilter(target:GL.Enum, format:GL.Enum, type:GL.Enum, row:UnsafeMutableRawPointer?, column:UnsafeMutableRawPointer?, span:UnsafeMutableRawPointer?)
{
    fp_glGetSeparableFilter = unsafeBitCast(get_fp("glGetSeparableFilter", support: [ss59]), to: Swift.type(of: fp_glGetSeparableFilter))
    fp_glGetSeparableFilter(target, format, type, row, column, span)
}
public
func glGetSeparableFilter(target:GL.Enum, format:GL.Enum, type:GL.Enum, row:UnsafeMutableRawPointer?, column:UnsafeMutableRawPointer?, span:UnsafeMutableRawPointer?)
{
    fp_glGetSeparableFilter(target, format, type, row, column, span)
}
public
func glGetSeparableFilter(_ target:GL.Enum, _ format:GL.Enum, _ type:GL.Enum, _ row:UnsafeMutableRawPointer?, _ column:UnsafeMutableRawPointer?, _ span:UnsafeMutableRawPointer?)
{
    fp_glGetSeparableFilter(target, format, type, row, column, span)
}

var fp_glGetSeparableFilterEXT:@convention(c) (GL.Enum, GL.Enum, GL.Enum, UnsafeMutableRawPointer?, UnsafeMutableRawPointer?, UnsafeMutableRawPointer?) -> () = load_glGetSeparableFilterEXT
func load_glGetSeparableFilterEXT(target:GL.Enum, format:GL.Enum, type:GL.Enum, row:UnsafeMutableRawPointer?, column:UnsafeMutableRawPointer?, span:UnsafeMutableRawPointer?)
{
    fp_glGetSeparableFilterEXT = unsafeBitCast(get_fp("glGetSeparableFilterEXT", support: [ss135]), to: Swift.type(of: fp_glGetSeparableFilterEXT))
    fp_glGetSeparableFilterEXT(target, format, type, row, column, span)
}
public
func glGetSeparableFilterEXT(target:GL.Enum, format:GL.Enum, type:GL.Enum, row:UnsafeMutableRawPointer?, column:UnsafeMutableRawPointer?, span:UnsafeMutableRawPointer?)
{
    fp_glGetSeparableFilterEXT(target, format, type, row, column, span)
}
public
func glGetSeparableFilterEXT(_ target:GL.Enum, _ format:GL.Enum, _ type:GL.Enum, _ row:UnsafeMutableRawPointer?, _ column:UnsafeMutableRawPointer?, _ span:UnsafeMutableRawPointer?)
{
    fp_glGetSeparableFilterEXT(target, format, type, row, column, span)
}

var fp_glGetShaderInfoLog:@convention(c) (GL.UInt, GL.Size, UnsafeMutablePointer<GL.Size>?, UnsafeMutablePointer<GL.Char>?) -> () = load_glGetShaderInfoLog
func load_glGetShaderInfoLog(shader:GL.UInt, bufSize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, infoLog:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetShaderInfoLog = unsafeBitCast(get_fp("glGetShaderInfoLog", support: [ss352, ss365]), to: Swift.type(of: fp_glGetShaderInfoLog))
    fp_glGetShaderInfoLog(shader, bufSize, length, infoLog)
}
public
func glGetShaderInfoLog(shader:GL.UInt, bufSize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, infoLog:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetShaderInfoLog(shader, bufSize, length, infoLog)
}
public
func glGetShaderInfoLog(_ shader:GL.UInt, _ bufSize:GL.Size, _ length:UnsafeMutablePointer<GL.Size>?, _ infoLog:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetShaderInfoLog(shader, bufSize, length, infoLog)
}

var fp_glGetShaderPrecisionFormat:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Int>?, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetShaderPrecisionFormat
func load_glGetShaderPrecisionFormat(shadertype:GL.Enum, precisiontype:GL.Enum, range:UnsafeMutablePointer<GL.Int>?, precision:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetShaderPrecisionFormat = unsafeBitCast(get_fp("glGetShaderPrecisionFormat", support: [ss359, ss365, ss48]), to: Swift.type(of: fp_glGetShaderPrecisionFormat))
    fp_glGetShaderPrecisionFormat(shadertype, precisiontype, range, precision)
}
public
func glGetShaderPrecisionFormat(shadertype:GL.Enum, precisiontype:GL.Enum, range:UnsafeMutablePointer<GL.Int>?, precision:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetShaderPrecisionFormat(shadertype, precisiontype, range, precision)
}
public
func glGetShaderPrecisionFormat(_ shadertype:GL.Enum, _ precisiontype:GL.Enum, _ range:UnsafeMutablePointer<GL.Int>?, _ precision:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetShaderPrecisionFormat(shadertype, precisiontype, range, precision)
}

var fp_glGetShaderSource:@convention(c) (GL.UInt, GL.Size, UnsafeMutablePointer<GL.Size>?, UnsafeMutablePointer<GL.Char>?) -> () = load_glGetShaderSource
func load_glGetShaderSource(shader:GL.UInt, bufSize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, source:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetShaderSource = unsafeBitCast(get_fp("glGetShaderSource", support: [ss352, ss365]), to: Swift.type(of: fp_glGetShaderSource))
    fp_glGetShaderSource(shader, bufSize, length, source)
}
public
func glGetShaderSource(shader:GL.UInt, bufSize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, source:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetShaderSource(shader, bufSize, length, source)
}
public
func glGetShaderSource(_ shader:GL.UInt, _ bufSize:GL.Size, _ length:UnsafeMutablePointer<GL.Size>?, _ source:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetShaderSource(shader, bufSize, length, source)
}

var fp_glGetShaderSourceARB:@convention(c) (GL.HandleARB, GL.Size, UnsafeMutablePointer<GL.Size>?, UnsafeMutablePointer<GL.CharARB>?) -> () = load_glGetShaderSourceARB
func load_glGetShaderSourceARB(obj:GL.HandleARB, maxLength:GL.Size, length:UnsafeMutablePointer<GL.Size>?, source:UnsafeMutablePointer<GL.CharARB>?)
{
    fp_glGetShaderSourceARB = unsafeBitCast(get_fp("glGetShaderSourceARB", support: [ss83]), to: Swift.type(of: fp_glGetShaderSourceARB))
    fp_glGetShaderSourceARB(obj, maxLength, length, source)
}
public
func glGetShaderSourceARB(obj:GL.HandleARB, maxLength:GL.Size, length:UnsafeMutablePointer<GL.Size>?, source:UnsafeMutablePointer<GL.CharARB>?)
{
    fp_glGetShaderSourceARB(obj, maxLength, length, source)
}
public
func glGetShaderSourceARB(_ obj:GL.HandleARB, _ maxLength:GL.Size, _ length:UnsafeMutablePointer<GL.Size>?, _ source:UnsafeMutablePointer<GL.CharARB>?)
{
    fp_glGetShaderSourceARB(obj, maxLength, length, source)
}

var fp_glGetShaderiv:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetShaderiv
func load_glGetShaderiv(shader:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetShaderiv = unsafeBitCast(get_fp("glGetShaderiv", support: [ss352, ss365]), to: Swift.type(of: fp_glGetShaderiv))
    fp_glGetShaderiv(shader, pname, params)
}
public
func glGetShaderiv(shader:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetShaderiv(shader, pname, params)
}
public
func glGetShaderiv(_ shader:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetShaderiv(shader, pname, params)
}

var fp_glGetSharpenTexFuncSGIS:@convention(c) (GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetSharpenTexFuncSGIS
func load_glGetSharpenTexFuncSGIS(target:GL.Enum, points:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetSharpenTexFuncSGIS = unsafeBitCast(get_fp("glGetSharpenTexFuncSGIS", support: [ss325]), to: Swift.type(of: fp_glGetSharpenTexFuncSGIS))
    fp_glGetSharpenTexFuncSGIS(target, points)
}
public
func glGetSharpenTexFuncSGIS(target:GL.Enum, points:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetSharpenTexFuncSGIS(target, points)
}
public
func glGetSharpenTexFuncSGIS(_ target:GL.Enum, _ points:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetSharpenTexFuncSGIS(target, points)
}

var fp_glGetStageIndexNV:@convention(c) (GL.Enum) -> GL.UShort = load_glGetStageIndexNV
func load_glGetStageIndexNV(shadertype:GL.Enum) -> GL.UShort
{
    fp_glGetStageIndexNV = unsafeBitCast(get_fp("glGetStageIndexNV", support: [ss229]), to: Swift.type(of: fp_glGetStageIndexNV))
    return fp_glGetStageIndexNV(shadertype)
}
public
func glGetStageIndexNV(shadertype:GL.Enum) -> GL.UShort
{
    return fp_glGetStageIndexNV(shadertype)
}
public
func glGetStageIndexNV(_ shadertype:GL.Enum) -> GL.UShort
{
    return fp_glGetStageIndexNV(shadertype)
}

var fp_glGetString:@convention(c) (GL.Enum) -> UnsafeMutablePointer<UInt8>? = load_glGetString
func load_glGetString(name:GL.Enum) -> UnsafeMutablePointer<UInt8>?
{
    fp_glGetString = unsafeBitCast(get_fp("glGetString", support: [ss346, ss365]), to: Swift.type(of: fp_glGetString))
    return fp_glGetString(name)
}
public
func glGetString(name:GL.Enum) -> UnsafeMutablePointer<UInt8>?
{
    return fp_glGetString(name)
}
public
func glGetString(_ name:GL.Enum) -> UnsafeMutablePointer<UInt8>?
{
    return fp_glGetString(name)
}

var fp_glGetStringi:@convention(c) (GL.Enum, GL.UInt) -> UnsafeMutablePointer<UInt8>? = load_glGetStringi
func load_glGetStringi(name:GL.Enum, index:GL.UInt) -> UnsafeMutablePointer<UInt8>?
{
    fp_glGetStringi = unsafeBitCast(get_fp("glGetStringi", support: [ss354, ss366]), to: Swift.type(of: fp_glGetStringi))
    return fp_glGetStringi(name, index)
}
public
func glGetStringi(name:GL.Enum, index:GL.UInt) -> UnsafeMutablePointer<UInt8>?
{
    return fp_glGetStringi(name, index)
}
public
func glGetStringi(_ name:GL.Enum, _ index:GL.UInt) -> UnsafeMutablePointer<UInt8>?
{
    return fp_glGetStringi(name, index)
}

var fp_glGetSubroutineIndex:@convention(c) (GL.UInt, GL.Enum, UnsafePointer<GL.Char>?) -> GL.UInt = load_glGetSubroutineIndex
func load_glGetSubroutineIndex(program:GL.UInt, shadertype:GL.Enum, name:UnsafePointer<GL.Char>?) -> GL.UInt
{
    fp_glGetSubroutineIndex = unsafeBitCast(get_fp("glGetSubroutineIndex", support: [ss358, ss85]), to: Swift.type(of: fp_glGetSubroutineIndex))
    return fp_glGetSubroutineIndex(program, shadertype, name)
}
public
func glGetSubroutineIndex(program:GL.UInt, shadertype:GL.Enum, name:UnsafePointer<GL.Char>?) -> GL.UInt
{
    return fp_glGetSubroutineIndex(program, shadertype, name)
}
public
func glGetSubroutineIndex(_ program:GL.UInt, _ shadertype:GL.Enum, _ name:UnsafePointer<GL.Char>?) -> GL.UInt
{
    return fp_glGetSubroutineIndex(program, shadertype, name)
}

var fp_glGetSubroutineUniformLocation:@convention(c) (GL.UInt, GL.Enum, UnsafePointer<GL.Char>?) -> GL.Int = load_glGetSubroutineUniformLocation
func load_glGetSubroutineUniformLocation(program:GL.UInt, shadertype:GL.Enum, name:UnsafePointer<GL.Char>?) -> GL.Int
{
    fp_glGetSubroutineUniformLocation = unsafeBitCast(get_fp("glGetSubroutineUniformLocation", support: [ss358, ss85]), to: Swift.type(of: fp_glGetSubroutineUniformLocation))
    return fp_glGetSubroutineUniformLocation(program, shadertype, name)
}
public
func glGetSubroutineUniformLocation(program:GL.UInt, shadertype:GL.Enum, name:UnsafePointer<GL.Char>?) -> GL.Int
{
    return fp_glGetSubroutineUniformLocation(program, shadertype, name)
}
public
func glGetSubroutineUniformLocation(_ program:GL.UInt, _ shadertype:GL.Enum, _ name:UnsafePointer<GL.Char>?) -> GL.Int
{
    return fp_glGetSubroutineUniformLocation(program, shadertype, name)
}

var fp_glGetSynciv:@convention(c) (GL.Sync, GL.Enum, GL.Size, UnsafeMutablePointer<GL.Size>?, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetSynciv
func load_glGetSynciv(sync:GL.Sync, pname:GL.Enum, bufSize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, values:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetSynciv = unsafeBitCast(get_fp("glGetSynciv", support: [ss356, ss366, ss89]), to: Swift.type(of: fp_glGetSynciv))
    fp_glGetSynciv(sync, pname, bufSize, length, values)
}
public
func glGetSynciv(sync:GL.Sync, pname:GL.Enum, bufSize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, values:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetSynciv(sync, pname, bufSize, length, values)
}
public
func glGetSynciv(_ sync:GL.Sync, _ pname:GL.Enum, _ bufSize:GL.Size, _ length:UnsafeMutablePointer<GL.Size>?, _ values:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetSynciv(sync, pname, bufSize, length, values)
}

var fp_glGetSyncivAPPLE:@convention(c) (GL.Sync, GL.Enum, GL.Size, UnsafeMutablePointer<GL.Size>?, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetSyncivAPPLE
func load_glGetSyncivAPPLE(sync:GL.Sync, pname:GL.Enum, bufSize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, values:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetSyncivAPPLE = unsafeBitCast(get_fp("glGetSyncivAPPLE", support: [ss23]), to: Swift.type(of: fp_glGetSyncivAPPLE))
    fp_glGetSyncivAPPLE(sync, pname, bufSize, length, values)
}
public
func glGetSyncivAPPLE(sync:GL.Sync, pname:GL.Enum, bufSize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, values:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetSyncivAPPLE(sync, pname, bufSize, length, values)
}
public
func glGetSyncivAPPLE(_ sync:GL.Sync, _ pname:GL.Enum, _ bufSize:GL.Size, _ length:UnsafeMutablePointer<GL.Size>?, _ values:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetSyncivAPPLE(sync, pname, bufSize, length, values)
}

var fp_glGetTexBumpParameterfvATI:@convention(c) (GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetTexBumpParameterfvATI
func load_glGetTexBumpParameterfvATI(pname:GL.Enum, param:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetTexBumpParameterfvATI = unsafeBitCast(get_fp("glGetTexBumpParameterfvATI", support: [ss117]), to: Swift.type(of: fp_glGetTexBumpParameterfvATI))
    fp_glGetTexBumpParameterfvATI(pname, param)
}
public
func glGetTexBumpParameterfvATI(pname:GL.Enum, param:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetTexBumpParameterfvATI(pname, param)
}
public
func glGetTexBumpParameterfvATI(_ pname:GL.Enum, _ param:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetTexBumpParameterfvATI(pname, param)
}

var fp_glGetTexBumpParameterivATI:@convention(c) (GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetTexBumpParameterivATI
func load_glGetTexBumpParameterivATI(pname:GL.Enum, param:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTexBumpParameterivATI = unsafeBitCast(get_fp("glGetTexBumpParameterivATI", support: [ss117]), to: Swift.type(of: fp_glGetTexBumpParameterivATI))
    fp_glGetTexBumpParameterivATI(pname, param)
}
public
func glGetTexBumpParameterivATI(pname:GL.Enum, param:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTexBumpParameterivATI(pname, param)
}
public
func glGetTexBumpParameterivATI(_ pname:GL.Enum, _ param:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTexBumpParameterivATI(pname, param)
}

var fp_glGetTexEnvfv:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetTexEnvfv
func load_glGetTexEnvfv(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetTexEnvfv = unsafeBitCast(get_fp("glGetTexEnvfv", support: [ss346, ss369, ss364]), to: Swift.type(of: fp_glGetTexEnvfv))
    fp_glGetTexEnvfv(target, pname, params)
}
public
func glGetTexEnvfv(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetTexEnvfv(target, pname, params)
}
public
func glGetTexEnvfv(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetTexEnvfv(target, pname, params)
}

var fp_glGetTexEnviv:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetTexEnviv
func load_glGetTexEnviv(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTexEnviv = unsafeBitCast(get_fp("glGetTexEnviv", support: [ss346, ss369, ss364]), to: Swift.type(of: fp_glGetTexEnviv))
    fp_glGetTexEnviv(target, pname, params)
}
public
func glGetTexEnviv(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTexEnviv(target, pname, params)
}
public
func glGetTexEnviv(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTexEnviv(target, pname, params)
}

var fp_glGetTexEnvxv:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Fixed>?) -> () = load_glGetTexEnvxv
func load_glGetTexEnvxv(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetTexEnvxv = unsafeBitCast(get_fp("glGetTexEnvxv", support: [ss364]), to: Swift.type(of: fp_glGetTexEnvxv))
    fp_glGetTexEnvxv(target, pname, params)
}
public
func glGetTexEnvxv(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetTexEnvxv(target, pname, params)
}
public
func glGetTexEnvxv(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetTexEnvxv(target, pname, params)
}

var fp_glGetTexEnvxvOES:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Fixed>?) -> () = load_glGetTexEnvxvOES
func load_glGetTexEnvxvOES(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetTexEnvxvOES = unsafeBitCast(get_fp("glGetTexEnvxvOES", support: [ss292]), to: Swift.type(of: fp_glGetTexEnvxvOES))
    fp_glGetTexEnvxvOES(target, pname, params)
}
public
func glGetTexEnvxvOES(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetTexEnvxvOES(target, pname, params)
}
public
func glGetTexEnvxvOES(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetTexEnvxvOES(target, pname, params)
}

var fp_glGetTexFilterFuncSGIS:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetTexFilterFuncSGIS
func load_glGetTexFilterFuncSGIS(target:GL.Enum, filter:GL.Enum, weights:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetTexFilterFuncSGIS = unsafeBitCast(get_fp("glGetTexFilterFuncSGIS", support: [ss327]), to: Swift.type(of: fp_glGetTexFilterFuncSGIS))
    fp_glGetTexFilterFuncSGIS(target, filter, weights)
}
public
func glGetTexFilterFuncSGIS(target:GL.Enum, filter:GL.Enum, weights:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetTexFilterFuncSGIS(target, filter, weights)
}
public
func glGetTexFilterFuncSGIS(_ target:GL.Enum, _ filter:GL.Enum, _ weights:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetTexFilterFuncSGIS(target, filter, weights)
}

var fp_glGetTexGendv:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Double>?) -> () = load_glGetTexGendv
func load_glGetTexGendv(coord:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetTexGendv = unsafeBitCast(get_fp("glGetTexGendv", support: [ss346, ss369]), to: Swift.type(of: fp_glGetTexGendv))
    fp_glGetTexGendv(coord, pname, params)
}
public
func glGetTexGendv(coord:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetTexGendv(coord, pname, params)
}
public
func glGetTexGendv(_ coord:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetTexGendv(coord, pname, params)
}

var fp_glGetTexGenfv:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetTexGenfv
func load_glGetTexGenfv(coord:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetTexGenfv = unsafeBitCast(get_fp("glGetTexGenfv", support: [ss346, ss369]), to: Swift.type(of: fp_glGetTexGenfv))
    fp_glGetTexGenfv(coord, pname, params)
}
public
func glGetTexGenfv(coord:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetTexGenfv(coord, pname, params)
}
public
func glGetTexGenfv(_ coord:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetTexGenfv(coord, pname, params)
}

var fp_glGetTexGenfvOES:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetTexGenfvOES
func load_glGetTexGenfvOES(coord:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetTexGenfvOES = unsafeBitCast(get_fp("glGetTexGenfvOES", support: [ss307]), to: Swift.type(of: fp_glGetTexGenfvOES))
    fp_glGetTexGenfvOES(coord, pname, params)
}
public
func glGetTexGenfvOES(coord:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetTexGenfvOES(coord, pname, params)
}
public
func glGetTexGenfvOES(_ coord:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetTexGenfvOES(coord, pname, params)
}

var fp_glGetTexGeniv:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetTexGeniv
func load_glGetTexGeniv(coord:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTexGeniv = unsafeBitCast(get_fp("glGetTexGeniv", support: [ss346, ss369]), to: Swift.type(of: fp_glGetTexGeniv))
    fp_glGetTexGeniv(coord, pname, params)
}
public
func glGetTexGeniv(coord:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTexGeniv(coord, pname, params)
}
public
func glGetTexGeniv(_ coord:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTexGeniv(coord, pname, params)
}

var fp_glGetTexGenivOES:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetTexGenivOES
func load_glGetTexGenivOES(coord:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTexGenivOES = unsafeBitCast(get_fp("glGetTexGenivOES", support: [ss307]), to: Swift.type(of: fp_glGetTexGenivOES))
    fp_glGetTexGenivOES(coord, pname, params)
}
public
func glGetTexGenivOES(coord:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTexGenivOES(coord, pname, params)
}
public
func glGetTexGenivOES(_ coord:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTexGenivOES(coord, pname, params)
}

var fp_glGetTexGenxvOES:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Fixed>?) -> () = load_glGetTexGenxvOES
func load_glGetTexGenxvOES(coord:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetTexGenxvOES = unsafeBitCast(get_fp("glGetTexGenxvOES", support: [ss292, ss307]), to: Swift.type(of: fp_glGetTexGenxvOES))
    fp_glGetTexGenxvOES(coord, pname, params)
}
public
func glGetTexGenxvOES(coord:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetTexGenxvOES(coord, pname, params)
}
public
func glGetTexGenxvOES(_ coord:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetTexGenxvOES(coord, pname, params)
}

var fp_glGetTexImage:@convention(c) (GL.Enum, GL.Int, GL.Enum, GL.Enum, UnsafeMutableRawPointer?) -> () = load_glGetTexImage
func load_glGetTexImage(target:GL.Enum, level:GL.Int, format:GL.Enum, type:GL.Enum, pixels:UnsafeMutableRawPointer?)
{
    fp_glGetTexImage = unsafeBitCast(get_fp("glGetTexImage", support: [ss346]), to: Swift.type(of: fp_glGetTexImage))
    fp_glGetTexImage(target, level, format, type, pixels)
}
public
func glGetTexImage(target:GL.Enum, level:GL.Int, format:GL.Enum, type:GL.Enum, pixels:UnsafeMutableRawPointer?)
{
    fp_glGetTexImage(target, level, format, type, pixels)
}
public
func glGetTexImage(_ target:GL.Enum, _ level:GL.Int, _ format:GL.Enum, _ type:GL.Enum, _ pixels:UnsafeMutableRawPointer?)
{
    fp_glGetTexImage(target, level, format, type, pixels)
}

var fp_glGetTexLevelParameterfv:@convention(c) (GL.Enum, GL.Int, GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetTexLevelParameterfv
func load_glGetTexLevelParameterfv(target:GL.Enum, level:GL.Int, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetTexLevelParameterfv = unsafeBitCast(get_fp("glGetTexLevelParameterfv", support: [ss346, ss367]), to: Swift.type(of: fp_glGetTexLevelParameterfv))
    fp_glGetTexLevelParameterfv(target, level, pname, params)
}
public
func glGetTexLevelParameterfv(target:GL.Enum, level:GL.Int, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetTexLevelParameterfv(target, level, pname, params)
}
public
func glGetTexLevelParameterfv(_ target:GL.Enum, _ level:GL.Int, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetTexLevelParameterfv(target, level, pname, params)
}

var fp_glGetTexLevelParameteriv:@convention(c) (GL.Enum, GL.Int, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetTexLevelParameteriv
func load_glGetTexLevelParameteriv(target:GL.Enum, level:GL.Int, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTexLevelParameteriv = unsafeBitCast(get_fp("glGetTexLevelParameteriv", support: [ss346, ss367]), to: Swift.type(of: fp_glGetTexLevelParameteriv))
    fp_glGetTexLevelParameteriv(target, level, pname, params)
}
public
func glGetTexLevelParameteriv(target:GL.Enum, level:GL.Int, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTexLevelParameteriv(target, level, pname, params)
}
public
func glGetTexLevelParameteriv(_ target:GL.Enum, _ level:GL.Int, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTexLevelParameteriv(target, level, pname, params)
}

var fp_glGetTexLevelParameterxvOES:@convention(c) (GL.Enum, GL.Int, GL.Enum, UnsafeMutablePointer<GL.Fixed>?) -> () = load_glGetTexLevelParameterxvOES
func load_glGetTexLevelParameterxvOES(target:GL.Enum, level:GL.Int, pname:GL.Enum, params:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetTexLevelParameterxvOES = unsafeBitCast(get_fp("glGetTexLevelParameterxvOES", support: [ss292]), to: Swift.type(of: fp_glGetTexLevelParameterxvOES))
    fp_glGetTexLevelParameterxvOES(target, level, pname, params)
}
public
func glGetTexLevelParameterxvOES(target:GL.Enum, level:GL.Int, pname:GL.Enum, params:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetTexLevelParameterxvOES(target, level, pname, params)
}
public
func glGetTexLevelParameterxvOES(_ target:GL.Enum, _ level:GL.Int, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetTexLevelParameterxvOES(target, level, pname, params)
}

var fp_glGetTexParameterIiv:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetTexParameterIiv
func load_glGetTexParameterIiv(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTexParameterIiv = unsafeBitCast(get_fp("glGetTexParameterIiv", support: [ss354, ss368]), to: Swift.type(of: fp_glGetTexParameterIiv))
    fp_glGetTexParameterIiv(target, pname, params)
}
public
func glGetTexParameterIiv(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTexParameterIiv(target, pname, params)
}
public
func glGetTexParameterIiv(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTexParameterIiv(target, pname, params)
}

var fp_glGetTexParameterIivEXT:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetTexParameterIivEXT
func load_glGetTexParameterIivEXT(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTexParameterIivEXT = unsafeBitCast(get_fp("glGetTexParameterIivEXT", support: [ss190, ss194]), to: Swift.type(of: fp_glGetTexParameterIivEXT))
    fp_glGetTexParameterIivEXT(target, pname, params)
}
public
func glGetTexParameterIivEXT(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTexParameterIivEXT(target, pname, params)
}
public
func glGetTexParameterIivEXT(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTexParameterIivEXT(target, pname, params)
}

var fp_glGetTexParameterIivOES:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetTexParameterIivOES
func load_glGetTexParameterIivOES(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTexParameterIivOES = unsafeBitCast(get_fp("glGetTexParameterIivOES", support: [ss305]), to: Swift.type(of: fp_glGetTexParameterIivOES))
    fp_glGetTexParameterIivOES(target, pname, params)
}
public
func glGetTexParameterIivOES(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTexParameterIivOES(target, pname, params)
}
public
func glGetTexParameterIivOES(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTexParameterIivOES(target, pname, params)
}

var fp_glGetTexParameterIuiv:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGetTexParameterIuiv
func load_glGetTexParameterIuiv(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetTexParameterIuiv = unsafeBitCast(get_fp("glGetTexParameterIuiv", support: [ss354, ss368]), to: Swift.type(of: fp_glGetTexParameterIuiv))
    fp_glGetTexParameterIuiv(target, pname, params)
}
public
func glGetTexParameterIuiv(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetTexParameterIuiv(target, pname, params)
}
public
func glGetTexParameterIuiv(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetTexParameterIuiv(target, pname, params)
}

var fp_glGetTexParameterIuivEXT:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGetTexParameterIuivEXT
func load_glGetTexParameterIuivEXT(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetTexParameterIuivEXT = unsafeBitCast(get_fp("glGetTexParameterIuivEXT", support: [ss190, ss194]), to: Swift.type(of: fp_glGetTexParameterIuivEXT))
    fp_glGetTexParameterIuivEXT(target, pname, params)
}
public
func glGetTexParameterIuivEXT(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetTexParameterIuivEXT(target, pname, params)
}
public
func glGetTexParameterIuivEXT(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetTexParameterIuivEXT(target, pname, params)
}

var fp_glGetTexParameterIuivOES:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGetTexParameterIuivOES
func load_glGetTexParameterIuivOES(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetTexParameterIuivOES = unsafeBitCast(get_fp("glGetTexParameterIuivOES", support: [ss305]), to: Swift.type(of: fp_glGetTexParameterIuivOES))
    fp_glGetTexParameterIuivOES(target, pname, params)
}
public
func glGetTexParameterIuivOES(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetTexParameterIuivOES(target, pname, params)
}
public
func glGetTexParameterIuivOES(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetTexParameterIuivOES(target, pname, params)
}

var fp_glGetTexParameterPointervAPPLE:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<UnsafeMutableRawPointer?>?) -> () = load_glGetTexParameterPointervAPPLE
func load_glGetTexParameterPointervAPPLE(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    fp_glGetTexParameterPointervAPPLE = unsafeBitCast(get_fp("glGetTexParameterPointervAPPLE", support: [ss24]), to: Swift.type(of: fp_glGetTexParameterPointervAPPLE))
    fp_glGetTexParameterPointervAPPLE(target, pname, params)
}
public
func glGetTexParameterPointervAPPLE(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    fp_glGetTexParameterPointervAPPLE(target, pname, params)
}
public
func glGetTexParameterPointervAPPLE(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    fp_glGetTexParameterPointervAPPLE(target, pname, params)
}

var fp_glGetTexParameterfv:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetTexParameterfv
func load_glGetTexParameterfv(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetTexParameterfv = unsafeBitCast(get_fp("glGetTexParameterfv", support: [ss346, ss365]), to: Swift.type(of: fp_glGetTexParameterfv))
    fp_glGetTexParameterfv(target, pname, params)
}
public
func glGetTexParameterfv(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetTexParameterfv(target, pname, params)
}
public
func glGetTexParameterfv(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetTexParameterfv(target, pname, params)
}

var fp_glGetTexParameteriv:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetTexParameteriv
func load_glGetTexParameteriv(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTexParameteriv = unsafeBitCast(get_fp("glGetTexParameteriv", support: [ss346, ss365]), to: Swift.type(of: fp_glGetTexParameteriv))
    fp_glGetTexParameteriv(target, pname, params)
}
public
func glGetTexParameteriv(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTexParameteriv(target, pname, params)
}
public
func glGetTexParameteriv(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTexParameteriv(target, pname, params)
}

var fp_glGetTexParameterxv:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Fixed>?) -> () = load_glGetTexParameterxv
func load_glGetTexParameterxv(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetTexParameterxv = unsafeBitCast(get_fp("glGetTexParameterxv", support: [ss364]), to: Swift.type(of: fp_glGetTexParameterxv))
    fp_glGetTexParameterxv(target, pname, params)
}
public
func glGetTexParameterxv(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetTexParameterxv(target, pname, params)
}
public
func glGetTexParameterxv(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetTexParameterxv(target, pname, params)
}

var fp_glGetTexParameterxvOES:@convention(c) (GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Fixed>?) -> () = load_glGetTexParameterxvOES
func load_glGetTexParameterxvOES(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetTexParameterxvOES = unsafeBitCast(get_fp("glGetTexParameterxvOES", support: [ss292]), to: Swift.type(of: fp_glGetTexParameterxvOES))
    fp_glGetTexParameterxvOES(target, pname, params)
}
public
func glGetTexParameterxvOES(target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetTexParameterxvOES(target, pname, params)
}
public
func glGetTexParameterxvOES(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Fixed>?)
{
    fp_glGetTexParameterxvOES(target, pname, params)
}

var fp_glGetTextureHandleARB:@convention(c) (GL.UInt) -> GL.UInt64 = load_glGetTextureHandleARB
func load_glGetTextureHandleARB(texture:GL.UInt) -> GL.UInt64
{
    fp_glGetTextureHandleARB = unsafeBitCast(get_fp("glGetTextureHandleARB", support: [ss29]), to: Swift.type(of: fp_glGetTextureHandleARB))
    return fp_glGetTextureHandleARB(texture)
}
public
func glGetTextureHandleARB(texture:GL.UInt) -> GL.UInt64
{
    return fp_glGetTextureHandleARB(texture)
}
public
func glGetTextureHandleARB(_ texture:GL.UInt) -> GL.UInt64
{
    return fp_glGetTextureHandleARB(texture)
}

var fp_glGetTextureHandleNV:@convention(c) (GL.UInt) -> GL.UInt64 = load_glGetTextureHandleNV
func load_glGetTextureHandleNV(texture:GL.UInt) -> GL.UInt64
{
    fp_glGetTextureHandleNV = unsafeBitCast(get_fp("glGetTextureHandleNV", support: [ss227]), to: Swift.type(of: fp_glGetTextureHandleNV))
    return fp_glGetTextureHandleNV(texture)
}
public
func glGetTextureHandleNV(texture:GL.UInt) -> GL.UInt64
{
    return fp_glGetTextureHandleNV(texture)
}
public
func glGetTextureHandleNV(_ texture:GL.UInt) -> GL.UInt64
{
    return fp_glGetTextureHandleNV(texture)
}

var fp_glGetTextureImage:@convention(c) (GL.UInt, GL.Int, GL.Enum, GL.Enum, GL.Size, UnsafeMutableRawPointer?) -> () = load_glGetTextureImage
func load_glGetTextureImage(texture:GL.UInt, level:GL.Int, format:GL.Enum, type:GL.Enum, bufSize:GL.Size, pixels:UnsafeMutableRawPointer?)
{
    fp_glGetTextureImage = unsafeBitCast(get_fp("glGetTextureImage", support: [ss363, ss42]), to: Swift.type(of: fp_glGetTextureImage))
    fp_glGetTextureImage(texture, level, format, type, bufSize, pixels)
}
public
func glGetTextureImage(texture:GL.UInt, level:GL.Int, format:GL.Enum, type:GL.Enum, bufSize:GL.Size, pixels:UnsafeMutableRawPointer?)
{
    fp_glGetTextureImage(texture, level, format, type, bufSize, pixels)
}
public
func glGetTextureImage(_ texture:GL.UInt, _ level:GL.Int, _ format:GL.Enum, _ type:GL.Enum, _ bufSize:GL.Size, _ pixels:UnsafeMutableRawPointer?)
{
    fp_glGetTextureImage(texture, level, format, type, bufSize, pixels)
}

var fp_glGetTextureImageEXT:@convention(c) (GL.UInt, GL.Enum, GL.Int, GL.Enum, GL.Enum, UnsafeMutableRawPointer?) -> () = load_glGetTextureImageEXT
func load_glGetTextureImageEXT(texture:GL.UInt, target:GL.Enum, level:GL.Int, format:GL.Enum, type:GL.Enum, pixels:UnsafeMutableRawPointer?)
{
    fp_glGetTextureImageEXT = unsafeBitCast(get_fp("glGetTextureImageEXT", support: [ss143]), to: Swift.type(of: fp_glGetTextureImageEXT))
    fp_glGetTextureImageEXT(texture, target, level, format, type, pixels)
}
public
func glGetTextureImageEXT(texture:GL.UInt, target:GL.Enum, level:GL.Int, format:GL.Enum, type:GL.Enum, pixels:UnsafeMutableRawPointer?)
{
    fp_glGetTextureImageEXT(texture, target, level, format, type, pixels)
}
public
func glGetTextureImageEXT(_ texture:GL.UInt, _ target:GL.Enum, _ level:GL.Int, _ format:GL.Enum, _ type:GL.Enum, _ pixels:UnsafeMutableRawPointer?)
{
    fp_glGetTextureImageEXT(texture, target, level, format, type, pixels)
}

var fp_glGetTextureLevelParameterfv:@convention(c) (GL.UInt, GL.Int, GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetTextureLevelParameterfv
func load_glGetTextureLevelParameterfv(texture:GL.UInt, level:GL.Int, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetTextureLevelParameterfv = unsafeBitCast(get_fp("glGetTextureLevelParameterfv", support: [ss363, ss42]), to: Swift.type(of: fp_glGetTextureLevelParameterfv))
    fp_glGetTextureLevelParameterfv(texture, level, pname, params)
}
public
func glGetTextureLevelParameterfv(texture:GL.UInt, level:GL.Int, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetTextureLevelParameterfv(texture, level, pname, params)
}
public
func glGetTextureLevelParameterfv(_ texture:GL.UInt, _ level:GL.Int, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetTextureLevelParameterfv(texture, level, pname, params)
}

var fp_glGetTextureLevelParameterfvEXT:@convention(c) (GL.UInt, GL.Enum, GL.Int, GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetTextureLevelParameterfvEXT
func load_glGetTextureLevelParameterfvEXT(texture:GL.UInt, target:GL.Enum, level:GL.Int, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetTextureLevelParameterfvEXT = unsafeBitCast(get_fp("glGetTextureLevelParameterfvEXT", support: [ss143]), to: Swift.type(of: fp_glGetTextureLevelParameterfvEXT))
    fp_glGetTextureLevelParameterfvEXT(texture, target, level, pname, params)
}
public
func glGetTextureLevelParameterfvEXT(texture:GL.UInt, target:GL.Enum, level:GL.Int, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetTextureLevelParameterfvEXT(texture, target, level, pname, params)
}
public
func glGetTextureLevelParameterfvEXT(_ texture:GL.UInt, _ target:GL.Enum, _ level:GL.Int, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetTextureLevelParameterfvEXT(texture, target, level, pname, params)
}

var fp_glGetTextureLevelParameteriv:@convention(c) (GL.UInt, GL.Int, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetTextureLevelParameteriv
func load_glGetTextureLevelParameteriv(texture:GL.UInt, level:GL.Int, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTextureLevelParameteriv = unsafeBitCast(get_fp("glGetTextureLevelParameteriv", support: [ss363, ss42]), to: Swift.type(of: fp_glGetTextureLevelParameteriv))
    fp_glGetTextureLevelParameteriv(texture, level, pname, params)
}
public
func glGetTextureLevelParameteriv(texture:GL.UInt, level:GL.Int, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTextureLevelParameteriv(texture, level, pname, params)
}
public
func glGetTextureLevelParameteriv(_ texture:GL.UInt, _ level:GL.Int, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTextureLevelParameteriv(texture, level, pname, params)
}

var fp_glGetTextureLevelParameterivEXT:@convention(c) (GL.UInt, GL.Enum, GL.Int, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetTextureLevelParameterivEXT
func load_glGetTextureLevelParameterivEXT(texture:GL.UInt, target:GL.Enum, level:GL.Int, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTextureLevelParameterivEXT = unsafeBitCast(get_fp("glGetTextureLevelParameterivEXT", support: [ss143]), to: Swift.type(of: fp_glGetTextureLevelParameterivEXT))
    fp_glGetTextureLevelParameterivEXT(texture, target, level, pname, params)
}
public
func glGetTextureLevelParameterivEXT(texture:GL.UInt, target:GL.Enum, level:GL.Int, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTextureLevelParameterivEXT(texture, target, level, pname, params)
}
public
func glGetTextureLevelParameterivEXT(_ texture:GL.UInt, _ target:GL.Enum, _ level:GL.Int, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTextureLevelParameterivEXT(texture, target, level, pname, params)
}

var fp_glGetTextureParameterIiv:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetTextureParameterIiv
func load_glGetTextureParameterIiv(texture:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTextureParameterIiv = unsafeBitCast(get_fp("glGetTextureParameterIiv", support: [ss363, ss42]), to: Swift.type(of: fp_glGetTextureParameterIiv))
    fp_glGetTextureParameterIiv(texture, pname, params)
}
public
func glGetTextureParameterIiv(texture:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTextureParameterIiv(texture, pname, params)
}
public
func glGetTextureParameterIiv(_ texture:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTextureParameterIiv(texture, pname, params)
}

var fp_glGetTextureParameterIivEXT:@convention(c) (GL.UInt, GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetTextureParameterIivEXT
func load_glGetTextureParameterIivEXT(texture:GL.UInt, target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTextureParameterIivEXT = unsafeBitCast(get_fp("glGetTextureParameterIivEXT", support: [ss143]), to: Swift.type(of: fp_glGetTextureParameterIivEXT))
    fp_glGetTextureParameterIivEXT(texture, target, pname, params)
}
public
func glGetTextureParameterIivEXT(texture:GL.UInt, target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTextureParameterIivEXT(texture, target, pname, params)
}
public
func glGetTextureParameterIivEXT(_ texture:GL.UInt, _ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTextureParameterIivEXT(texture, target, pname, params)
}

var fp_glGetTextureParameterIuiv:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGetTextureParameterIuiv
func load_glGetTextureParameterIuiv(texture:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetTextureParameterIuiv = unsafeBitCast(get_fp("glGetTextureParameterIuiv", support: [ss363, ss42]), to: Swift.type(of: fp_glGetTextureParameterIuiv))
    fp_glGetTextureParameterIuiv(texture, pname, params)
}
public
func glGetTextureParameterIuiv(texture:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetTextureParameterIuiv(texture, pname, params)
}
public
func glGetTextureParameterIuiv(_ texture:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetTextureParameterIuiv(texture, pname, params)
}

var fp_glGetTextureParameterIuivEXT:@convention(c) (GL.UInt, GL.Enum, GL.Enum, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGetTextureParameterIuivEXT
func load_glGetTextureParameterIuivEXT(texture:GL.UInt, target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetTextureParameterIuivEXT = unsafeBitCast(get_fp("glGetTextureParameterIuivEXT", support: [ss143]), to: Swift.type(of: fp_glGetTextureParameterIuivEXT))
    fp_glGetTextureParameterIuivEXT(texture, target, pname, params)
}
public
func glGetTextureParameterIuivEXT(texture:GL.UInt, target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetTextureParameterIuivEXT(texture, target, pname, params)
}
public
func glGetTextureParameterIuivEXT(_ texture:GL.UInt, _ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetTextureParameterIuivEXT(texture, target, pname, params)
}

var fp_glGetTextureParameterfv:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetTextureParameterfv
func load_glGetTextureParameterfv(texture:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetTextureParameterfv = unsafeBitCast(get_fp("glGetTextureParameterfv", support: [ss363, ss42]), to: Swift.type(of: fp_glGetTextureParameterfv))
    fp_glGetTextureParameterfv(texture, pname, params)
}
public
func glGetTextureParameterfv(texture:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetTextureParameterfv(texture, pname, params)
}
public
func glGetTextureParameterfv(_ texture:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetTextureParameterfv(texture, pname, params)
}

var fp_glGetTextureParameterfvEXT:@convention(c) (GL.UInt, GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetTextureParameterfvEXT
func load_glGetTextureParameterfvEXT(texture:GL.UInt, target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetTextureParameterfvEXT = unsafeBitCast(get_fp("glGetTextureParameterfvEXT", support: [ss143]), to: Swift.type(of: fp_glGetTextureParameterfvEXT))
    fp_glGetTextureParameterfvEXT(texture, target, pname, params)
}
public
func glGetTextureParameterfvEXT(texture:GL.UInt, target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetTextureParameterfvEXT(texture, target, pname, params)
}
public
func glGetTextureParameterfvEXT(_ texture:GL.UInt, _ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetTextureParameterfvEXT(texture, target, pname, params)
}

var fp_glGetTextureParameteriv:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetTextureParameteriv
func load_glGetTextureParameteriv(texture:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTextureParameteriv = unsafeBitCast(get_fp("glGetTextureParameteriv", support: [ss363, ss42]), to: Swift.type(of: fp_glGetTextureParameteriv))
    fp_glGetTextureParameteriv(texture, pname, params)
}
public
func glGetTextureParameteriv(texture:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTextureParameteriv(texture, pname, params)
}
public
func glGetTextureParameteriv(_ texture:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTextureParameteriv(texture, pname, params)
}

var fp_glGetTextureParameterivEXT:@convention(c) (GL.UInt, GL.Enum, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetTextureParameterivEXT
func load_glGetTextureParameterivEXT(texture:GL.UInt, target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTextureParameterivEXT = unsafeBitCast(get_fp("glGetTextureParameterivEXT", support: [ss143]), to: Swift.type(of: fp_glGetTextureParameterivEXT))
    fp_glGetTextureParameterivEXT(texture, target, pname, params)
}
public
func glGetTextureParameterivEXT(texture:GL.UInt, target:GL.Enum, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTextureParameterivEXT(texture, target, pname, params)
}
public
func glGetTextureParameterivEXT(_ texture:GL.UInt, _ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTextureParameterivEXT(texture, target, pname, params)
}

var fp_glGetTextureSamplerHandleARB:@convention(c) (GL.UInt, GL.UInt) -> GL.UInt64 = load_glGetTextureSamplerHandleARB
func load_glGetTextureSamplerHandleARB(texture:GL.UInt, sampler:GL.UInt) -> GL.UInt64
{
    fp_glGetTextureSamplerHandleARB = unsafeBitCast(get_fp("glGetTextureSamplerHandleARB", support: [ss29]), to: Swift.type(of: fp_glGetTextureSamplerHandleARB))
    return fp_glGetTextureSamplerHandleARB(texture, sampler)
}
public
func glGetTextureSamplerHandleARB(texture:GL.UInt, sampler:GL.UInt) -> GL.UInt64
{
    return fp_glGetTextureSamplerHandleARB(texture, sampler)
}
public
func glGetTextureSamplerHandleARB(_ texture:GL.UInt, _ sampler:GL.UInt) -> GL.UInt64
{
    return fp_glGetTextureSamplerHandleARB(texture, sampler)
}

var fp_glGetTextureSamplerHandleNV:@convention(c) (GL.UInt, GL.UInt) -> GL.UInt64 = load_glGetTextureSamplerHandleNV
func load_glGetTextureSamplerHandleNV(texture:GL.UInt, sampler:GL.UInt) -> GL.UInt64
{
    fp_glGetTextureSamplerHandleNV = unsafeBitCast(get_fp("glGetTextureSamplerHandleNV", support: [ss227]), to: Swift.type(of: fp_glGetTextureSamplerHandleNV))
    return fp_glGetTextureSamplerHandleNV(texture, sampler)
}
public
func glGetTextureSamplerHandleNV(texture:GL.UInt, sampler:GL.UInt) -> GL.UInt64
{
    return fp_glGetTextureSamplerHandleNV(texture, sampler)
}
public
func glGetTextureSamplerHandleNV(_ texture:GL.UInt, _ sampler:GL.UInt) -> GL.UInt64
{
    return fp_glGetTextureSamplerHandleNV(texture, sampler)
}

var fp_glGetTextureSubImage:@convention(c) (GL.UInt, GL.Int, GL.Int, GL.Int, GL.Int, GL.Size, GL.Size, GL.Size, GL.Enum, GL.Enum, GL.Size, UnsafeMutableRawPointer?) -> () = load_glGetTextureSubImage
func load_glGetTextureSubImage(texture:GL.UInt, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, zoffset:GL.Int, width:GL.Size, height:GL.Size, depth:GL.Size, format:GL.Enum, type:GL.Enum, bufSize:GL.Size, pixels:UnsafeMutableRawPointer?)
{
    fp_glGetTextureSubImage = unsafeBitCast(get_fp("glGetTextureSubImage", support: [ss363, ss56]), to: Swift.type(of: fp_glGetTextureSubImage))
    fp_glGetTextureSubImage(texture, level, xoffset, yoffset, zoffset, width, height, depth, format, type, bufSize, pixels)
}
public
func glGetTextureSubImage(texture:GL.UInt, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, zoffset:GL.Int, width:GL.Size, height:GL.Size, depth:GL.Size, format:GL.Enum, type:GL.Enum, bufSize:GL.Size, pixels:UnsafeMutableRawPointer?)
{
    fp_glGetTextureSubImage(texture, level, xoffset, yoffset, zoffset, width, height, depth, format, type, bufSize, pixels)
}
public
func glGetTextureSubImage(_ texture:GL.UInt, _ level:GL.Int, _ xoffset:GL.Int, _ yoffset:GL.Int, _ zoffset:GL.Int, _ width:GL.Size, _ height:GL.Size, _ depth:GL.Size, _ format:GL.Enum, _ type:GL.Enum, _ bufSize:GL.Size, _ pixels:UnsafeMutableRawPointer?)
{
    fp_glGetTextureSubImage(texture, level, xoffset, yoffset, zoffset, width, height, depth, format, type, bufSize, pixels)
}

var fp_glGetTrackMatrixivNV:@convention(c) (GL.Enum, GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetTrackMatrixivNV
func load_glGetTrackMatrixivNV(target:GL.Enum, address:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTrackMatrixivNV = unsafeBitCast(get_fp("glGetTrackMatrixivNV", support: [ss278]), to: Swift.type(of: fp_glGetTrackMatrixivNV))
    fp_glGetTrackMatrixivNV(target, address, pname, params)
}
public
func glGetTrackMatrixivNV(target:GL.Enum, address:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTrackMatrixivNV(target, address, pname, params)
}
public
func glGetTrackMatrixivNV(_ target:GL.Enum, _ address:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTrackMatrixivNV(target, address, pname, params)
}

var fp_glGetTransformFeedbackVarying:@convention(c) (GL.UInt, GL.UInt, GL.Size, UnsafeMutablePointer<GL.Size>?, UnsafeMutablePointer<GL.Size>?, UnsafeMutablePointer<GL.Enum>?, UnsafeMutablePointer<GL.Char>?) -> () = load_glGetTransformFeedbackVarying
func load_glGetTransformFeedbackVarying(program:GL.UInt, index:GL.UInt, bufSize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, size:UnsafeMutablePointer<GL.Size>?, type:UnsafeMutablePointer<GL.Enum>?, name:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetTransformFeedbackVarying = unsafeBitCast(get_fp("glGetTransformFeedbackVarying", support: [ss354, ss366]), to: Swift.type(of: fp_glGetTransformFeedbackVarying))
    fp_glGetTransformFeedbackVarying(program, index, bufSize, length, size, type, name)
}
public
func glGetTransformFeedbackVarying(program:GL.UInt, index:GL.UInt, bufSize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, size:UnsafeMutablePointer<GL.Size>?, type:UnsafeMutablePointer<GL.Enum>?, name:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetTransformFeedbackVarying(program, index, bufSize, length, size, type, name)
}
public
func glGetTransformFeedbackVarying(_ program:GL.UInt, _ index:GL.UInt, _ bufSize:GL.Size, _ length:UnsafeMutablePointer<GL.Size>?, _ size:UnsafeMutablePointer<GL.Size>?, _ type:UnsafeMutablePointer<GL.Enum>?, _ name:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetTransformFeedbackVarying(program, index, bufSize, length, size, type, name)
}

var fp_glGetTransformFeedbackVaryingEXT:@convention(c) (GL.UInt, GL.UInt, GL.Size, UnsafeMutablePointer<GL.Size>?, UnsafeMutablePointer<GL.Size>?, UnsafeMutablePointer<GL.Enum>?, UnsafeMutablePointer<GL.Char>?) -> () = load_glGetTransformFeedbackVaryingEXT
func load_glGetTransformFeedbackVaryingEXT(program:GL.UInt, index:GL.UInt, bufSize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, size:UnsafeMutablePointer<GL.Size>?, type:UnsafeMutablePointer<GL.Enum>?, name:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetTransformFeedbackVaryingEXT = unsafeBitCast(get_fp("glGetTransformFeedbackVaryingEXT", support: [ss201]), to: Swift.type(of: fp_glGetTransformFeedbackVaryingEXT))
    fp_glGetTransformFeedbackVaryingEXT(program, index, bufSize, length, size, type, name)
}
public
func glGetTransformFeedbackVaryingEXT(program:GL.UInt, index:GL.UInt, bufSize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, size:UnsafeMutablePointer<GL.Size>?, type:UnsafeMutablePointer<GL.Enum>?, name:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetTransformFeedbackVaryingEXT(program, index, bufSize, length, size, type, name)
}
public
func glGetTransformFeedbackVaryingEXT(_ program:GL.UInt, _ index:GL.UInt, _ bufSize:GL.Size, _ length:UnsafeMutablePointer<GL.Size>?, _ size:UnsafeMutablePointer<GL.Size>?, _ type:UnsafeMutablePointer<GL.Enum>?, _ name:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetTransformFeedbackVaryingEXT(program, index, bufSize, length, size, type, name)
}

var fp_glGetTransformFeedbackVaryingNV:@convention(c) (GL.UInt, GL.UInt, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetTransformFeedbackVaryingNV
func load_glGetTransformFeedbackVaryingNV(program:GL.UInt, index:GL.UInt, location:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTransformFeedbackVaryingNV = unsafeBitCast(get_fp("glGetTransformFeedbackVaryingNV", support: [ss272]), to: Swift.type(of: fp_glGetTransformFeedbackVaryingNV))
    fp_glGetTransformFeedbackVaryingNV(program, index, location)
}
public
func glGetTransformFeedbackVaryingNV(program:GL.UInt, index:GL.UInt, location:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTransformFeedbackVaryingNV(program, index, location)
}
public
func glGetTransformFeedbackVaryingNV(_ program:GL.UInt, _ index:GL.UInt, _ location:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTransformFeedbackVaryingNV(program, index, location)
}

var fp_glGetTransformFeedbacki64_v:@convention(c) (GL.UInt, GL.Enum, GL.UInt, UnsafeMutablePointer<GL.Int64>?) -> () = load_glGetTransformFeedbacki64_v
func load_glGetTransformFeedbacki64_v(xfb:GL.UInt, pname:GL.Enum, index:GL.UInt, param:UnsafeMutablePointer<GL.Int64>?)
{
    fp_glGetTransformFeedbacki64_v = unsafeBitCast(get_fp("glGetTransformFeedbacki64_v", support: [ss363, ss42]), to: Swift.type(of: fp_glGetTransformFeedbacki64_v))
    fp_glGetTransformFeedbacki64_v(xfb, pname, index, param)
}
public
func glGetTransformFeedbacki64_v(xfb:GL.UInt, pname:GL.Enum, index:GL.UInt, param:UnsafeMutablePointer<GL.Int64>?)
{
    fp_glGetTransformFeedbacki64_v(xfb, pname, index, param)
}
public
func glGetTransformFeedbacki64_v(_ xfb:GL.UInt, _ pname:GL.Enum, _ index:GL.UInt, _ param:UnsafeMutablePointer<GL.Int64>?)
{
    fp_glGetTransformFeedbacki64_v(xfb, pname, index, param)
}

var fp_glGetTransformFeedbacki_v:@convention(c) (GL.UInt, GL.Enum, GL.UInt, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetTransformFeedbacki_v
func load_glGetTransformFeedbacki_v(xfb:GL.UInt, pname:GL.Enum, index:GL.UInt, param:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTransformFeedbacki_v = unsafeBitCast(get_fp("glGetTransformFeedbacki_v", support: [ss363, ss42]), to: Swift.type(of: fp_glGetTransformFeedbacki_v))
    fp_glGetTransformFeedbacki_v(xfb, pname, index, param)
}
public
func glGetTransformFeedbacki_v(xfb:GL.UInt, pname:GL.Enum, index:GL.UInt, param:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTransformFeedbacki_v(xfb, pname, index, param)
}
public
func glGetTransformFeedbacki_v(_ xfb:GL.UInt, _ pname:GL.Enum, _ index:GL.UInt, _ param:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTransformFeedbacki_v(xfb, pname, index, param)
}

var fp_glGetTransformFeedbackiv:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetTransformFeedbackiv
func load_glGetTransformFeedbackiv(xfb:GL.UInt, pname:GL.Enum, param:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTransformFeedbackiv = unsafeBitCast(get_fp("glGetTransformFeedbackiv", support: [ss363, ss42]), to: Swift.type(of: fp_glGetTransformFeedbackiv))
    fp_glGetTransformFeedbackiv(xfb, pname, param)
}
public
func glGetTransformFeedbackiv(xfb:GL.UInt, pname:GL.Enum, param:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTransformFeedbackiv(xfb, pname, param)
}
public
func glGetTransformFeedbackiv(_ xfb:GL.UInt, _ pname:GL.Enum, _ param:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetTransformFeedbackiv(xfb, pname, param)
}

var fp_glGetTranslatedShaderSourceANGLE:@convention(c) (GL.UInt, GL.Size, UnsafeMutablePointer<GL.Size>?, UnsafeMutablePointer<GL.Char>?) -> () = load_glGetTranslatedShaderSourceANGLE
func load_glGetTranslatedShaderSourceANGLE(shader:GL.UInt, bufsize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, source:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetTranslatedShaderSourceANGLE = unsafeBitCast(get_fp("glGetTranslatedShaderSourceANGLE", support: [ss16]), to: Swift.type(of: fp_glGetTranslatedShaderSourceANGLE))
    fp_glGetTranslatedShaderSourceANGLE(shader, bufsize, length, source)
}
public
func glGetTranslatedShaderSourceANGLE(shader:GL.UInt, bufsize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, source:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetTranslatedShaderSourceANGLE(shader, bufsize, length, source)
}
public
func glGetTranslatedShaderSourceANGLE(_ shader:GL.UInt, _ bufsize:GL.Size, _ length:UnsafeMutablePointer<GL.Size>?, _ source:UnsafeMutablePointer<GL.Char>?)
{
    fp_glGetTranslatedShaderSourceANGLE(shader, bufsize, length, source)
}

var fp_glGetUniformBlockIndex:@convention(c) (GL.UInt, UnsafePointer<GL.Char>?) -> GL.UInt = load_glGetUniformBlockIndex
func load_glGetUniformBlockIndex(program:GL.UInt, uniformBlockName:UnsafePointer<GL.Char>?) -> GL.UInt
{
    fp_glGetUniformBlockIndex = unsafeBitCast(get_fp("glGetUniformBlockIndex", support: [ss355, ss366, ss104]), to: Swift.type(of: fp_glGetUniformBlockIndex))
    return fp_glGetUniformBlockIndex(program, uniformBlockName)
}
public
func glGetUniformBlockIndex(program:GL.UInt, uniformBlockName:UnsafePointer<GL.Char>?) -> GL.UInt
{
    return fp_glGetUniformBlockIndex(program, uniformBlockName)
}
public
func glGetUniformBlockIndex(_ program:GL.UInt, _ uniformBlockName:UnsafePointer<GL.Char>?) -> GL.UInt
{
    return fp_glGetUniformBlockIndex(program, uniformBlockName)
}

var fp_glGetUniformBufferSizeEXT:@convention(c) (GL.UInt, GL.Int) -> GL.Int = load_glGetUniformBufferSizeEXT
func load_glGetUniformBufferSizeEXT(program:GL.UInt, location:GL.Int) -> GL.Int
{
    fp_glGetUniformBufferSizeEXT = unsafeBitCast(get_fp("glGetUniformBufferSizeEXT", support: [ss126]), to: Swift.type(of: fp_glGetUniformBufferSizeEXT))
    return fp_glGetUniformBufferSizeEXT(program, location)
}
public
func glGetUniformBufferSizeEXT(program:GL.UInt, location:GL.Int) -> GL.Int
{
    return fp_glGetUniformBufferSizeEXT(program, location)
}
public
func glGetUniformBufferSizeEXT(_ program:GL.UInt, _ location:GL.Int) -> GL.Int
{
    return fp_glGetUniformBufferSizeEXT(program, location)
}

var fp_glGetUniformIndices:@convention(c) (GL.UInt, GL.Size, UnsafePointer<UnsafePointer<GL.Char>?>?, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGetUniformIndices
func load_glGetUniformIndices(program:GL.UInt, uniformCount:GL.Size, uniformNames:UnsafePointer<UnsafePointer<GL.Char>?>?, uniformIndices:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetUniformIndices = unsafeBitCast(get_fp("glGetUniformIndices", support: [ss355, ss366, ss104]), to: Swift.type(of: fp_glGetUniformIndices))
    fp_glGetUniformIndices(program, uniformCount, uniformNames, uniformIndices)
}
public
func glGetUniformIndices(program:GL.UInt, uniformCount:GL.Size, uniformNames:UnsafePointer<UnsafePointer<GL.Char>?>?, uniformIndices:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetUniformIndices(program, uniformCount, uniformNames, uniformIndices)
}
public
func glGetUniformIndices(_ program:GL.UInt, _ uniformCount:GL.Size, _ uniformNames:UnsafePointer<UnsafePointer<GL.Char>?>?, _ uniformIndices:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetUniformIndices(program, uniformCount, uniformNames, uniformIndices)
}

var fp_glGetUniformLocation:@convention(c) (GL.UInt, UnsafePointer<GL.Char>?) -> GL.Int = load_glGetUniformLocation
func load_glGetUniformLocation(program:GL.UInt, name:UnsafePointer<GL.Char>?) -> GL.Int
{
    fp_glGetUniformLocation = unsafeBitCast(get_fp("glGetUniformLocation", support: [ss352, ss365]), to: Swift.type(of: fp_glGetUniformLocation))
    return fp_glGetUniformLocation(program, name)
}
public
func glGetUniformLocation(program:GL.UInt, name:UnsafePointer<GL.Char>?) -> GL.Int
{
    return fp_glGetUniformLocation(program, name)
}
public
func glGetUniformLocation(_ program:GL.UInt, _ name:UnsafePointer<GL.Char>?) -> GL.Int
{
    return fp_glGetUniformLocation(program, name)
}

var fp_glGetUniformLocationARB:@convention(c) (GL.HandleARB, UnsafePointer<GL.CharARB>?) -> GL.Int = load_glGetUniformLocationARB
func load_glGetUniformLocationARB(programObj:GL.HandleARB, name:UnsafePointer<GL.CharARB>?) -> GL.Int
{
    fp_glGetUniformLocationARB = unsafeBitCast(get_fp("glGetUniformLocationARB", support: [ss83]), to: Swift.type(of: fp_glGetUniformLocationARB))
    return fp_glGetUniformLocationARB(programObj, name)
}
public
func glGetUniformLocationARB(programObj:GL.HandleARB, name:UnsafePointer<GL.CharARB>?) -> GL.Int
{
    return fp_glGetUniformLocationARB(programObj, name)
}
public
func glGetUniformLocationARB(_ programObj:GL.HandleARB, _ name:UnsafePointer<GL.CharARB>?) -> GL.Int
{
    return fp_glGetUniformLocationARB(programObj, name)
}

var fp_glGetUniformOffsetEXT:@convention(c) (GL.UInt, GL.Int) -> GL.IntPointer = load_glGetUniformOffsetEXT
func load_glGetUniformOffsetEXT(program:GL.UInt, location:GL.Int) -> GL.IntPointer
{
    fp_glGetUniformOffsetEXT = unsafeBitCast(get_fp("glGetUniformOffsetEXT", support: [ss126]), to: Swift.type(of: fp_glGetUniformOffsetEXT))
    return fp_glGetUniformOffsetEXT(program, location)
}
public
func glGetUniformOffsetEXT(program:GL.UInt, location:GL.Int) -> GL.IntPointer
{
    return fp_glGetUniformOffsetEXT(program, location)
}
public
func glGetUniformOffsetEXT(_ program:GL.UInt, _ location:GL.Int) -> GL.IntPointer
{
    return fp_glGetUniformOffsetEXT(program, location)
}

var fp_glGetUniformSubroutineuiv:@convention(c) (GL.Enum, GL.Int, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGetUniformSubroutineuiv
func load_glGetUniformSubroutineuiv(shadertype:GL.Enum, location:GL.Int, params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetUniformSubroutineuiv = unsafeBitCast(get_fp("glGetUniformSubroutineuiv", support: [ss358, ss85]), to: Swift.type(of: fp_glGetUniformSubroutineuiv))
    fp_glGetUniformSubroutineuiv(shadertype, location, params)
}
public
func glGetUniformSubroutineuiv(shadertype:GL.Enum, location:GL.Int, params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetUniformSubroutineuiv(shadertype, location, params)
}
public
func glGetUniformSubroutineuiv(_ shadertype:GL.Enum, _ location:GL.Int, _ params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetUniformSubroutineuiv(shadertype, location, params)
}

var fp_glGetUniformdv:@convention(c) (GL.UInt, GL.Int, UnsafeMutablePointer<GL.Double>?) -> () = load_glGetUniformdv
func load_glGetUniformdv(program:GL.UInt, location:GL.Int, params:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetUniformdv = unsafeBitCast(get_fp("glGetUniformdv", support: [ss358, ss57]), to: Swift.type(of: fp_glGetUniformdv))
    fp_glGetUniformdv(program, location, params)
}
public
func glGetUniformdv(program:GL.UInt, location:GL.Int, params:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetUniformdv(program, location, params)
}
public
func glGetUniformdv(_ program:GL.UInt, _ location:GL.Int, _ params:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetUniformdv(program, location, params)
}

var fp_glGetUniformfv:@convention(c) (GL.UInt, GL.Int, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetUniformfv
func load_glGetUniformfv(program:GL.UInt, location:GL.Int, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetUniformfv = unsafeBitCast(get_fp("glGetUniformfv", support: [ss352, ss365]), to: Swift.type(of: fp_glGetUniformfv))
    fp_glGetUniformfv(program, location, params)
}
public
func glGetUniformfv(program:GL.UInt, location:GL.Int, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetUniformfv(program, location, params)
}
public
func glGetUniformfv(_ program:GL.UInt, _ location:GL.Int, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetUniformfv(program, location, params)
}

var fp_glGetUniformfvARB:@convention(c) (GL.HandleARB, GL.Int, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetUniformfvARB
func load_glGetUniformfvARB(programObj:GL.HandleARB, location:GL.Int, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetUniformfvARB = unsafeBitCast(get_fp("glGetUniformfvARB", support: [ss83]), to: Swift.type(of: fp_glGetUniformfvARB))
    fp_glGetUniformfvARB(programObj, location, params)
}
public
func glGetUniformfvARB(programObj:GL.HandleARB, location:GL.Int, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetUniformfvARB(programObj, location, params)
}
public
func glGetUniformfvARB(_ programObj:GL.HandleARB, _ location:GL.Int, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetUniformfvARB(programObj, location, params)
}

var fp_glGetUniformi64vARB:@convention(c) (GL.UInt, GL.Int, UnsafeMutablePointer<GL.Int64>?) -> () = load_glGetUniformi64vARB
func load_glGetUniformi64vARB(program:GL.UInt, location:GL.Int, params:UnsafeMutablePointer<GL.Int64>?)
{
    fp_glGetUniformi64vARB = unsafeBitCast(get_fp("glGetUniformi64vARB", support: [ss58]), to: Swift.type(of: fp_glGetUniformi64vARB))
    fp_glGetUniformi64vARB(program, location, params)
}
public
func glGetUniformi64vARB(program:GL.UInt, location:GL.Int, params:UnsafeMutablePointer<GL.Int64>?)
{
    fp_glGetUniformi64vARB(program, location, params)
}
public
func glGetUniformi64vARB(_ program:GL.UInt, _ location:GL.Int, _ params:UnsafeMutablePointer<GL.Int64>?)
{
    fp_glGetUniformi64vARB(program, location, params)
}

var fp_glGetUniformi64vNV:@convention(c) (GL.UInt, GL.Int, UnsafeMutablePointer<GL.Int64EXT>?) -> () = load_glGetUniformi64vNV
func load_glGetUniformi64vNV(program:GL.UInt, location:GL.Int, params:UnsafeMutablePointer<GL.Int64EXT>?)
{
    fp_glGetUniformi64vNV = unsafeBitCast(get_fp("glGetUniformi64vNV", support: [ss3, ss252]), to: Swift.type(of: fp_glGetUniformi64vNV))
    fp_glGetUniformi64vNV(program, location, params)
}
public
func glGetUniformi64vNV(program:GL.UInt, location:GL.Int, params:UnsafeMutablePointer<GL.Int64EXT>?)
{
    fp_glGetUniformi64vNV(program, location, params)
}
public
func glGetUniformi64vNV(_ program:GL.UInt, _ location:GL.Int, _ params:UnsafeMutablePointer<GL.Int64EXT>?)
{
    fp_glGetUniformi64vNV(program, location, params)
}

var fp_glGetUniformiv:@convention(c) (GL.UInt, GL.Int, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetUniformiv
func load_glGetUniformiv(program:GL.UInt, location:GL.Int, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetUniformiv = unsafeBitCast(get_fp("glGetUniformiv", support: [ss352, ss365]), to: Swift.type(of: fp_glGetUniformiv))
    fp_glGetUniformiv(program, location, params)
}
public
func glGetUniformiv(program:GL.UInt, location:GL.Int, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetUniformiv(program, location, params)
}
public
func glGetUniformiv(_ program:GL.UInt, _ location:GL.Int, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetUniformiv(program, location, params)
}

var fp_glGetUniformivARB:@convention(c) (GL.HandleARB, GL.Int, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetUniformivARB
func load_glGetUniformivARB(programObj:GL.HandleARB, location:GL.Int, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetUniformivARB = unsafeBitCast(get_fp("glGetUniformivARB", support: [ss83]), to: Swift.type(of: fp_glGetUniformivARB))
    fp_glGetUniformivARB(programObj, location, params)
}
public
func glGetUniformivARB(programObj:GL.HandleARB, location:GL.Int, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetUniformivARB(programObj, location, params)
}
public
func glGetUniformivARB(_ programObj:GL.HandleARB, _ location:GL.Int, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetUniformivARB(programObj, location, params)
}

var fp_glGetUniformui64vARB:@convention(c) (GL.UInt, GL.Int, UnsafeMutablePointer<GL.UInt64>?) -> () = load_glGetUniformui64vARB
func load_glGetUniformui64vARB(program:GL.UInt, location:GL.Int, params:UnsafeMutablePointer<GL.UInt64>?)
{
    fp_glGetUniformui64vARB = unsafeBitCast(get_fp("glGetUniformui64vARB", support: [ss58]), to: Swift.type(of: fp_glGetUniformui64vARB))
    fp_glGetUniformui64vARB(program, location, params)
}
public
func glGetUniformui64vARB(program:GL.UInt, location:GL.Int, params:UnsafeMutablePointer<GL.UInt64>?)
{
    fp_glGetUniformui64vARB(program, location, params)
}
public
func glGetUniformui64vARB(_ program:GL.UInt, _ location:GL.Int, _ params:UnsafeMutablePointer<GL.UInt64>?)
{
    fp_glGetUniformui64vARB(program, location, params)
}

var fp_glGetUniformui64vNV:@convention(c) (GL.UInt, GL.Int, UnsafeMutablePointer<GL.UInt64EXT>?) -> () = load_glGetUniformui64vNV
func load_glGetUniformui64vNV(program:GL.UInt, location:GL.Int, params:UnsafeMutablePointer<GL.UInt64EXT>?)
{
    fp_glGetUniformui64vNV = unsafeBitCast(get_fp("glGetUniformui64vNV", support: [ss3, ss269]), to: Swift.type(of: fp_glGetUniformui64vNV))
    fp_glGetUniformui64vNV(program, location, params)
}
public
func glGetUniformui64vNV(program:GL.UInt, location:GL.Int, params:UnsafeMutablePointer<GL.UInt64EXT>?)
{
    fp_glGetUniformui64vNV(program, location, params)
}
public
func glGetUniformui64vNV(_ program:GL.UInt, _ location:GL.Int, _ params:UnsafeMutablePointer<GL.UInt64EXT>?)
{
    fp_glGetUniformui64vNV(program, location, params)
}

var fp_glGetUniformuiv:@convention(c) (GL.UInt, GL.Int, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGetUniformuiv
func load_glGetUniformuiv(program:GL.UInt, location:GL.Int, params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetUniformuiv = unsafeBitCast(get_fp("glGetUniformuiv", support: [ss354, ss366]), to: Swift.type(of: fp_glGetUniformuiv))
    fp_glGetUniformuiv(program, location, params)
}
public
func glGetUniformuiv(program:GL.UInt, location:GL.Int, params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetUniformuiv(program, location, params)
}
public
func glGetUniformuiv(_ program:GL.UInt, _ location:GL.Int, _ params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetUniformuiv(program, location, params)
}

var fp_glGetUniformuivEXT:@convention(c) (GL.UInt, GL.Int, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGetUniformuivEXT
func load_glGetUniformuivEXT(program:GL.UInt, location:GL.Int, params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetUniformuivEXT = unsafeBitCast(get_fp("glGetUniformuivEXT", support: [ss159]), to: Swift.type(of: fp_glGetUniformuivEXT))
    fp_glGetUniformuivEXT(program, location, params)
}
public
func glGetUniformuivEXT(program:GL.UInt, location:GL.Int, params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetUniformuivEXT(program, location, params)
}
public
func glGetUniformuivEXT(_ program:GL.UInt, _ location:GL.Int, _ params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetUniformuivEXT(program, location, params)
}

var fp_glGetVariantArrayObjectfvATI:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetVariantArrayObjectfvATI
func load_glGetVariantArrayObjectfvATI(id:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetVariantArrayObjectfvATI = unsafeBitCast(get_fp("glGetVariantArrayObjectfvATI", support: [ss122]), to: Swift.type(of: fp_glGetVariantArrayObjectfvATI))
    fp_glGetVariantArrayObjectfvATI(id, pname, params)
}
public
func glGetVariantArrayObjectfvATI(id:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetVariantArrayObjectfvATI(id, pname, params)
}
public
func glGetVariantArrayObjectfvATI(_ id:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetVariantArrayObjectfvATI(id, pname, params)
}

var fp_glGetVariantArrayObjectivATI:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetVariantArrayObjectivATI
func load_glGetVariantArrayObjectivATI(id:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetVariantArrayObjectivATI = unsafeBitCast(get_fp("glGetVariantArrayObjectivATI", support: [ss122]), to: Swift.type(of: fp_glGetVariantArrayObjectivATI))
    fp_glGetVariantArrayObjectivATI(id, pname, params)
}
public
func glGetVariantArrayObjectivATI(id:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetVariantArrayObjectivATI(id, pname, params)
}
public
func glGetVariantArrayObjectivATI(_ id:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetVariantArrayObjectivATI(id, pname, params)
}

var fp_glGetVariantBooleanvEXT:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Bool>?) -> () = load_glGetVariantBooleanvEXT
func load_glGetVariantBooleanvEXT(id:GL.UInt, value:GL.Enum, data:UnsafeMutablePointer<GL.Bool>?)
{
    fp_glGetVariantBooleanvEXT = unsafeBitCast(get_fp("glGetVariantBooleanvEXT", support: [ss204]), to: Swift.type(of: fp_glGetVariantBooleanvEXT))
    fp_glGetVariantBooleanvEXT(id, value, data)
}
public
func glGetVariantBooleanvEXT(id:GL.UInt, value:GL.Enum, data:UnsafeMutablePointer<GL.Bool>?)
{
    fp_glGetVariantBooleanvEXT(id, value, data)
}
public
func glGetVariantBooleanvEXT(_ id:GL.UInt, _ value:GL.Enum, _ data:UnsafeMutablePointer<GL.Bool>?)
{
    fp_glGetVariantBooleanvEXT(id, value, data)
}

var fp_glGetVariantFloatvEXT:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetVariantFloatvEXT
func load_glGetVariantFloatvEXT(id:GL.UInt, value:GL.Enum, data:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetVariantFloatvEXT = unsafeBitCast(get_fp("glGetVariantFloatvEXT", support: [ss204]), to: Swift.type(of: fp_glGetVariantFloatvEXT))
    fp_glGetVariantFloatvEXT(id, value, data)
}
public
func glGetVariantFloatvEXT(id:GL.UInt, value:GL.Enum, data:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetVariantFloatvEXT(id, value, data)
}
public
func glGetVariantFloatvEXT(_ id:GL.UInt, _ value:GL.Enum, _ data:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetVariantFloatvEXT(id, value, data)
}

var fp_glGetVariantIntegervEXT:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetVariantIntegervEXT
func load_glGetVariantIntegervEXT(id:GL.UInt, value:GL.Enum, data:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetVariantIntegervEXT = unsafeBitCast(get_fp("glGetVariantIntegervEXT", support: [ss204]), to: Swift.type(of: fp_glGetVariantIntegervEXT))
    fp_glGetVariantIntegervEXT(id, value, data)
}
public
func glGetVariantIntegervEXT(id:GL.UInt, value:GL.Enum, data:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetVariantIntegervEXT(id, value, data)
}
public
func glGetVariantIntegervEXT(_ id:GL.UInt, _ value:GL.Enum, _ data:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetVariantIntegervEXT(id, value, data)
}

var fp_glGetVariantPointervEXT:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<UnsafeMutableRawPointer?>?) -> () = load_glGetVariantPointervEXT
func load_glGetVariantPointervEXT(id:GL.UInt, value:GL.Enum, data:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    fp_glGetVariantPointervEXT = unsafeBitCast(get_fp("glGetVariantPointervEXT", support: [ss204]), to: Swift.type(of: fp_glGetVariantPointervEXT))
    fp_glGetVariantPointervEXT(id, value, data)
}
public
func glGetVariantPointervEXT(id:GL.UInt, value:GL.Enum, data:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    fp_glGetVariantPointervEXT(id, value, data)
}
public
func glGetVariantPointervEXT(_ id:GL.UInt, _ value:GL.Enum, _ data:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    fp_glGetVariantPointervEXT(id, value, data)
}

var fp_glGetVaryingLocationNV:@convention(c) (GL.UInt, UnsafePointer<GL.Char>?) -> GL.Int = load_glGetVaryingLocationNV
func load_glGetVaryingLocationNV(program:GL.UInt, name:UnsafePointer<GL.Char>?) -> GL.Int
{
    fp_glGetVaryingLocationNV = unsafeBitCast(get_fp("glGetVaryingLocationNV", support: [ss272]), to: Swift.type(of: fp_glGetVaryingLocationNV))
    return fp_glGetVaryingLocationNV(program, name)
}
public
func glGetVaryingLocationNV(program:GL.UInt, name:UnsafePointer<GL.Char>?) -> GL.Int
{
    return fp_glGetVaryingLocationNV(program, name)
}
public
func glGetVaryingLocationNV(_ program:GL.UInt, _ name:UnsafePointer<GL.Char>?) -> GL.Int
{
    return fp_glGetVaryingLocationNV(program, name)
}

var fp_glGetVertexArrayIndexed64iv:@convention(c) (GL.UInt, GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int64>?) -> () = load_glGetVertexArrayIndexed64iv
func load_glGetVertexArrayIndexed64iv(vaobj:GL.UInt, index:GL.UInt, pname:GL.Enum, param:UnsafeMutablePointer<GL.Int64>?)
{
    fp_glGetVertexArrayIndexed64iv = unsafeBitCast(get_fp("glGetVertexArrayIndexed64iv", support: [ss363, ss42]), to: Swift.type(of: fp_glGetVertexArrayIndexed64iv))
    fp_glGetVertexArrayIndexed64iv(vaobj, index, pname, param)
}
public
func glGetVertexArrayIndexed64iv(vaobj:GL.UInt, index:GL.UInt, pname:GL.Enum, param:UnsafeMutablePointer<GL.Int64>?)
{
    fp_glGetVertexArrayIndexed64iv(vaobj, index, pname, param)
}
public
func glGetVertexArrayIndexed64iv(_ vaobj:GL.UInt, _ index:GL.UInt, _ pname:GL.Enum, _ param:UnsafeMutablePointer<GL.Int64>?)
{
    fp_glGetVertexArrayIndexed64iv(vaobj, index, pname, param)
}

var fp_glGetVertexArrayIndexediv:@convention(c) (GL.UInt, GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetVertexArrayIndexediv
func load_glGetVertexArrayIndexediv(vaobj:GL.UInt, index:GL.UInt, pname:GL.Enum, param:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetVertexArrayIndexediv = unsafeBitCast(get_fp("glGetVertexArrayIndexediv", support: [ss363, ss42]), to: Swift.type(of: fp_glGetVertexArrayIndexediv))
    fp_glGetVertexArrayIndexediv(vaobj, index, pname, param)
}
public
func glGetVertexArrayIndexediv(vaobj:GL.UInt, index:GL.UInt, pname:GL.Enum, param:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetVertexArrayIndexediv(vaobj, index, pname, param)
}
public
func glGetVertexArrayIndexediv(_ vaobj:GL.UInt, _ index:GL.UInt, _ pname:GL.Enum, _ param:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetVertexArrayIndexediv(vaobj, index, pname, param)
}

var fp_glGetVertexArrayIntegeri_vEXT:@convention(c) (GL.UInt, GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetVertexArrayIntegeri_vEXT
func load_glGetVertexArrayIntegeri_vEXT(vaobj:GL.UInt, index:GL.UInt, pname:GL.Enum, param:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetVertexArrayIntegeri_vEXT = unsafeBitCast(get_fp("glGetVertexArrayIntegeri_vEXT", support: [ss143]), to: Swift.type(of: fp_glGetVertexArrayIntegeri_vEXT))
    fp_glGetVertexArrayIntegeri_vEXT(vaobj, index, pname, param)
}
public
func glGetVertexArrayIntegeri_vEXT(vaobj:GL.UInt, index:GL.UInt, pname:GL.Enum, param:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetVertexArrayIntegeri_vEXT(vaobj, index, pname, param)
}
public
func glGetVertexArrayIntegeri_vEXT(_ vaobj:GL.UInt, _ index:GL.UInt, _ pname:GL.Enum, _ param:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetVertexArrayIntegeri_vEXT(vaobj, index, pname, param)
}

var fp_glGetVertexArrayIntegervEXT:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetVertexArrayIntegervEXT
func load_glGetVertexArrayIntegervEXT(vaobj:GL.UInt, pname:GL.Enum, param:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetVertexArrayIntegervEXT = unsafeBitCast(get_fp("glGetVertexArrayIntegervEXT", support: [ss143]), to: Swift.type(of: fp_glGetVertexArrayIntegervEXT))
    fp_glGetVertexArrayIntegervEXT(vaobj, pname, param)
}
public
func glGetVertexArrayIntegervEXT(vaobj:GL.UInt, pname:GL.Enum, param:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetVertexArrayIntegervEXT(vaobj, pname, param)
}
public
func glGetVertexArrayIntegervEXT(_ vaobj:GL.UInt, _ pname:GL.Enum, _ param:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetVertexArrayIntegervEXT(vaobj, pname, param)
}

var fp_glGetVertexArrayPointeri_vEXT:@convention(c) (GL.UInt, GL.UInt, GL.Enum, UnsafeMutablePointer<UnsafeMutableRawPointer?>?) -> () = load_glGetVertexArrayPointeri_vEXT
func load_glGetVertexArrayPointeri_vEXT(vaobj:GL.UInt, index:GL.UInt, pname:GL.Enum, param:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    fp_glGetVertexArrayPointeri_vEXT = unsafeBitCast(get_fp("glGetVertexArrayPointeri_vEXT", support: [ss143]), to: Swift.type(of: fp_glGetVertexArrayPointeri_vEXT))
    fp_glGetVertexArrayPointeri_vEXT(vaobj, index, pname, param)
}
public
func glGetVertexArrayPointeri_vEXT(vaobj:GL.UInt, index:GL.UInt, pname:GL.Enum, param:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    fp_glGetVertexArrayPointeri_vEXT(vaobj, index, pname, param)
}
public
func glGetVertexArrayPointeri_vEXT(_ vaobj:GL.UInt, _ index:GL.UInt, _ pname:GL.Enum, _ param:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    fp_glGetVertexArrayPointeri_vEXT(vaobj, index, pname, param)
}

var fp_glGetVertexArrayPointervEXT:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<UnsafeMutableRawPointer?>?) -> () = load_glGetVertexArrayPointervEXT
func load_glGetVertexArrayPointervEXT(vaobj:GL.UInt, pname:GL.Enum, param:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    fp_glGetVertexArrayPointervEXT = unsafeBitCast(get_fp("glGetVertexArrayPointervEXT", support: [ss143]), to: Swift.type(of: fp_glGetVertexArrayPointervEXT))
    fp_glGetVertexArrayPointervEXT(vaobj, pname, param)
}
public
func glGetVertexArrayPointervEXT(vaobj:GL.UInt, pname:GL.Enum, param:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    fp_glGetVertexArrayPointervEXT(vaobj, pname, param)
}
public
func glGetVertexArrayPointervEXT(_ vaobj:GL.UInt, _ pname:GL.Enum, _ param:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    fp_glGetVertexArrayPointervEXT(vaobj, pname, param)
}

var fp_glGetVertexArrayiv:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetVertexArrayiv
func load_glGetVertexArrayiv(vaobj:GL.UInt, pname:GL.Enum, param:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetVertexArrayiv = unsafeBitCast(get_fp("glGetVertexArrayiv", support: [ss363, ss42]), to: Swift.type(of: fp_glGetVertexArrayiv))
    fp_glGetVertexArrayiv(vaobj, pname, param)
}
public
func glGetVertexArrayiv(vaobj:GL.UInt, pname:GL.Enum, param:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetVertexArrayiv(vaobj, pname, param)
}
public
func glGetVertexArrayiv(_ vaobj:GL.UInt, _ pname:GL.Enum, _ param:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetVertexArrayiv(vaobj, pname, param)
}

var fp_glGetVertexAttribArrayObjectfvATI:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetVertexAttribArrayObjectfvATI
func load_glGetVertexAttribArrayObjectfvATI(index:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetVertexAttribArrayObjectfvATI = unsafeBitCast(get_fp("glGetVertexAttribArrayObjectfvATI", support: [ss123]), to: Swift.type(of: fp_glGetVertexAttribArrayObjectfvATI))
    fp_glGetVertexAttribArrayObjectfvATI(index, pname, params)
}
public
func glGetVertexAttribArrayObjectfvATI(index:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetVertexAttribArrayObjectfvATI(index, pname, params)
}
public
func glGetVertexAttribArrayObjectfvATI(_ index:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetVertexAttribArrayObjectfvATI(index, pname, params)
}

var fp_glGetVertexAttribArrayObjectivATI:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetVertexAttribArrayObjectivATI
func load_glGetVertexAttribArrayObjectivATI(index:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetVertexAttribArrayObjectivATI = unsafeBitCast(get_fp("glGetVertexAttribArrayObjectivATI", support: [ss123]), to: Swift.type(of: fp_glGetVertexAttribArrayObjectivATI))
    fp_glGetVertexAttribArrayObjectivATI(index, pname, params)
}
public
func glGetVertexAttribArrayObjectivATI(index:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetVertexAttribArrayObjectivATI(index, pname, params)
}
public
func glGetVertexAttribArrayObjectivATI(_ index:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetVertexAttribArrayObjectivATI(index, pname, params)
}

var fp_glGetVertexAttribIiv:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetVertexAttribIiv
func load_glGetVertexAttribIiv(index:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetVertexAttribIiv = unsafeBitCast(get_fp("glGetVertexAttribIiv", support: [ss354, ss366]), to: Swift.type(of: fp_glGetVertexAttribIiv))
    fp_glGetVertexAttribIiv(index, pname, params)
}
public
func glGetVertexAttribIiv(index:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetVertexAttribIiv(index, pname, params)
}
public
func glGetVertexAttribIiv(_ index:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetVertexAttribIiv(index, pname, params)
}

var fp_glGetVertexAttribIivEXT:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetVertexAttribIivEXT
func load_glGetVertexAttribIivEXT(index:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetVertexAttribIivEXT = unsafeBitCast(get_fp("glGetVertexAttribIivEXT", support: [ss279]), to: Swift.type(of: fp_glGetVertexAttribIivEXT))
    fp_glGetVertexAttribIivEXT(index, pname, params)
}
public
func glGetVertexAttribIivEXT(index:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetVertexAttribIivEXT(index, pname, params)
}
public
func glGetVertexAttribIivEXT(_ index:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetVertexAttribIivEXT(index, pname, params)
}

var fp_glGetVertexAttribIuiv:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGetVertexAttribIuiv
func load_glGetVertexAttribIuiv(index:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetVertexAttribIuiv = unsafeBitCast(get_fp("glGetVertexAttribIuiv", support: [ss354, ss366]), to: Swift.type(of: fp_glGetVertexAttribIuiv))
    fp_glGetVertexAttribIuiv(index, pname, params)
}
public
func glGetVertexAttribIuiv(index:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetVertexAttribIuiv(index, pname, params)
}
public
func glGetVertexAttribIuiv(_ index:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetVertexAttribIuiv(index, pname, params)
}

var fp_glGetVertexAttribIuivEXT:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGetVertexAttribIuivEXT
func load_glGetVertexAttribIuivEXT(index:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetVertexAttribIuivEXT = unsafeBitCast(get_fp("glGetVertexAttribIuivEXT", support: [ss279]), to: Swift.type(of: fp_glGetVertexAttribIuivEXT))
    fp_glGetVertexAttribIuivEXT(index, pname, params)
}
public
func glGetVertexAttribIuivEXT(index:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetVertexAttribIuivEXT(index, pname, params)
}
public
func glGetVertexAttribIuivEXT(_ index:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetVertexAttribIuivEXT(index, pname, params)
}

var fp_glGetVertexAttribLdv:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Double>?) -> () = load_glGetVertexAttribLdv
func load_glGetVertexAttribLdv(index:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetVertexAttribLdv = unsafeBitCast(get_fp("glGetVertexAttribLdv", support: [ss359, ss106]), to: Swift.type(of: fp_glGetVertexAttribLdv))
    fp_glGetVertexAttribLdv(index, pname, params)
}
public
func glGetVertexAttribLdv(index:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetVertexAttribLdv(index, pname, params)
}
public
func glGetVertexAttribLdv(_ index:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetVertexAttribLdv(index, pname, params)
}

var fp_glGetVertexAttribLdvEXT:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Double>?) -> () = load_glGetVertexAttribLdvEXT
func load_glGetVertexAttribLdvEXT(index:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetVertexAttribLdvEXT = unsafeBitCast(get_fp("glGetVertexAttribLdvEXT", support: [ss203]), to: Swift.type(of: fp_glGetVertexAttribLdvEXT))
    fp_glGetVertexAttribLdvEXT(index, pname, params)
}
public
func glGetVertexAttribLdvEXT(index:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetVertexAttribLdvEXT(index, pname, params)
}
public
func glGetVertexAttribLdvEXT(_ index:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetVertexAttribLdvEXT(index, pname, params)
}

var fp_glGetVertexAttribLi64vNV:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int64EXT>?) -> () = load_glGetVertexAttribLi64vNV
func load_glGetVertexAttribLi64vNV(index:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int64EXT>?)
{
    fp_glGetVertexAttribLi64vNV = unsafeBitCast(get_fp("glGetVertexAttribLi64vNV", support: [ss276]), to: Swift.type(of: fp_glGetVertexAttribLi64vNV))
    fp_glGetVertexAttribLi64vNV(index, pname, params)
}
public
func glGetVertexAttribLi64vNV(index:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int64EXT>?)
{
    fp_glGetVertexAttribLi64vNV(index, pname, params)
}
public
func glGetVertexAttribLi64vNV(_ index:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int64EXT>?)
{
    fp_glGetVertexAttribLi64vNV(index, pname, params)
}

var fp_glGetVertexAttribLui64vARB:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.UInt64EXT>?) -> () = load_glGetVertexAttribLui64vARB
func load_glGetVertexAttribLui64vARB(index:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.UInt64EXT>?)
{
    fp_glGetVertexAttribLui64vARB = unsafeBitCast(get_fp("glGetVertexAttribLui64vARB", support: [ss29]), to: Swift.type(of: fp_glGetVertexAttribLui64vARB))
    fp_glGetVertexAttribLui64vARB(index, pname, params)
}
public
func glGetVertexAttribLui64vARB(index:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.UInt64EXT>?)
{
    fp_glGetVertexAttribLui64vARB(index, pname, params)
}
public
func glGetVertexAttribLui64vARB(_ index:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.UInt64EXT>?)
{
    fp_glGetVertexAttribLui64vARB(index, pname, params)
}

var fp_glGetVertexAttribLui64vNV:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.UInt64EXT>?) -> () = load_glGetVertexAttribLui64vNV
func load_glGetVertexAttribLui64vNV(index:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.UInt64EXT>?)
{
    fp_glGetVertexAttribLui64vNV = unsafeBitCast(get_fp("glGetVertexAttribLui64vNV", support: [ss276]), to: Swift.type(of: fp_glGetVertexAttribLui64vNV))
    fp_glGetVertexAttribLui64vNV(index, pname, params)
}
public
func glGetVertexAttribLui64vNV(index:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.UInt64EXT>?)
{
    fp_glGetVertexAttribLui64vNV(index, pname, params)
}
public
func glGetVertexAttribLui64vNV(_ index:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.UInt64EXT>?)
{
    fp_glGetVertexAttribLui64vNV(index, pname, params)
}

var fp_glGetVertexAttribPointerv:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<UnsafeMutableRawPointer?>?) -> () = load_glGetVertexAttribPointerv
func load_glGetVertexAttribPointerv(index:GL.UInt, pname:GL.Enum, pointer:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    fp_glGetVertexAttribPointerv = unsafeBitCast(get_fp("glGetVertexAttribPointerv", support: [ss352, ss365]), to: Swift.type(of: fp_glGetVertexAttribPointerv))
    fp_glGetVertexAttribPointerv(index, pname, pointer)
}
public
func glGetVertexAttribPointerv(index:GL.UInt, pname:GL.Enum, pointer:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    fp_glGetVertexAttribPointerv(index, pname, pointer)
}
public
func glGetVertexAttribPointerv(_ index:GL.UInt, _ pname:GL.Enum, _ pointer:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    fp_glGetVertexAttribPointerv(index, pname, pointer)
}

var fp_glGetVertexAttribPointervARB:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<UnsafeMutableRawPointer?>?) -> () = load_glGetVertexAttribPointervARB
func load_glGetVertexAttribPointervARB(index:GL.UInt, pname:GL.Enum, pointer:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    fp_glGetVertexAttribPointervARB = unsafeBitCast(get_fp("glGetVertexAttribPointervARB", support: [ss110, ss111]), to: Swift.type(of: fp_glGetVertexAttribPointervARB))
    fp_glGetVertexAttribPointervARB(index, pname, pointer)
}
public
func glGetVertexAttribPointervARB(index:GL.UInt, pname:GL.Enum, pointer:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    fp_glGetVertexAttribPointervARB(index, pname, pointer)
}
public
func glGetVertexAttribPointervARB(_ index:GL.UInt, _ pname:GL.Enum, _ pointer:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    fp_glGetVertexAttribPointervARB(index, pname, pointer)
}

var fp_glGetVertexAttribPointervNV:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<UnsafeMutableRawPointer?>?) -> () = load_glGetVertexAttribPointervNV
func load_glGetVertexAttribPointervNV(index:GL.UInt, pname:GL.Enum, pointer:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    fp_glGetVertexAttribPointervNV = unsafeBitCast(get_fp("glGetVertexAttribPointervNV", support: [ss278]), to: Swift.type(of: fp_glGetVertexAttribPointervNV))
    fp_glGetVertexAttribPointervNV(index, pname, pointer)
}
public
func glGetVertexAttribPointervNV(index:GL.UInt, pname:GL.Enum, pointer:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    fp_glGetVertexAttribPointervNV(index, pname, pointer)
}
public
func glGetVertexAttribPointervNV(_ index:GL.UInt, _ pname:GL.Enum, _ pointer:UnsafeMutablePointer<UnsafeMutableRawPointer?>?)
{
    fp_glGetVertexAttribPointervNV(index, pname, pointer)
}

var fp_glGetVertexAttribdv:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Double>?) -> () = load_glGetVertexAttribdv
func load_glGetVertexAttribdv(index:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetVertexAttribdv = unsafeBitCast(get_fp("glGetVertexAttribdv", support: [ss352]), to: Swift.type(of: fp_glGetVertexAttribdv))
    fp_glGetVertexAttribdv(index, pname, params)
}
public
func glGetVertexAttribdv(index:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetVertexAttribdv(index, pname, params)
}
public
func glGetVertexAttribdv(_ index:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetVertexAttribdv(index, pname, params)
}

var fp_glGetVertexAttribdvARB:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Double>?) -> () = load_glGetVertexAttribdvARB
func load_glGetVertexAttribdvARB(index:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetVertexAttribdvARB = unsafeBitCast(get_fp("glGetVertexAttribdvARB", support: [ss110, ss111]), to: Swift.type(of: fp_glGetVertexAttribdvARB))
    fp_glGetVertexAttribdvARB(index, pname, params)
}
public
func glGetVertexAttribdvARB(index:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetVertexAttribdvARB(index, pname, params)
}
public
func glGetVertexAttribdvARB(_ index:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetVertexAttribdvARB(index, pname, params)
}

var fp_glGetVertexAttribdvNV:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Double>?) -> () = load_glGetVertexAttribdvNV
func load_glGetVertexAttribdvNV(index:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetVertexAttribdvNV = unsafeBitCast(get_fp("glGetVertexAttribdvNV", support: [ss278]), to: Swift.type(of: fp_glGetVertexAttribdvNV))
    fp_glGetVertexAttribdvNV(index, pname, params)
}
public
func glGetVertexAttribdvNV(index:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetVertexAttribdvNV(index, pname, params)
}
public
func glGetVertexAttribdvNV(_ index:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetVertexAttribdvNV(index, pname, params)
}

var fp_glGetVertexAttribfv:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetVertexAttribfv
func load_glGetVertexAttribfv(index:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetVertexAttribfv = unsafeBitCast(get_fp("glGetVertexAttribfv", support: [ss352, ss365]), to: Swift.type(of: fp_glGetVertexAttribfv))
    fp_glGetVertexAttribfv(index, pname, params)
}
public
func glGetVertexAttribfv(index:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetVertexAttribfv(index, pname, params)
}
public
func glGetVertexAttribfv(_ index:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetVertexAttribfv(index, pname, params)
}

var fp_glGetVertexAttribfvARB:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetVertexAttribfvARB
func load_glGetVertexAttribfvARB(index:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetVertexAttribfvARB = unsafeBitCast(get_fp("glGetVertexAttribfvARB", support: [ss110, ss111]), to: Swift.type(of: fp_glGetVertexAttribfvARB))
    fp_glGetVertexAttribfvARB(index, pname, params)
}
public
func glGetVertexAttribfvARB(index:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetVertexAttribfvARB(index, pname, params)
}
public
func glGetVertexAttribfvARB(_ index:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetVertexAttribfvARB(index, pname, params)
}

var fp_glGetVertexAttribfvNV:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetVertexAttribfvNV
func load_glGetVertexAttribfvNV(index:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetVertexAttribfvNV = unsafeBitCast(get_fp("glGetVertexAttribfvNV", support: [ss278]), to: Swift.type(of: fp_glGetVertexAttribfvNV))
    fp_glGetVertexAttribfvNV(index, pname, params)
}
public
func glGetVertexAttribfvNV(index:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetVertexAttribfvNV(index, pname, params)
}
public
func glGetVertexAttribfvNV(_ index:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetVertexAttribfvNV(index, pname, params)
}

var fp_glGetVertexAttribiv:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetVertexAttribiv
func load_glGetVertexAttribiv(index:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetVertexAttribiv = unsafeBitCast(get_fp("glGetVertexAttribiv", support: [ss352, ss365]), to: Swift.type(of: fp_glGetVertexAttribiv))
    fp_glGetVertexAttribiv(index, pname, params)
}
public
func glGetVertexAttribiv(index:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetVertexAttribiv(index, pname, params)
}
public
func glGetVertexAttribiv(_ index:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetVertexAttribiv(index, pname, params)
}

var fp_glGetVertexAttribivARB:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetVertexAttribivARB
func load_glGetVertexAttribivARB(index:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetVertexAttribivARB = unsafeBitCast(get_fp("glGetVertexAttribivARB", support: [ss110, ss111]), to: Swift.type(of: fp_glGetVertexAttribivARB))
    fp_glGetVertexAttribivARB(index, pname, params)
}
public
func glGetVertexAttribivARB(index:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetVertexAttribivARB(index, pname, params)
}
public
func glGetVertexAttribivARB(_ index:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetVertexAttribivARB(index, pname, params)
}

var fp_glGetVertexAttribivNV:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetVertexAttribivNV
func load_glGetVertexAttribivNV(index:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetVertexAttribivNV = unsafeBitCast(get_fp("glGetVertexAttribivNV", support: [ss278]), to: Swift.type(of: fp_glGetVertexAttribivNV))
    fp_glGetVertexAttribivNV(index, pname, params)
}
public
func glGetVertexAttribivNV(index:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetVertexAttribivNV(index, pname, params)
}
public
func glGetVertexAttribivNV(_ index:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetVertexAttribivNV(index, pname, params)
}

var fp_glGetVideoCaptureStreamdvNV:@convention(c) (GL.UInt, GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Double>?) -> () = load_glGetVideoCaptureStreamdvNV
func load_glGetVideoCaptureStreamdvNV(video_capture_slot:GL.UInt, stream:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetVideoCaptureStreamdvNV = unsafeBitCast(get_fp("glGetVideoCaptureStreamdvNV", support: [ss280]), to: Swift.type(of: fp_glGetVideoCaptureStreamdvNV))
    fp_glGetVideoCaptureStreamdvNV(video_capture_slot, stream, pname, params)
}
public
func glGetVideoCaptureStreamdvNV(video_capture_slot:GL.UInt, stream:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetVideoCaptureStreamdvNV(video_capture_slot, stream, pname, params)
}
public
func glGetVideoCaptureStreamdvNV(_ video_capture_slot:GL.UInt, _ stream:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetVideoCaptureStreamdvNV(video_capture_slot, stream, pname, params)
}

var fp_glGetVideoCaptureStreamfvNV:@convention(c) (GL.UInt, GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetVideoCaptureStreamfvNV
func load_glGetVideoCaptureStreamfvNV(video_capture_slot:GL.UInt, stream:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetVideoCaptureStreamfvNV = unsafeBitCast(get_fp("glGetVideoCaptureStreamfvNV", support: [ss280]), to: Swift.type(of: fp_glGetVideoCaptureStreamfvNV))
    fp_glGetVideoCaptureStreamfvNV(video_capture_slot, stream, pname, params)
}
public
func glGetVideoCaptureStreamfvNV(video_capture_slot:GL.UInt, stream:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetVideoCaptureStreamfvNV(video_capture_slot, stream, pname, params)
}
public
func glGetVideoCaptureStreamfvNV(_ video_capture_slot:GL.UInt, _ stream:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetVideoCaptureStreamfvNV(video_capture_slot, stream, pname, params)
}

var fp_glGetVideoCaptureStreamivNV:@convention(c) (GL.UInt, GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetVideoCaptureStreamivNV
func load_glGetVideoCaptureStreamivNV(video_capture_slot:GL.UInt, stream:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetVideoCaptureStreamivNV = unsafeBitCast(get_fp("glGetVideoCaptureStreamivNV", support: [ss280]), to: Swift.type(of: fp_glGetVideoCaptureStreamivNV))
    fp_glGetVideoCaptureStreamivNV(video_capture_slot, stream, pname, params)
}
public
func glGetVideoCaptureStreamivNV(video_capture_slot:GL.UInt, stream:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetVideoCaptureStreamivNV(video_capture_slot, stream, pname, params)
}
public
func glGetVideoCaptureStreamivNV(_ video_capture_slot:GL.UInt, _ stream:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetVideoCaptureStreamivNV(video_capture_slot, stream, pname, params)
}

var fp_glGetVideoCaptureivNV:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetVideoCaptureivNV
func load_glGetVideoCaptureivNV(video_capture_slot:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetVideoCaptureivNV = unsafeBitCast(get_fp("glGetVideoCaptureivNV", support: [ss280]), to: Swift.type(of: fp_glGetVideoCaptureivNV))
    fp_glGetVideoCaptureivNV(video_capture_slot, pname, params)
}
public
func glGetVideoCaptureivNV(video_capture_slot:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetVideoCaptureivNV(video_capture_slot, pname, params)
}
public
func glGetVideoCaptureivNV(_ video_capture_slot:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetVideoCaptureivNV(video_capture_slot, pname, params)
}

var fp_glGetVideoi64vNV:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int64EXT>?) -> () = load_glGetVideoi64vNV
func load_glGetVideoi64vNV(video_slot:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int64EXT>?)
{
    fp_glGetVideoi64vNV = unsafeBitCast(get_fp("glGetVideoi64vNV", support: [ss263]), to: Swift.type(of: fp_glGetVideoi64vNV))
    fp_glGetVideoi64vNV(video_slot, pname, params)
}
public
func glGetVideoi64vNV(video_slot:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int64EXT>?)
{
    fp_glGetVideoi64vNV(video_slot, pname, params)
}
public
func glGetVideoi64vNV(_ video_slot:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int64EXT>?)
{
    fp_glGetVideoi64vNV(video_slot, pname, params)
}

var fp_glGetVideoivNV:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetVideoivNV
func load_glGetVideoivNV(video_slot:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetVideoivNV = unsafeBitCast(get_fp("glGetVideoivNV", support: [ss263]), to: Swift.type(of: fp_glGetVideoivNV))
    fp_glGetVideoivNV(video_slot, pname, params)
}
public
func glGetVideoivNV(video_slot:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetVideoivNV(video_slot, pname, params)
}
public
func glGetVideoivNV(_ video_slot:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetVideoivNV(video_slot, pname, params)
}

var fp_glGetVideoui64vNV:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.UInt64EXT>?) -> () = load_glGetVideoui64vNV
func load_glGetVideoui64vNV(video_slot:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.UInt64EXT>?)
{
    fp_glGetVideoui64vNV = unsafeBitCast(get_fp("glGetVideoui64vNV", support: [ss263]), to: Swift.type(of: fp_glGetVideoui64vNV))
    fp_glGetVideoui64vNV(video_slot, pname, params)
}
public
func glGetVideoui64vNV(video_slot:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.UInt64EXT>?)
{
    fp_glGetVideoui64vNV(video_slot, pname, params)
}
public
func glGetVideoui64vNV(_ video_slot:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.UInt64EXT>?)
{
    fp_glGetVideoui64vNV(video_slot, pname, params)
}

var fp_glGetVideouivNV:@convention(c) (GL.UInt, GL.Enum, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGetVideouivNV
func load_glGetVideouivNV(video_slot:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetVideouivNV = unsafeBitCast(get_fp("glGetVideouivNV", support: [ss263]), to: Swift.type(of: fp_glGetVideouivNV))
    fp_glGetVideouivNV(video_slot, pname, params)
}
public
func glGetVideouivNV(video_slot:GL.UInt, pname:GL.Enum, params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetVideouivNV(video_slot, pname, params)
}
public
func glGetVideouivNV(_ video_slot:GL.UInt, _ pname:GL.Enum, _ params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetVideouivNV(video_slot, pname, params)
}

var fp_glGetnColorTable:@convention(c) (GL.Enum, GL.Enum, GL.Enum, GL.Size, UnsafeMutableRawPointer?) -> () = load_glGetnColorTable
func load_glGetnColorTable(target:GL.Enum, format:GL.Enum, type:GL.Enum, bufSize:GL.Size, table:UnsafeMutableRawPointer?)
{
    fp_glGetnColorTable = unsafeBitCast(get_fp("glGetnColorTable", support: [ss363]), to: Swift.type(of: fp_glGetnColorTable))
    fp_glGetnColorTable(target, format, type, bufSize, table)
}
public
func glGetnColorTable(target:GL.Enum, format:GL.Enum, type:GL.Enum, bufSize:GL.Size, table:UnsafeMutableRawPointer?)
{
    fp_glGetnColorTable(target, format, type, bufSize, table)
}
public
func glGetnColorTable(_ target:GL.Enum, _ format:GL.Enum, _ type:GL.Enum, _ bufSize:GL.Size, _ table:UnsafeMutableRawPointer?)
{
    fp_glGetnColorTable(target, format, type, bufSize, table)
}

var fp_glGetnColorTableARB:@convention(c) (GL.Enum, GL.Enum, GL.Enum, GL.Size, UnsafeMutableRawPointer?) -> () = load_glGetnColorTableARB
func load_glGetnColorTableARB(target:GL.Enum, format:GL.Enum, type:GL.Enum, bufSize:GL.Size, table:UnsafeMutableRawPointer?)
{
    fp_glGetnColorTableARB = unsafeBitCast(get_fp("glGetnColorTableARB", support: [ss76]), to: Swift.type(of: fp_glGetnColorTableARB))
    fp_glGetnColorTableARB(target, format, type, bufSize, table)
}
public
func glGetnColorTableARB(target:GL.Enum, format:GL.Enum, type:GL.Enum, bufSize:GL.Size, table:UnsafeMutableRawPointer?)
{
    fp_glGetnColorTableARB(target, format, type, bufSize, table)
}
public
func glGetnColorTableARB(_ target:GL.Enum, _ format:GL.Enum, _ type:GL.Enum, _ bufSize:GL.Size, _ table:UnsafeMutableRawPointer?)
{
    fp_glGetnColorTableARB(target, format, type, bufSize, table)
}

var fp_glGetnCompressedTexImage:@convention(c) (GL.Enum, GL.Int, GL.Size, UnsafeMutableRawPointer?) -> () = load_glGetnCompressedTexImage
func load_glGetnCompressedTexImage(target:GL.Enum, lod:GL.Int, bufSize:GL.Size, pixels:UnsafeMutableRawPointer?)
{
    fp_glGetnCompressedTexImage = unsafeBitCast(get_fp("glGetnCompressedTexImage", support: [ss363]), to: Swift.type(of: fp_glGetnCompressedTexImage))
    fp_glGetnCompressedTexImage(target, lod, bufSize, pixels)
}
public
func glGetnCompressedTexImage(target:GL.Enum, lod:GL.Int, bufSize:GL.Size, pixels:UnsafeMutableRawPointer?)
{
    fp_glGetnCompressedTexImage(target, lod, bufSize, pixels)
}
public
func glGetnCompressedTexImage(_ target:GL.Enum, _ lod:GL.Int, _ bufSize:GL.Size, _ pixels:UnsafeMutableRawPointer?)
{
    fp_glGetnCompressedTexImage(target, lod, bufSize, pixels)
}

var fp_glGetnCompressedTexImageARB:@convention(c) (GL.Enum, GL.Int, GL.Size, UnsafeMutableRawPointer?) -> () = load_glGetnCompressedTexImageARB
func load_glGetnCompressedTexImageARB(target:GL.Enum, lod:GL.Int, bufSize:GL.Size, img:UnsafeMutableRawPointer?)
{
    fp_glGetnCompressedTexImageARB = unsafeBitCast(get_fp("glGetnCompressedTexImageARB", support: [ss76]), to: Swift.type(of: fp_glGetnCompressedTexImageARB))
    fp_glGetnCompressedTexImageARB(target, lod, bufSize, img)
}
public
func glGetnCompressedTexImageARB(target:GL.Enum, lod:GL.Int, bufSize:GL.Size, img:UnsafeMutableRawPointer?)
{
    fp_glGetnCompressedTexImageARB(target, lod, bufSize, img)
}
public
func glGetnCompressedTexImageARB(_ target:GL.Enum, _ lod:GL.Int, _ bufSize:GL.Size, _ img:UnsafeMutableRawPointer?)
{
    fp_glGetnCompressedTexImageARB(target, lod, bufSize, img)
}

var fp_glGetnConvolutionFilter:@convention(c) (GL.Enum, GL.Enum, GL.Enum, GL.Size, UnsafeMutableRawPointer?) -> () = load_glGetnConvolutionFilter
func load_glGetnConvolutionFilter(target:GL.Enum, format:GL.Enum, type:GL.Enum, bufSize:GL.Size, image:UnsafeMutableRawPointer?)
{
    fp_glGetnConvolutionFilter = unsafeBitCast(get_fp("glGetnConvolutionFilter", support: [ss363]), to: Swift.type(of: fp_glGetnConvolutionFilter))
    fp_glGetnConvolutionFilter(target, format, type, bufSize, image)
}
public
func glGetnConvolutionFilter(target:GL.Enum, format:GL.Enum, type:GL.Enum, bufSize:GL.Size, image:UnsafeMutableRawPointer?)
{
    fp_glGetnConvolutionFilter(target, format, type, bufSize, image)
}
public
func glGetnConvolutionFilter(_ target:GL.Enum, _ format:GL.Enum, _ type:GL.Enum, _ bufSize:GL.Size, _ image:UnsafeMutableRawPointer?)
{
    fp_glGetnConvolutionFilter(target, format, type, bufSize, image)
}

var fp_glGetnConvolutionFilterARB:@convention(c) (GL.Enum, GL.Enum, GL.Enum, GL.Size, UnsafeMutableRawPointer?) -> () = load_glGetnConvolutionFilterARB
func load_glGetnConvolutionFilterARB(target:GL.Enum, format:GL.Enum, type:GL.Enum, bufSize:GL.Size, image:UnsafeMutableRawPointer?)
{
    fp_glGetnConvolutionFilterARB = unsafeBitCast(get_fp("glGetnConvolutionFilterARB", support: [ss76]), to: Swift.type(of: fp_glGetnConvolutionFilterARB))
    fp_glGetnConvolutionFilterARB(target, format, type, bufSize, image)
}
public
func glGetnConvolutionFilterARB(target:GL.Enum, format:GL.Enum, type:GL.Enum, bufSize:GL.Size, image:UnsafeMutableRawPointer?)
{
    fp_glGetnConvolutionFilterARB(target, format, type, bufSize, image)
}
public
func glGetnConvolutionFilterARB(_ target:GL.Enum, _ format:GL.Enum, _ type:GL.Enum, _ bufSize:GL.Size, _ image:UnsafeMutableRawPointer?)
{
    fp_glGetnConvolutionFilterARB(target, format, type, bufSize, image)
}

var fp_glGetnHistogram:@convention(c) (GL.Enum, GL.Bool, GL.Enum, GL.Enum, GL.Size, UnsafeMutableRawPointer?) -> () = load_glGetnHistogram
func load_glGetnHistogram(target:GL.Enum, reset:GL.Bool, format:GL.Enum, type:GL.Enum, bufSize:GL.Size, values:UnsafeMutableRawPointer?)
{
    fp_glGetnHistogram = unsafeBitCast(get_fp("glGetnHistogram", support: [ss363]), to: Swift.type(of: fp_glGetnHistogram))
    fp_glGetnHistogram(target, reset, format, type, bufSize, values)
}
public
func glGetnHistogram(target:GL.Enum, reset:GL.Bool, format:GL.Enum, type:GL.Enum, bufSize:GL.Size, values:UnsafeMutableRawPointer?)
{
    fp_glGetnHistogram(target, reset, format, type, bufSize, values)
}
public
func glGetnHistogram(_ target:GL.Enum, _ reset:GL.Bool, _ format:GL.Enum, _ type:GL.Enum, _ bufSize:GL.Size, _ values:UnsafeMutableRawPointer?)
{
    fp_glGetnHistogram(target, reset, format, type, bufSize, values)
}

var fp_glGetnHistogramARB:@convention(c) (GL.Enum, GL.Bool, GL.Enum, GL.Enum, GL.Size, UnsafeMutableRawPointer?) -> () = load_glGetnHistogramARB
func load_glGetnHistogramARB(target:GL.Enum, reset:GL.Bool, format:GL.Enum, type:GL.Enum, bufSize:GL.Size, values:UnsafeMutableRawPointer?)
{
    fp_glGetnHistogramARB = unsafeBitCast(get_fp("glGetnHistogramARB", support: [ss76]), to: Swift.type(of: fp_glGetnHistogramARB))
    fp_glGetnHistogramARB(target, reset, format, type, bufSize, values)
}
public
func glGetnHistogramARB(target:GL.Enum, reset:GL.Bool, format:GL.Enum, type:GL.Enum, bufSize:GL.Size, values:UnsafeMutableRawPointer?)
{
    fp_glGetnHistogramARB(target, reset, format, type, bufSize, values)
}
public
func glGetnHistogramARB(_ target:GL.Enum, _ reset:GL.Bool, _ format:GL.Enum, _ type:GL.Enum, _ bufSize:GL.Size, _ values:UnsafeMutableRawPointer?)
{
    fp_glGetnHistogramARB(target, reset, format, type, bufSize, values)
}

var fp_glGetnMapdv:@convention(c) (GL.Enum, GL.Enum, GL.Size, UnsafeMutablePointer<GL.Double>?) -> () = load_glGetnMapdv
func load_glGetnMapdv(target:GL.Enum, query:GL.Enum, bufSize:GL.Size, v:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetnMapdv = unsafeBitCast(get_fp("glGetnMapdv", support: [ss363]), to: Swift.type(of: fp_glGetnMapdv))
    fp_glGetnMapdv(target, query, bufSize, v)
}
public
func glGetnMapdv(target:GL.Enum, query:GL.Enum, bufSize:GL.Size, v:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetnMapdv(target, query, bufSize, v)
}
public
func glGetnMapdv(_ target:GL.Enum, _ query:GL.Enum, _ bufSize:GL.Size, _ v:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetnMapdv(target, query, bufSize, v)
}

var fp_glGetnMapdvARB:@convention(c) (GL.Enum, GL.Enum, GL.Size, UnsafeMutablePointer<GL.Double>?) -> () = load_glGetnMapdvARB
func load_glGetnMapdvARB(target:GL.Enum, query:GL.Enum, bufSize:GL.Size, v:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetnMapdvARB = unsafeBitCast(get_fp("glGetnMapdvARB", support: [ss76]), to: Swift.type(of: fp_glGetnMapdvARB))
    fp_glGetnMapdvARB(target, query, bufSize, v)
}
public
func glGetnMapdvARB(target:GL.Enum, query:GL.Enum, bufSize:GL.Size, v:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetnMapdvARB(target, query, bufSize, v)
}
public
func glGetnMapdvARB(_ target:GL.Enum, _ query:GL.Enum, _ bufSize:GL.Size, _ v:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetnMapdvARB(target, query, bufSize, v)
}

var fp_glGetnMapfv:@convention(c) (GL.Enum, GL.Enum, GL.Size, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetnMapfv
func load_glGetnMapfv(target:GL.Enum, query:GL.Enum, bufSize:GL.Size, v:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetnMapfv = unsafeBitCast(get_fp("glGetnMapfv", support: [ss363]), to: Swift.type(of: fp_glGetnMapfv))
    fp_glGetnMapfv(target, query, bufSize, v)
}
public
func glGetnMapfv(target:GL.Enum, query:GL.Enum, bufSize:GL.Size, v:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetnMapfv(target, query, bufSize, v)
}
public
func glGetnMapfv(_ target:GL.Enum, _ query:GL.Enum, _ bufSize:GL.Size, _ v:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetnMapfv(target, query, bufSize, v)
}

var fp_glGetnMapfvARB:@convention(c) (GL.Enum, GL.Enum, GL.Size, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetnMapfvARB
func load_glGetnMapfvARB(target:GL.Enum, query:GL.Enum, bufSize:GL.Size, v:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetnMapfvARB = unsafeBitCast(get_fp("glGetnMapfvARB", support: [ss76]), to: Swift.type(of: fp_glGetnMapfvARB))
    fp_glGetnMapfvARB(target, query, bufSize, v)
}
public
func glGetnMapfvARB(target:GL.Enum, query:GL.Enum, bufSize:GL.Size, v:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetnMapfvARB(target, query, bufSize, v)
}
public
func glGetnMapfvARB(_ target:GL.Enum, _ query:GL.Enum, _ bufSize:GL.Size, _ v:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetnMapfvARB(target, query, bufSize, v)
}

var fp_glGetnMapiv:@convention(c) (GL.Enum, GL.Enum, GL.Size, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetnMapiv
func load_glGetnMapiv(target:GL.Enum, query:GL.Enum, bufSize:GL.Size, v:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetnMapiv = unsafeBitCast(get_fp("glGetnMapiv", support: [ss363]), to: Swift.type(of: fp_glGetnMapiv))
    fp_glGetnMapiv(target, query, bufSize, v)
}
public
func glGetnMapiv(target:GL.Enum, query:GL.Enum, bufSize:GL.Size, v:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetnMapiv(target, query, bufSize, v)
}
public
func glGetnMapiv(_ target:GL.Enum, _ query:GL.Enum, _ bufSize:GL.Size, _ v:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetnMapiv(target, query, bufSize, v)
}

var fp_glGetnMapivARB:@convention(c) (GL.Enum, GL.Enum, GL.Size, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetnMapivARB
func load_glGetnMapivARB(target:GL.Enum, query:GL.Enum, bufSize:GL.Size, v:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetnMapivARB = unsafeBitCast(get_fp("glGetnMapivARB", support: [ss76]), to: Swift.type(of: fp_glGetnMapivARB))
    fp_glGetnMapivARB(target, query, bufSize, v)
}
public
func glGetnMapivARB(target:GL.Enum, query:GL.Enum, bufSize:GL.Size, v:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetnMapivARB(target, query, bufSize, v)
}
public
func glGetnMapivARB(_ target:GL.Enum, _ query:GL.Enum, _ bufSize:GL.Size, _ v:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetnMapivARB(target, query, bufSize, v)
}

var fp_glGetnMinmax:@convention(c) (GL.Enum, GL.Bool, GL.Enum, GL.Enum, GL.Size, UnsafeMutableRawPointer?) -> () = load_glGetnMinmax
func load_glGetnMinmax(target:GL.Enum, reset:GL.Bool, format:GL.Enum, type:GL.Enum, bufSize:GL.Size, values:UnsafeMutableRawPointer?)
{
    fp_glGetnMinmax = unsafeBitCast(get_fp("glGetnMinmax", support: [ss363]), to: Swift.type(of: fp_glGetnMinmax))
    fp_glGetnMinmax(target, reset, format, type, bufSize, values)
}
public
func glGetnMinmax(target:GL.Enum, reset:GL.Bool, format:GL.Enum, type:GL.Enum, bufSize:GL.Size, values:UnsafeMutableRawPointer?)
{
    fp_glGetnMinmax(target, reset, format, type, bufSize, values)
}
public
func glGetnMinmax(_ target:GL.Enum, _ reset:GL.Bool, _ format:GL.Enum, _ type:GL.Enum, _ bufSize:GL.Size, _ values:UnsafeMutableRawPointer?)
{
    fp_glGetnMinmax(target, reset, format, type, bufSize, values)
}

var fp_glGetnMinmaxARB:@convention(c) (GL.Enum, GL.Bool, GL.Enum, GL.Enum, GL.Size, UnsafeMutableRawPointer?) -> () = load_glGetnMinmaxARB
func load_glGetnMinmaxARB(target:GL.Enum, reset:GL.Bool, format:GL.Enum, type:GL.Enum, bufSize:GL.Size, values:UnsafeMutableRawPointer?)
{
    fp_glGetnMinmaxARB = unsafeBitCast(get_fp("glGetnMinmaxARB", support: [ss76]), to: Swift.type(of: fp_glGetnMinmaxARB))
    fp_glGetnMinmaxARB(target, reset, format, type, bufSize, values)
}
public
func glGetnMinmaxARB(target:GL.Enum, reset:GL.Bool, format:GL.Enum, type:GL.Enum, bufSize:GL.Size, values:UnsafeMutableRawPointer?)
{
    fp_glGetnMinmaxARB(target, reset, format, type, bufSize, values)
}
public
func glGetnMinmaxARB(_ target:GL.Enum, _ reset:GL.Bool, _ format:GL.Enum, _ type:GL.Enum, _ bufSize:GL.Size, _ values:UnsafeMutableRawPointer?)
{
    fp_glGetnMinmaxARB(target, reset, format, type, bufSize, values)
}

var fp_glGetnPixelMapfv:@convention(c) (GL.Enum, GL.Size, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetnPixelMapfv
func load_glGetnPixelMapfv(map:GL.Enum, bufSize:GL.Size, values:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetnPixelMapfv = unsafeBitCast(get_fp("glGetnPixelMapfv", support: [ss363]), to: Swift.type(of: fp_glGetnPixelMapfv))
    fp_glGetnPixelMapfv(map, bufSize, values)
}
public
func glGetnPixelMapfv(map:GL.Enum, bufSize:GL.Size, values:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetnPixelMapfv(map, bufSize, values)
}
public
func glGetnPixelMapfv(_ map:GL.Enum, _ bufSize:GL.Size, _ values:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetnPixelMapfv(map, bufSize, values)
}

var fp_glGetnPixelMapfvARB:@convention(c) (GL.Enum, GL.Size, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetnPixelMapfvARB
func load_glGetnPixelMapfvARB(map:GL.Enum, bufSize:GL.Size, values:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetnPixelMapfvARB = unsafeBitCast(get_fp("glGetnPixelMapfvARB", support: [ss76]), to: Swift.type(of: fp_glGetnPixelMapfvARB))
    fp_glGetnPixelMapfvARB(map, bufSize, values)
}
public
func glGetnPixelMapfvARB(map:GL.Enum, bufSize:GL.Size, values:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetnPixelMapfvARB(map, bufSize, values)
}
public
func glGetnPixelMapfvARB(_ map:GL.Enum, _ bufSize:GL.Size, _ values:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetnPixelMapfvARB(map, bufSize, values)
}

var fp_glGetnPixelMapuiv:@convention(c) (GL.Enum, GL.Size, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGetnPixelMapuiv
func load_glGetnPixelMapuiv(map:GL.Enum, bufSize:GL.Size, values:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetnPixelMapuiv = unsafeBitCast(get_fp("glGetnPixelMapuiv", support: [ss363]), to: Swift.type(of: fp_glGetnPixelMapuiv))
    fp_glGetnPixelMapuiv(map, bufSize, values)
}
public
func glGetnPixelMapuiv(map:GL.Enum, bufSize:GL.Size, values:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetnPixelMapuiv(map, bufSize, values)
}
public
func glGetnPixelMapuiv(_ map:GL.Enum, _ bufSize:GL.Size, _ values:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetnPixelMapuiv(map, bufSize, values)
}

var fp_glGetnPixelMapuivARB:@convention(c) (GL.Enum, GL.Size, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGetnPixelMapuivARB
func load_glGetnPixelMapuivARB(map:GL.Enum, bufSize:GL.Size, values:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetnPixelMapuivARB = unsafeBitCast(get_fp("glGetnPixelMapuivARB", support: [ss76]), to: Swift.type(of: fp_glGetnPixelMapuivARB))
    fp_glGetnPixelMapuivARB(map, bufSize, values)
}
public
func glGetnPixelMapuivARB(map:GL.Enum, bufSize:GL.Size, values:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetnPixelMapuivARB(map, bufSize, values)
}
public
func glGetnPixelMapuivARB(_ map:GL.Enum, _ bufSize:GL.Size, _ values:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetnPixelMapuivARB(map, bufSize, values)
}

var fp_glGetnPixelMapusv:@convention(c) (GL.Enum, GL.Size, UnsafeMutablePointer<GL.UShort>?) -> () = load_glGetnPixelMapusv
func load_glGetnPixelMapusv(map:GL.Enum, bufSize:GL.Size, values:UnsafeMutablePointer<GL.UShort>?)
{
    fp_glGetnPixelMapusv = unsafeBitCast(get_fp("glGetnPixelMapusv", support: [ss363]), to: Swift.type(of: fp_glGetnPixelMapusv))
    fp_glGetnPixelMapusv(map, bufSize, values)
}
public
func glGetnPixelMapusv(map:GL.Enum, bufSize:GL.Size, values:UnsafeMutablePointer<GL.UShort>?)
{
    fp_glGetnPixelMapusv(map, bufSize, values)
}
public
func glGetnPixelMapusv(_ map:GL.Enum, _ bufSize:GL.Size, _ values:UnsafeMutablePointer<GL.UShort>?)
{
    fp_glGetnPixelMapusv(map, bufSize, values)
}

var fp_glGetnPixelMapusvARB:@convention(c) (GL.Enum, GL.Size, UnsafeMutablePointer<GL.UShort>?) -> () = load_glGetnPixelMapusvARB
func load_glGetnPixelMapusvARB(map:GL.Enum, bufSize:GL.Size, values:UnsafeMutablePointer<GL.UShort>?)
{
    fp_glGetnPixelMapusvARB = unsafeBitCast(get_fp("glGetnPixelMapusvARB", support: [ss76]), to: Swift.type(of: fp_glGetnPixelMapusvARB))
    fp_glGetnPixelMapusvARB(map, bufSize, values)
}
public
func glGetnPixelMapusvARB(map:GL.Enum, bufSize:GL.Size, values:UnsafeMutablePointer<GL.UShort>?)
{
    fp_glGetnPixelMapusvARB(map, bufSize, values)
}
public
func glGetnPixelMapusvARB(_ map:GL.Enum, _ bufSize:GL.Size, _ values:UnsafeMutablePointer<GL.UShort>?)
{
    fp_glGetnPixelMapusvARB(map, bufSize, values)
}

var fp_glGetnPolygonStipple:@convention(c) (GL.Size, UnsafeMutablePointer<GL.UByte>?) -> () = load_glGetnPolygonStipple
func load_glGetnPolygonStipple(bufSize:GL.Size, pattern:UnsafeMutablePointer<GL.UByte>?)
{
    fp_glGetnPolygonStipple = unsafeBitCast(get_fp("glGetnPolygonStipple", support: [ss363]), to: Swift.type(of: fp_glGetnPolygonStipple))
    fp_glGetnPolygonStipple(bufSize, pattern)
}
public
func glGetnPolygonStipple(bufSize:GL.Size, pattern:UnsafeMutablePointer<GL.UByte>?)
{
    fp_glGetnPolygonStipple(bufSize, pattern)
}
public
func glGetnPolygonStipple(_ bufSize:GL.Size, _ pattern:UnsafeMutablePointer<GL.UByte>?)
{
    fp_glGetnPolygonStipple(bufSize, pattern)
}

var fp_glGetnPolygonStippleARB:@convention(c) (GL.Size, UnsafeMutablePointer<GL.UByte>?) -> () = load_glGetnPolygonStippleARB
func load_glGetnPolygonStippleARB(bufSize:GL.Size, pattern:UnsafeMutablePointer<GL.UByte>?)
{
    fp_glGetnPolygonStippleARB = unsafeBitCast(get_fp("glGetnPolygonStippleARB", support: [ss76]), to: Swift.type(of: fp_glGetnPolygonStippleARB))
    fp_glGetnPolygonStippleARB(bufSize, pattern)
}
public
func glGetnPolygonStippleARB(bufSize:GL.Size, pattern:UnsafeMutablePointer<GL.UByte>?)
{
    fp_glGetnPolygonStippleARB(bufSize, pattern)
}
public
func glGetnPolygonStippleARB(_ bufSize:GL.Size, _ pattern:UnsafeMutablePointer<GL.UByte>?)
{
    fp_glGetnPolygonStippleARB(bufSize, pattern)
}

var fp_glGetnSeparableFilter:@convention(c) (GL.Enum, GL.Enum, GL.Enum, GL.Size, UnsafeMutableRawPointer?, GL.Size, UnsafeMutableRawPointer?, UnsafeMutableRawPointer?) -> () = load_glGetnSeparableFilter
func load_glGetnSeparableFilter(target:GL.Enum, format:GL.Enum, type:GL.Enum, rowBufSize:GL.Size, row:UnsafeMutableRawPointer?, columnBufSize:GL.Size, column:UnsafeMutableRawPointer?, span:UnsafeMutableRawPointer?)
{
    fp_glGetnSeparableFilter = unsafeBitCast(get_fp("glGetnSeparableFilter", support: [ss363]), to: Swift.type(of: fp_glGetnSeparableFilter))
    fp_glGetnSeparableFilter(target, format, type, rowBufSize, row, columnBufSize, column, span)
}
public
func glGetnSeparableFilter(target:GL.Enum, format:GL.Enum, type:GL.Enum, rowBufSize:GL.Size, row:UnsafeMutableRawPointer?, columnBufSize:GL.Size, column:UnsafeMutableRawPointer?, span:UnsafeMutableRawPointer?)
{
    fp_glGetnSeparableFilter(target, format, type, rowBufSize, row, columnBufSize, column, span)
}
public
func glGetnSeparableFilter(_ target:GL.Enum, _ format:GL.Enum, _ type:GL.Enum, _ rowBufSize:GL.Size, _ row:UnsafeMutableRawPointer?, _ columnBufSize:GL.Size, _ column:UnsafeMutableRawPointer?, _ span:UnsafeMutableRawPointer?)
{
    fp_glGetnSeparableFilter(target, format, type, rowBufSize, row, columnBufSize, column, span)
}

var fp_glGetnSeparableFilterARB:@convention(c) (GL.Enum, GL.Enum, GL.Enum, GL.Size, UnsafeMutableRawPointer?, GL.Size, UnsafeMutableRawPointer?, UnsafeMutableRawPointer?) -> () = load_glGetnSeparableFilterARB
func load_glGetnSeparableFilterARB(target:GL.Enum, format:GL.Enum, type:GL.Enum, rowBufSize:GL.Size, row:UnsafeMutableRawPointer?, columnBufSize:GL.Size, column:UnsafeMutableRawPointer?, span:UnsafeMutableRawPointer?)
{
    fp_glGetnSeparableFilterARB = unsafeBitCast(get_fp("glGetnSeparableFilterARB", support: [ss76]), to: Swift.type(of: fp_glGetnSeparableFilterARB))
    fp_glGetnSeparableFilterARB(target, format, type, rowBufSize, row, columnBufSize, column, span)
}
public
func glGetnSeparableFilterARB(target:GL.Enum, format:GL.Enum, type:GL.Enum, rowBufSize:GL.Size, row:UnsafeMutableRawPointer?, columnBufSize:GL.Size, column:UnsafeMutableRawPointer?, span:UnsafeMutableRawPointer?)
{
    fp_glGetnSeparableFilterARB(target, format, type, rowBufSize, row, columnBufSize, column, span)
}
public
func glGetnSeparableFilterARB(_ target:GL.Enum, _ format:GL.Enum, _ type:GL.Enum, _ rowBufSize:GL.Size, _ row:UnsafeMutableRawPointer?, _ columnBufSize:GL.Size, _ column:UnsafeMutableRawPointer?, _ span:UnsafeMutableRawPointer?)
{
    fp_glGetnSeparableFilterARB(target, format, type, rowBufSize, row, columnBufSize, column, span)
}

var fp_glGetnTexImage:@convention(c) (GL.Enum, GL.Int, GL.Enum, GL.Enum, GL.Size, UnsafeMutableRawPointer?) -> () = load_glGetnTexImage
func load_glGetnTexImage(target:GL.Enum, level:GL.Int, format:GL.Enum, type:GL.Enum, bufSize:GL.Size, pixels:UnsafeMutableRawPointer?)
{
    fp_glGetnTexImage = unsafeBitCast(get_fp("glGetnTexImage", support: [ss363]), to: Swift.type(of: fp_glGetnTexImage))
    fp_glGetnTexImage(target, level, format, type, bufSize, pixels)
}
public
func glGetnTexImage(target:GL.Enum, level:GL.Int, format:GL.Enum, type:GL.Enum, bufSize:GL.Size, pixels:UnsafeMutableRawPointer?)
{
    fp_glGetnTexImage(target, level, format, type, bufSize, pixels)
}
public
func glGetnTexImage(_ target:GL.Enum, _ level:GL.Int, _ format:GL.Enum, _ type:GL.Enum, _ bufSize:GL.Size, _ pixels:UnsafeMutableRawPointer?)
{
    fp_glGetnTexImage(target, level, format, type, bufSize, pixels)
}

var fp_glGetnTexImageARB:@convention(c) (GL.Enum, GL.Int, GL.Enum, GL.Enum, GL.Size, UnsafeMutableRawPointer?) -> () = load_glGetnTexImageARB
func load_glGetnTexImageARB(target:GL.Enum, level:GL.Int, format:GL.Enum, type:GL.Enum, bufSize:GL.Size, img:UnsafeMutableRawPointer?)
{
    fp_glGetnTexImageARB = unsafeBitCast(get_fp("glGetnTexImageARB", support: [ss76]), to: Swift.type(of: fp_glGetnTexImageARB))
    fp_glGetnTexImageARB(target, level, format, type, bufSize, img)
}
public
func glGetnTexImageARB(target:GL.Enum, level:GL.Int, format:GL.Enum, type:GL.Enum, bufSize:GL.Size, img:UnsafeMutableRawPointer?)
{
    fp_glGetnTexImageARB(target, level, format, type, bufSize, img)
}
public
func glGetnTexImageARB(_ target:GL.Enum, _ level:GL.Int, _ format:GL.Enum, _ type:GL.Enum, _ bufSize:GL.Size, _ img:UnsafeMutableRawPointer?)
{
    fp_glGetnTexImageARB(target, level, format, type, bufSize, img)
}

var fp_glGetnUniformdv:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafeMutablePointer<GL.Double>?) -> () = load_glGetnUniformdv
func load_glGetnUniformdv(program:GL.UInt, location:GL.Int, bufSize:GL.Size, params:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetnUniformdv = unsafeBitCast(get_fp("glGetnUniformdv", support: [ss363]), to: Swift.type(of: fp_glGetnUniformdv))
    fp_glGetnUniformdv(program, location, bufSize, params)
}
public
func glGetnUniformdv(program:GL.UInt, location:GL.Int, bufSize:GL.Size, params:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetnUniformdv(program, location, bufSize, params)
}
public
func glGetnUniformdv(_ program:GL.UInt, _ location:GL.Int, _ bufSize:GL.Size, _ params:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetnUniformdv(program, location, bufSize, params)
}

var fp_glGetnUniformdvARB:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafeMutablePointer<GL.Double>?) -> () = load_glGetnUniformdvARB
func load_glGetnUniformdvARB(program:GL.UInt, location:GL.Int, bufSize:GL.Size, params:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetnUniformdvARB = unsafeBitCast(get_fp("glGetnUniformdvARB", support: [ss76]), to: Swift.type(of: fp_glGetnUniformdvARB))
    fp_glGetnUniformdvARB(program, location, bufSize, params)
}
public
func glGetnUniformdvARB(program:GL.UInt, location:GL.Int, bufSize:GL.Size, params:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetnUniformdvARB(program, location, bufSize, params)
}
public
func glGetnUniformdvARB(_ program:GL.UInt, _ location:GL.Int, _ bufSize:GL.Size, _ params:UnsafeMutablePointer<GL.Double>?)
{
    fp_glGetnUniformdvARB(program, location, bufSize, params)
}

var fp_glGetnUniformfv:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetnUniformfv
func load_glGetnUniformfv(program:GL.UInt, location:GL.Int, bufSize:GL.Size, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetnUniformfv = unsafeBitCast(get_fp("glGetnUniformfv", support: [ss363, ss368, ss222]), to: Swift.type(of: fp_glGetnUniformfv))
    fp_glGetnUniformfv(program, location, bufSize, params)
}
public
func glGetnUniformfv(program:GL.UInt, location:GL.Int, bufSize:GL.Size, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetnUniformfv(program, location, bufSize, params)
}
public
func glGetnUniformfv(_ program:GL.UInt, _ location:GL.Int, _ bufSize:GL.Size, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetnUniformfv(program, location, bufSize, params)
}

var fp_glGetnUniformfvARB:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetnUniformfvARB
func load_glGetnUniformfvARB(program:GL.UInt, location:GL.Int, bufSize:GL.Size, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetnUniformfvARB = unsafeBitCast(get_fp("glGetnUniformfvARB", support: [ss76]), to: Swift.type(of: fp_glGetnUniformfvARB))
    fp_glGetnUniformfvARB(program, location, bufSize, params)
}
public
func glGetnUniformfvARB(program:GL.UInt, location:GL.Int, bufSize:GL.Size, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetnUniformfvARB(program, location, bufSize, params)
}
public
func glGetnUniformfvARB(_ program:GL.UInt, _ location:GL.Int, _ bufSize:GL.Size, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetnUniformfvARB(program, location, bufSize, params)
}

var fp_glGetnUniformfvEXT:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetnUniformfvEXT
func load_glGetnUniformfvEXT(program:GL.UInt, location:GL.Int, bufSize:GL.Size, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetnUniformfvEXT = unsafeBitCast(get_fp("glGetnUniformfvEXT", support: [ss180]), to: Swift.type(of: fp_glGetnUniformfvEXT))
    fp_glGetnUniformfvEXT(program, location, bufSize, params)
}
public
func glGetnUniformfvEXT(program:GL.UInt, location:GL.Int, bufSize:GL.Size, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetnUniformfvEXT(program, location, bufSize, params)
}
public
func glGetnUniformfvEXT(_ program:GL.UInt, _ location:GL.Int, _ bufSize:GL.Size, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetnUniformfvEXT(program, location, bufSize, params)
}

var fp_glGetnUniformfvKHR:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafeMutablePointer<GL.Float>?) -> () = load_glGetnUniformfvKHR
func load_glGetnUniformfvKHR(program:GL.UInt, location:GL.Int, bufSize:GL.Size, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetnUniformfvKHR = unsafeBitCast(get_fp("glGetnUniformfvKHR", support: [ss222]), to: Swift.type(of: fp_glGetnUniformfvKHR))
    fp_glGetnUniformfvKHR(program, location, bufSize, params)
}
public
func glGetnUniformfvKHR(program:GL.UInt, location:GL.Int, bufSize:GL.Size, params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetnUniformfvKHR(program, location, bufSize, params)
}
public
func glGetnUniformfvKHR(_ program:GL.UInt, _ location:GL.Int, _ bufSize:GL.Size, _ params:UnsafeMutablePointer<GL.Float>?)
{
    fp_glGetnUniformfvKHR(program, location, bufSize, params)
}

var fp_glGetnUniformi64vARB:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafeMutablePointer<GL.Int64>?) -> () = load_glGetnUniformi64vARB
func load_glGetnUniformi64vARB(program:GL.UInt, location:GL.Int, bufSize:GL.Size, params:UnsafeMutablePointer<GL.Int64>?)
{
    fp_glGetnUniformi64vARB = unsafeBitCast(get_fp("glGetnUniformi64vARB", support: [ss58]), to: Swift.type(of: fp_glGetnUniformi64vARB))
    fp_glGetnUniformi64vARB(program, location, bufSize, params)
}
public
func glGetnUniformi64vARB(program:GL.UInt, location:GL.Int, bufSize:GL.Size, params:UnsafeMutablePointer<GL.Int64>?)
{
    fp_glGetnUniformi64vARB(program, location, bufSize, params)
}
public
func glGetnUniformi64vARB(_ program:GL.UInt, _ location:GL.Int, _ bufSize:GL.Size, _ params:UnsafeMutablePointer<GL.Int64>?)
{
    fp_glGetnUniformi64vARB(program, location, bufSize, params)
}

var fp_glGetnUniformiv:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetnUniformiv
func load_glGetnUniformiv(program:GL.UInt, location:GL.Int, bufSize:GL.Size, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetnUniformiv = unsafeBitCast(get_fp("glGetnUniformiv", support: [ss363, ss368, ss222]), to: Swift.type(of: fp_glGetnUniformiv))
    fp_glGetnUniformiv(program, location, bufSize, params)
}
public
func glGetnUniformiv(program:GL.UInt, location:GL.Int, bufSize:GL.Size, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetnUniformiv(program, location, bufSize, params)
}
public
func glGetnUniformiv(_ program:GL.UInt, _ location:GL.Int, _ bufSize:GL.Size, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetnUniformiv(program, location, bufSize, params)
}

var fp_glGetnUniformivARB:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetnUniformivARB
func load_glGetnUniformivARB(program:GL.UInt, location:GL.Int, bufSize:GL.Size, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetnUniformivARB = unsafeBitCast(get_fp("glGetnUniformivARB", support: [ss76]), to: Swift.type(of: fp_glGetnUniformivARB))
    fp_glGetnUniformivARB(program, location, bufSize, params)
}
public
func glGetnUniformivARB(program:GL.UInt, location:GL.Int, bufSize:GL.Size, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetnUniformivARB(program, location, bufSize, params)
}
public
func glGetnUniformivARB(_ program:GL.UInt, _ location:GL.Int, _ bufSize:GL.Size, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetnUniformivARB(program, location, bufSize, params)
}

var fp_glGetnUniformivEXT:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetnUniformivEXT
func load_glGetnUniformivEXT(program:GL.UInt, location:GL.Int, bufSize:GL.Size, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetnUniformivEXT = unsafeBitCast(get_fp("glGetnUniformivEXT", support: [ss180]), to: Swift.type(of: fp_glGetnUniformivEXT))
    fp_glGetnUniformivEXT(program, location, bufSize, params)
}
public
func glGetnUniformivEXT(program:GL.UInt, location:GL.Int, bufSize:GL.Size, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetnUniformivEXT(program, location, bufSize, params)
}
public
func glGetnUniformivEXT(_ program:GL.UInt, _ location:GL.Int, _ bufSize:GL.Size, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetnUniformivEXT(program, location, bufSize, params)
}

var fp_glGetnUniformivKHR:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafeMutablePointer<GL.Int>?) -> () = load_glGetnUniformivKHR
func load_glGetnUniformivKHR(program:GL.UInt, location:GL.Int, bufSize:GL.Size, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetnUniformivKHR = unsafeBitCast(get_fp("glGetnUniformivKHR", support: [ss222]), to: Swift.type(of: fp_glGetnUniformivKHR))
    fp_glGetnUniformivKHR(program, location, bufSize, params)
}
public
func glGetnUniformivKHR(program:GL.UInt, location:GL.Int, bufSize:GL.Size, params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetnUniformivKHR(program, location, bufSize, params)
}
public
func glGetnUniformivKHR(_ program:GL.UInt, _ location:GL.Int, _ bufSize:GL.Size, _ params:UnsafeMutablePointer<GL.Int>?)
{
    fp_glGetnUniformivKHR(program, location, bufSize, params)
}

var fp_glGetnUniformui64vARB:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafeMutablePointer<GL.UInt64>?) -> () = load_glGetnUniformui64vARB
func load_glGetnUniformui64vARB(program:GL.UInt, location:GL.Int, bufSize:GL.Size, params:UnsafeMutablePointer<GL.UInt64>?)
{
    fp_glGetnUniformui64vARB = unsafeBitCast(get_fp("glGetnUniformui64vARB", support: [ss58]), to: Swift.type(of: fp_glGetnUniformui64vARB))
    fp_glGetnUniformui64vARB(program, location, bufSize, params)
}
public
func glGetnUniformui64vARB(program:GL.UInt, location:GL.Int, bufSize:GL.Size, params:UnsafeMutablePointer<GL.UInt64>?)
{
    fp_glGetnUniformui64vARB(program, location, bufSize, params)
}
public
func glGetnUniformui64vARB(_ program:GL.UInt, _ location:GL.Int, _ bufSize:GL.Size, _ params:UnsafeMutablePointer<GL.UInt64>?)
{
    fp_glGetnUniformui64vARB(program, location, bufSize, params)
}

var fp_glGetnUniformuiv:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGetnUniformuiv
func load_glGetnUniformuiv(program:GL.UInt, location:GL.Int, bufSize:GL.Size, params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetnUniformuiv = unsafeBitCast(get_fp("glGetnUniformuiv", support: [ss363, ss368, ss222]), to: Swift.type(of: fp_glGetnUniformuiv))
    fp_glGetnUniformuiv(program, location, bufSize, params)
}
public
func glGetnUniformuiv(program:GL.UInt, location:GL.Int, bufSize:GL.Size, params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetnUniformuiv(program, location, bufSize, params)
}
public
func glGetnUniformuiv(_ program:GL.UInt, _ location:GL.Int, _ bufSize:GL.Size, _ params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetnUniformuiv(program, location, bufSize, params)
}

var fp_glGetnUniformuivARB:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGetnUniformuivARB
func load_glGetnUniformuivARB(program:GL.UInt, location:GL.Int, bufSize:GL.Size, params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetnUniformuivARB = unsafeBitCast(get_fp("glGetnUniformuivARB", support: [ss76]), to: Swift.type(of: fp_glGetnUniformuivARB))
    fp_glGetnUniformuivARB(program, location, bufSize, params)
}
public
func glGetnUniformuivARB(program:GL.UInt, location:GL.Int, bufSize:GL.Size, params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetnUniformuivARB(program, location, bufSize, params)
}
public
func glGetnUniformuivARB(_ program:GL.UInt, _ location:GL.Int, _ bufSize:GL.Size, _ params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetnUniformuivARB(program, location, bufSize, params)
}

var fp_glGetnUniformuivKHR:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafeMutablePointer<GL.UInt>?) -> () = load_glGetnUniformuivKHR
func load_glGetnUniformuivKHR(program:GL.UInt, location:GL.Int, bufSize:GL.Size, params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetnUniformuivKHR = unsafeBitCast(get_fp("glGetnUniformuivKHR", support: [ss222]), to: Swift.type(of: fp_glGetnUniformuivKHR))
    fp_glGetnUniformuivKHR(program, location, bufSize, params)
}
public
func glGetnUniformuivKHR(program:GL.UInt, location:GL.Int, bufSize:GL.Size, params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetnUniformuivKHR(program, location, bufSize, params)
}
public
func glGetnUniformuivKHR(_ program:GL.UInt, _ location:GL.Int, _ bufSize:GL.Size, _ params:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glGetnUniformuivKHR(program, location, bufSize, params)
}

var fp_glGlobalAlphaFactorbSUN:@convention(c) (GL.Byte) -> () = load_glGlobalAlphaFactorbSUN
func load_glGlobalAlphaFactorbSUN(factor:GL.Byte)
{
    fp_glGlobalAlphaFactorbSUN = unsafeBitCast(get_fp("glGlobalAlphaFactorbSUN", support: [ss341]), to: Swift.type(of: fp_glGlobalAlphaFactorbSUN))
    fp_glGlobalAlphaFactorbSUN(factor)
}
public
func glGlobalAlphaFactorbSUN(factor:GL.Byte)
{
    fp_glGlobalAlphaFactorbSUN(factor)
}
public
func glGlobalAlphaFactorbSUN(_ factor:GL.Byte)
{
    fp_glGlobalAlphaFactorbSUN(factor)
}

var fp_glGlobalAlphaFactordSUN:@convention(c) (GL.Double) -> () = load_glGlobalAlphaFactordSUN
func load_glGlobalAlphaFactordSUN(factor:GL.Double)
{
    fp_glGlobalAlphaFactordSUN = unsafeBitCast(get_fp("glGlobalAlphaFactordSUN", support: [ss341]), to: Swift.type(of: fp_glGlobalAlphaFactordSUN))
    fp_glGlobalAlphaFactordSUN(factor)
}
public
func glGlobalAlphaFactordSUN(factor:GL.Double)
{
    fp_glGlobalAlphaFactordSUN(factor)
}
public
func glGlobalAlphaFactordSUN(_ factor:GL.Double)
{
    fp_glGlobalAlphaFactordSUN(factor)
}

var fp_glGlobalAlphaFactorfSUN:@convention(c) (GL.Float) -> () = load_glGlobalAlphaFactorfSUN
func load_glGlobalAlphaFactorfSUN(factor:GL.Float)
{
    fp_glGlobalAlphaFactorfSUN = unsafeBitCast(get_fp("glGlobalAlphaFactorfSUN", support: [ss341]), to: Swift.type(of: fp_glGlobalAlphaFactorfSUN))
    fp_glGlobalAlphaFactorfSUN(factor)
}
public
func glGlobalAlphaFactorfSUN(factor:GL.Float)
{
    fp_glGlobalAlphaFactorfSUN(factor)
}
public
func glGlobalAlphaFactorfSUN(_ factor:GL.Float)
{
    fp_glGlobalAlphaFactorfSUN(factor)
}

var fp_glGlobalAlphaFactoriSUN:@convention(c) (GL.Int) -> () = load_glGlobalAlphaFactoriSUN
func load_glGlobalAlphaFactoriSUN(factor:GL.Int)
{
    fp_glGlobalAlphaFactoriSUN = unsafeBitCast(get_fp("glGlobalAlphaFactoriSUN", support: [ss341]), to: Swift.type(of: fp_glGlobalAlphaFactoriSUN))
    fp_glGlobalAlphaFactoriSUN(factor)
}
public
func glGlobalAlphaFactoriSUN(factor:GL.Int)
{
    fp_glGlobalAlphaFactoriSUN(factor)
}
public
func glGlobalAlphaFactoriSUN(_ factor:GL.Int)
{
    fp_glGlobalAlphaFactoriSUN(factor)
}

var fp_glGlobalAlphaFactorsSUN:@convention(c) (GL.Short) -> () = load_glGlobalAlphaFactorsSUN
func load_glGlobalAlphaFactorsSUN(factor:GL.Short)
{
    fp_glGlobalAlphaFactorsSUN = unsafeBitCast(get_fp("glGlobalAlphaFactorsSUN", support: [ss341]), to: Swift.type(of: fp_glGlobalAlphaFactorsSUN))
    fp_glGlobalAlphaFactorsSUN(factor)
}
public
func glGlobalAlphaFactorsSUN(factor:GL.Short)
{
    fp_glGlobalAlphaFactorsSUN(factor)
}
public
func glGlobalAlphaFactorsSUN(_ factor:GL.Short)
{
    fp_glGlobalAlphaFactorsSUN(factor)
}

var fp_glGlobalAlphaFactorubSUN:@convention(c) (GL.UByte) -> () = load_glGlobalAlphaFactorubSUN
func load_glGlobalAlphaFactorubSUN(factor:GL.UByte)
{
    fp_glGlobalAlphaFactorubSUN = unsafeBitCast(get_fp("glGlobalAlphaFactorubSUN", support: [ss341]), to: Swift.type(of: fp_glGlobalAlphaFactorubSUN))
    fp_glGlobalAlphaFactorubSUN(factor)
}
public
func glGlobalAlphaFactorubSUN(factor:GL.UByte)
{
    fp_glGlobalAlphaFactorubSUN(factor)
}
public
func glGlobalAlphaFactorubSUN(_ factor:GL.UByte)
{
    fp_glGlobalAlphaFactorubSUN(factor)
}

var fp_glGlobalAlphaFactoruiSUN:@convention(c) (GL.UInt) -> () = load_glGlobalAlphaFactoruiSUN
func load_glGlobalAlphaFactoruiSUN(factor:GL.UInt)
{
    fp_glGlobalAlphaFactoruiSUN = unsafeBitCast(get_fp("glGlobalAlphaFactoruiSUN", support: [ss341]), to: Swift.type(of: fp_glGlobalAlphaFactoruiSUN))
    fp_glGlobalAlphaFactoruiSUN(factor)
}
public
func glGlobalAlphaFactoruiSUN(factor:GL.UInt)
{
    fp_glGlobalAlphaFactoruiSUN(factor)
}
public
func glGlobalAlphaFactoruiSUN(_ factor:GL.UInt)
{
    fp_glGlobalAlphaFactoruiSUN(factor)
}

var fp_glGlobalAlphaFactorusSUN:@convention(c) (GL.UShort) -> () = load_glGlobalAlphaFactorusSUN
func load_glGlobalAlphaFactorusSUN(factor:GL.UShort)
{
    fp_glGlobalAlphaFactorusSUN = unsafeBitCast(get_fp("glGlobalAlphaFactorusSUN", support: [ss341]), to: Swift.type(of: fp_glGlobalAlphaFactorusSUN))
    fp_glGlobalAlphaFactorusSUN(factor)
}
public
func glGlobalAlphaFactorusSUN(factor:GL.UShort)
{
    fp_glGlobalAlphaFactorusSUN(factor)
}
public
func glGlobalAlphaFactorusSUN(_ factor:GL.UShort)
{
    fp_glGlobalAlphaFactorusSUN(factor)
}

var fp_glHint:@convention(c) (GL.Enum, GL.Enum) -> () = load_glHint
func load_glHint(target:GL.Enum, mode:GL.Enum)
{
    fp_glHint = unsafeBitCast(get_fp("glHint", support: [ss346, ss365]), to: Swift.type(of: fp_glHint))
    fp_glHint(target, mode)
}
public
func glHint(target:GL.Enum, mode:GL.Enum)
{
    fp_glHint(target, mode)
}
public
func glHint(_ target:GL.Enum, _ mode:GL.Enum)
{
    fp_glHint(target, mode)
}

var fp_glHintPGI:@convention(c) (GL.Enum, GL.Int) -> () = load_glHintPGI
func load_glHintPGI(target:GL.Enum, mode:GL.Int)
{
    fp_glHintPGI = unsafeBitCast(get_fp("glHintPGI", support: [ss313]), to: Swift.type(of: fp_glHintPGI))
    fp_glHintPGI(target, mode)
}
public
func glHintPGI(target:GL.Enum, mode:GL.Int)
{
    fp_glHintPGI(target, mode)
}
public
func glHintPGI(_ target:GL.Enum, _ mode:GL.Int)
{
    fp_glHintPGI(target, mode)
}

var fp_glHistogram:@convention(c) (GL.Enum, GL.Size, GL.Enum, GL.Bool) -> () = load_glHistogram
func load_glHistogram(target:GL.Enum, width:GL.Size, internalformat:GL.Enum, sink:GL.Bool)
{
    fp_glHistogram = unsafeBitCast(get_fp("glHistogram", support: [ss59]), to: Swift.type(of: fp_glHistogram))
    fp_glHistogram(target, width, internalformat, sink)
}
public
func glHistogram(target:GL.Enum, width:GL.Size, internalformat:GL.Enum, sink:GL.Bool)
{
    fp_glHistogram(target, width, internalformat, sink)
}
public
func glHistogram(_ target:GL.Enum, _ width:GL.Size, _ internalformat:GL.Enum, _ sink:GL.Bool)
{
    fp_glHistogram(target, width, internalformat, sink)
}

var fp_glHistogramEXT:@convention(c) (GL.Enum, GL.Size, GL.Enum, GL.Bool) -> () = load_glHistogramEXT
func load_glHistogramEXT(target:GL.Enum, width:GL.Size, internalformat:GL.Enum, sink:GL.Bool)
{
    fp_glHistogramEXT = unsafeBitCast(get_fp("glHistogramEXT", support: [ss160]), to: Swift.type(of: fp_glHistogramEXT))
    fp_glHistogramEXT(target, width, internalformat, sink)
}
public
func glHistogramEXT(target:GL.Enum, width:GL.Size, internalformat:GL.Enum, sink:GL.Bool)
{
    fp_glHistogramEXT(target, width, internalformat, sink)
}
public
func glHistogramEXT(_ target:GL.Enum, _ width:GL.Size, _ internalformat:GL.Enum, _ sink:GL.Bool)
{
    fp_glHistogramEXT(target, width, internalformat, sink)
}

var fp_glIglooInterfaceSGIX:@convention(c) (GL.Enum, UnsafeRawPointer?) -> () = load_glIglooInterfaceSGIX
func load_glIglooInterfaceSGIX(pname:GL.Enum, params:UnsafeRawPointer?)
{
    fp_glIglooInterfaceSGIX = unsafeBitCast(get_fp("glIglooInterfaceSGIX", support: [ss333]), to: Swift.type(of: fp_glIglooInterfaceSGIX))
    fp_glIglooInterfaceSGIX(pname, params)
}
public
func glIglooInterfaceSGIX(pname:GL.Enum, params:UnsafeRawPointer?)
{
    fp_glIglooInterfaceSGIX(pname, params)
}
public
func glIglooInterfaceSGIX(_ pname:GL.Enum, _ params:UnsafeRawPointer?)
{
    fp_glIglooInterfaceSGIX(pname, params)
}

var fp_glImageTransformParameterfHP:@convention(c) (GL.Enum, GL.Enum, GL.Float) -> () = load_glImageTransformParameterfHP
func load_glImageTransformParameterfHP(target:GL.Enum, pname:GL.Enum, param:GL.Float)
{
    fp_glImageTransformParameterfHP = unsafeBitCast(get_fp("glImageTransformParameterfHP", support: [ss209]), to: Swift.type(of: fp_glImageTransformParameterfHP))
    fp_glImageTransformParameterfHP(target, pname, param)
}
public
func glImageTransformParameterfHP(target:GL.Enum, pname:GL.Enum, param:GL.Float)
{
    fp_glImageTransformParameterfHP(target, pname, param)
}
public
func glImageTransformParameterfHP(_ target:GL.Enum, _ pname:GL.Enum, _ param:GL.Float)
{
    fp_glImageTransformParameterfHP(target, pname, param)
}

var fp_glImageTransformParameterfvHP:@convention(c) (GL.Enum, GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glImageTransformParameterfvHP
func load_glImageTransformParameterfvHP(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glImageTransformParameterfvHP = unsafeBitCast(get_fp("glImageTransformParameterfvHP", support: [ss209]), to: Swift.type(of: fp_glImageTransformParameterfvHP))
    fp_glImageTransformParameterfvHP(target, pname, params)
}
public
func glImageTransformParameterfvHP(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glImageTransformParameterfvHP(target, pname, params)
}
public
func glImageTransformParameterfvHP(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.Float>?)
{
    fp_glImageTransformParameterfvHP(target, pname, params)
}

var fp_glImageTransformParameteriHP:@convention(c) (GL.Enum, GL.Enum, GL.Int) -> () = load_glImageTransformParameteriHP
func load_glImageTransformParameteriHP(target:GL.Enum, pname:GL.Enum, param:GL.Int)
{
    fp_glImageTransformParameteriHP = unsafeBitCast(get_fp("glImageTransformParameteriHP", support: [ss209]), to: Swift.type(of: fp_glImageTransformParameteriHP))
    fp_glImageTransformParameteriHP(target, pname, param)
}
public
func glImageTransformParameteriHP(target:GL.Enum, pname:GL.Enum, param:GL.Int)
{
    fp_glImageTransformParameteriHP(target, pname, param)
}
public
func glImageTransformParameteriHP(_ target:GL.Enum, _ pname:GL.Enum, _ param:GL.Int)
{
    fp_glImageTransformParameteriHP(target, pname, param)
}

var fp_glImageTransformParameterivHP:@convention(c) (GL.Enum, GL.Enum, UnsafePointer<GL.Int>?) -> () = load_glImageTransformParameterivHP
func load_glImageTransformParameterivHP(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glImageTransformParameterivHP = unsafeBitCast(get_fp("glImageTransformParameterivHP", support: [ss209]), to: Swift.type(of: fp_glImageTransformParameterivHP))
    fp_glImageTransformParameterivHP(target, pname, params)
}
public
func glImageTransformParameterivHP(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glImageTransformParameterivHP(target, pname, params)
}
public
func glImageTransformParameterivHP(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.Int>?)
{
    fp_glImageTransformParameterivHP(target, pname, params)
}

var fp_glImportSyncEXT:@convention(c) (GL.Enum, GL.IntPointer, GL.Bitfield) -> GL.Sync = load_glImportSyncEXT
func load_glImportSyncEXT(external_sync_type:GL.Enum, external_sync:GL.IntPointer, flags:GL.Bitfield) -> GL.Sync
{
    fp_glImportSyncEXT = unsafeBitCast(get_fp("glImportSyncEXT", support: [ss206]), to: Swift.type(of: fp_glImportSyncEXT))
    return fp_glImportSyncEXT(external_sync_type, external_sync, flags)
}
public
func glImportSyncEXT(external_sync_type:GL.Enum, external_sync:GL.IntPointer, flags:GL.Bitfield) -> GL.Sync
{
    return fp_glImportSyncEXT(external_sync_type, external_sync, flags)
}
public
func glImportSyncEXT(_ external_sync_type:GL.Enum, _ external_sync:GL.IntPointer, _ flags:GL.Bitfield) -> GL.Sync
{
    return fp_glImportSyncEXT(external_sync_type, external_sync, flags)
}

var fp_glIndexFormatNV:@convention(c) (GL.Enum, GL.Size) -> () = load_glIndexFormatNV
func load_glIndexFormatNV(type:GL.Enum, stride:GL.Size)
{
    fp_glIndexFormatNV = unsafeBitCast(get_fp("glIndexFormatNV", support: [ss277]), to: Swift.type(of: fp_glIndexFormatNV))
    fp_glIndexFormatNV(type, stride)
}
public
func glIndexFormatNV(type:GL.Enum, stride:GL.Size)
{
    fp_glIndexFormatNV(type, stride)
}
public
func glIndexFormatNV(_ type:GL.Enum, _ stride:GL.Size)
{
    fp_glIndexFormatNV(type, stride)
}

var fp_glIndexFuncEXT:@convention(c) (GL.Enum, GL.ClampFloat) -> () = load_glIndexFuncEXT
func load_glIndexFuncEXT(f:GL.Enum, ref:GL.ClampFloat)
{
    fp_glIndexFuncEXT = unsafeBitCast(get_fp("glIndexFuncEXT", support: [ss161]), to: Swift.type(of: fp_glIndexFuncEXT))
    fp_glIndexFuncEXT(f, ref)
}
public
func glIndexFuncEXT(f:GL.Enum, ref:GL.ClampFloat)
{
    fp_glIndexFuncEXT(f, ref)
}
public
func glIndexFuncEXT(_ f:GL.Enum, _ ref:GL.ClampFloat)
{
    fp_glIndexFuncEXT(f, ref)
}

var fp_glIndexMask:@convention(c) (GL.UInt) -> () = load_glIndexMask
func load_glIndexMask(mask:GL.UInt)
{
    fp_glIndexMask = unsafeBitCast(get_fp("glIndexMask", support: [ss346, ss369]), to: Swift.type(of: fp_glIndexMask))
    fp_glIndexMask(mask)
}
public
func glIndexMask(mask:GL.UInt)
{
    fp_glIndexMask(mask)
}
public
func glIndexMask(_ mask:GL.UInt)
{
    fp_glIndexMask(mask)
}

var fp_glIndexMaterialEXT:@convention(c) (GL.Enum, GL.Enum) -> () = load_glIndexMaterialEXT
func load_glIndexMaterialEXT(face:GL.Enum, mode:GL.Enum)
{
    fp_glIndexMaterialEXT = unsafeBitCast(get_fp("glIndexMaterialEXT", support: [ss162]), to: Swift.type(of: fp_glIndexMaterialEXT))
    fp_glIndexMaterialEXT(face, mode)
}
public
func glIndexMaterialEXT(face:GL.Enum, mode:GL.Enum)
{
    fp_glIndexMaterialEXT(face, mode)
}
public
func glIndexMaterialEXT(_ face:GL.Enum, _ mode:GL.Enum)
{
    fp_glIndexMaterialEXT(face, mode)
}

var fp_glIndexPointer:@convention(c) (GL.Enum, GL.Size, UnsafeRawPointer?) -> () = load_glIndexPointer
func load_glIndexPointer(type:GL.Enum, stride:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glIndexPointer = unsafeBitCast(get_fp("glIndexPointer", support: [ss347, ss369]), to: Swift.type(of: fp_glIndexPointer))
    fp_glIndexPointer(type, stride, pointer)
}
public
func glIndexPointer(type:GL.Enum, stride:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glIndexPointer(type, stride, pointer)
}
public
func glIndexPointer(_ type:GL.Enum, _ stride:GL.Size, _ pointer:UnsafeRawPointer?)
{
    fp_glIndexPointer(type, stride, pointer)
}

var fp_glIndexPointerEXT:@convention(c) (GL.Enum, GL.Size, GL.Size, UnsafeRawPointer?) -> () = load_glIndexPointerEXT
func load_glIndexPointerEXT(type:GL.Enum, stride:GL.Size, count:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glIndexPointerEXT = unsafeBitCast(get_fp("glIndexPointerEXT", support: [ss202]), to: Swift.type(of: fp_glIndexPointerEXT))
    fp_glIndexPointerEXT(type, stride, count, pointer)
}
public
func glIndexPointerEXT(type:GL.Enum, stride:GL.Size, count:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glIndexPointerEXT(type, stride, count, pointer)
}
public
func glIndexPointerEXT(_ type:GL.Enum, _ stride:GL.Size, _ count:GL.Size, _ pointer:UnsafeRawPointer?)
{
    fp_glIndexPointerEXT(type, stride, count, pointer)
}

var fp_glIndexPointerListIBM:@convention(c) (GL.Enum, GL.Int, UnsafeMutablePointer<UnsafeRawPointer?>?, GL.Int) -> () = load_glIndexPointerListIBM
func load_glIndexPointerListIBM(type:GL.Enum, stride:GL.Int, pointer:UnsafeMutablePointer<UnsafeRawPointer?>?, ptrstride:GL.Int)
{
    fp_glIndexPointerListIBM = unsafeBitCast(get_fp("glIndexPointerListIBM", support: [ss212]), to: Swift.type(of: fp_glIndexPointerListIBM))
    fp_glIndexPointerListIBM(type, stride, pointer, ptrstride)
}
public
func glIndexPointerListIBM(type:GL.Enum, stride:GL.Int, pointer:UnsafeMutablePointer<UnsafeRawPointer?>?, ptrstride:GL.Int)
{
    fp_glIndexPointerListIBM(type, stride, pointer, ptrstride)
}
public
func glIndexPointerListIBM(_ type:GL.Enum, _ stride:GL.Int, _ pointer:UnsafeMutablePointer<UnsafeRawPointer?>?, _ ptrstride:GL.Int)
{
    fp_glIndexPointerListIBM(type, stride, pointer, ptrstride)
}

var fp_glIndexd:@convention(c) (GL.Double) -> () = load_glIndexd
func load_glIndexd(c:GL.Double)
{
    fp_glIndexd = unsafeBitCast(get_fp("glIndexd", support: [ss346, ss369]), to: Swift.type(of: fp_glIndexd))
    fp_glIndexd(c)
}
public
func glIndexd(c:GL.Double)
{
    fp_glIndexd(c)
}
public
func glIndexd(_ c:GL.Double)
{
    fp_glIndexd(c)
}

var fp_glIndexdv:@convention(c) (UnsafePointer<GL.Double>?) -> () = load_glIndexdv
func load_glIndexdv(c:UnsafePointer<GL.Double>?)
{
    fp_glIndexdv = unsafeBitCast(get_fp("glIndexdv", support: [ss346, ss369]), to: Swift.type(of: fp_glIndexdv))
    fp_glIndexdv(c)
}
public
func glIndexdv(c:UnsafePointer<GL.Double>?)
{
    fp_glIndexdv(c)
}
public
func glIndexdv(_ c:UnsafePointer<GL.Double>?)
{
    fp_glIndexdv(c)
}

var fp_glIndexf:@convention(c) (GL.Float) -> () = load_glIndexf
func load_glIndexf(c:GL.Float)
{
    fp_glIndexf = unsafeBitCast(get_fp("glIndexf", support: [ss346, ss369]), to: Swift.type(of: fp_glIndexf))
    fp_glIndexf(c)
}
public
func glIndexf(c:GL.Float)
{
    fp_glIndexf(c)
}
public
func glIndexf(_ c:GL.Float)
{
    fp_glIndexf(c)
}

var fp_glIndexfv:@convention(c) (UnsafePointer<GL.Float>?) -> () = load_glIndexfv
func load_glIndexfv(c:UnsafePointer<GL.Float>?)
{
    fp_glIndexfv = unsafeBitCast(get_fp("glIndexfv", support: [ss346, ss369]), to: Swift.type(of: fp_glIndexfv))
    fp_glIndexfv(c)
}
public
func glIndexfv(c:UnsafePointer<GL.Float>?)
{
    fp_glIndexfv(c)
}
public
func glIndexfv(_ c:UnsafePointer<GL.Float>?)
{
    fp_glIndexfv(c)
}

var fp_glIndexi:@convention(c) (GL.Int) -> () = load_glIndexi
func load_glIndexi(c:GL.Int)
{
    fp_glIndexi = unsafeBitCast(get_fp("glIndexi", support: [ss346, ss369]), to: Swift.type(of: fp_glIndexi))
    fp_glIndexi(c)
}
public
func glIndexi(c:GL.Int)
{
    fp_glIndexi(c)
}
public
func glIndexi(_ c:GL.Int)
{
    fp_glIndexi(c)
}

var fp_glIndexiv:@convention(c) (UnsafePointer<GL.Int>?) -> () = load_glIndexiv
func load_glIndexiv(c:UnsafePointer<GL.Int>?)
{
    fp_glIndexiv = unsafeBitCast(get_fp("glIndexiv", support: [ss346, ss369]), to: Swift.type(of: fp_glIndexiv))
    fp_glIndexiv(c)
}
public
func glIndexiv(c:UnsafePointer<GL.Int>?)
{
    fp_glIndexiv(c)
}
public
func glIndexiv(_ c:UnsafePointer<GL.Int>?)
{
    fp_glIndexiv(c)
}

var fp_glIndexs:@convention(c) (GL.Short) -> () = load_glIndexs
func load_glIndexs(c:GL.Short)
{
    fp_glIndexs = unsafeBitCast(get_fp("glIndexs", support: [ss346, ss369]), to: Swift.type(of: fp_glIndexs))
    fp_glIndexs(c)
}
public
func glIndexs(c:GL.Short)
{
    fp_glIndexs(c)
}
public
func glIndexs(_ c:GL.Short)
{
    fp_glIndexs(c)
}

var fp_glIndexsv:@convention(c) (UnsafePointer<GL.Short>?) -> () = load_glIndexsv
func load_glIndexsv(c:UnsafePointer<GL.Short>?)
{
    fp_glIndexsv = unsafeBitCast(get_fp("glIndexsv", support: [ss346, ss369]), to: Swift.type(of: fp_glIndexsv))
    fp_glIndexsv(c)
}
public
func glIndexsv(c:UnsafePointer<GL.Short>?)
{
    fp_glIndexsv(c)
}
public
func glIndexsv(_ c:UnsafePointer<GL.Short>?)
{
    fp_glIndexsv(c)
}

var fp_glIndexub:@convention(c) (GL.UByte) -> () = load_glIndexub
func load_glIndexub(c:GL.UByte)
{
    fp_glIndexub = unsafeBitCast(get_fp("glIndexub", support: [ss347, ss369]), to: Swift.type(of: fp_glIndexub))
    fp_glIndexub(c)
}
public
func glIndexub(c:GL.UByte)
{
    fp_glIndexub(c)
}
public
func glIndexub(_ c:GL.UByte)
{
    fp_glIndexub(c)
}

var fp_glIndexubv:@convention(c) (UnsafePointer<GL.UByte>?) -> () = load_glIndexubv
func load_glIndexubv(c:UnsafePointer<GL.UByte>?)
{
    fp_glIndexubv = unsafeBitCast(get_fp("glIndexubv", support: [ss347, ss369]), to: Swift.type(of: fp_glIndexubv))
    fp_glIndexubv(c)
}
public
func glIndexubv(c:UnsafePointer<GL.UByte>?)
{
    fp_glIndexubv(c)
}
public
func glIndexubv(_ c:UnsafePointer<GL.UByte>?)
{
    fp_glIndexubv(c)
}

var fp_glIndexxOES:@convention(c) (GL.Fixed) -> () = load_glIndexxOES
func load_glIndexxOES(component:GL.Fixed)
{
    fp_glIndexxOES = unsafeBitCast(get_fp("glIndexxOES", support: [ss292]), to: Swift.type(of: fp_glIndexxOES))
    fp_glIndexxOES(component)
}
public
func glIndexxOES(component:GL.Fixed)
{
    fp_glIndexxOES(component)
}
public
func glIndexxOES(_ component:GL.Fixed)
{
    fp_glIndexxOES(component)
}

var fp_glIndexxvOES:@convention(c) (UnsafePointer<GL.Fixed>?) -> () = load_glIndexxvOES
func load_glIndexxvOES(component:UnsafePointer<GL.Fixed>?)
{
    fp_glIndexxvOES = unsafeBitCast(get_fp("glIndexxvOES", support: [ss292]), to: Swift.type(of: fp_glIndexxvOES))
    fp_glIndexxvOES(component)
}
public
func glIndexxvOES(component:UnsafePointer<GL.Fixed>?)
{
    fp_glIndexxvOES(component)
}
public
func glIndexxvOES(_ component:UnsafePointer<GL.Fixed>?)
{
    fp_glIndexxvOES(component)
}

var fp_glInitNames:@convention(c) () -> () = load_glInitNames
func load_glInitNames()
{
    fp_glInitNames = unsafeBitCast(get_fp("glInitNames", support: [ss346, ss369]), to: Swift.type(of: fp_glInitNames))
    fp_glInitNames()
}
public
func glInitNames()
{
    fp_glInitNames()
}

var fp_glInsertComponentEXT:@convention(c) (GL.UInt, GL.UInt, GL.UInt) -> () = load_glInsertComponentEXT
func load_glInsertComponentEXT(res:GL.UInt, src:GL.UInt, num:GL.UInt)
{
    fp_glInsertComponentEXT = unsafeBitCast(get_fp("glInsertComponentEXT", support: [ss204]), to: Swift.type(of: fp_glInsertComponentEXT))
    fp_glInsertComponentEXT(res, src, num)
}
public
func glInsertComponentEXT(res:GL.UInt, src:GL.UInt, num:GL.UInt)
{
    fp_glInsertComponentEXT(res, src, num)
}
public
func glInsertComponentEXT(_ res:GL.UInt, _ src:GL.UInt, _ num:GL.UInt)
{
    fp_glInsertComponentEXT(res, src, num)
}

var fp_glInsertEventMarkerEXT:@convention(c) (GL.Size, UnsafePointer<GL.Char>?) -> () = load_glInsertEventMarkerEXT
func load_glInsertEventMarkerEXT(length:GL.Size, marker:UnsafePointer<GL.Char>?)
{
    fp_glInsertEventMarkerEXT = unsafeBitCast(get_fp("glInsertEventMarkerEXT", support: [ss141]), to: Swift.type(of: fp_glInsertEventMarkerEXT))
    fp_glInsertEventMarkerEXT(length, marker)
}
public
func glInsertEventMarkerEXT(length:GL.Size, marker:UnsafePointer<GL.Char>?)
{
    fp_glInsertEventMarkerEXT(length, marker)
}
public
func glInsertEventMarkerEXT(_ length:GL.Size, _ marker:UnsafePointer<GL.Char>?)
{
    fp_glInsertEventMarkerEXT(length, marker)
}

var fp_glInstrumentsBufferSGIX:@convention(c) (GL.Size, UnsafeMutablePointer<GL.Int>?) -> () = load_glInstrumentsBufferSGIX
func load_glInstrumentsBufferSGIX(size:GL.Size, buffer:UnsafeMutablePointer<GL.Int>?)
{
    fp_glInstrumentsBufferSGIX = unsafeBitCast(get_fp("glInstrumentsBufferSGIX", support: [ss334]), to: Swift.type(of: fp_glInstrumentsBufferSGIX))
    fp_glInstrumentsBufferSGIX(size, buffer)
}
public
func glInstrumentsBufferSGIX(size:GL.Size, buffer:UnsafeMutablePointer<GL.Int>?)
{
    fp_glInstrumentsBufferSGIX(size, buffer)
}
public
func glInstrumentsBufferSGIX(_ size:GL.Size, _ buffer:UnsafeMutablePointer<GL.Int>?)
{
    fp_glInstrumentsBufferSGIX(size, buffer)
}

var fp_glInterleavedArrays:@convention(c) (GL.Enum, GL.Size, UnsafeRawPointer?) -> () = load_glInterleavedArrays
func load_glInterleavedArrays(format:GL.Enum, stride:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glInterleavedArrays = unsafeBitCast(get_fp("glInterleavedArrays", support: [ss347, ss369]), to: Swift.type(of: fp_glInterleavedArrays))
    fp_glInterleavedArrays(format, stride, pointer)
}
public
func glInterleavedArrays(format:GL.Enum, stride:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glInterleavedArrays(format, stride, pointer)
}
public
func glInterleavedArrays(_ format:GL.Enum, _ stride:GL.Size, _ pointer:UnsafeRawPointer?)
{
    fp_glInterleavedArrays(format, stride, pointer)
}

var fp_glInterpolatePathsNV:@convention(c) (GL.UInt, GL.UInt, GL.UInt, GL.Float) -> () = load_glInterpolatePathsNV
func load_glInterpolatePathsNV(resultPath:GL.UInt, pathA:GL.UInt, pathB:GL.UInt, weight:GL.Float)
{
    fp_glInterpolatePathsNV = unsafeBitCast(get_fp("glInterpolatePathsNV", support: [ss259]), to: Swift.type(of: fp_glInterpolatePathsNV))
    fp_glInterpolatePathsNV(resultPath, pathA, pathB, weight)
}
public
func glInterpolatePathsNV(resultPath:GL.UInt, pathA:GL.UInt, pathB:GL.UInt, weight:GL.Float)
{
    fp_glInterpolatePathsNV(resultPath, pathA, pathB, weight)
}
public
func glInterpolatePathsNV(_ resultPath:GL.UInt, _ pathA:GL.UInt, _ pathB:GL.UInt, _ weight:GL.Float)
{
    fp_glInterpolatePathsNV(resultPath, pathA, pathB, weight)
}

var fp_glInvalidateBufferData:@convention(c) (GL.UInt) -> () = load_glInvalidateBufferData
func load_glInvalidateBufferData(buffer:GL.UInt)
{
    fp_glInvalidateBufferData = unsafeBitCast(get_fp("glInvalidateBufferData", support: [ss361, ss64]), to: Swift.type(of: fp_glInvalidateBufferData))
    fp_glInvalidateBufferData(buffer)
}
public
func glInvalidateBufferData(buffer:GL.UInt)
{
    fp_glInvalidateBufferData(buffer)
}
public
func glInvalidateBufferData(_ buffer:GL.UInt)
{
    fp_glInvalidateBufferData(buffer)
}

var fp_glInvalidateBufferSubData:@convention(c) (GL.UInt, GL.IntPointer, GL.SizePointer) -> () = load_glInvalidateBufferSubData
func load_glInvalidateBufferSubData(buffer:GL.UInt, offset:GL.IntPointer, length:GL.SizePointer)
{
    fp_glInvalidateBufferSubData = unsafeBitCast(get_fp("glInvalidateBufferSubData", support: [ss361, ss64]), to: Swift.type(of: fp_glInvalidateBufferSubData))
    fp_glInvalidateBufferSubData(buffer, offset, length)
}
public
func glInvalidateBufferSubData(buffer:GL.UInt, offset:GL.IntPointer, length:GL.SizePointer)
{
    fp_glInvalidateBufferSubData(buffer, offset, length)
}
public
func glInvalidateBufferSubData(_ buffer:GL.UInt, _ offset:GL.IntPointer, _ length:GL.SizePointer)
{
    fp_glInvalidateBufferSubData(buffer, offset, length)
}

var fp_glInvalidateFramebuffer:@convention(c) (GL.Enum, GL.Size, UnsafePointer<GL.Enum>?) -> () = load_glInvalidateFramebuffer
func load_glInvalidateFramebuffer(target:GL.Enum, numAttachments:GL.Size, attachments:UnsafePointer<GL.Enum>?)
{
    fp_glInvalidateFramebuffer = unsafeBitCast(get_fp("glInvalidateFramebuffer", support: [ss361, ss366, ss64]), to: Swift.type(of: fp_glInvalidateFramebuffer))
    fp_glInvalidateFramebuffer(target, numAttachments, attachments)
}
public
func glInvalidateFramebuffer(target:GL.Enum, numAttachments:GL.Size, attachments:UnsafePointer<GL.Enum>?)
{
    fp_glInvalidateFramebuffer(target, numAttachments, attachments)
}
public
func glInvalidateFramebuffer(_ target:GL.Enum, _ numAttachments:GL.Size, _ attachments:UnsafePointer<GL.Enum>?)
{
    fp_glInvalidateFramebuffer(target, numAttachments, attachments)
}

var fp_glInvalidateNamedFramebufferData:@convention(c) (GL.UInt, GL.Size, UnsafePointer<GL.Enum>?) -> () = load_glInvalidateNamedFramebufferData
func load_glInvalidateNamedFramebufferData(framebuffer:GL.UInt, numAttachments:GL.Size, attachments:UnsafePointer<GL.Enum>?)
{
    fp_glInvalidateNamedFramebufferData = unsafeBitCast(get_fp("glInvalidateNamedFramebufferData", support: [ss363, ss42]), to: Swift.type(of: fp_glInvalidateNamedFramebufferData))
    fp_glInvalidateNamedFramebufferData(framebuffer, numAttachments, attachments)
}
public
func glInvalidateNamedFramebufferData(framebuffer:GL.UInt, numAttachments:GL.Size, attachments:UnsafePointer<GL.Enum>?)
{
    fp_glInvalidateNamedFramebufferData(framebuffer, numAttachments, attachments)
}
public
func glInvalidateNamedFramebufferData(_ framebuffer:GL.UInt, _ numAttachments:GL.Size, _ attachments:UnsafePointer<GL.Enum>?)
{
    fp_glInvalidateNamedFramebufferData(framebuffer, numAttachments, attachments)
}

var fp_glInvalidateNamedFramebufferSubData:@convention(c) (GL.UInt, GL.Size, UnsafePointer<GL.Enum>?, GL.Int, GL.Int, GL.Size, GL.Size) -> () = load_glInvalidateNamedFramebufferSubData
func load_glInvalidateNamedFramebufferSubData(framebuffer:GL.UInt, numAttachments:GL.Size, attachments:UnsafePointer<GL.Enum>?, x:GL.Int, y:GL.Int, width:GL.Size, height:GL.Size)
{
    fp_glInvalidateNamedFramebufferSubData = unsafeBitCast(get_fp("glInvalidateNamedFramebufferSubData", support: [ss363, ss42]), to: Swift.type(of: fp_glInvalidateNamedFramebufferSubData))
    fp_glInvalidateNamedFramebufferSubData(framebuffer, numAttachments, attachments, x, y, width, height)
}
public
func glInvalidateNamedFramebufferSubData(framebuffer:GL.UInt, numAttachments:GL.Size, attachments:UnsafePointer<GL.Enum>?, x:GL.Int, y:GL.Int, width:GL.Size, height:GL.Size)
{
    fp_glInvalidateNamedFramebufferSubData(framebuffer, numAttachments, attachments, x, y, width, height)
}
public
func glInvalidateNamedFramebufferSubData(_ framebuffer:GL.UInt, _ numAttachments:GL.Size, _ attachments:UnsafePointer<GL.Enum>?, _ x:GL.Int, _ y:GL.Int, _ width:GL.Size, _ height:GL.Size)
{
    fp_glInvalidateNamedFramebufferSubData(framebuffer, numAttachments, attachments, x, y, width, height)
}

var fp_glInvalidateSubFramebuffer:@convention(c) (GL.Enum, GL.Size, UnsafePointer<GL.Enum>?, GL.Int, GL.Int, GL.Size, GL.Size) -> () = load_glInvalidateSubFramebuffer
func load_glInvalidateSubFramebuffer(target:GL.Enum, numAttachments:GL.Size, attachments:UnsafePointer<GL.Enum>?, x:GL.Int, y:GL.Int, width:GL.Size, height:GL.Size)
{
    fp_glInvalidateSubFramebuffer = unsafeBitCast(get_fp("glInvalidateSubFramebuffer", support: [ss361, ss366, ss64]), to: Swift.type(of: fp_glInvalidateSubFramebuffer))
    fp_glInvalidateSubFramebuffer(target, numAttachments, attachments, x, y, width, height)
}
public
func glInvalidateSubFramebuffer(target:GL.Enum, numAttachments:GL.Size, attachments:UnsafePointer<GL.Enum>?, x:GL.Int, y:GL.Int, width:GL.Size, height:GL.Size)
{
    fp_glInvalidateSubFramebuffer(target, numAttachments, attachments, x, y, width, height)
}
public
func glInvalidateSubFramebuffer(_ target:GL.Enum, _ numAttachments:GL.Size, _ attachments:UnsafePointer<GL.Enum>?, _ x:GL.Int, _ y:GL.Int, _ width:GL.Size, _ height:GL.Size)
{
    fp_glInvalidateSubFramebuffer(target, numAttachments, attachments, x, y, width, height)
}

var fp_glInvalidateTexImage:@convention(c) (GL.UInt, GL.Int) -> () = load_glInvalidateTexImage
func load_glInvalidateTexImage(texture:GL.UInt, level:GL.Int)
{
    fp_glInvalidateTexImage = unsafeBitCast(get_fp("glInvalidateTexImage", support: [ss361, ss64]), to: Swift.type(of: fp_glInvalidateTexImage))
    fp_glInvalidateTexImage(texture, level)
}
public
func glInvalidateTexImage(texture:GL.UInt, level:GL.Int)
{
    fp_glInvalidateTexImage(texture, level)
}
public
func glInvalidateTexImage(_ texture:GL.UInt, _ level:GL.Int)
{
    fp_glInvalidateTexImage(texture, level)
}

var fp_glInvalidateTexSubImage:@convention(c) (GL.UInt, GL.Int, GL.Int, GL.Int, GL.Int, GL.Size, GL.Size, GL.Size) -> () = load_glInvalidateTexSubImage
func load_glInvalidateTexSubImage(texture:GL.UInt, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, zoffset:GL.Int, width:GL.Size, height:GL.Size, depth:GL.Size)
{
    fp_glInvalidateTexSubImage = unsafeBitCast(get_fp("glInvalidateTexSubImage", support: [ss361, ss64]), to: Swift.type(of: fp_glInvalidateTexSubImage))
    fp_glInvalidateTexSubImage(texture, level, xoffset, yoffset, zoffset, width, height, depth)
}
public
func glInvalidateTexSubImage(texture:GL.UInt, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, zoffset:GL.Int, width:GL.Size, height:GL.Size, depth:GL.Size)
{
    fp_glInvalidateTexSubImage(texture, level, xoffset, yoffset, zoffset, width, height, depth)
}
public
func glInvalidateTexSubImage(_ texture:GL.UInt, _ level:GL.Int, _ xoffset:GL.Int, _ yoffset:GL.Int, _ zoffset:GL.Int, _ width:GL.Size, _ height:GL.Size, _ depth:GL.Size)
{
    fp_glInvalidateTexSubImage(texture, level, xoffset, yoffset, zoffset, width, height, depth)
}

var fp_glIsAsyncMarkerSGIX:@convention(c) (GL.UInt) -> GL.Bool = load_glIsAsyncMarkerSGIX
func load_glIsAsyncMarkerSGIX(marker:GL.UInt) -> GL.Bool
{
    fp_glIsAsyncMarkerSGIX = unsafeBitCast(get_fp("glIsAsyncMarkerSGIX", support: [ss329]), to: Swift.type(of: fp_glIsAsyncMarkerSGIX))
    return fp_glIsAsyncMarkerSGIX(marker)
}
public
func glIsAsyncMarkerSGIX(marker:GL.UInt) -> GL.Bool
{
    return fp_glIsAsyncMarkerSGIX(marker)
}
public
func glIsAsyncMarkerSGIX(_ marker:GL.UInt) -> GL.Bool
{
    return fp_glIsAsyncMarkerSGIX(marker)
}

var fp_glIsBuffer:@convention(c) (GL.UInt) -> GL.Bool = load_glIsBuffer
func load_glIsBuffer(buffer:GL.UInt) -> GL.Bool
{
    fp_glIsBuffer = unsafeBitCast(get_fp("glIsBuffer", support: [ss351, ss365]), to: Swift.type(of: fp_glIsBuffer))
    return fp_glIsBuffer(buffer)
}
public
func glIsBuffer(buffer:GL.UInt) -> GL.Bool
{
    return fp_glIsBuffer(buffer)
}
public
func glIsBuffer(_ buffer:GL.UInt) -> GL.Bool
{
    return fp_glIsBuffer(buffer)
}

var fp_glIsBufferARB:@convention(c) (GL.UInt) -> GL.Bool = load_glIsBufferARB
func load_glIsBufferARB(buffer:GL.UInt) -> GL.Bool
{
    fp_glIsBufferARB = unsafeBitCast(get_fp("glIsBufferARB", support: [ss109]), to: Swift.type(of: fp_glIsBufferARB))
    return fp_glIsBufferARB(buffer)
}
public
func glIsBufferARB(buffer:GL.UInt) -> GL.Bool
{
    return fp_glIsBufferARB(buffer)
}
public
func glIsBufferARB(_ buffer:GL.UInt) -> GL.Bool
{
    return fp_glIsBufferARB(buffer)
}

var fp_glIsBufferResidentNV:@convention(c) (GL.Enum) -> GL.Bool = load_glIsBufferResidentNV
func load_glIsBufferResidentNV(target:GL.Enum) -> GL.Bool
{
    fp_glIsBufferResidentNV = unsafeBitCast(get_fp("glIsBufferResidentNV", support: [ss269]), to: Swift.type(of: fp_glIsBufferResidentNV))
    return fp_glIsBufferResidentNV(target)
}
public
func glIsBufferResidentNV(target:GL.Enum) -> GL.Bool
{
    return fp_glIsBufferResidentNV(target)
}
public
func glIsBufferResidentNV(_ target:GL.Enum) -> GL.Bool
{
    return fp_glIsBufferResidentNV(target)
}

var fp_glIsCommandListNV:@convention(c) (GL.UInt) -> GL.Bool = load_glIsCommandListNV
func load_glIsCommandListNV(list:GL.UInt) -> GL.Bool
{
    fp_glIsCommandListNV = unsafeBitCast(get_fp("glIsCommandListNV", support: [ss229]), to: Swift.type(of: fp_glIsCommandListNV))
    return fp_glIsCommandListNV(list)
}
public
func glIsCommandListNV(list:GL.UInt) -> GL.Bool
{
    return fp_glIsCommandListNV(list)
}
public
func glIsCommandListNV(_ list:GL.UInt) -> GL.Bool
{
    return fp_glIsCommandListNV(list)
}

var fp_glIsEnabled:@convention(c) (GL.Enum) -> GL.Bool = load_glIsEnabled
func load_glIsEnabled(cap:GL.Enum) -> GL.Bool
{
    fp_glIsEnabled = unsafeBitCast(get_fp("glIsEnabled", support: [ss346, ss365]), to: Swift.type(of: fp_glIsEnabled))
    return fp_glIsEnabled(cap)
}
public
func glIsEnabled(cap:GL.Enum) -> GL.Bool
{
    return fp_glIsEnabled(cap)
}
public
func glIsEnabled(_ cap:GL.Enum) -> GL.Bool
{
    return fp_glIsEnabled(cap)
}

var fp_glIsEnabledIndexedEXT:@convention(c) (GL.Enum, GL.UInt) -> GL.Bool = load_glIsEnabledIndexedEXT
func load_glIsEnabledIndexedEXT(target:GL.Enum, index:GL.UInt) -> GL.Bool
{
    fp_glIsEnabledIndexedEXT = unsafeBitCast(get_fp("glIsEnabledIndexedEXT", support: [ss143, ss148]), to: Swift.type(of: fp_glIsEnabledIndexedEXT))
    return fp_glIsEnabledIndexedEXT(target, index)
}
public
func glIsEnabledIndexedEXT(target:GL.Enum, index:GL.UInt) -> GL.Bool
{
    return fp_glIsEnabledIndexedEXT(target, index)
}
public
func glIsEnabledIndexedEXT(_ target:GL.Enum, _ index:GL.UInt) -> GL.Bool
{
    return fp_glIsEnabledIndexedEXT(target, index)
}

var fp_glIsEnabledi:@convention(c) (GL.Enum, GL.UInt) -> GL.Bool = load_glIsEnabledi
func load_glIsEnabledi(target:GL.Enum, index:GL.UInt) -> GL.Bool
{
    fp_glIsEnabledi = unsafeBitCast(get_fp("glIsEnabledi", support: [ss354, ss368]), to: Swift.type(of: fp_glIsEnabledi))
    return fp_glIsEnabledi(target, index)
}
public
func glIsEnabledi(target:GL.Enum, index:GL.UInt) -> GL.Bool
{
    return fp_glIsEnabledi(target, index)
}
public
func glIsEnabledi(_ target:GL.Enum, _ index:GL.UInt) -> GL.Bool
{
    return fp_glIsEnabledi(target, index)
}

var fp_glIsEnablediEXT:@convention(c) (GL.Enum, GL.UInt) -> GL.Bool = load_glIsEnablediEXT
func load_glIsEnablediEXT(target:GL.Enum, index:GL.UInt) -> GL.Bool
{
    fp_glIsEnablediEXT = unsafeBitCast(get_fp("glIsEnablediEXT", support: [ss146]), to: Swift.type(of: fp_glIsEnablediEXT))
    return fp_glIsEnablediEXT(target, index)
}
public
func glIsEnablediEXT(target:GL.Enum, index:GL.UInt) -> GL.Bool
{
    return fp_glIsEnablediEXT(target, index)
}
public
func glIsEnablediEXT(_ target:GL.Enum, _ index:GL.UInt) -> GL.Bool
{
    return fp_glIsEnablediEXT(target, index)
}

var fp_glIsEnablediNV:@convention(c) (GL.Enum, GL.UInt) -> GL.Bool = load_glIsEnablediNV
func load_glIsEnablediNV(target:GL.Enum, index:GL.UInt) -> GL.Bool
{
    fp_glIsEnablediNV = unsafeBitCast(get_fp("glIsEnablediNV", support: [ss281]), to: Swift.type(of: fp_glIsEnablediNV))
    return fp_glIsEnablediNV(target, index)
}
public
func glIsEnablediNV(target:GL.Enum, index:GL.UInt) -> GL.Bool
{
    return fp_glIsEnablediNV(target, index)
}
public
func glIsEnablediNV(_ target:GL.Enum, _ index:GL.UInt) -> GL.Bool
{
    return fp_glIsEnablediNV(target, index)
}

var fp_glIsEnablediOES:@convention(c) (GL.Enum, GL.UInt) -> GL.Bool = load_glIsEnablediOES
func load_glIsEnablediOES(target:GL.Enum, index:GL.UInt) -> GL.Bool
{
    fp_glIsEnablediOES = unsafeBitCast(get_fp("glIsEnablediOES", support: [ss288]), to: Swift.type(of: fp_glIsEnablediOES))
    return fp_glIsEnablediOES(target, index)
}
public
func glIsEnablediOES(target:GL.Enum, index:GL.UInt) -> GL.Bool
{
    return fp_glIsEnablediOES(target, index)
}
public
func glIsEnablediOES(_ target:GL.Enum, _ index:GL.UInt) -> GL.Bool
{
    return fp_glIsEnablediOES(target, index)
}

var fp_glIsFenceAPPLE:@convention(c) (GL.UInt) -> GL.Bool = load_glIsFenceAPPLE
func load_glIsFenceAPPLE(fence:GL.UInt) -> GL.Bool
{
    fp_glIsFenceAPPLE = unsafeBitCast(get_fp("glIsFenceAPPLE", support: [ss19]), to: Swift.type(of: fp_glIsFenceAPPLE))
    return fp_glIsFenceAPPLE(fence)
}
public
func glIsFenceAPPLE(fence:GL.UInt) -> GL.Bool
{
    return fp_glIsFenceAPPLE(fence)
}
public
func glIsFenceAPPLE(_ fence:GL.UInt) -> GL.Bool
{
    return fp_glIsFenceAPPLE(fence)
}

var fp_glIsFenceNV:@convention(c) (GL.UInt) -> GL.Bool = load_glIsFenceNV
func load_glIsFenceNV(fence:GL.UInt) -> GL.Bool
{
    fp_glIsFenceNV = unsafeBitCast(get_fp("glIsFenceNV", support: [ss242]), to: Swift.type(of: fp_glIsFenceNV))
    return fp_glIsFenceNV(fence)
}
public
func glIsFenceNV(fence:GL.UInt) -> GL.Bool
{
    return fp_glIsFenceNV(fence)
}
public
func glIsFenceNV(_ fence:GL.UInt) -> GL.Bool
{
    return fp_glIsFenceNV(fence)
}

var fp_glIsFramebuffer:@convention(c) (GL.UInt) -> GL.Bool = load_glIsFramebuffer
func load_glIsFramebuffer(framebuffer:GL.UInt) -> GL.Bool
{
    fp_glIsFramebuffer = unsafeBitCast(get_fp("glIsFramebuffer", support: [ss354, ss365, ss53]), to: Swift.type(of: fp_glIsFramebuffer))
    return fp_glIsFramebuffer(framebuffer)
}
public
func glIsFramebuffer(framebuffer:GL.UInt) -> GL.Bool
{
    return fp_glIsFramebuffer(framebuffer)
}
public
func glIsFramebuffer(_ framebuffer:GL.UInt) -> GL.Bool
{
    return fp_glIsFramebuffer(framebuffer)
}

var fp_glIsFramebufferEXT:@convention(c) (GL.UInt) -> GL.Bool = load_glIsFramebufferEXT
func load_glIsFramebufferEXT(framebuffer:GL.UInt) -> GL.Bool
{
    fp_glIsFramebufferEXT = unsafeBitCast(get_fp("glIsFramebufferEXT", support: [ss155]), to: Swift.type(of: fp_glIsFramebufferEXT))
    return fp_glIsFramebufferEXT(framebuffer)
}
public
func glIsFramebufferEXT(framebuffer:GL.UInt) -> GL.Bool
{
    return fp_glIsFramebufferEXT(framebuffer)
}
public
func glIsFramebufferEXT(_ framebuffer:GL.UInt) -> GL.Bool
{
    return fp_glIsFramebufferEXT(framebuffer)
}

var fp_glIsFramebufferOES:@convention(c) (GL.UInt) -> GL.Bool = load_glIsFramebufferOES
func load_glIsFramebufferOES(framebuffer:GL.UInt) -> GL.Bool
{
    fp_glIsFramebufferOES = unsafeBitCast(get_fp("glIsFramebufferOES", support: [ss293]), to: Swift.type(of: fp_glIsFramebufferOES))
    return fp_glIsFramebufferOES(framebuffer)
}
public
func glIsFramebufferOES(framebuffer:GL.UInt) -> GL.Bool
{
    return fp_glIsFramebufferOES(framebuffer)
}
public
func glIsFramebufferOES(_ framebuffer:GL.UInt) -> GL.Bool
{
    return fp_glIsFramebufferOES(framebuffer)
}

var fp_glIsImageHandleResidentARB:@convention(c) (GL.UInt64) -> GL.Bool = load_glIsImageHandleResidentARB
func load_glIsImageHandleResidentARB(handle:GL.UInt64) -> GL.Bool
{
    fp_glIsImageHandleResidentARB = unsafeBitCast(get_fp("glIsImageHandleResidentARB", support: [ss29]), to: Swift.type(of: fp_glIsImageHandleResidentARB))
    return fp_glIsImageHandleResidentARB(handle)
}
public
func glIsImageHandleResidentARB(handle:GL.UInt64) -> GL.Bool
{
    return fp_glIsImageHandleResidentARB(handle)
}
public
func glIsImageHandleResidentARB(_ handle:GL.UInt64) -> GL.Bool
{
    return fp_glIsImageHandleResidentARB(handle)
}

var fp_glIsImageHandleResidentNV:@convention(c) (GL.UInt64) -> GL.Bool = load_glIsImageHandleResidentNV
func load_glIsImageHandleResidentNV(handle:GL.UInt64) -> GL.Bool
{
    fp_glIsImageHandleResidentNV = unsafeBitCast(get_fp("glIsImageHandleResidentNV", support: [ss227]), to: Swift.type(of: fp_glIsImageHandleResidentNV))
    return fp_glIsImageHandleResidentNV(handle)
}
public
func glIsImageHandleResidentNV(handle:GL.UInt64) -> GL.Bool
{
    return fp_glIsImageHandleResidentNV(handle)
}
public
func glIsImageHandleResidentNV(_ handle:GL.UInt64) -> GL.Bool
{
    return fp_glIsImageHandleResidentNV(handle)
}

var fp_glIsList:@convention(c) (GL.UInt) -> GL.Bool = load_glIsList
func load_glIsList(list:GL.UInt) -> GL.Bool
{
    fp_glIsList = unsafeBitCast(get_fp("glIsList", support: [ss346, ss369]), to: Swift.type(of: fp_glIsList))
    return fp_glIsList(list)
}
public
func glIsList(list:GL.UInt) -> GL.Bool
{
    return fp_glIsList(list)
}
public
func glIsList(_ list:GL.UInt) -> GL.Bool
{
    return fp_glIsList(list)
}

var fp_glIsNameAMD:@convention(c) (GL.Enum, GL.UInt) -> GL.Bool = load_glIsNameAMD
func load_glIsNameAMD(identifier:GL.Enum, name:GL.UInt) -> GL.Bool
{
    fp_glIsNameAMD = unsafeBitCast(get_fp("glIsNameAMD", support: [ss6]), to: Swift.type(of: fp_glIsNameAMD))
    return fp_glIsNameAMD(identifier, name)
}
public
func glIsNameAMD(identifier:GL.Enum, name:GL.UInt) -> GL.Bool
{
    return fp_glIsNameAMD(identifier, name)
}
public
func glIsNameAMD(_ identifier:GL.Enum, _ name:GL.UInt) -> GL.Bool
{
    return fp_glIsNameAMD(identifier, name)
}

var fp_glIsNamedBufferResidentNV:@convention(c) (GL.UInt) -> GL.Bool = load_glIsNamedBufferResidentNV
func load_glIsNamedBufferResidentNV(buffer:GL.UInt) -> GL.Bool
{
    fp_glIsNamedBufferResidentNV = unsafeBitCast(get_fp("glIsNamedBufferResidentNV", support: [ss269]), to: Swift.type(of: fp_glIsNamedBufferResidentNV))
    return fp_glIsNamedBufferResidentNV(buffer)
}
public
func glIsNamedBufferResidentNV(buffer:GL.UInt) -> GL.Bool
{
    return fp_glIsNamedBufferResidentNV(buffer)
}
public
func glIsNamedBufferResidentNV(_ buffer:GL.UInt) -> GL.Bool
{
    return fp_glIsNamedBufferResidentNV(buffer)
}

var fp_glIsNamedStringARB:@convention(c) (GL.Int, UnsafePointer<GL.Char>?) -> GL.Bool = load_glIsNamedStringARB
func load_glIsNamedStringARB(namelen:GL.Int, name:UnsafePointer<GL.Char>?) -> GL.Bool
{
    fp_glIsNamedStringARB = unsafeBitCast(get_fp("glIsNamedStringARB", support: [ss86]), to: Swift.type(of: fp_glIsNamedStringARB))
    return fp_glIsNamedStringARB(namelen, name)
}
public
func glIsNamedStringARB(namelen:GL.Int, name:UnsafePointer<GL.Char>?) -> GL.Bool
{
    return fp_glIsNamedStringARB(namelen, name)
}
public
func glIsNamedStringARB(_ namelen:GL.Int, _ name:UnsafePointer<GL.Char>?) -> GL.Bool
{
    return fp_glIsNamedStringARB(namelen, name)
}

var fp_glIsObjectBufferATI:@convention(c) (GL.UInt) -> GL.Bool = load_glIsObjectBufferATI
func load_glIsObjectBufferATI(buffer:GL.UInt) -> GL.Bool
{
    fp_glIsObjectBufferATI = unsafeBitCast(get_fp("glIsObjectBufferATI", support: [ss122]), to: Swift.type(of: fp_glIsObjectBufferATI))
    return fp_glIsObjectBufferATI(buffer)
}
public
func glIsObjectBufferATI(buffer:GL.UInt) -> GL.Bool
{
    return fp_glIsObjectBufferATI(buffer)
}
public
func glIsObjectBufferATI(_ buffer:GL.UInt) -> GL.Bool
{
    return fp_glIsObjectBufferATI(buffer)
}

var fp_glIsOcclusionQueryNV:@convention(c) (GL.UInt) -> GL.Bool = load_glIsOcclusionQueryNV
func load_glIsOcclusionQueryNV(id:GL.UInt) -> GL.Bool
{
    fp_glIsOcclusionQueryNV = unsafeBitCast(get_fp("glIsOcclusionQueryNV", support: [ss257]), to: Swift.type(of: fp_glIsOcclusionQueryNV))
    return fp_glIsOcclusionQueryNV(id)
}
public
func glIsOcclusionQueryNV(id:GL.UInt) -> GL.Bool
{
    return fp_glIsOcclusionQueryNV(id)
}
public
func glIsOcclusionQueryNV(_ id:GL.UInt) -> GL.Bool
{
    return fp_glIsOcclusionQueryNV(id)
}

var fp_glIsPathNV:@convention(c) (GL.UInt) -> GL.Bool = load_glIsPathNV
func load_glIsPathNV(path:GL.UInt) -> GL.Bool
{
    fp_glIsPathNV = unsafeBitCast(get_fp("glIsPathNV", support: [ss259]), to: Swift.type(of: fp_glIsPathNV))
    return fp_glIsPathNV(path)
}
public
func glIsPathNV(path:GL.UInt) -> GL.Bool
{
    return fp_glIsPathNV(path)
}
public
func glIsPathNV(_ path:GL.UInt) -> GL.Bool
{
    return fp_glIsPathNV(path)
}

var fp_glIsPointInFillPathNV:@convention(c) (GL.UInt, GL.UInt, GL.Float, GL.Float) -> GL.Bool = load_glIsPointInFillPathNV
func load_glIsPointInFillPathNV(path:GL.UInt, mask:GL.UInt, x:GL.Float, y:GL.Float) -> GL.Bool
{
    fp_glIsPointInFillPathNV = unsafeBitCast(get_fp("glIsPointInFillPathNV", support: [ss259]), to: Swift.type(of: fp_glIsPointInFillPathNV))
    return fp_glIsPointInFillPathNV(path, mask, x, y)
}
public
func glIsPointInFillPathNV(path:GL.UInt, mask:GL.UInt, x:GL.Float, y:GL.Float) -> GL.Bool
{
    return fp_glIsPointInFillPathNV(path, mask, x, y)
}
public
func glIsPointInFillPathNV(_ path:GL.UInt, _ mask:GL.UInt, _ x:GL.Float, _ y:GL.Float) -> GL.Bool
{
    return fp_glIsPointInFillPathNV(path, mask, x, y)
}

var fp_glIsPointInStrokePathNV:@convention(c) (GL.UInt, GL.Float, GL.Float) -> GL.Bool = load_glIsPointInStrokePathNV
func load_glIsPointInStrokePathNV(path:GL.UInt, x:GL.Float, y:GL.Float) -> GL.Bool
{
    fp_glIsPointInStrokePathNV = unsafeBitCast(get_fp("glIsPointInStrokePathNV", support: [ss259]), to: Swift.type(of: fp_glIsPointInStrokePathNV))
    return fp_glIsPointInStrokePathNV(path, x, y)
}
public
func glIsPointInStrokePathNV(path:GL.UInt, x:GL.Float, y:GL.Float) -> GL.Bool
{
    return fp_glIsPointInStrokePathNV(path, x, y)
}
public
func glIsPointInStrokePathNV(_ path:GL.UInt, _ x:GL.Float, _ y:GL.Float) -> GL.Bool
{
    return fp_glIsPointInStrokePathNV(path, x, y)
}

var fp_glIsProgram:@convention(c) (GL.UInt) -> GL.Bool = load_glIsProgram
func load_glIsProgram(program:GL.UInt) -> GL.Bool
{
    fp_glIsProgram = unsafeBitCast(get_fp("glIsProgram", support: [ss352, ss365]), to: Swift.type(of: fp_glIsProgram))
    return fp_glIsProgram(program)
}
public
func glIsProgram(program:GL.UInt) -> GL.Bool
{
    return fp_glIsProgram(program)
}
public
func glIsProgram(_ program:GL.UInt) -> GL.Bool
{
    return fp_glIsProgram(program)
}

var fp_glIsProgramARB:@convention(c) (GL.UInt) -> GL.Bool = load_glIsProgramARB
func load_glIsProgramARB(program:GL.UInt) -> GL.Bool
{
    fp_glIsProgramARB = unsafeBitCast(get_fp("glIsProgramARB", support: [ss51, ss110]), to: Swift.type(of: fp_glIsProgramARB))
    return fp_glIsProgramARB(program)
}
public
func glIsProgramARB(program:GL.UInt) -> GL.Bool
{
    return fp_glIsProgramARB(program)
}
public
func glIsProgramARB(_ program:GL.UInt) -> GL.Bool
{
    return fp_glIsProgramARB(program)
}

var fp_glIsProgramNV:@convention(c) (GL.UInt) -> GL.Bool = load_glIsProgramNV
func load_glIsProgramNV(id:GL.UInt) -> GL.Bool
{
    fp_glIsProgramNV = unsafeBitCast(get_fp("glIsProgramNV", support: [ss278]), to: Swift.type(of: fp_glIsProgramNV))
    return fp_glIsProgramNV(id)
}
public
func glIsProgramNV(id:GL.UInt) -> GL.Bool
{
    return fp_glIsProgramNV(id)
}
public
func glIsProgramNV(_ id:GL.UInt) -> GL.Bool
{
    return fp_glIsProgramNV(id)
}

var fp_glIsProgramPipeline:@convention(c) (GL.UInt) -> GL.Bool = load_glIsProgramPipeline
func load_glIsProgramPipeline(pipeline:GL.UInt) -> GL.Bool
{
    fp_glIsProgramPipeline = unsafeBitCast(get_fp("glIsProgramPipeline", support: [ss359, ss367, ss80]), to: Swift.type(of: fp_glIsProgramPipeline))
    return fp_glIsProgramPipeline(pipeline)
}
public
func glIsProgramPipeline(pipeline:GL.UInt) -> GL.Bool
{
    return fp_glIsProgramPipeline(pipeline)
}
public
func glIsProgramPipeline(_ pipeline:GL.UInt) -> GL.Bool
{
    return fp_glIsProgramPipeline(pipeline)
}

var fp_glIsProgramPipelineEXT:@convention(c) (GL.UInt) -> GL.Bool = load_glIsProgramPipelineEXT
func load_glIsProgramPipelineEXT(pipeline:GL.UInt) -> GL.Bool
{
    fp_glIsProgramPipelineEXT = unsafeBitCast(get_fp("glIsProgramPipelineEXT", support: [ss182]), to: Swift.type(of: fp_glIsProgramPipelineEXT))
    return fp_glIsProgramPipelineEXT(pipeline)
}
public
func glIsProgramPipelineEXT(pipeline:GL.UInt) -> GL.Bool
{
    return fp_glIsProgramPipelineEXT(pipeline)
}
public
func glIsProgramPipelineEXT(_ pipeline:GL.UInt) -> GL.Bool
{
    return fp_glIsProgramPipelineEXT(pipeline)
}

var fp_glIsQuery:@convention(c) (GL.UInt) -> GL.Bool = load_glIsQuery
func load_glIsQuery(id:GL.UInt) -> GL.Bool
{
    fp_glIsQuery = unsafeBitCast(get_fp("glIsQuery", support: [ss351, ss366]), to: Swift.type(of: fp_glIsQuery))
    return fp_glIsQuery(id)
}
public
func glIsQuery(id:GL.UInt) -> GL.Bool
{
    return fp_glIsQuery(id)
}
public
func glIsQuery(_ id:GL.UInt) -> GL.Bool
{
    return fp_glIsQuery(id)
}

var fp_glIsQueryARB:@convention(c) (GL.UInt) -> GL.Bool = load_glIsQueryARB
func load_glIsQueryARB(id:GL.UInt) -> GL.Bool
{
    fp_glIsQueryARB = unsafeBitCast(get_fp("glIsQueryARB", support: [ss71]), to: Swift.type(of: fp_glIsQueryARB))
    return fp_glIsQueryARB(id)
}
public
func glIsQueryARB(id:GL.UInt) -> GL.Bool
{
    return fp_glIsQueryARB(id)
}
public
func glIsQueryARB(_ id:GL.UInt) -> GL.Bool
{
    return fp_glIsQueryARB(id)
}

var fp_glIsQueryEXT:@convention(c) (GL.UInt) -> GL.Bool = load_glIsQueryEXT
func load_glIsQueryEXT(id:GL.UInt) -> GL.Bool
{
    fp_glIsQueryEXT = unsafeBitCast(get_fp("glIsQueryEXT", support: [ss145, ss171]), to: Swift.type(of: fp_glIsQueryEXT))
    return fp_glIsQueryEXT(id)
}
public
func glIsQueryEXT(id:GL.UInt) -> GL.Bool
{
    return fp_glIsQueryEXT(id)
}
public
func glIsQueryEXT(_ id:GL.UInt) -> GL.Bool
{
    return fp_glIsQueryEXT(id)
}

var fp_glIsRenderbuffer:@convention(c) (GL.UInt) -> GL.Bool = load_glIsRenderbuffer
func load_glIsRenderbuffer(renderbuffer:GL.UInt) -> GL.Bool
{
    fp_glIsRenderbuffer = unsafeBitCast(get_fp("glIsRenderbuffer", support: [ss354, ss365, ss53]), to: Swift.type(of: fp_glIsRenderbuffer))
    return fp_glIsRenderbuffer(renderbuffer)
}
public
func glIsRenderbuffer(renderbuffer:GL.UInt) -> GL.Bool
{
    return fp_glIsRenderbuffer(renderbuffer)
}
public
func glIsRenderbuffer(_ renderbuffer:GL.UInt) -> GL.Bool
{
    return fp_glIsRenderbuffer(renderbuffer)
}

var fp_glIsRenderbufferEXT:@convention(c) (GL.UInt) -> GL.Bool = load_glIsRenderbufferEXT
func load_glIsRenderbufferEXT(renderbuffer:GL.UInt) -> GL.Bool
{
    fp_glIsRenderbufferEXT = unsafeBitCast(get_fp("glIsRenderbufferEXT", support: [ss155]), to: Swift.type(of: fp_glIsRenderbufferEXT))
    return fp_glIsRenderbufferEXT(renderbuffer)
}
public
func glIsRenderbufferEXT(renderbuffer:GL.UInt) -> GL.Bool
{
    return fp_glIsRenderbufferEXT(renderbuffer)
}
public
func glIsRenderbufferEXT(_ renderbuffer:GL.UInt) -> GL.Bool
{
    return fp_glIsRenderbufferEXT(renderbuffer)
}

var fp_glIsRenderbufferOES:@convention(c) (GL.UInt) -> GL.Bool = load_glIsRenderbufferOES
func load_glIsRenderbufferOES(renderbuffer:GL.UInt) -> GL.Bool
{
    fp_glIsRenderbufferOES = unsafeBitCast(get_fp("glIsRenderbufferOES", support: [ss293]), to: Swift.type(of: fp_glIsRenderbufferOES))
    return fp_glIsRenderbufferOES(renderbuffer)
}
public
func glIsRenderbufferOES(renderbuffer:GL.UInt) -> GL.Bool
{
    return fp_glIsRenderbufferOES(renderbuffer)
}
public
func glIsRenderbufferOES(_ renderbuffer:GL.UInt) -> GL.Bool
{
    return fp_glIsRenderbufferOES(renderbuffer)
}

var fp_glIsSampler:@convention(c) (GL.UInt) -> GL.Bool = load_glIsSampler
func load_glIsSampler(sampler:GL.UInt) -> GL.Bool
{
    fp_glIsSampler = unsafeBitCast(get_fp("glIsSampler", support: [ss357, ss366, ss79]), to: Swift.type(of: fp_glIsSampler))
    return fp_glIsSampler(sampler)
}
public
func glIsSampler(sampler:GL.UInt) -> GL.Bool
{
    return fp_glIsSampler(sampler)
}
public
func glIsSampler(_ sampler:GL.UInt) -> GL.Bool
{
    return fp_glIsSampler(sampler)
}

var fp_glIsShader:@convention(c) (GL.UInt) -> GL.Bool = load_glIsShader
func load_glIsShader(shader:GL.UInt) -> GL.Bool
{
    fp_glIsShader = unsafeBitCast(get_fp("glIsShader", support: [ss352, ss365]), to: Swift.type(of: fp_glIsShader))
    return fp_glIsShader(shader)
}
public
func glIsShader(shader:GL.UInt) -> GL.Bool
{
    return fp_glIsShader(shader)
}
public
func glIsShader(_ shader:GL.UInt) -> GL.Bool
{
    return fp_glIsShader(shader)
}

var fp_glIsStateNV:@convention(c) (GL.UInt) -> GL.Bool = load_glIsStateNV
func load_glIsStateNV(state:GL.UInt) -> GL.Bool
{
    fp_glIsStateNV = unsafeBitCast(get_fp("glIsStateNV", support: [ss229]), to: Swift.type(of: fp_glIsStateNV))
    return fp_glIsStateNV(state)
}
public
func glIsStateNV(state:GL.UInt) -> GL.Bool
{
    return fp_glIsStateNV(state)
}
public
func glIsStateNV(_ state:GL.UInt) -> GL.Bool
{
    return fp_glIsStateNV(state)
}

var fp_glIsSync:@convention(c) (GL.Sync) -> GL.Bool = load_glIsSync
func load_glIsSync(sync:GL.Sync) -> GL.Bool
{
    fp_glIsSync = unsafeBitCast(get_fp("glIsSync", support: [ss356, ss366, ss89]), to: Swift.type(of: fp_glIsSync))
    return fp_glIsSync(sync)
}
public
func glIsSync(sync:GL.Sync) -> GL.Bool
{
    return fp_glIsSync(sync)
}
public
func glIsSync(_ sync:GL.Sync) -> GL.Bool
{
    return fp_glIsSync(sync)
}

var fp_glIsSyncAPPLE:@convention(c) (GL.Sync) -> GL.Bool = load_glIsSyncAPPLE
func load_glIsSyncAPPLE(sync:GL.Sync) -> GL.Bool
{
    fp_glIsSyncAPPLE = unsafeBitCast(get_fp("glIsSyncAPPLE", support: [ss23]), to: Swift.type(of: fp_glIsSyncAPPLE))
    return fp_glIsSyncAPPLE(sync)
}
public
func glIsSyncAPPLE(sync:GL.Sync) -> GL.Bool
{
    return fp_glIsSyncAPPLE(sync)
}
public
func glIsSyncAPPLE(_ sync:GL.Sync) -> GL.Bool
{
    return fp_glIsSyncAPPLE(sync)
}

var fp_glIsTexture:@convention(c) (GL.UInt) -> GL.Bool = load_glIsTexture
func load_glIsTexture(texture:GL.UInt) -> GL.Bool
{
    fp_glIsTexture = unsafeBitCast(get_fp("glIsTexture", support: [ss347, ss365]), to: Swift.type(of: fp_glIsTexture))
    return fp_glIsTexture(texture)
}
public
func glIsTexture(texture:GL.UInt) -> GL.Bool
{
    return fp_glIsTexture(texture)
}
public
func glIsTexture(_ texture:GL.UInt) -> GL.Bool
{
    return fp_glIsTexture(texture)
}

var fp_glIsTextureEXT:@convention(c) (GL.UInt) -> GL.Bool = load_glIsTextureEXT
func load_glIsTextureEXT(texture:GL.UInt) -> GL.Bool
{
    fp_glIsTextureEXT = unsafeBitCast(get_fp("glIsTextureEXT", support: [ss195]), to: Swift.type(of: fp_glIsTextureEXT))
    return fp_glIsTextureEXT(texture)
}
public
func glIsTextureEXT(texture:GL.UInt) -> GL.Bool
{
    return fp_glIsTextureEXT(texture)
}
public
func glIsTextureEXT(_ texture:GL.UInt) -> GL.Bool
{
    return fp_glIsTextureEXT(texture)
}

var fp_glIsTextureHandleResidentARB:@convention(c) (GL.UInt64) -> GL.Bool = load_glIsTextureHandleResidentARB
func load_glIsTextureHandleResidentARB(handle:GL.UInt64) -> GL.Bool
{
    fp_glIsTextureHandleResidentARB = unsafeBitCast(get_fp("glIsTextureHandleResidentARB", support: [ss29]), to: Swift.type(of: fp_glIsTextureHandleResidentARB))
    return fp_glIsTextureHandleResidentARB(handle)
}
public
func glIsTextureHandleResidentARB(handle:GL.UInt64) -> GL.Bool
{
    return fp_glIsTextureHandleResidentARB(handle)
}
public
func glIsTextureHandleResidentARB(_ handle:GL.UInt64) -> GL.Bool
{
    return fp_glIsTextureHandleResidentARB(handle)
}

var fp_glIsTextureHandleResidentNV:@convention(c) (GL.UInt64) -> GL.Bool = load_glIsTextureHandleResidentNV
func load_glIsTextureHandleResidentNV(handle:GL.UInt64) -> GL.Bool
{
    fp_glIsTextureHandleResidentNV = unsafeBitCast(get_fp("glIsTextureHandleResidentNV", support: [ss227]), to: Swift.type(of: fp_glIsTextureHandleResidentNV))
    return fp_glIsTextureHandleResidentNV(handle)
}
public
func glIsTextureHandleResidentNV(handle:GL.UInt64) -> GL.Bool
{
    return fp_glIsTextureHandleResidentNV(handle)
}
public
func glIsTextureHandleResidentNV(_ handle:GL.UInt64) -> GL.Bool
{
    return fp_glIsTextureHandleResidentNV(handle)
}

var fp_glIsTransformFeedback:@convention(c) (GL.UInt) -> GL.Bool = load_glIsTransformFeedback
func load_glIsTransformFeedback(id:GL.UInt) -> GL.Bool
{
    fp_glIsTransformFeedback = unsafeBitCast(get_fp("glIsTransformFeedback", support: [ss358, ss366, ss101]), to: Swift.type(of: fp_glIsTransformFeedback))
    return fp_glIsTransformFeedback(id)
}
public
func glIsTransformFeedback(id:GL.UInt) -> GL.Bool
{
    return fp_glIsTransformFeedback(id)
}
public
func glIsTransformFeedback(_ id:GL.UInt) -> GL.Bool
{
    return fp_glIsTransformFeedback(id)
}

var fp_glIsTransformFeedbackNV:@convention(c) (GL.UInt) -> GL.Bool = load_glIsTransformFeedbackNV
func load_glIsTransformFeedbackNV(id:GL.UInt) -> GL.Bool
{
    fp_glIsTransformFeedbackNV = unsafeBitCast(get_fp("glIsTransformFeedbackNV", support: [ss273]), to: Swift.type(of: fp_glIsTransformFeedbackNV))
    return fp_glIsTransformFeedbackNV(id)
}
public
func glIsTransformFeedbackNV(id:GL.UInt) -> GL.Bool
{
    return fp_glIsTransformFeedbackNV(id)
}
public
func glIsTransformFeedbackNV(_ id:GL.UInt) -> GL.Bool
{
    return fp_glIsTransformFeedbackNV(id)
}

var fp_glIsVariantEnabledEXT:@convention(c) (GL.UInt, GL.Enum) -> GL.Bool = load_glIsVariantEnabledEXT
func load_glIsVariantEnabledEXT(id:GL.UInt, cap:GL.Enum) -> GL.Bool
{
    fp_glIsVariantEnabledEXT = unsafeBitCast(get_fp("glIsVariantEnabledEXT", support: [ss204]), to: Swift.type(of: fp_glIsVariantEnabledEXT))
    return fp_glIsVariantEnabledEXT(id, cap)
}
public
func glIsVariantEnabledEXT(id:GL.UInt, cap:GL.Enum) -> GL.Bool
{
    return fp_glIsVariantEnabledEXT(id, cap)
}
public
func glIsVariantEnabledEXT(_ id:GL.UInt, _ cap:GL.Enum) -> GL.Bool
{
    return fp_glIsVariantEnabledEXT(id, cap)
}

var fp_glIsVertexArray:@convention(c) (GL.UInt) -> GL.Bool = load_glIsVertexArray
func load_glIsVertexArray(array:GL.UInt) -> GL.Bool
{
    fp_glIsVertexArray = unsafeBitCast(get_fp("glIsVertexArray", support: [ss354, ss366, ss105]), to: Swift.type(of: fp_glIsVertexArray))
    return fp_glIsVertexArray(array)
}
public
func glIsVertexArray(array:GL.UInt) -> GL.Bool
{
    return fp_glIsVertexArray(array)
}
public
func glIsVertexArray(_ array:GL.UInt) -> GL.Bool
{
    return fp_glIsVertexArray(array)
}

var fp_glIsVertexArrayAPPLE:@convention(c) (GL.UInt) -> GL.Bool = load_glIsVertexArrayAPPLE
func load_glIsVertexArrayAPPLE(array:GL.UInt) -> GL.Bool
{
    fp_glIsVertexArrayAPPLE = unsafeBitCast(get_fp("glIsVertexArrayAPPLE", support: [ss25]), to: Swift.type(of: fp_glIsVertexArrayAPPLE))
    return fp_glIsVertexArrayAPPLE(array)
}
public
func glIsVertexArrayAPPLE(array:GL.UInt) -> GL.Bool
{
    return fp_glIsVertexArrayAPPLE(array)
}
public
func glIsVertexArrayAPPLE(_ array:GL.UInt) -> GL.Bool
{
    return fp_glIsVertexArrayAPPLE(array)
}

var fp_glIsVertexArrayOES:@convention(c) (GL.UInt) -> GL.Bool = load_glIsVertexArrayOES
func load_glIsVertexArrayOES(array:GL.UInt) -> GL.Bool
{
    fp_glIsVertexArrayOES = unsafeBitCast(get_fp("glIsVertexArrayOES", support: [ss310]), to: Swift.type(of: fp_glIsVertexArrayOES))
    return fp_glIsVertexArrayOES(array)
}
public
func glIsVertexArrayOES(array:GL.UInt) -> GL.Bool
{
    return fp_glIsVertexArrayOES(array)
}
public
func glIsVertexArrayOES(_ array:GL.UInt) -> GL.Bool
{
    return fp_glIsVertexArrayOES(array)
}

var fp_glIsVertexAttribEnabledAPPLE:@convention(c) (GL.UInt, GL.Enum) -> GL.Bool = load_glIsVertexAttribEnabledAPPLE
func load_glIsVertexAttribEnabledAPPLE(index:GL.UInt, pname:GL.Enum) -> GL.Bool
{
    fp_glIsVertexAttribEnabledAPPLE = unsafeBitCast(get_fp("glIsVertexAttribEnabledAPPLE", support: [ss27]), to: Swift.type(of: fp_glIsVertexAttribEnabledAPPLE))
    return fp_glIsVertexAttribEnabledAPPLE(index, pname)
}
public
func glIsVertexAttribEnabledAPPLE(index:GL.UInt, pname:GL.Enum) -> GL.Bool
{
    return fp_glIsVertexAttribEnabledAPPLE(index, pname)
}
public
func glIsVertexAttribEnabledAPPLE(_ index:GL.UInt, _ pname:GL.Enum) -> GL.Bool
{
    return fp_glIsVertexAttribEnabledAPPLE(index, pname)
}

var fp_glLabelObjectEXT:@convention(c) (GL.Enum, GL.UInt, GL.Size, UnsafePointer<GL.Char>?) -> () = load_glLabelObjectEXT
func load_glLabelObjectEXT(type:GL.Enum, object:GL.UInt, length:GL.Size, label:UnsafePointer<GL.Char>?)
{
    fp_glLabelObjectEXT = unsafeBitCast(get_fp("glLabelObjectEXT", support: [ss140]), to: Swift.type(of: fp_glLabelObjectEXT))
    fp_glLabelObjectEXT(type, object, length, label)
}
public
func glLabelObjectEXT(type:GL.Enum, object:GL.UInt, length:GL.Size, label:UnsafePointer<GL.Char>?)
{
    fp_glLabelObjectEXT(type, object, length, label)
}
public
func glLabelObjectEXT(_ type:GL.Enum, _ object:GL.UInt, _ length:GL.Size, _ label:UnsafePointer<GL.Char>?)
{
    fp_glLabelObjectEXT(type, object, length, label)
}

var fp_glLightEnviSGIX:@convention(c) (GL.Enum, GL.Int) -> () = load_glLightEnviSGIX
func load_glLightEnviSGIX(pname:GL.Enum, param:GL.Int)
{
    fp_glLightEnviSGIX = unsafeBitCast(get_fp("glLightEnviSGIX", support: [ss331]), to: Swift.type(of: fp_glLightEnviSGIX))
    fp_glLightEnviSGIX(pname, param)
}
public
func glLightEnviSGIX(pname:GL.Enum, param:GL.Int)
{
    fp_glLightEnviSGIX(pname, param)
}
public
func glLightEnviSGIX(_ pname:GL.Enum, _ param:GL.Int)
{
    fp_glLightEnviSGIX(pname, param)
}

var fp_glLightModelf:@convention(c) (GL.Enum, GL.Float) -> () = load_glLightModelf
func load_glLightModelf(pname:GL.Enum, param:GL.Float)
{
    fp_glLightModelf = unsafeBitCast(get_fp("glLightModelf", support: [ss346, ss369, ss364]), to: Swift.type(of: fp_glLightModelf))
    fp_glLightModelf(pname, param)
}
public
func glLightModelf(pname:GL.Enum, param:GL.Float)
{
    fp_glLightModelf(pname, param)
}
public
func glLightModelf(_ pname:GL.Enum, _ param:GL.Float)
{
    fp_glLightModelf(pname, param)
}

var fp_glLightModelfv:@convention(c) (GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glLightModelfv
func load_glLightModelfv(pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glLightModelfv = unsafeBitCast(get_fp("glLightModelfv", support: [ss346, ss369, ss364]), to: Swift.type(of: fp_glLightModelfv))
    fp_glLightModelfv(pname, params)
}
public
func glLightModelfv(pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glLightModelfv(pname, params)
}
public
func glLightModelfv(_ pname:GL.Enum, _ params:UnsafePointer<GL.Float>?)
{
    fp_glLightModelfv(pname, params)
}

var fp_glLightModeli:@convention(c) (GL.Enum, GL.Int) -> () = load_glLightModeli
func load_glLightModeli(pname:GL.Enum, param:GL.Int)
{
    fp_glLightModeli = unsafeBitCast(get_fp("glLightModeli", support: [ss346, ss369]), to: Swift.type(of: fp_glLightModeli))
    fp_glLightModeli(pname, param)
}
public
func glLightModeli(pname:GL.Enum, param:GL.Int)
{
    fp_glLightModeli(pname, param)
}
public
func glLightModeli(_ pname:GL.Enum, _ param:GL.Int)
{
    fp_glLightModeli(pname, param)
}

var fp_glLightModeliv:@convention(c) (GL.Enum, UnsafePointer<GL.Int>?) -> () = load_glLightModeliv
func load_glLightModeliv(pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glLightModeliv = unsafeBitCast(get_fp("glLightModeliv", support: [ss346, ss369]), to: Swift.type(of: fp_glLightModeliv))
    fp_glLightModeliv(pname, params)
}
public
func glLightModeliv(pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glLightModeliv(pname, params)
}
public
func glLightModeliv(_ pname:GL.Enum, _ params:UnsafePointer<GL.Int>?)
{
    fp_glLightModeliv(pname, params)
}

var fp_glLightModelx:@convention(c) (GL.Enum, GL.Fixed) -> () = load_glLightModelx
func load_glLightModelx(pname:GL.Enum, param:GL.Fixed)
{
    fp_glLightModelx = unsafeBitCast(get_fp("glLightModelx", support: [ss364]), to: Swift.type(of: fp_glLightModelx))
    fp_glLightModelx(pname, param)
}
public
func glLightModelx(pname:GL.Enum, param:GL.Fixed)
{
    fp_glLightModelx(pname, param)
}
public
func glLightModelx(_ pname:GL.Enum, _ param:GL.Fixed)
{
    fp_glLightModelx(pname, param)
}

var fp_glLightModelxOES:@convention(c) (GL.Enum, GL.Fixed) -> () = load_glLightModelxOES
func load_glLightModelxOES(pname:GL.Enum, param:GL.Fixed)
{
    fp_glLightModelxOES = unsafeBitCast(get_fp("glLightModelxOES", support: [ss292]), to: Swift.type(of: fp_glLightModelxOES))
    fp_glLightModelxOES(pname, param)
}
public
func glLightModelxOES(pname:GL.Enum, param:GL.Fixed)
{
    fp_glLightModelxOES(pname, param)
}
public
func glLightModelxOES(_ pname:GL.Enum, _ param:GL.Fixed)
{
    fp_glLightModelxOES(pname, param)
}

var fp_glLightModelxv:@convention(c) (GL.Enum, UnsafePointer<GL.Fixed>?) -> () = load_glLightModelxv
func load_glLightModelxv(pname:GL.Enum, param:UnsafePointer<GL.Fixed>?)
{
    fp_glLightModelxv = unsafeBitCast(get_fp("glLightModelxv", support: [ss364]), to: Swift.type(of: fp_glLightModelxv))
    fp_glLightModelxv(pname, param)
}
public
func glLightModelxv(pname:GL.Enum, param:UnsafePointer<GL.Fixed>?)
{
    fp_glLightModelxv(pname, param)
}
public
func glLightModelxv(_ pname:GL.Enum, _ param:UnsafePointer<GL.Fixed>?)
{
    fp_glLightModelxv(pname, param)
}

var fp_glLightModelxvOES:@convention(c) (GL.Enum, UnsafePointer<GL.Fixed>?) -> () = load_glLightModelxvOES
func load_glLightModelxvOES(pname:GL.Enum, param:UnsafePointer<GL.Fixed>?)
{
    fp_glLightModelxvOES = unsafeBitCast(get_fp("glLightModelxvOES", support: [ss292]), to: Swift.type(of: fp_glLightModelxvOES))
    fp_glLightModelxvOES(pname, param)
}
public
func glLightModelxvOES(pname:GL.Enum, param:UnsafePointer<GL.Fixed>?)
{
    fp_glLightModelxvOES(pname, param)
}
public
func glLightModelxvOES(_ pname:GL.Enum, _ param:UnsafePointer<GL.Fixed>?)
{
    fp_glLightModelxvOES(pname, param)
}

var fp_glLightf:@convention(c) (GL.Enum, GL.Enum, GL.Float) -> () = load_glLightf
func load_glLightf(light:GL.Enum, pname:GL.Enum, param:GL.Float)
{
    fp_glLightf = unsafeBitCast(get_fp("glLightf", support: [ss346, ss369, ss364]), to: Swift.type(of: fp_glLightf))
    fp_glLightf(light, pname, param)
}
public
func glLightf(light:GL.Enum, pname:GL.Enum, param:GL.Float)
{
    fp_glLightf(light, pname, param)
}
public
func glLightf(_ light:GL.Enum, _ pname:GL.Enum, _ param:GL.Float)
{
    fp_glLightf(light, pname, param)
}

var fp_glLightfv:@convention(c) (GL.Enum, GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glLightfv
func load_glLightfv(light:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glLightfv = unsafeBitCast(get_fp("glLightfv", support: [ss346, ss369, ss364]), to: Swift.type(of: fp_glLightfv))
    fp_glLightfv(light, pname, params)
}
public
func glLightfv(light:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glLightfv(light, pname, params)
}
public
func glLightfv(_ light:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.Float>?)
{
    fp_glLightfv(light, pname, params)
}

var fp_glLighti:@convention(c) (GL.Enum, GL.Enum, GL.Int) -> () = load_glLighti
func load_glLighti(light:GL.Enum, pname:GL.Enum, param:GL.Int)
{
    fp_glLighti = unsafeBitCast(get_fp("glLighti", support: [ss346, ss369]), to: Swift.type(of: fp_glLighti))
    fp_glLighti(light, pname, param)
}
public
func glLighti(light:GL.Enum, pname:GL.Enum, param:GL.Int)
{
    fp_glLighti(light, pname, param)
}
public
func glLighti(_ light:GL.Enum, _ pname:GL.Enum, _ param:GL.Int)
{
    fp_glLighti(light, pname, param)
}

var fp_glLightiv:@convention(c) (GL.Enum, GL.Enum, UnsafePointer<GL.Int>?) -> () = load_glLightiv
func load_glLightiv(light:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glLightiv = unsafeBitCast(get_fp("glLightiv", support: [ss346, ss369]), to: Swift.type(of: fp_glLightiv))
    fp_glLightiv(light, pname, params)
}
public
func glLightiv(light:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glLightiv(light, pname, params)
}
public
func glLightiv(_ light:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.Int>?)
{
    fp_glLightiv(light, pname, params)
}

var fp_glLightx:@convention(c) (GL.Enum, GL.Enum, GL.Fixed) -> () = load_glLightx
func load_glLightx(light:GL.Enum, pname:GL.Enum, param:GL.Fixed)
{
    fp_glLightx = unsafeBitCast(get_fp("glLightx", support: [ss364]), to: Swift.type(of: fp_glLightx))
    fp_glLightx(light, pname, param)
}
public
func glLightx(light:GL.Enum, pname:GL.Enum, param:GL.Fixed)
{
    fp_glLightx(light, pname, param)
}
public
func glLightx(_ light:GL.Enum, _ pname:GL.Enum, _ param:GL.Fixed)
{
    fp_glLightx(light, pname, param)
}

var fp_glLightxOES:@convention(c) (GL.Enum, GL.Enum, GL.Fixed) -> () = load_glLightxOES
func load_glLightxOES(light:GL.Enum, pname:GL.Enum, param:GL.Fixed)
{
    fp_glLightxOES = unsafeBitCast(get_fp("glLightxOES", support: [ss292]), to: Swift.type(of: fp_glLightxOES))
    fp_glLightxOES(light, pname, param)
}
public
func glLightxOES(light:GL.Enum, pname:GL.Enum, param:GL.Fixed)
{
    fp_glLightxOES(light, pname, param)
}
public
func glLightxOES(_ light:GL.Enum, _ pname:GL.Enum, _ param:GL.Fixed)
{
    fp_glLightxOES(light, pname, param)
}

var fp_glLightxv:@convention(c) (GL.Enum, GL.Enum, UnsafePointer<GL.Fixed>?) -> () = load_glLightxv
func load_glLightxv(light:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Fixed>?)
{
    fp_glLightxv = unsafeBitCast(get_fp("glLightxv", support: [ss364]), to: Swift.type(of: fp_glLightxv))
    fp_glLightxv(light, pname, params)
}
public
func glLightxv(light:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Fixed>?)
{
    fp_glLightxv(light, pname, params)
}
public
func glLightxv(_ light:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.Fixed>?)
{
    fp_glLightxv(light, pname, params)
}

var fp_glLightxvOES:@convention(c) (GL.Enum, GL.Enum, UnsafePointer<GL.Fixed>?) -> () = load_glLightxvOES
func load_glLightxvOES(light:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Fixed>?)
{
    fp_glLightxvOES = unsafeBitCast(get_fp("glLightxvOES", support: [ss292]), to: Swift.type(of: fp_glLightxvOES))
    fp_glLightxvOES(light, pname, params)
}
public
func glLightxvOES(light:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Fixed>?)
{
    fp_glLightxvOES(light, pname, params)
}
public
func glLightxvOES(_ light:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.Fixed>?)
{
    fp_glLightxvOES(light, pname, params)
}

var fp_glLineStipple:@convention(c) (GL.Int, GL.UShort) -> () = load_glLineStipple
func load_glLineStipple(factor:GL.Int, pattern:GL.UShort)
{
    fp_glLineStipple = unsafeBitCast(get_fp("glLineStipple", support: [ss346, ss369]), to: Swift.type(of: fp_glLineStipple))
    fp_glLineStipple(factor, pattern)
}
public
func glLineStipple(factor:GL.Int, pattern:GL.UShort)
{
    fp_glLineStipple(factor, pattern)
}
public
func glLineStipple(_ factor:GL.Int, _ pattern:GL.UShort)
{
    fp_glLineStipple(factor, pattern)
}

var fp_glLineWidth:@convention(c) (GL.Float) -> () = load_glLineWidth
func load_glLineWidth(width:GL.Float)
{
    fp_glLineWidth = unsafeBitCast(get_fp("glLineWidth", support: [ss346, ss365]), to: Swift.type(of: fp_glLineWidth))
    fp_glLineWidth(width)
}
public
func glLineWidth(width:GL.Float)
{
    fp_glLineWidth(width)
}
public
func glLineWidth(_ width:GL.Float)
{
    fp_glLineWidth(width)
}

var fp_glLineWidthx:@convention(c) (GL.Fixed) -> () = load_glLineWidthx
func load_glLineWidthx(width:GL.Fixed)
{
    fp_glLineWidthx = unsafeBitCast(get_fp("glLineWidthx", support: [ss364]), to: Swift.type(of: fp_glLineWidthx))
    fp_glLineWidthx(width)
}
public
func glLineWidthx(width:GL.Fixed)
{
    fp_glLineWidthx(width)
}
public
func glLineWidthx(_ width:GL.Fixed)
{
    fp_glLineWidthx(width)
}

var fp_glLineWidthxOES:@convention(c) (GL.Fixed) -> () = load_glLineWidthxOES
func load_glLineWidthxOES(width:GL.Fixed)
{
    fp_glLineWidthxOES = unsafeBitCast(get_fp("glLineWidthxOES", support: [ss292]), to: Swift.type(of: fp_glLineWidthxOES))
    fp_glLineWidthxOES(width)
}
public
func glLineWidthxOES(width:GL.Fixed)
{
    fp_glLineWidthxOES(width)
}
public
func glLineWidthxOES(_ width:GL.Fixed)
{
    fp_glLineWidthxOES(width)
}

var fp_glLinkProgram:@convention(c) (GL.UInt) -> () = load_glLinkProgram
func load_glLinkProgram(program:GL.UInt)
{
    fp_glLinkProgram = unsafeBitCast(get_fp("glLinkProgram", support: [ss352, ss365]), to: Swift.type(of: fp_glLinkProgram))
    fp_glLinkProgram(program)
}
public
func glLinkProgram(program:GL.UInt)
{
    fp_glLinkProgram(program)
}
public
func glLinkProgram(_ program:GL.UInt)
{
    fp_glLinkProgram(program)
}

var fp_glLinkProgramARB:@convention(c) (GL.HandleARB) -> () = load_glLinkProgramARB
func load_glLinkProgramARB(programObj:GL.HandleARB)
{
    fp_glLinkProgramARB = unsafeBitCast(get_fp("glLinkProgramARB", support: [ss83]), to: Swift.type(of: fp_glLinkProgramARB))
    fp_glLinkProgramARB(programObj)
}
public
func glLinkProgramARB(programObj:GL.HandleARB)
{
    fp_glLinkProgramARB(programObj)
}
public
func glLinkProgramARB(_ programObj:GL.HandleARB)
{
    fp_glLinkProgramARB(programObj)
}

var fp_glListBase:@convention(c) (GL.UInt) -> () = load_glListBase
func load_glListBase(base:GL.UInt)
{
    fp_glListBase = unsafeBitCast(get_fp("glListBase", support: [ss346, ss369]), to: Swift.type(of: fp_glListBase))
    fp_glListBase(base)
}
public
func glListBase(base:GL.UInt)
{
    fp_glListBase(base)
}
public
func glListBase(_ base:GL.UInt)
{
    fp_glListBase(base)
}

var fp_glListDrawCommandsStatesClientNV:@convention(c) (GL.UInt, GL.UInt, UnsafeMutablePointer<UnsafeRawPointer?>?, UnsafePointer<GL.Size>?, UnsafePointer<GL.UInt>?, UnsafePointer<GL.UInt>?, GL.UInt) -> () = load_glListDrawCommandsStatesClientNV
func load_glListDrawCommandsStatesClientNV(list:GL.UInt, segment:GL.UInt, indirects:UnsafeMutablePointer<UnsafeRawPointer?>?, sizes:UnsafePointer<GL.Size>?, states:UnsafePointer<GL.UInt>?, fbos:UnsafePointer<GL.UInt>?, count:GL.UInt)
{
    fp_glListDrawCommandsStatesClientNV = unsafeBitCast(get_fp("glListDrawCommandsStatesClientNV", support: [ss229]), to: Swift.type(of: fp_glListDrawCommandsStatesClientNV))
    fp_glListDrawCommandsStatesClientNV(list, segment, indirects, sizes, states, fbos, count)
}
public
func glListDrawCommandsStatesClientNV(list:GL.UInt, segment:GL.UInt, indirects:UnsafeMutablePointer<UnsafeRawPointer?>?, sizes:UnsafePointer<GL.Size>?, states:UnsafePointer<GL.UInt>?, fbos:UnsafePointer<GL.UInt>?, count:GL.UInt)
{
    fp_glListDrawCommandsStatesClientNV(list, segment, indirects, sizes, states, fbos, count)
}
public
func glListDrawCommandsStatesClientNV(_ list:GL.UInt, _ segment:GL.UInt, _ indirects:UnsafeMutablePointer<UnsafeRawPointer?>?, _ sizes:UnsafePointer<GL.Size>?, _ states:UnsafePointer<GL.UInt>?, _ fbos:UnsafePointer<GL.UInt>?, _ count:GL.UInt)
{
    fp_glListDrawCommandsStatesClientNV(list, segment, indirects, sizes, states, fbos, count)
}

var fp_glListParameterfSGIX:@convention(c) (GL.UInt, GL.Enum, GL.Float) -> () = load_glListParameterfSGIX
func load_glListParameterfSGIX(list:GL.UInt, pname:GL.Enum, param:GL.Float)
{
    fp_glListParameterfSGIX = unsafeBitCast(get_fp("glListParameterfSGIX", support: [ss335]), to: Swift.type(of: fp_glListParameterfSGIX))
    fp_glListParameterfSGIX(list, pname, param)
}
public
func glListParameterfSGIX(list:GL.UInt, pname:GL.Enum, param:GL.Float)
{
    fp_glListParameterfSGIX(list, pname, param)
}
public
func glListParameterfSGIX(_ list:GL.UInt, _ pname:GL.Enum, _ param:GL.Float)
{
    fp_glListParameterfSGIX(list, pname, param)
}

var fp_glListParameterfvSGIX:@convention(c) (GL.UInt, GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glListParameterfvSGIX
func load_glListParameterfvSGIX(list:GL.UInt, pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glListParameterfvSGIX = unsafeBitCast(get_fp("glListParameterfvSGIX", support: [ss335]), to: Swift.type(of: fp_glListParameterfvSGIX))
    fp_glListParameterfvSGIX(list, pname, params)
}
public
func glListParameterfvSGIX(list:GL.UInt, pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glListParameterfvSGIX(list, pname, params)
}
public
func glListParameterfvSGIX(_ list:GL.UInt, _ pname:GL.Enum, _ params:UnsafePointer<GL.Float>?)
{
    fp_glListParameterfvSGIX(list, pname, params)
}

var fp_glListParameteriSGIX:@convention(c) (GL.UInt, GL.Enum, GL.Int) -> () = load_glListParameteriSGIX
func load_glListParameteriSGIX(list:GL.UInt, pname:GL.Enum, param:GL.Int)
{
    fp_glListParameteriSGIX = unsafeBitCast(get_fp("glListParameteriSGIX", support: [ss335]), to: Swift.type(of: fp_glListParameteriSGIX))
    fp_glListParameteriSGIX(list, pname, param)
}
public
func glListParameteriSGIX(list:GL.UInt, pname:GL.Enum, param:GL.Int)
{
    fp_glListParameteriSGIX(list, pname, param)
}
public
func glListParameteriSGIX(_ list:GL.UInt, _ pname:GL.Enum, _ param:GL.Int)
{
    fp_glListParameteriSGIX(list, pname, param)
}

var fp_glListParameterivSGIX:@convention(c) (GL.UInt, GL.Enum, UnsafePointer<GL.Int>?) -> () = load_glListParameterivSGIX
func load_glListParameterivSGIX(list:GL.UInt, pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glListParameterivSGIX = unsafeBitCast(get_fp("glListParameterivSGIX", support: [ss335]), to: Swift.type(of: fp_glListParameterivSGIX))
    fp_glListParameterivSGIX(list, pname, params)
}
public
func glListParameterivSGIX(list:GL.UInt, pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glListParameterivSGIX(list, pname, params)
}
public
func glListParameterivSGIX(_ list:GL.UInt, _ pname:GL.Enum, _ params:UnsafePointer<GL.Int>?)
{
    fp_glListParameterivSGIX(list, pname, params)
}

var fp_glLoadIdentity:@convention(c) () -> () = load_glLoadIdentity
func load_glLoadIdentity()
{
    fp_glLoadIdentity = unsafeBitCast(get_fp("glLoadIdentity", support: [ss346, ss369, ss364]), to: Swift.type(of: fp_glLoadIdentity))
    fp_glLoadIdentity()
}
public
func glLoadIdentity()
{
    fp_glLoadIdentity()
}

var fp_glLoadIdentityDeformationMapSGIX:@convention(c) (GL.Bitfield) -> () = load_glLoadIdentityDeformationMapSGIX
func load_glLoadIdentityDeformationMapSGIX(mask:GL.Bitfield)
{
    fp_glLoadIdentityDeformationMapSGIX = unsafeBitCast(get_fp("glLoadIdentityDeformationMapSGIX", support: [ss337]), to: Swift.type(of: fp_glLoadIdentityDeformationMapSGIX))
    fp_glLoadIdentityDeformationMapSGIX(mask)
}
public
func glLoadIdentityDeformationMapSGIX(mask:GL.Bitfield)
{
    fp_glLoadIdentityDeformationMapSGIX(mask)
}
public
func glLoadIdentityDeformationMapSGIX(_ mask:GL.Bitfield)
{
    fp_glLoadIdentityDeformationMapSGIX(mask)
}

var fp_glLoadMatrixd:@convention(c) (UnsafePointer<GL.Double>?) -> () = load_glLoadMatrixd
func load_glLoadMatrixd(m:UnsafePointer<GL.Double>?)
{
    fp_glLoadMatrixd = unsafeBitCast(get_fp("glLoadMatrixd", support: [ss346, ss369]), to: Swift.type(of: fp_glLoadMatrixd))
    fp_glLoadMatrixd(m)
}
public
func glLoadMatrixd(m:UnsafePointer<GL.Double>?)
{
    fp_glLoadMatrixd(m)
}
public
func glLoadMatrixd(_ m:UnsafePointer<GL.Double>?)
{
    fp_glLoadMatrixd(m)
}

var fp_glLoadMatrixf:@convention(c) (UnsafePointer<GL.Float>?) -> () = load_glLoadMatrixf
func load_glLoadMatrixf(m:UnsafePointer<GL.Float>?)
{
    fp_glLoadMatrixf = unsafeBitCast(get_fp("glLoadMatrixf", support: [ss346, ss369, ss364]), to: Swift.type(of: fp_glLoadMatrixf))
    fp_glLoadMatrixf(m)
}
public
func glLoadMatrixf(m:UnsafePointer<GL.Float>?)
{
    fp_glLoadMatrixf(m)
}
public
func glLoadMatrixf(_ m:UnsafePointer<GL.Float>?)
{
    fp_glLoadMatrixf(m)
}

var fp_glLoadMatrixx:@convention(c) (UnsafePointer<GL.Fixed>?) -> () = load_glLoadMatrixx
func load_glLoadMatrixx(m:UnsafePointer<GL.Fixed>?)
{
    fp_glLoadMatrixx = unsafeBitCast(get_fp("glLoadMatrixx", support: [ss364]), to: Swift.type(of: fp_glLoadMatrixx))
    fp_glLoadMatrixx(m)
}
public
func glLoadMatrixx(m:UnsafePointer<GL.Fixed>?)
{
    fp_glLoadMatrixx(m)
}
public
func glLoadMatrixx(_ m:UnsafePointer<GL.Fixed>?)
{
    fp_glLoadMatrixx(m)
}

var fp_glLoadMatrixxOES:@convention(c) (UnsafePointer<GL.Fixed>?) -> () = load_glLoadMatrixxOES
func load_glLoadMatrixxOES(m:UnsafePointer<GL.Fixed>?)
{
    fp_glLoadMatrixxOES = unsafeBitCast(get_fp("glLoadMatrixxOES", support: [ss292]), to: Swift.type(of: fp_glLoadMatrixxOES))
    fp_glLoadMatrixxOES(m)
}
public
func glLoadMatrixxOES(m:UnsafePointer<GL.Fixed>?)
{
    fp_glLoadMatrixxOES(m)
}
public
func glLoadMatrixxOES(_ m:UnsafePointer<GL.Fixed>?)
{
    fp_glLoadMatrixxOES(m)
}

var fp_glLoadName:@convention(c) (GL.UInt) -> () = load_glLoadName
func load_glLoadName(name:GL.UInt)
{
    fp_glLoadName = unsafeBitCast(get_fp("glLoadName", support: [ss346, ss369]), to: Swift.type(of: fp_glLoadName))
    fp_glLoadName(name)
}
public
func glLoadName(name:GL.UInt)
{
    fp_glLoadName(name)
}
public
func glLoadName(_ name:GL.UInt)
{
    fp_glLoadName(name)
}

var fp_glLoadPaletteFromModelViewMatrixOES:@convention(c) () -> () = load_glLoadPaletteFromModelViewMatrixOES
func load_glLoadPaletteFromModelViewMatrixOES()
{
    fp_glLoadPaletteFromModelViewMatrixOES = unsafeBitCast(get_fp("glLoadPaletteFromModelViewMatrixOES", support: [ss297]), to: Swift.type(of: fp_glLoadPaletteFromModelViewMatrixOES))
    fp_glLoadPaletteFromModelViewMatrixOES()
}
public
func glLoadPaletteFromModelViewMatrixOES()
{
    fp_glLoadPaletteFromModelViewMatrixOES()
}

var fp_glLoadProgramNV:@convention(c) (GL.Enum, GL.UInt, GL.Size, UnsafePointer<GL.UByte>?) -> () = load_glLoadProgramNV
func load_glLoadProgramNV(target:GL.Enum, id:GL.UInt, len:GL.Size, program:UnsafePointer<GL.UByte>?)
{
    fp_glLoadProgramNV = unsafeBitCast(get_fp("glLoadProgramNV", support: [ss278]), to: Swift.type(of: fp_glLoadProgramNV))
    fp_glLoadProgramNV(target, id, len, program)
}
public
func glLoadProgramNV(target:GL.Enum, id:GL.UInt, len:GL.Size, program:UnsafePointer<GL.UByte>?)
{
    fp_glLoadProgramNV(target, id, len, program)
}
public
func glLoadProgramNV(_ target:GL.Enum, _ id:GL.UInt, _ len:GL.Size, _ program:UnsafePointer<GL.UByte>?)
{
    fp_glLoadProgramNV(target, id, len, program)
}

var fp_glLoadTransposeMatrixd:@convention(c) (UnsafePointer<GL.Double>?) -> () = load_glLoadTransposeMatrixd
func load_glLoadTransposeMatrixd(m:UnsafePointer<GL.Double>?)
{
    fp_glLoadTransposeMatrixd = unsafeBitCast(get_fp("glLoadTransposeMatrixd", support: [ss349, ss369]), to: Swift.type(of: fp_glLoadTransposeMatrixd))
    fp_glLoadTransposeMatrixd(m)
}
public
func glLoadTransposeMatrixd(m:UnsafePointer<GL.Double>?)
{
    fp_glLoadTransposeMatrixd(m)
}
public
func glLoadTransposeMatrixd(_ m:UnsafePointer<GL.Double>?)
{
    fp_glLoadTransposeMatrixd(m)
}

var fp_glLoadTransposeMatrixdARB:@convention(c) (UnsafePointer<GL.Double>?) -> () = load_glLoadTransposeMatrixdARB
func load_glLoadTransposeMatrixdARB(m:UnsafePointer<GL.Double>?)
{
    fp_glLoadTransposeMatrixdARB = unsafeBitCast(get_fp("glLoadTransposeMatrixdARB", support: [ss103]), to: Swift.type(of: fp_glLoadTransposeMatrixdARB))
    fp_glLoadTransposeMatrixdARB(m)
}
public
func glLoadTransposeMatrixdARB(m:UnsafePointer<GL.Double>?)
{
    fp_glLoadTransposeMatrixdARB(m)
}
public
func glLoadTransposeMatrixdARB(_ m:UnsafePointer<GL.Double>?)
{
    fp_glLoadTransposeMatrixdARB(m)
}

var fp_glLoadTransposeMatrixf:@convention(c) (UnsafePointer<GL.Float>?) -> () = load_glLoadTransposeMatrixf
func load_glLoadTransposeMatrixf(m:UnsafePointer<GL.Float>?)
{
    fp_glLoadTransposeMatrixf = unsafeBitCast(get_fp("glLoadTransposeMatrixf", support: [ss349, ss369]), to: Swift.type(of: fp_glLoadTransposeMatrixf))
    fp_glLoadTransposeMatrixf(m)
}
public
func glLoadTransposeMatrixf(m:UnsafePointer<GL.Float>?)
{
    fp_glLoadTransposeMatrixf(m)
}
public
func glLoadTransposeMatrixf(_ m:UnsafePointer<GL.Float>?)
{
    fp_glLoadTransposeMatrixf(m)
}

var fp_glLoadTransposeMatrixfARB:@convention(c) (UnsafePointer<GL.Float>?) -> () = load_glLoadTransposeMatrixfARB
func load_glLoadTransposeMatrixfARB(m:UnsafePointer<GL.Float>?)
{
    fp_glLoadTransposeMatrixfARB = unsafeBitCast(get_fp("glLoadTransposeMatrixfARB", support: [ss103]), to: Swift.type(of: fp_glLoadTransposeMatrixfARB))
    fp_glLoadTransposeMatrixfARB(m)
}
public
func glLoadTransposeMatrixfARB(m:UnsafePointer<GL.Float>?)
{
    fp_glLoadTransposeMatrixfARB(m)
}
public
func glLoadTransposeMatrixfARB(_ m:UnsafePointer<GL.Float>?)
{
    fp_glLoadTransposeMatrixfARB(m)
}

var fp_glLoadTransposeMatrixxOES:@convention(c) (UnsafePointer<GL.Fixed>?) -> () = load_glLoadTransposeMatrixxOES
func load_glLoadTransposeMatrixxOES(m:UnsafePointer<GL.Fixed>?)
{
    fp_glLoadTransposeMatrixxOES = unsafeBitCast(get_fp("glLoadTransposeMatrixxOES", support: [ss292]), to: Swift.type(of: fp_glLoadTransposeMatrixxOES))
    fp_glLoadTransposeMatrixxOES(m)
}
public
func glLoadTransposeMatrixxOES(m:UnsafePointer<GL.Fixed>?)
{
    fp_glLoadTransposeMatrixxOES(m)
}
public
func glLoadTransposeMatrixxOES(_ m:UnsafePointer<GL.Fixed>?)
{
    fp_glLoadTransposeMatrixxOES(m)
}

var fp_glLockArraysEXT:@convention(c) (GL.Int, GL.Size) -> () = load_glLockArraysEXT
func load_glLockArraysEXT(first:GL.Int, count:GL.Size)
{
    fp_glLockArraysEXT = unsafeBitCast(get_fp("glLockArraysEXT", support: [ss134]), to: Swift.type(of: fp_glLockArraysEXT))
    fp_glLockArraysEXT(first, count)
}
public
func glLockArraysEXT(first:GL.Int, count:GL.Size)
{
    fp_glLockArraysEXT(first, count)
}
public
func glLockArraysEXT(_ first:GL.Int, _ count:GL.Size)
{
    fp_glLockArraysEXT(first, count)
}

var fp_glLogicOp:@convention(c) (GL.Enum) -> () = load_glLogicOp
func load_glLogicOp(opcode:GL.Enum)
{
    fp_glLogicOp = unsafeBitCast(get_fp("glLogicOp", support: [ss346, ss364]), to: Swift.type(of: fp_glLogicOp))
    fp_glLogicOp(opcode)
}
public
func glLogicOp(opcode:GL.Enum)
{
    fp_glLogicOp(opcode)
}
public
func glLogicOp(_ opcode:GL.Enum)
{
    fp_glLogicOp(opcode)
}

var fp_glMakeBufferNonResidentNV:@convention(c) (GL.Enum) -> () = load_glMakeBufferNonResidentNV
func load_glMakeBufferNonResidentNV(target:GL.Enum)
{
    fp_glMakeBufferNonResidentNV = unsafeBitCast(get_fp("glMakeBufferNonResidentNV", support: [ss269]), to: Swift.type(of: fp_glMakeBufferNonResidentNV))
    fp_glMakeBufferNonResidentNV(target)
}
public
func glMakeBufferNonResidentNV(target:GL.Enum)
{
    fp_glMakeBufferNonResidentNV(target)
}
public
func glMakeBufferNonResidentNV(_ target:GL.Enum)
{
    fp_glMakeBufferNonResidentNV(target)
}

var fp_glMakeBufferResidentNV:@convention(c) (GL.Enum, GL.Enum) -> () = load_glMakeBufferResidentNV
func load_glMakeBufferResidentNV(target:GL.Enum, access:GL.Enum)
{
    fp_glMakeBufferResidentNV = unsafeBitCast(get_fp("glMakeBufferResidentNV", support: [ss269]), to: Swift.type(of: fp_glMakeBufferResidentNV))
    fp_glMakeBufferResidentNV(target, access)
}
public
func glMakeBufferResidentNV(target:GL.Enum, access:GL.Enum)
{
    fp_glMakeBufferResidentNV(target, access)
}
public
func glMakeBufferResidentNV(_ target:GL.Enum, _ access:GL.Enum)
{
    fp_glMakeBufferResidentNV(target, access)
}

var fp_glMakeImageHandleNonResidentARB:@convention(c) (GL.UInt64) -> () = load_glMakeImageHandleNonResidentARB
func load_glMakeImageHandleNonResidentARB(handle:GL.UInt64)
{
    fp_glMakeImageHandleNonResidentARB = unsafeBitCast(get_fp("glMakeImageHandleNonResidentARB", support: [ss29]), to: Swift.type(of: fp_glMakeImageHandleNonResidentARB))
    fp_glMakeImageHandleNonResidentARB(handle)
}
public
func glMakeImageHandleNonResidentARB(handle:GL.UInt64)
{
    fp_glMakeImageHandleNonResidentARB(handle)
}
public
func glMakeImageHandleNonResidentARB(_ handle:GL.UInt64)
{
    fp_glMakeImageHandleNonResidentARB(handle)
}

var fp_glMakeImageHandleNonResidentNV:@convention(c) (GL.UInt64) -> () = load_glMakeImageHandleNonResidentNV
func load_glMakeImageHandleNonResidentNV(handle:GL.UInt64)
{
    fp_glMakeImageHandleNonResidentNV = unsafeBitCast(get_fp("glMakeImageHandleNonResidentNV", support: [ss227]), to: Swift.type(of: fp_glMakeImageHandleNonResidentNV))
    fp_glMakeImageHandleNonResidentNV(handle)
}
public
func glMakeImageHandleNonResidentNV(handle:GL.UInt64)
{
    fp_glMakeImageHandleNonResidentNV(handle)
}
public
func glMakeImageHandleNonResidentNV(_ handle:GL.UInt64)
{
    fp_glMakeImageHandleNonResidentNV(handle)
}

var fp_glMakeImageHandleResidentARB:@convention(c) (GL.UInt64, GL.Enum) -> () = load_glMakeImageHandleResidentARB
func load_glMakeImageHandleResidentARB(handle:GL.UInt64, access:GL.Enum)
{
    fp_glMakeImageHandleResidentARB = unsafeBitCast(get_fp("glMakeImageHandleResidentARB", support: [ss29]), to: Swift.type(of: fp_glMakeImageHandleResidentARB))
    fp_glMakeImageHandleResidentARB(handle, access)
}
public
func glMakeImageHandleResidentARB(handle:GL.UInt64, access:GL.Enum)
{
    fp_glMakeImageHandleResidentARB(handle, access)
}
public
func glMakeImageHandleResidentARB(_ handle:GL.UInt64, _ access:GL.Enum)
{
    fp_glMakeImageHandleResidentARB(handle, access)
}

var fp_glMakeImageHandleResidentNV:@convention(c) (GL.UInt64, GL.Enum) -> () = load_glMakeImageHandleResidentNV
func load_glMakeImageHandleResidentNV(handle:GL.UInt64, access:GL.Enum)
{
    fp_glMakeImageHandleResidentNV = unsafeBitCast(get_fp("glMakeImageHandleResidentNV", support: [ss227]), to: Swift.type(of: fp_glMakeImageHandleResidentNV))
    fp_glMakeImageHandleResidentNV(handle, access)
}
public
func glMakeImageHandleResidentNV(handle:GL.UInt64, access:GL.Enum)
{
    fp_glMakeImageHandleResidentNV(handle, access)
}
public
func glMakeImageHandleResidentNV(_ handle:GL.UInt64, _ access:GL.Enum)
{
    fp_glMakeImageHandleResidentNV(handle, access)
}

var fp_glMakeNamedBufferNonResidentNV:@convention(c) (GL.UInt) -> () = load_glMakeNamedBufferNonResidentNV
func load_glMakeNamedBufferNonResidentNV(buffer:GL.UInt)
{
    fp_glMakeNamedBufferNonResidentNV = unsafeBitCast(get_fp("glMakeNamedBufferNonResidentNV", support: [ss269]), to: Swift.type(of: fp_glMakeNamedBufferNonResidentNV))
    fp_glMakeNamedBufferNonResidentNV(buffer)
}
public
func glMakeNamedBufferNonResidentNV(buffer:GL.UInt)
{
    fp_glMakeNamedBufferNonResidentNV(buffer)
}
public
func glMakeNamedBufferNonResidentNV(_ buffer:GL.UInt)
{
    fp_glMakeNamedBufferNonResidentNV(buffer)
}

var fp_glMakeNamedBufferResidentNV:@convention(c) (GL.UInt, GL.Enum) -> () = load_glMakeNamedBufferResidentNV
func load_glMakeNamedBufferResidentNV(buffer:GL.UInt, access:GL.Enum)
{
    fp_glMakeNamedBufferResidentNV = unsafeBitCast(get_fp("glMakeNamedBufferResidentNV", support: [ss269]), to: Swift.type(of: fp_glMakeNamedBufferResidentNV))
    fp_glMakeNamedBufferResidentNV(buffer, access)
}
public
func glMakeNamedBufferResidentNV(buffer:GL.UInt, access:GL.Enum)
{
    fp_glMakeNamedBufferResidentNV(buffer, access)
}
public
func glMakeNamedBufferResidentNV(_ buffer:GL.UInt, _ access:GL.Enum)
{
    fp_glMakeNamedBufferResidentNV(buffer, access)
}

var fp_glMakeTextureHandleNonResidentARB:@convention(c) (GL.UInt64) -> () = load_glMakeTextureHandleNonResidentARB
func load_glMakeTextureHandleNonResidentARB(handle:GL.UInt64)
{
    fp_glMakeTextureHandleNonResidentARB = unsafeBitCast(get_fp("glMakeTextureHandleNonResidentARB", support: [ss29]), to: Swift.type(of: fp_glMakeTextureHandleNonResidentARB))
    fp_glMakeTextureHandleNonResidentARB(handle)
}
public
func glMakeTextureHandleNonResidentARB(handle:GL.UInt64)
{
    fp_glMakeTextureHandleNonResidentARB(handle)
}
public
func glMakeTextureHandleNonResidentARB(_ handle:GL.UInt64)
{
    fp_glMakeTextureHandleNonResidentARB(handle)
}

var fp_glMakeTextureHandleNonResidentNV:@convention(c) (GL.UInt64) -> () = load_glMakeTextureHandleNonResidentNV
func load_glMakeTextureHandleNonResidentNV(handle:GL.UInt64)
{
    fp_glMakeTextureHandleNonResidentNV = unsafeBitCast(get_fp("glMakeTextureHandleNonResidentNV", support: [ss227]), to: Swift.type(of: fp_glMakeTextureHandleNonResidentNV))
    fp_glMakeTextureHandleNonResidentNV(handle)
}
public
func glMakeTextureHandleNonResidentNV(handle:GL.UInt64)
{
    fp_glMakeTextureHandleNonResidentNV(handle)
}
public
func glMakeTextureHandleNonResidentNV(_ handle:GL.UInt64)
{
    fp_glMakeTextureHandleNonResidentNV(handle)
}

var fp_glMakeTextureHandleResidentARB:@convention(c) (GL.UInt64) -> () = load_glMakeTextureHandleResidentARB
func load_glMakeTextureHandleResidentARB(handle:GL.UInt64)
{
    fp_glMakeTextureHandleResidentARB = unsafeBitCast(get_fp("glMakeTextureHandleResidentARB", support: [ss29]), to: Swift.type(of: fp_glMakeTextureHandleResidentARB))
    fp_glMakeTextureHandleResidentARB(handle)
}
public
func glMakeTextureHandleResidentARB(handle:GL.UInt64)
{
    fp_glMakeTextureHandleResidentARB(handle)
}
public
func glMakeTextureHandleResidentARB(_ handle:GL.UInt64)
{
    fp_glMakeTextureHandleResidentARB(handle)
}

var fp_glMakeTextureHandleResidentNV:@convention(c) (GL.UInt64) -> () = load_glMakeTextureHandleResidentNV
func load_glMakeTextureHandleResidentNV(handle:GL.UInt64)
{
    fp_glMakeTextureHandleResidentNV = unsafeBitCast(get_fp("glMakeTextureHandleResidentNV", support: [ss227]), to: Swift.type(of: fp_glMakeTextureHandleResidentNV))
    fp_glMakeTextureHandleResidentNV(handle)
}
public
func glMakeTextureHandleResidentNV(handle:GL.UInt64)
{
    fp_glMakeTextureHandleResidentNV(handle)
}
public
func glMakeTextureHandleResidentNV(_ handle:GL.UInt64)
{
    fp_glMakeTextureHandleResidentNV(handle)
}

var fp_glMap1d:@convention(c) (GL.Enum, GL.Double, GL.Double, GL.Int, GL.Int, UnsafePointer<GL.Double>?) -> () = load_glMap1d
func load_glMap1d(target:GL.Enum, u1:GL.Double, u2:GL.Double, stride:GL.Int, order:GL.Int, points:UnsafePointer<GL.Double>?)
{
    fp_glMap1d = unsafeBitCast(get_fp("glMap1d", support: [ss346, ss369]), to: Swift.type(of: fp_glMap1d))
    fp_glMap1d(target, u1, u2, stride, order, points)
}
public
func glMap1d(target:GL.Enum, u1:GL.Double, u2:GL.Double, stride:GL.Int, order:GL.Int, points:UnsafePointer<GL.Double>?)
{
    fp_glMap1d(target, u1, u2, stride, order, points)
}
public
func glMap1d(_ target:GL.Enum, _ u1:GL.Double, _ u2:GL.Double, _ stride:GL.Int, _ order:GL.Int, _ points:UnsafePointer<GL.Double>?)
{
    fp_glMap1d(target, u1, u2, stride, order, points)
}

var fp_glMap1f:@convention(c) (GL.Enum, GL.Float, GL.Float, GL.Int, GL.Int, UnsafePointer<GL.Float>?) -> () = load_glMap1f
func load_glMap1f(target:GL.Enum, u1:GL.Float, u2:GL.Float, stride:GL.Int, order:GL.Int, points:UnsafePointer<GL.Float>?)
{
    fp_glMap1f = unsafeBitCast(get_fp("glMap1f", support: [ss346, ss369]), to: Swift.type(of: fp_glMap1f))
    fp_glMap1f(target, u1, u2, stride, order, points)
}
public
func glMap1f(target:GL.Enum, u1:GL.Float, u2:GL.Float, stride:GL.Int, order:GL.Int, points:UnsafePointer<GL.Float>?)
{
    fp_glMap1f(target, u1, u2, stride, order, points)
}
public
func glMap1f(_ target:GL.Enum, _ u1:GL.Float, _ u2:GL.Float, _ stride:GL.Int, _ order:GL.Int, _ points:UnsafePointer<GL.Float>?)
{
    fp_glMap1f(target, u1, u2, stride, order, points)
}

var fp_glMap1xOES:@convention(c) (GL.Enum, GL.Fixed, GL.Fixed, GL.Int, GL.Int, GL.Fixed) -> () = load_glMap1xOES
func load_glMap1xOES(target:GL.Enum, u1:GL.Fixed, u2:GL.Fixed, stride:GL.Int, order:GL.Int, points:GL.Fixed)
{
    fp_glMap1xOES = unsafeBitCast(get_fp("glMap1xOES", support: [ss292]), to: Swift.type(of: fp_glMap1xOES))
    fp_glMap1xOES(target, u1, u2, stride, order, points)
}
public
func glMap1xOES(target:GL.Enum, u1:GL.Fixed, u2:GL.Fixed, stride:GL.Int, order:GL.Int, points:GL.Fixed)
{
    fp_glMap1xOES(target, u1, u2, stride, order, points)
}
public
func glMap1xOES(_ target:GL.Enum, _ u1:GL.Fixed, _ u2:GL.Fixed, _ stride:GL.Int, _ order:GL.Int, _ points:GL.Fixed)
{
    fp_glMap1xOES(target, u1, u2, stride, order, points)
}

var fp_glMap2d:@convention(c) (GL.Enum, GL.Double, GL.Double, GL.Int, GL.Int, GL.Double, GL.Double, GL.Int, GL.Int, UnsafePointer<GL.Double>?) -> () = load_glMap2d
func load_glMap2d(target:GL.Enum, u1:GL.Double, u2:GL.Double, ustride:GL.Int, uorder:GL.Int, v1:GL.Double, v2:GL.Double, vstride:GL.Int, vorder:GL.Int, points:UnsafePointer<GL.Double>?)
{
    fp_glMap2d = unsafeBitCast(get_fp("glMap2d", support: [ss346, ss369]), to: Swift.type(of: fp_glMap2d))
    fp_glMap2d(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points)
}
public
func glMap2d(target:GL.Enum, u1:GL.Double, u2:GL.Double, ustride:GL.Int, uorder:GL.Int, v1:GL.Double, v2:GL.Double, vstride:GL.Int, vorder:GL.Int, points:UnsafePointer<GL.Double>?)
{
    fp_glMap2d(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points)
}
public
func glMap2d(_ target:GL.Enum, _ u1:GL.Double, _ u2:GL.Double, _ ustride:GL.Int, _ uorder:GL.Int, _ v1:GL.Double, _ v2:GL.Double, _ vstride:GL.Int, _ vorder:GL.Int, _ points:UnsafePointer<GL.Double>?)
{
    fp_glMap2d(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points)
}

var fp_glMap2f:@convention(c) (GL.Enum, GL.Float, GL.Float, GL.Int, GL.Int, GL.Float, GL.Float, GL.Int, GL.Int, UnsafePointer<GL.Float>?) -> () = load_glMap2f
func load_glMap2f(target:GL.Enum, u1:GL.Float, u2:GL.Float, ustride:GL.Int, uorder:GL.Int, v1:GL.Float, v2:GL.Float, vstride:GL.Int, vorder:GL.Int, points:UnsafePointer<GL.Float>?)
{
    fp_glMap2f = unsafeBitCast(get_fp("glMap2f", support: [ss346, ss369]), to: Swift.type(of: fp_glMap2f))
    fp_glMap2f(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points)
}
public
func glMap2f(target:GL.Enum, u1:GL.Float, u2:GL.Float, ustride:GL.Int, uorder:GL.Int, v1:GL.Float, v2:GL.Float, vstride:GL.Int, vorder:GL.Int, points:UnsafePointer<GL.Float>?)
{
    fp_glMap2f(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points)
}
public
func glMap2f(_ target:GL.Enum, _ u1:GL.Float, _ u2:GL.Float, _ ustride:GL.Int, _ uorder:GL.Int, _ v1:GL.Float, _ v2:GL.Float, _ vstride:GL.Int, _ vorder:GL.Int, _ points:UnsafePointer<GL.Float>?)
{
    fp_glMap2f(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points)
}

var fp_glMap2xOES:@convention(c) (GL.Enum, GL.Fixed, GL.Fixed, GL.Int, GL.Int, GL.Fixed, GL.Fixed, GL.Int, GL.Int, GL.Fixed) -> () = load_glMap2xOES
func load_glMap2xOES(target:GL.Enum, u1:GL.Fixed, u2:GL.Fixed, ustride:GL.Int, uorder:GL.Int, v1:GL.Fixed, v2:GL.Fixed, vstride:GL.Int, vorder:GL.Int, points:GL.Fixed)
{
    fp_glMap2xOES = unsafeBitCast(get_fp("glMap2xOES", support: [ss292]), to: Swift.type(of: fp_glMap2xOES))
    fp_glMap2xOES(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points)
}
public
func glMap2xOES(target:GL.Enum, u1:GL.Fixed, u2:GL.Fixed, ustride:GL.Int, uorder:GL.Int, v1:GL.Fixed, v2:GL.Fixed, vstride:GL.Int, vorder:GL.Int, points:GL.Fixed)
{
    fp_glMap2xOES(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points)
}
public
func glMap2xOES(_ target:GL.Enum, _ u1:GL.Fixed, _ u2:GL.Fixed, _ ustride:GL.Int, _ uorder:GL.Int, _ v1:GL.Fixed, _ v2:GL.Fixed, _ vstride:GL.Int, _ vorder:GL.Int, _ points:GL.Fixed)
{
    fp_glMap2xOES(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points)
}

var fp_glMapBuffer:@convention(c) (GL.Enum, GL.Enum) -> UnsafeMutableRawPointer? = load_glMapBuffer
func load_glMapBuffer(target:GL.Enum, access:GL.Enum) -> UnsafeMutableRawPointer?
{
    fp_glMapBuffer = unsafeBitCast(get_fp("glMapBuffer", support: [ss351]), to: Swift.type(of: fp_glMapBuffer))
    return fp_glMapBuffer(target, access)
}
public
func glMapBuffer(target:GL.Enum, access:GL.Enum) -> UnsafeMutableRawPointer?
{
    return fp_glMapBuffer(target, access)
}
public
func glMapBuffer(_ target:GL.Enum, _ access:GL.Enum) -> UnsafeMutableRawPointer?
{
    return fp_glMapBuffer(target, access)
}

var fp_glMapBufferARB:@convention(c) (GL.Enum, GL.Enum) -> UnsafeMutableRawPointer? = load_glMapBufferARB
func load_glMapBufferARB(target:GL.Enum, access:GL.Enum) -> UnsafeMutableRawPointer?
{
    fp_glMapBufferARB = unsafeBitCast(get_fp("glMapBufferARB", support: [ss109]), to: Swift.type(of: fp_glMapBufferARB))
    return fp_glMapBufferARB(target, access)
}
public
func glMapBufferARB(target:GL.Enum, access:GL.Enum) -> UnsafeMutableRawPointer?
{
    return fp_glMapBufferARB(target, access)
}
public
func glMapBufferARB(_ target:GL.Enum, _ access:GL.Enum) -> UnsafeMutableRawPointer?
{
    return fp_glMapBufferARB(target, access)
}

var fp_glMapBufferOES:@convention(c) (GL.Enum, GL.Enum) -> UnsafeMutableRawPointer? = load_glMapBufferOES
func load_glMapBufferOES(target:GL.Enum, access:GL.Enum) -> UnsafeMutableRawPointer?
{
    fp_glMapBufferOES = unsafeBitCast(get_fp("glMapBufferOES", support: [ss296]), to: Swift.type(of: fp_glMapBufferOES))
    return fp_glMapBufferOES(target, access)
}
public
func glMapBufferOES(target:GL.Enum, access:GL.Enum) -> UnsafeMutableRawPointer?
{
    return fp_glMapBufferOES(target, access)
}
public
func glMapBufferOES(_ target:GL.Enum, _ access:GL.Enum) -> UnsafeMutableRawPointer?
{
    return fp_glMapBufferOES(target, access)
}

var fp_glMapBufferRange:@convention(c) (GL.Enum, GL.IntPointer, GL.SizePointer, GL.Bitfield) -> UnsafeMutableRawPointer? = load_glMapBufferRange
func load_glMapBufferRange(target:GL.Enum, offset:GL.IntPointer, length:GL.SizePointer, access:GL.Bitfield) -> UnsafeMutableRawPointer?
{
    fp_glMapBufferRange = unsafeBitCast(get_fp("glMapBufferRange", support: [ss354, ss366, ss65]), to: Swift.type(of: fp_glMapBufferRange))
    return fp_glMapBufferRange(target, offset, length, access)
}
public
func glMapBufferRange(target:GL.Enum, offset:GL.IntPointer, length:GL.SizePointer, access:GL.Bitfield) -> UnsafeMutableRawPointer?
{
    return fp_glMapBufferRange(target, offset, length, access)
}
public
func glMapBufferRange(_ target:GL.Enum, _ offset:GL.IntPointer, _ length:GL.SizePointer, _ access:GL.Bitfield) -> UnsafeMutableRawPointer?
{
    return fp_glMapBufferRange(target, offset, length, access)
}

var fp_glMapBufferRangeEXT:@convention(c) (GL.Enum, GL.IntPointer, GL.SizePointer, GL.Bitfield) -> UnsafeMutableRawPointer? = load_glMapBufferRangeEXT
func load_glMapBufferRangeEXT(target:GL.Enum, offset:GL.IntPointer, length:GL.SizePointer, access:GL.Bitfield) -> UnsafeMutableRawPointer?
{
    fp_glMapBufferRangeEXT = unsafeBitCast(get_fp("glMapBufferRangeEXT", support: [ss165]), to: Swift.type(of: fp_glMapBufferRangeEXT))
    return fp_glMapBufferRangeEXT(target, offset, length, access)
}
public
func glMapBufferRangeEXT(target:GL.Enum, offset:GL.IntPointer, length:GL.SizePointer, access:GL.Bitfield) -> UnsafeMutableRawPointer?
{
    return fp_glMapBufferRangeEXT(target, offset, length, access)
}
public
func glMapBufferRangeEXT(_ target:GL.Enum, _ offset:GL.IntPointer, _ length:GL.SizePointer, _ access:GL.Bitfield) -> UnsafeMutableRawPointer?
{
    return fp_glMapBufferRangeEXT(target, offset, length, access)
}

var fp_glMapControlPointsNV:@convention(c) (GL.Enum, GL.UInt, GL.Enum, GL.Size, GL.Size, GL.Int, GL.Int, GL.Bool, UnsafeRawPointer?) -> () = load_glMapControlPointsNV
func load_glMapControlPointsNV(target:GL.Enum, index:GL.UInt, type:GL.Enum, ustride:GL.Size, vstride:GL.Size, uorder:GL.Int, vorder:GL.Int, packed:GL.Bool, points:UnsafeRawPointer?)
{
    fp_glMapControlPointsNV = unsafeBitCast(get_fp("glMapControlPointsNV", support: [ss240]), to: Swift.type(of: fp_glMapControlPointsNV))
    fp_glMapControlPointsNV(target, index, type, ustride, vstride, uorder, vorder, packed, points)
}
public
func glMapControlPointsNV(target:GL.Enum, index:GL.UInt, type:GL.Enum, ustride:GL.Size, vstride:GL.Size, uorder:GL.Int, vorder:GL.Int, packed:GL.Bool, points:UnsafeRawPointer?)
{
    fp_glMapControlPointsNV(target, index, type, ustride, vstride, uorder, vorder, packed, points)
}
public
func glMapControlPointsNV(_ target:GL.Enum, _ index:GL.UInt, _ type:GL.Enum, _ ustride:GL.Size, _ vstride:GL.Size, _ uorder:GL.Int, _ vorder:GL.Int, _ packed:GL.Bool, _ points:UnsafeRawPointer?)
{
    fp_glMapControlPointsNV(target, index, type, ustride, vstride, uorder, vorder, packed, points)
}

var fp_glMapGrid1d:@convention(c) (GL.Int, GL.Double, GL.Double) -> () = load_glMapGrid1d
func load_glMapGrid1d(un:GL.Int, u1:GL.Double, u2:GL.Double)
{
    fp_glMapGrid1d = unsafeBitCast(get_fp("glMapGrid1d", support: [ss346, ss369]), to: Swift.type(of: fp_glMapGrid1d))
    fp_glMapGrid1d(un, u1, u2)
}
public
func glMapGrid1d(un:GL.Int, u1:GL.Double, u2:GL.Double)
{
    fp_glMapGrid1d(un, u1, u2)
}
public
func glMapGrid1d(_ un:GL.Int, _ u1:GL.Double, _ u2:GL.Double)
{
    fp_glMapGrid1d(un, u1, u2)
}

var fp_glMapGrid1f:@convention(c) (GL.Int, GL.Float, GL.Float) -> () = load_glMapGrid1f
func load_glMapGrid1f(un:GL.Int, u1:GL.Float, u2:GL.Float)
{
    fp_glMapGrid1f = unsafeBitCast(get_fp("glMapGrid1f", support: [ss346, ss369]), to: Swift.type(of: fp_glMapGrid1f))
    fp_glMapGrid1f(un, u1, u2)
}
public
func glMapGrid1f(un:GL.Int, u1:GL.Float, u2:GL.Float)
{
    fp_glMapGrid1f(un, u1, u2)
}
public
func glMapGrid1f(_ un:GL.Int, _ u1:GL.Float, _ u2:GL.Float)
{
    fp_glMapGrid1f(un, u1, u2)
}

var fp_glMapGrid1xOES:@convention(c) (GL.Int, GL.Fixed, GL.Fixed) -> () = load_glMapGrid1xOES
func load_glMapGrid1xOES(n:GL.Int, u1:GL.Fixed, u2:GL.Fixed)
{
    fp_glMapGrid1xOES = unsafeBitCast(get_fp("glMapGrid1xOES", support: [ss292]), to: Swift.type(of: fp_glMapGrid1xOES))
    fp_glMapGrid1xOES(n, u1, u2)
}
public
func glMapGrid1xOES(n:GL.Int, u1:GL.Fixed, u2:GL.Fixed)
{
    fp_glMapGrid1xOES(n, u1, u2)
}
public
func glMapGrid1xOES(_ n:GL.Int, _ u1:GL.Fixed, _ u2:GL.Fixed)
{
    fp_glMapGrid1xOES(n, u1, u2)
}

var fp_glMapGrid2d:@convention(c) (GL.Int, GL.Double, GL.Double, GL.Int, GL.Double, GL.Double) -> () = load_glMapGrid2d
func load_glMapGrid2d(un:GL.Int, u1:GL.Double, u2:GL.Double, vn:GL.Int, v1:GL.Double, v2:GL.Double)
{
    fp_glMapGrid2d = unsafeBitCast(get_fp("glMapGrid2d", support: [ss346, ss369]), to: Swift.type(of: fp_glMapGrid2d))
    fp_glMapGrid2d(un, u1, u2, vn, v1, v2)
}
public
func glMapGrid2d(un:GL.Int, u1:GL.Double, u2:GL.Double, vn:GL.Int, v1:GL.Double, v2:GL.Double)
{
    fp_glMapGrid2d(un, u1, u2, vn, v1, v2)
}
public
func glMapGrid2d(_ un:GL.Int, _ u1:GL.Double, _ u2:GL.Double, _ vn:GL.Int, _ v1:GL.Double, _ v2:GL.Double)
{
    fp_glMapGrid2d(un, u1, u2, vn, v1, v2)
}

var fp_glMapGrid2f:@convention(c) (GL.Int, GL.Float, GL.Float, GL.Int, GL.Float, GL.Float) -> () = load_glMapGrid2f
func load_glMapGrid2f(un:GL.Int, u1:GL.Float, u2:GL.Float, vn:GL.Int, v1:GL.Float, v2:GL.Float)
{
    fp_glMapGrid2f = unsafeBitCast(get_fp("glMapGrid2f", support: [ss346, ss369]), to: Swift.type(of: fp_glMapGrid2f))
    fp_glMapGrid2f(un, u1, u2, vn, v1, v2)
}
public
func glMapGrid2f(un:GL.Int, u1:GL.Float, u2:GL.Float, vn:GL.Int, v1:GL.Float, v2:GL.Float)
{
    fp_glMapGrid2f(un, u1, u2, vn, v1, v2)
}
public
func glMapGrid2f(_ un:GL.Int, _ u1:GL.Float, _ u2:GL.Float, _ vn:GL.Int, _ v1:GL.Float, _ v2:GL.Float)
{
    fp_glMapGrid2f(un, u1, u2, vn, v1, v2)
}

var fp_glMapGrid2xOES:@convention(c) (GL.Int, GL.Fixed, GL.Fixed, GL.Fixed, GL.Fixed) -> () = load_glMapGrid2xOES
func load_glMapGrid2xOES(n:GL.Int, u1:GL.Fixed, u2:GL.Fixed, v1:GL.Fixed, v2:GL.Fixed)
{
    fp_glMapGrid2xOES = unsafeBitCast(get_fp("glMapGrid2xOES", support: [ss292]), to: Swift.type(of: fp_glMapGrid2xOES))
    fp_glMapGrid2xOES(n, u1, u2, v1, v2)
}
public
func glMapGrid2xOES(n:GL.Int, u1:GL.Fixed, u2:GL.Fixed, v1:GL.Fixed, v2:GL.Fixed)
{
    fp_glMapGrid2xOES(n, u1, u2, v1, v2)
}
public
func glMapGrid2xOES(_ n:GL.Int, _ u1:GL.Fixed, _ u2:GL.Fixed, _ v1:GL.Fixed, _ v2:GL.Fixed)
{
    fp_glMapGrid2xOES(n, u1, u2, v1, v2)
}

var fp_glMapNamedBuffer:@convention(c) (GL.UInt, GL.Enum) -> UnsafeMutableRawPointer? = load_glMapNamedBuffer
func load_glMapNamedBuffer(buffer:GL.UInt, access:GL.Enum) -> UnsafeMutableRawPointer?
{
    fp_glMapNamedBuffer = unsafeBitCast(get_fp("glMapNamedBuffer", support: [ss363, ss42]), to: Swift.type(of: fp_glMapNamedBuffer))
    return fp_glMapNamedBuffer(buffer, access)
}
public
func glMapNamedBuffer(buffer:GL.UInt, access:GL.Enum) -> UnsafeMutableRawPointer?
{
    return fp_glMapNamedBuffer(buffer, access)
}
public
func glMapNamedBuffer(_ buffer:GL.UInt, _ access:GL.Enum) -> UnsafeMutableRawPointer?
{
    return fp_glMapNamedBuffer(buffer, access)
}

var fp_glMapNamedBufferEXT:@convention(c) (GL.UInt, GL.Enum) -> UnsafeMutableRawPointer? = load_glMapNamedBufferEXT
func load_glMapNamedBufferEXT(buffer:GL.UInt, access:GL.Enum) -> UnsafeMutableRawPointer?
{
    fp_glMapNamedBufferEXT = unsafeBitCast(get_fp("glMapNamedBufferEXT", support: [ss143]), to: Swift.type(of: fp_glMapNamedBufferEXT))
    return fp_glMapNamedBufferEXT(buffer, access)
}
public
func glMapNamedBufferEXT(buffer:GL.UInt, access:GL.Enum) -> UnsafeMutableRawPointer?
{
    return fp_glMapNamedBufferEXT(buffer, access)
}
public
func glMapNamedBufferEXT(_ buffer:GL.UInt, _ access:GL.Enum) -> UnsafeMutableRawPointer?
{
    return fp_glMapNamedBufferEXT(buffer, access)
}

var fp_glMapNamedBufferRange:@convention(c) (GL.UInt, GL.IntPointer, GL.SizePointer, GL.Bitfield) -> UnsafeMutableRawPointer? = load_glMapNamedBufferRange
func load_glMapNamedBufferRange(buffer:GL.UInt, offset:GL.IntPointer, length:GL.SizePointer, access:GL.Bitfield) -> UnsafeMutableRawPointer?
{
    fp_glMapNamedBufferRange = unsafeBitCast(get_fp("glMapNamedBufferRange", support: [ss363, ss42]), to: Swift.type(of: fp_glMapNamedBufferRange))
    return fp_glMapNamedBufferRange(buffer, offset, length, access)
}
public
func glMapNamedBufferRange(buffer:GL.UInt, offset:GL.IntPointer, length:GL.SizePointer, access:GL.Bitfield) -> UnsafeMutableRawPointer?
{
    return fp_glMapNamedBufferRange(buffer, offset, length, access)
}
public
func glMapNamedBufferRange(_ buffer:GL.UInt, _ offset:GL.IntPointer, _ length:GL.SizePointer, _ access:GL.Bitfield) -> UnsafeMutableRawPointer?
{
    return fp_glMapNamedBufferRange(buffer, offset, length, access)
}

var fp_glMapNamedBufferRangeEXT:@convention(c) (GL.UInt, GL.IntPointer, GL.SizePointer, GL.Bitfield) -> UnsafeMutableRawPointer? = load_glMapNamedBufferRangeEXT
func load_glMapNamedBufferRangeEXT(buffer:GL.UInt, offset:GL.IntPointer, length:GL.SizePointer, access:GL.Bitfield) -> UnsafeMutableRawPointer?
{
    fp_glMapNamedBufferRangeEXT = unsafeBitCast(get_fp("glMapNamedBufferRangeEXT", support: [ss143]), to: Swift.type(of: fp_glMapNamedBufferRangeEXT))
    return fp_glMapNamedBufferRangeEXT(buffer, offset, length, access)
}
public
func glMapNamedBufferRangeEXT(buffer:GL.UInt, offset:GL.IntPointer, length:GL.SizePointer, access:GL.Bitfield) -> UnsafeMutableRawPointer?
{
    return fp_glMapNamedBufferRangeEXT(buffer, offset, length, access)
}
public
func glMapNamedBufferRangeEXT(_ buffer:GL.UInt, _ offset:GL.IntPointer, _ length:GL.SizePointer, _ access:GL.Bitfield) -> UnsafeMutableRawPointer?
{
    return fp_glMapNamedBufferRangeEXT(buffer, offset, length, access)
}

var fp_glMapObjectBufferATI:@convention(c) (GL.UInt) -> UnsafeMutableRawPointer? = load_glMapObjectBufferATI
func load_glMapObjectBufferATI(buffer:GL.UInt) -> UnsafeMutableRawPointer?
{
    fp_glMapObjectBufferATI = unsafeBitCast(get_fp("glMapObjectBufferATI", support: [ss119]), to: Swift.type(of: fp_glMapObjectBufferATI))
    return fp_glMapObjectBufferATI(buffer)
}
public
func glMapObjectBufferATI(buffer:GL.UInt) -> UnsafeMutableRawPointer?
{
    return fp_glMapObjectBufferATI(buffer)
}
public
func glMapObjectBufferATI(_ buffer:GL.UInt) -> UnsafeMutableRawPointer?
{
    return fp_glMapObjectBufferATI(buffer)
}

var fp_glMapParameterfvNV:@convention(c) (GL.Enum, GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glMapParameterfvNV
func load_glMapParameterfvNV(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glMapParameterfvNV = unsafeBitCast(get_fp("glMapParameterfvNV", support: [ss240]), to: Swift.type(of: fp_glMapParameterfvNV))
    fp_glMapParameterfvNV(target, pname, params)
}
public
func glMapParameterfvNV(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glMapParameterfvNV(target, pname, params)
}
public
func glMapParameterfvNV(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.Float>?)
{
    fp_glMapParameterfvNV(target, pname, params)
}

var fp_glMapParameterivNV:@convention(c) (GL.Enum, GL.Enum, UnsafePointer<GL.Int>?) -> () = load_glMapParameterivNV
func load_glMapParameterivNV(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glMapParameterivNV = unsafeBitCast(get_fp("glMapParameterivNV", support: [ss240]), to: Swift.type(of: fp_glMapParameterivNV))
    fp_glMapParameterivNV(target, pname, params)
}
public
func glMapParameterivNV(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glMapParameterivNV(target, pname, params)
}
public
func glMapParameterivNV(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.Int>?)
{
    fp_glMapParameterivNV(target, pname, params)
}

var fp_glMapTexture2DINTEL:@convention(c) (GL.UInt, GL.Int, GL.Bitfield, UnsafeMutablePointer<GL.Int>?, UnsafeMutablePointer<GL.Enum>?) -> UnsafeMutableRawPointer? = load_glMapTexture2DINTEL
func load_glMapTexture2DINTEL(texture:GL.UInt, level:GL.Int, access:GL.Bitfield, stride:UnsafeMutablePointer<GL.Int>?, layout:UnsafeMutablePointer<GL.Enum>?) -> UnsafeMutableRawPointer?
{
    fp_glMapTexture2DINTEL = unsafeBitCast(get_fp("glMapTexture2DINTEL", support: [ss217]), to: Swift.type(of: fp_glMapTexture2DINTEL))
    return fp_glMapTexture2DINTEL(texture, level, access, stride, layout)
}
public
func glMapTexture2DINTEL(texture:GL.UInt, level:GL.Int, access:GL.Bitfield, stride:UnsafeMutablePointer<GL.Int>?, layout:UnsafeMutablePointer<GL.Enum>?) -> UnsafeMutableRawPointer?
{
    return fp_glMapTexture2DINTEL(texture, level, access, stride, layout)
}
public
func glMapTexture2DINTEL(_ texture:GL.UInt, _ level:GL.Int, _ access:GL.Bitfield, _ stride:UnsafeMutablePointer<GL.Int>?, _ layout:UnsafeMutablePointer<GL.Enum>?) -> UnsafeMutableRawPointer?
{
    return fp_glMapTexture2DINTEL(texture, level, access, stride, layout)
}

var fp_glMapVertexAttrib1dAPPLE:@convention(c) (GL.UInt, GL.UInt, GL.Double, GL.Double, GL.Int, GL.Int, UnsafePointer<GL.Double>?) -> () = load_glMapVertexAttrib1dAPPLE
func load_glMapVertexAttrib1dAPPLE(index:GL.UInt, size:GL.UInt, u1:GL.Double, u2:GL.Double, stride:GL.Int, order:GL.Int, points:UnsafePointer<GL.Double>?)
{
    fp_glMapVertexAttrib1dAPPLE = unsafeBitCast(get_fp("glMapVertexAttrib1dAPPLE", support: [ss27]), to: Swift.type(of: fp_glMapVertexAttrib1dAPPLE))
    fp_glMapVertexAttrib1dAPPLE(index, size, u1, u2, stride, order, points)
}
public
func glMapVertexAttrib1dAPPLE(index:GL.UInt, size:GL.UInt, u1:GL.Double, u2:GL.Double, stride:GL.Int, order:GL.Int, points:UnsafePointer<GL.Double>?)
{
    fp_glMapVertexAttrib1dAPPLE(index, size, u1, u2, stride, order, points)
}
public
func glMapVertexAttrib1dAPPLE(_ index:GL.UInt, _ size:GL.UInt, _ u1:GL.Double, _ u2:GL.Double, _ stride:GL.Int, _ order:GL.Int, _ points:UnsafePointer<GL.Double>?)
{
    fp_glMapVertexAttrib1dAPPLE(index, size, u1, u2, stride, order, points)
}

var fp_glMapVertexAttrib1fAPPLE:@convention(c) (GL.UInt, GL.UInt, GL.Float, GL.Float, GL.Int, GL.Int, UnsafePointer<GL.Float>?) -> () = load_glMapVertexAttrib1fAPPLE
func load_glMapVertexAttrib1fAPPLE(index:GL.UInt, size:GL.UInt, u1:GL.Float, u2:GL.Float, stride:GL.Int, order:GL.Int, points:UnsafePointer<GL.Float>?)
{
    fp_glMapVertexAttrib1fAPPLE = unsafeBitCast(get_fp("glMapVertexAttrib1fAPPLE", support: [ss27]), to: Swift.type(of: fp_glMapVertexAttrib1fAPPLE))
    fp_glMapVertexAttrib1fAPPLE(index, size, u1, u2, stride, order, points)
}
public
func glMapVertexAttrib1fAPPLE(index:GL.UInt, size:GL.UInt, u1:GL.Float, u2:GL.Float, stride:GL.Int, order:GL.Int, points:UnsafePointer<GL.Float>?)
{
    fp_glMapVertexAttrib1fAPPLE(index, size, u1, u2, stride, order, points)
}
public
func glMapVertexAttrib1fAPPLE(_ index:GL.UInt, _ size:GL.UInt, _ u1:GL.Float, _ u2:GL.Float, _ stride:GL.Int, _ order:GL.Int, _ points:UnsafePointer<GL.Float>?)
{
    fp_glMapVertexAttrib1fAPPLE(index, size, u1, u2, stride, order, points)
}

var fp_glMapVertexAttrib2dAPPLE:@convention(c) (GL.UInt, GL.UInt, GL.Double, GL.Double, GL.Int, GL.Int, GL.Double, GL.Double, GL.Int, GL.Int, UnsafePointer<GL.Double>?) -> () = load_glMapVertexAttrib2dAPPLE
func load_glMapVertexAttrib2dAPPLE(index:GL.UInt, size:GL.UInt, u1:GL.Double, u2:GL.Double, ustride:GL.Int, uorder:GL.Int, v1:GL.Double, v2:GL.Double, vstride:GL.Int, vorder:GL.Int, points:UnsafePointer<GL.Double>?)
{
    fp_glMapVertexAttrib2dAPPLE = unsafeBitCast(get_fp("glMapVertexAttrib2dAPPLE", support: [ss27]), to: Swift.type(of: fp_glMapVertexAttrib2dAPPLE))
    fp_glMapVertexAttrib2dAPPLE(index, size, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points)
}
public
func glMapVertexAttrib2dAPPLE(index:GL.UInt, size:GL.UInt, u1:GL.Double, u2:GL.Double, ustride:GL.Int, uorder:GL.Int, v1:GL.Double, v2:GL.Double, vstride:GL.Int, vorder:GL.Int, points:UnsafePointer<GL.Double>?)
{
    fp_glMapVertexAttrib2dAPPLE(index, size, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points)
}
public
func glMapVertexAttrib2dAPPLE(_ index:GL.UInt, _ size:GL.UInt, _ u1:GL.Double, _ u2:GL.Double, _ ustride:GL.Int, _ uorder:GL.Int, _ v1:GL.Double, _ v2:GL.Double, _ vstride:GL.Int, _ vorder:GL.Int, _ points:UnsafePointer<GL.Double>?)
{
    fp_glMapVertexAttrib2dAPPLE(index, size, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points)
}

var fp_glMapVertexAttrib2fAPPLE:@convention(c) (GL.UInt, GL.UInt, GL.Float, GL.Float, GL.Int, GL.Int, GL.Float, GL.Float, GL.Int, GL.Int, UnsafePointer<GL.Float>?) -> () = load_glMapVertexAttrib2fAPPLE
func load_glMapVertexAttrib2fAPPLE(index:GL.UInt, size:GL.UInt, u1:GL.Float, u2:GL.Float, ustride:GL.Int, uorder:GL.Int, v1:GL.Float, v2:GL.Float, vstride:GL.Int, vorder:GL.Int, points:UnsafePointer<GL.Float>?)
{
    fp_glMapVertexAttrib2fAPPLE = unsafeBitCast(get_fp("glMapVertexAttrib2fAPPLE", support: [ss27]), to: Swift.type(of: fp_glMapVertexAttrib2fAPPLE))
    fp_glMapVertexAttrib2fAPPLE(index, size, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points)
}
public
func glMapVertexAttrib2fAPPLE(index:GL.UInt, size:GL.UInt, u1:GL.Float, u2:GL.Float, ustride:GL.Int, uorder:GL.Int, v1:GL.Float, v2:GL.Float, vstride:GL.Int, vorder:GL.Int, points:UnsafePointer<GL.Float>?)
{
    fp_glMapVertexAttrib2fAPPLE(index, size, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points)
}
public
func glMapVertexAttrib2fAPPLE(_ index:GL.UInt, _ size:GL.UInt, _ u1:GL.Float, _ u2:GL.Float, _ ustride:GL.Int, _ uorder:GL.Int, _ v1:GL.Float, _ v2:GL.Float, _ vstride:GL.Int, _ vorder:GL.Int, _ points:UnsafePointer<GL.Float>?)
{
    fp_glMapVertexAttrib2fAPPLE(index, size, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points)
}

var fp_glMaterialf:@convention(c) (GL.Enum, GL.Enum, GL.Float) -> () = load_glMaterialf
func load_glMaterialf(face:GL.Enum, pname:GL.Enum, param:GL.Float)
{
    fp_glMaterialf = unsafeBitCast(get_fp("glMaterialf", support: [ss346, ss369, ss364]), to: Swift.type(of: fp_glMaterialf))
    fp_glMaterialf(face, pname, param)
}
public
func glMaterialf(face:GL.Enum, pname:GL.Enum, param:GL.Float)
{
    fp_glMaterialf(face, pname, param)
}
public
func glMaterialf(_ face:GL.Enum, _ pname:GL.Enum, _ param:GL.Float)
{
    fp_glMaterialf(face, pname, param)
}

var fp_glMaterialfv:@convention(c) (GL.Enum, GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glMaterialfv
func load_glMaterialfv(face:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glMaterialfv = unsafeBitCast(get_fp("glMaterialfv", support: [ss346, ss369, ss364]), to: Swift.type(of: fp_glMaterialfv))
    fp_glMaterialfv(face, pname, params)
}
public
func glMaterialfv(face:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glMaterialfv(face, pname, params)
}
public
func glMaterialfv(_ face:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.Float>?)
{
    fp_glMaterialfv(face, pname, params)
}

var fp_glMateriali:@convention(c) (GL.Enum, GL.Enum, GL.Int) -> () = load_glMateriali
func load_glMateriali(face:GL.Enum, pname:GL.Enum, param:GL.Int)
{
    fp_glMateriali = unsafeBitCast(get_fp("glMateriali", support: [ss346, ss369]), to: Swift.type(of: fp_glMateriali))
    fp_glMateriali(face, pname, param)
}
public
func glMateriali(face:GL.Enum, pname:GL.Enum, param:GL.Int)
{
    fp_glMateriali(face, pname, param)
}
public
func glMateriali(_ face:GL.Enum, _ pname:GL.Enum, _ param:GL.Int)
{
    fp_glMateriali(face, pname, param)
}

var fp_glMaterialiv:@convention(c) (GL.Enum, GL.Enum, UnsafePointer<GL.Int>?) -> () = load_glMaterialiv
func load_glMaterialiv(face:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glMaterialiv = unsafeBitCast(get_fp("glMaterialiv", support: [ss346, ss369]), to: Swift.type(of: fp_glMaterialiv))
    fp_glMaterialiv(face, pname, params)
}
public
func glMaterialiv(face:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glMaterialiv(face, pname, params)
}
public
func glMaterialiv(_ face:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.Int>?)
{
    fp_glMaterialiv(face, pname, params)
}

var fp_glMaterialx:@convention(c) (GL.Enum, GL.Enum, GL.Fixed) -> () = load_glMaterialx
func load_glMaterialx(face:GL.Enum, pname:GL.Enum, param:GL.Fixed)
{
    fp_glMaterialx = unsafeBitCast(get_fp("glMaterialx", support: [ss364]), to: Swift.type(of: fp_glMaterialx))
    fp_glMaterialx(face, pname, param)
}
public
func glMaterialx(face:GL.Enum, pname:GL.Enum, param:GL.Fixed)
{
    fp_glMaterialx(face, pname, param)
}
public
func glMaterialx(_ face:GL.Enum, _ pname:GL.Enum, _ param:GL.Fixed)
{
    fp_glMaterialx(face, pname, param)
}

var fp_glMaterialxOES:@convention(c) (GL.Enum, GL.Enum, GL.Fixed) -> () = load_glMaterialxOES
func load_glMaterialxOES(face:GL.Enum, pname:GL.Enum, param:GL.Fixed)
{
    fp_glMaterialxOES = unsafeBitCast(get_fp("glMaterialxOES", support: [ss292]), to: Swift.type(of: fp_glMaterialxOES))
    fp_glMaterialxOES(face, pname, param)
}
public
func glMaterialxOES(face:GL.Enum, pname:GL.Enum, param:GL.Fixed)
{
    fp_glMaterialxOES(face, pname, param)
}
public
func glMaterialxOES(_ face:GL.Enum, _ pname:GL.Enum, _ param:GL.Fixed)
{
    fp_glMaterialxOES(face, pname, param)
}

var fp_glMaterialxv:@convention(c) (GL.Enum, GL.Enum, UnsafePointer<GL.Fixed>?) -> () = load_glMaterialxv
func load_glMaterialxv(face:GL.Enum, pname:GL.Enum, param:UnsafePointer<GL.Fixed>?)
{
    fp_glMaterialxv = unsafeBitCast(get_fp("glMaterialxv", support: [ss364]), to: Swift.type(of: fp_glMaterialxv))
    fp_glMaterialxv(face, pname, param)
}
public
func glMaterialxv(face:GL.Enum, pname:GL.Enum, param:UnsafePointer<GL.Fixed>?)
{
    fp_glMaterialxv(face, pname, param)
}
public
func glMaterialxv(_ face:GL.Enum, _ pname:GL.Enum, _ param:UnsafePointer<GL.Fixed>?)
{
    fp_glMaterialxv(face, pname, param)
}

var fp_glMaterialxvOES:@convention(c) (GL.Enum, GL.Enum, UnsafePointer<GL.Fixed>?) -> () = load_glMaterialxvOES
func load_glMaterialxvOES(face:GL.Enum, pname:GL.Enum, param:UnsafePointer<GL.Fixed>?)
{
    fp_glMaterialxvOES = unsafeBitCast(get_fp("glMaterialxvOES", support: [ss292]), to: Swift.type(of: fp_glMaterialxvOES))
    fp_glMaterialxvOES(face, pname, param)
}
public
func glMaterialxvOES(face:GL.Enum, pname:GL.Enum, param:UnsafePointer<GL.Fixed>?)
{
    fp_glMaterialxvOES(face, pname, param)
}
public
func glMaterialxvOES(_ face:GL.Enum, _ pname:GL.Enum, _ param:UnsafePointer<GL.Fixed>?)
{
    fp_glMaterialxvOES(face, pname, param)
}

var fp_glMatrixFrustumEXT:@convention(c) (GL.Enum, GL.Double, GL.Double, GL.Double, GL.Double, GL.Double, GL.Double) -> () = load_glMatrixFrustumEXT
func load_glMatrixFrustumEXT(mode:GL.Enum, left:GL.Double, right:GL.Double, bottom:GL.Double, top:GL.Double, zNear:GL.Double, zFar:GL.Double)
{
    fp_glMatrixFrustumEXT = unsafeBitCast(get_fp("glMatrixFrustumEXT", support: [ss143]), to: Swift.type(of: fp_glMatrixFrustumEXT))
    fp_glMatrixFrustumEXT(mode, left, right, bottom, top, zNear, zFar)
}
public
func glMatrixFrustumEXT(mode:GL.Enum, left:GL.Double, right:GL.Double, bottom:GL.Double, top:GL.Double, zNear:GL.Double, zFar:GL.Double)
{
    fp_glMatrixFrustumEXT(mode, left, right, bottom, top, zNear, zFar)
}
public
func glMatrixFrustumEXT(_ mode:GL.Enum, _ left:GL.Double, _ right:GL.Double, _ bottom:GL.Double, _ top:GL.Double, _ zNear:GL.Double, _ zFar:GL.Double)
{
    fp_glMatrixFrustumEXT(mode, left, right, bottom, top, zNear, zFar)
}

var fp_glMatrixIndexPointerARB:@convention(c) (GL.Int, GL.Enum, GL.Size, UnsafeRawPointer?) -> () = load_glMatrixIndexPointerARB
func load_glMatrixIndexPointerARB(size:GL.Int, type:GL.Enum, stride:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glMatrixIndexPointerARB = unsafeBitCast(get_fp("glMatrixIndexPointerARB", support: [ss66]), to: Swift.type(of: fp_glMatrixIndexPointerARB))
    fp_glMatrixIndexPointerARB(size, type, stride, pointer)
}
public
func glMatrixIndexPointerARB(size:GL.Int, type:GL.Enum, stride:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glMatrixIndexPointerARB(size, type, stride, pointer)
}
public
func glMatrixIndexPointerARB(_ size:GL.Int, _ type:GL.Enum, _ stride:GL.Size, _ pointer:UnsafeRawPointer?)
{
    fp_glMatrixIndexPointerARB(size, type, stride, pointer)
}

var fp_glMatrixIndexPointerOES:@convention(c) (GL.Int, GL.Enum, GL.Size, UnsafeRawPointer?) -> () = load_glMatrixIndexPointerOES
func load_glMatrixIndexPointerOES(size:GL.Int, type:GL.Enum, stride:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glMatrixIndexPointerOES = unsafeBitCast(get_fp("glMatrixIndexPointerOES", support: [ss297]), to: Swift.type(of: fp_glMatrixIndexPointerOES))
    fp_glMatrixIndexPointerOES(size, type, stride, pointer)
}
public
func glMatrixIndexPointerOES(size:GL.Int, type:GL.Enum, stride:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glMatrixIndexPointerOES(size, type, stride, pointer)
}
public
func glMatrixIndexPointerOES(_ size:GL.Int, _ type:GL.Enum, _ stride:GL.Size, _ pointer:UnsafeRawPointer?)
{
    fp_glMatrixIndexPointerOES(size, type, stride, pointer)
}

var fp_glMatrixIndexubvARB:@convention(c) (GL.Int, UnsafePointer<GL.UByte>?) -> () = load_glMatrixIndexubvARB
func load_glMatrixIndexubvARB(size:GL.Int, indices:UnsafePointer<GL.UByte>?)
{
    fp_glMatrixIndexubvARB = unsafeBitCast(get_fp("glMatrixIndexubvARB", support: [ss66]), to: Swift.type(of: fp_glMatrixIndexubvARB))
    fp_glMatrixIndexubvARB(size, indices)
}
public
func glMatrixIndexubvARB(size:GL.Int, indices:UnsafePointer<GL.UByte>?)
{
    fp_glMatrixIndexubvARB(size, indices)
}
public
func glMatrixIndexubvARB(_ size:GL.Int, _ indices:UnsafePointer<GL.UByte>?)
{
    fp_glMatrixIndexubvARB(size, indices)
}

var fp_glMatrixIndexuivARB:@convention(c) (GL.Int, UnsafePointer<GL.UInt>?) -> () = load_glMatrixIndexuivARB
func load_glMatrixIndexuivARB(size:GL.Int, indices:UnsafePointer<GL.UInt>?)
{
    fp_glMatrixIndexuivARB = unsafeBitCast(get_fp("glMatrixIndexuivARB", support: [ss66]), to: Swift.type(of: fp_glMatrixIndexuivARB))
    fp_glMatrixIndexuivARB(size, indices)
}
public
func glMatrixIndexuivARB(size:GL.Int, indices:UnsafePointer<GL.UInt>?)
{
    fp_glMatrixIndexuivARB(size, indices)
}
public
func glMatrixIndexuivARB(_ size:GL.Int, _ indices:UnsafePointer<GL.UInt>?)
{
    fp_glMatrixIndexuivARB(size, indices)
}

var fp_glMatrixIndexusvARB:@convention(c) (GL.Int, UnsafePointer<GL.UShort>?) -> () = load_glMatrixIndexusvARB
func load_glMatrixIndexusvARB(size:GL.Int, indices:UnsafePointer<GL.UShort>?)
{
    fp_glMatrixIndexusvARB = unsafeBitCast(get_fp("glMatrixIndexusvARB", support: [ss66]), to: Swift.type(of: fp_glMatrixIndexusvARB))
    fp_glMatrixIndexusvARB(size, indices)
}
public
func glMatrixIndexusvARB(size:GL.Int, indices:UnsafePointer<GL.UShort>?)
{
    fp_glMatrixIndexusvARB(size, indices)
}
public
func glMatrixIndexusvARB(_ size:GL.Int, _ indices:UnsafePointer<GL.UShort>?)
{
    fp_glMatrixIndexusvARB(size, indices)
}

var fp_glMatrixLoad3x2fNV:@convention(c) (GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glMatrixLoad3x2fNV
func load_glMatrixLoad3x2fNV(matrixMode:GL.Enum, m:UnsafePointer<GL.Float>?)
{
    fp_glMatrixLoad3x2fNV = unsafeBitCast(get_fp("glMatrixLoad3x2fNV", support: [ss259]), to: Swift.type(of: fp_glMatrixLoad3x2fNV))
    fp_glMatrixLoad3x2fNV(matrixMode, m)
}
public
func glMatrixLoad3x2fNV(matrixMode:GL.Enum, m:UnsafePointer<GL.Float>?)
{
    fp_glMatrixLoad3x2fNV(matrixMode, m)
}
public
func glMatrixLoad3x2fNV(_ matrixMode:GL.Enum, _ m:UnsafePointer<GL.Float>?)
{
    fp_glMatrixLoad3x2fNV(matrixMode, m)
}

var fp_glMatrixLoad3x3fNV:@convention(c) (GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glMatrixLoad3x3fNV
func load_glMatrixLoad3x3fNV(matrixMode:GL.Enum, m:UnsafePointer<GL.Float>?)
{
    fp_glMatrixLoad3x3fNV = unsafeBitCast(get_fp("glMatrixLoad3x3fNV", support: [ss259]), to: Swift.type(of: fp_glMatrixLoad3x3fNV))
    fp_glMatrixLoad3x3fNV(matrixMode, m)
}
public
func glMatrixLoad3x3fNV(matrixMode:GL.Enum, m:UnsafePointer<GL.Float>?)
{
    fp_glMatrixLoad3x3fNV(matrixMode, m)
}
public
func glMatrixLoad3x3fNV(_ matrixMode:GL.Enum, _ m:UnsafePointer<GL.Float>?)
{
    fp_glMatrixLoad3x3fNV(matrixMode, m)
}

var fp_glMatrixLoadIdentityEXT:@convention(c) (GL.Enum) -> () = load_glMatrixLoadIdentityEXT
func load_glMatrixLoadIdentityEXT(mode:GL.Enum)
{
    fp_glMatrixLoadIdentityEXT = unsafeBitCast(get_fp("glMatrixLoadIdentityEXT", support: [ss143]), to: Swift.type(of: fp_glMatrixLoadIdentityEXT))
    fp_glMatrixLoadIdentityEXT(mode)
}
public
func glMatrixLoadIdentityEXT(mode:GL.Enum)
{
    fp_glMatrixLoadIdentityEXT(mode)
}
public
func glMatrixLoadIdentityEXT(_ mode:GL.Enum)
{
    fp_glMatrixLoadIdentityEXT(mode)
}

var fp_glMatrixLoadTranspose3x3fNV:@convention(c) (GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glMatrixLoadTranspose3x3fNV
func load_glMatrixLoadTranspose3x3fNV(matrixMode:GL.Enum, m:UnsafePointer<GL.Float>?)
{
    fp_glMatrixLoadTranspose3x3fNV = unsafeBitCast(get_fp("glMatrixLoadTranspose3x3fNV", support: [ss259]), to: Swift.type(of: fp_glMatrixLoadTranspose3x3fNV))
    fp_glMatrixLoadTranspose3x3fNV(matrixMode, m)
}
public
func glMatrixLoadTranspose3x3fNV(matrixMode:GL.Enum, m:UnsafePointer<GL.Float>?)
{
    fp_glMatrixLoadTranspose3x3fNV(matrixMode, m)
}
public
func glMatrixLoadTranspose3x3fNV(_ matrixMode:GL.Enum, _ m:UnsafePointer<GL.Float>?)
{
    fp_glMatrixLoadTranspose3x3fNV(matrixMode, m)
}

var fp_glMatrixLoadTransposedEXT:@convention(c) (GL.Enum, UnsafePointer<GL.Double>?) -> () = load_glMatrixLoadTransposedEXT
func load_glMatrixLoadTransposedEXT(mode:GL.Enum, m:UnsafePointer<GL.Double>?)
{
    fp_glMatrixLoadTransposedEXT = unsafeBitCast(get_fp("glMatrixLoadTransposedEXT", support: [ss143]), to: Swift.type(of: fp_glMatrixLoadTransposedEXT))
    fp_glMatrixLoadTransposedEXT(mode, m)
}
public
func glMatrixLoadTransposedEXT(mode:GL.Enum, m:UnsafePointer<GL.Double>?)
{
    fp_glMatrixLoadTransposedEXT(mode, m)
}
public
func glMatrixLoadTransposedEXT(_ mode:GL.Enum, _ m:UnsafePointer<GL.Double>?)
{
    fp_glMatrixLoadTransposedEXT(mode, m)
}

var fp_glMatrixLoadTransposefEXT:@convention(c) (GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glMatrixLoadTransposefEXT
func load_glMatrixLoadTransposefEXT(mode:GL.Enum, m:UnsafePointer<GL.Float>?)
{
    fp_glMatrixLoadTransposefEXT = unsafeBitCast(get_fp("glMatrixLoadTransposefEXT", support: [ss143]), to: Swift.type(of: fp_glMatrixLoadTransposefEXT))
    fp_glMatrixLoadTransposefEXT(mode, m)
}
public
func glMatrixLoadTransposefEXT(mode:GL.Enum, m:UnsafePointer<GL.Float>?)
{
    fp_glMatrixLoadTransposefEXT(mode, m)
}
public
func glMatrixLoadTransposefEXT(_ mode:GL.Enum, _ m:UnsafePointer<GL.Float>?)
{
    fp_glMatrixLoadTransposefEXT(mode, m)
}

var fp_glMatrixLoaddEXT:@convention(c) (GL.Enum, UnsafePointer<GL.Double>?) -> () = load_glMatrixLoaddEXT
func load_glMatrixLoaddEXT(mode:GL.Enum, m:UnsafePointer<GL.Double>?)
{
    fp_glMatrixLoaddEXT = unsafeBitCast(get_fp("glMatrixLoaddEXT", support: [ss143]), to: Swift.type(of: fp_glMatrixLoaddEXT))
    fp_glMatrixLoaddEXT(mode, m)
}
public
func glMatrixLoaddEXT(mode:GL.Enum, m:UnsafePointer<GL.Double>?)
{
    fp_glMatrixLoaddEXT(mode, m)
}
public
func glMatrixLoaddEXT(_ mode:GL.Enum, _ m:UnsafePointer<GL.Double>?)
{
    fp_glMatrixLoaddEXT(mode, m)
}

var fp_glMatrixLoadfEXT:@convention(c) (GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glMatrixLoadfEXT
func load_glMatrixLoadfEXT(mode:GL.Enum, m:UnsafePointer<GL.Float>?)
{
    fp_glMatrixLoadfEXT = unsafeBitCast(get_fp("glMatrixLoadfEXT", support: [ss143]), to: Swift.type(of: fp_glMatrixLoadfEXT))
    fp_glMatrixLoadfEXT(mode, m)
}
public
func glMatrixLoadfEXT(mode:GL.Enum, m:UnsafePointer<GL.Float>?)
{
    fp_glMatrixLoadfEXT(mode, m)
}
public
func glMatrixLoadfEXT(_ mode:GL.Enum, _ m:UnsafePointer<GL.Float>?)
{
    fp_glMatrixLoadfEXT(mode, m)
}

var fp_glMatrixMode:@convention(c) (GL.Enum) -> () = load_glMatrixMode
func load_glMatrixMode(mode:GL.Enum)
{
    fp_glMatrixMode = unsafeBitCast(get_fp("glMatrixMode", support: [ss346, ss369, ss364]), to: Swift.type(of: fp_glMatrixMode))
    fp_glMatrixMode(mode)
}
public
func glMatrixMode(mode:GL.Enum)
{
    fp_glMatrixMode(mode)
}
public
func glMatrixMode(_ mode:GL.Enum)
{
    fp_glMatrixMode(mode)
}

var fp_glMatrixMult3x2fNV:@convention(c) (GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glMatrixMult3x2fNV
func load_glMatrixMult3x2fNV(matrixMode:GL.Enum, m:UnsafePointer<GL.Float>?)
{
    fp_glMatrixMult3x2fNV = unsafeBitCast(get_fp("glMatrixMult3x2fNV", support: [ss259]), to: Swift.type(of: fp_glMatrixMult3x2fNV))
    fp_glMatrixMult3x2fNV(matrixMode, m)
}
public
func glMatrixMult3x2fNV(matrixMode:GL.Enum, m:UnsafePointer<GL.Float>?)
{
    fp_glMatrixMult3x2fNV(matrixMode, m)
}
public
func glMatrixMult3x2fNV(_ matrixMode:GL.Enum, _ m:UnsafePointer<GL.Float>?)
{
    fp_glMatrixMult3x2fNV(matrixMode, m)
}

var fp_glMatrixMult3x3fNV:@convention(c) (GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glMatrixMult3x3fNV
func load_glMatrixMult3x3fNV(matrixMode:GL.Enum, m:UnsafePointer<GL.Float>?)
{
    fp_glMatrixMult3x3fNV = unsafeBitCast(get_fp("glMatrixMult3x3fNV", support: [ss259]), to: Swift.type(of: fp_glMatrixMult3x3fNV))
    fp_glMatrixMult3x3fNV(matrixMode, m)
}
public
func glMatrixMult3x3fNV(matrixMode:GL.Enum, m:UnsafePointer<GL.Float>?)
{
    fp_glMatrixMult3x3fNV(matrixMode, m)
}
public
func glMatrixMult3x3fNV(_ matrixMode:GL.Enum, _ m:UnsafePointer<GL.Float>?)
{
    fp_glMatrixMult3x3fNV(matrixMode, m)
}

var fp_glMatrixMultTranspose3x3fNV:@convention(c) (GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glMatrixMultTranspose3x3fNV
func load_glMatrixMultTranspose3x3fNV(matrixMode:GL.Enum, m:UnsafePointer<GL.Float>?)
{
    fp_glMatrixMultTranspose3x3fNV = unsafeBitCast(get_fp("glMatrixMultTranspose3x3fNV", support: [ss259]), to: Swift.type(of: fp_glMatrixMultTranspose3x3fNV))
    fp_glMatrixMultTranspose3x3fNV(matrixMode, m)
}
public
func glMatrixMultTranspose3x3fNV(matrixMode:GL.Enum, m:UnsafePointer<GL.Float>?)
{
    fp_glMatrixMultTranspose3x3fNV(matrixMode, m)
}
public
func glMatrixMultTranspose3x3fNV(_ matrixMode:GL.Enum, _ m:UnsafePointer<GL.Float>?)
{
    fp_glMatrixMultTranspose3x3fNV(matrixMode, m)
}

var fp_glMatrixMultTransposedEXT:@convention(c) (GL.Enum, UnsafePointer<GL.Double>?) -> () = load_glMatrixMultTransposedEXT
func load_glMatrixMultTransposedEXT(mode:GL.Enum, m:UnsafePointer<GL.Double>?)
{
    fp_glMatrixMultTransposedEXT = unsafeBitCast(get_fp("glMatrixMultTransposedEXT", support: [ss143]), to: Swift.type(of: fp_glMatrixMultTransposedEXT))
    fp_glMatrixMultTransposedEXT(mode, m)
}
public
func glMatrixMultTransposedEXT(mode:GL.Enum, m:UnsafePointer<GL.Double>?)
{
    fp_glMatrixMultTransposedEXT(mode, m)
}
public
func glMatrixMultTransposedEXT(_ mode:GL.Enum, _ m:UnsafePointer<GL.Double>?)
{
    fp_glMatrixMultTransposedEXT(mode, m)
}

var fp_glMatrixMultTransposefEXT:@convention(c) (GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glMatrixMultTransposefEXT
func load_glMatrixMultTransposefEXT(mode:GL.Enum, m:UnsafePointer<GL.Float>?)
{
    fp_glMatrixMultTransposefEXT = unsafeBitCast(get_fp("glMatrixMultTransposefEXT", support: [ss143]), to: Swift.type(of: fp_glMatrixMultTransposefEXT))
    fp_glMatrixMultTransposefEXT(mode, m)
}
public
func glMatrixMultTransposefEXT(mode:GL.Enum, m:UnsafePointer<GL.Float>?)
{
    fp_glMatrixMultTransposefEXT(mode, m)
}
public
func glMatrixMultTransposefEXT(_ mode:GL.Enum, _ m:UnsafePointer<GL.Float>?)
{
    fp_glMatrixMultTransposefEXT(mode, m)
}

var fp_glMatrixMultdEXT:@convention(c) (GL.Enum, UnsafePointer<GL.Double>?) -> () = load_glMatrixMultdEXT
func load_glMatrixMultdEXT(mode:GL.Enum, m:UnsafePointer<GL.Double>?)
{
    fp_glMatrixMultdEXT = unsafeBitCast(get_fp("glMatrixMultdEXT", support: [ss143]), to: Swift.type(of: fp_glMatrixMultdEXT))
    fp_glMatrixMultdEXT(mode, m)
}
public
func glMatrixMultdEXT(mode:GL.Enum, m:UnsafePointer<GL.Double>?)
{
    fp_glMatrixMultdEXT(mode, m)
}
public
func glMatrixMultdEXT(_ mode:GL.Enum, _ m:UnsafePointer<GL.Double>?)
{
    fp_glMatrixMultdEXT(mode, m)
}

var fp_glMatrixMultfEXT:@convention(c) (GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glMatrixMultfEXT
func load_glMatrixMultfEXT(mode:GL.Enum, m:UnsafePointer<GL.Float>?)
{
    fp_glMatrixMultfEXT = unsafeBitCast(get_fp("glMatrixMultfEXT", support: [ss143]), to: Swift.type(of: fp_glMatrixMultfEXT))
    fp_glMatrixMultfEXT(mode, m)
}
public
func glMatrixMultfEXT(mode:GL.Enum, m:UnsafePointer<GL.Float>?)
{
    fp_glMatrixMultfEXT(mode, m)
}
public
func glMatrixMultfEXT(_ mode:GL.Enum, _ m:UnsafePointer<GL.Float>?)
{
    fp_glMatrixMultfEXT(mode, m)
}

var fp_glMatrixOrthoEXT:@convention(c) (GL.Enum, GL.Double, GL.Double, GL.Double, GL.Double, GL.Double, GL.Double) -> () = load_glMatrixOrthoEXT
func load_glMatrixOrthoEXT(mode:GL.Enum, left:GL.Double, right:GL.Double, bottom:GL.Double, top:GL.Double, zNear:GL.Double, zFar:GL.Double)
{
    fp_glMatrixOrthoEXT = unsafeBitCast(get_fp("glMatrixOrthoEXT", support: [ss143]), to: Swift.type(of: fp_glMatrixOrthoEXT))
    fp_glMatrixOrthoEXT(mode, left, right, bottom, top, zNear, zFar)
}
public
func glMatrixOrthoEXT(mode:GL.Enum, left:GL.Double, right:GL.Double, bottom:GL.Double, top:GL.Double, zNear:GL.Double, zFar:GL.Double)
{
    fp_glMatrixOrthoEXT(mode, left, right, bottom, top, zNear, zFar)
}
public
func glMatrixOrthoEXT(_ mode:GL.Enum, _ left:GL.Double, _ right:GL.Double, _ bottom:GL.Double, _ top:GL.Double, _ zNear:GL.Double, _ zFar:GL.Double)
{
    fp_glMatrixOrthoEXT(mode, left, right, bottom, top, zNear, zFar)
}

var fp_glMatrixPopEXT:@convention(c) (GL.Enum) -> () = load_glMatrixPopEXT
func load_glMatrixPopEXT(mode:GL.Enum)
{
    fp_glMatrixPopEXT = unsafeBitCast(get_fp("glMatrixPopEXT", support: [ss143]), to: Swift.type(of: fp_glMatrixPopEXT))
    fp_glMatrixPopEXT(mode)
}
public
func glMatrixPopEXT(mode:GL.Enum)
{
    fp_glMatrixPopEXT(mode)
}
public
func glMatrixPopEXT(_ mode:GL.Enum)
{
    fp_glMatrixPopEXT(mode)
}

var fp_glMatrixPushEXT:@convention(c) (GL.Enum) -> () = load_glMatrixPushEXT
func load_glMatrixPushEXT(mode:GL.Enum)
{
    fp_glMatrixPushEXT = unsafeBitCast(get_fp("glMatrixPushEXT", support: [ss143]), to: Swift.type(of: fp_glMatrixPushEXT))
    fp_glMatrixPushEXT(mode)
}
public
func glMatrixPushEXT(mode:GL.Enum)
{
    fp_glMatrixPushEXT(mode)
}
public
func glMatrixPushEXT(_ mode:GL.Enum)
{
    fp_glMatrixPushEXT(mode)
}

var fp_glMatrixRotatedEXT:@convention(c) (GL.Enum, GL.Double, GL.Double, GL.Double, GL.Double) -> () = load_glMatrixRotatedEXT
func load_glMatrixRotatedEXT(mode:GL.Enum, angle:GL.Double, x:GL.Double, y:GL.Double, z:GL.Double)
{
    fp_glMatrixRotatedEXT = unsafeBitCast(get_fp("glMatrixRotatedEXT", support: [ss143]), to: Swift.type(of: fp_glMatrixRotatedEXT))
    fp_glMatrixRotatedEXT(mode, angle, x, y, z)
}
public
func glMatrixRotatedEXT(mode:GL.Enum, angle:GL.Double, x:GL.Double, y:GL.Double, z:GL.Double)
{
    fp_glMatrixRotatedEXT(mode, angle, x, y, z)
}
public
func glMatrixRotatedEXT(_ mode:GL.Enum, _ angle:GL.Double, _ x:GL.Double, _ y:GL.Double, _ z:GL.Double)
{
    fp_glMatrixRotatedEXT(mode, angle, x, y, z)
}

var fp_glMatrixRotatefEXT:@convention(c) (GL.Enum, GL.Float, GL.Float, GL.Float, GL.Float) -> () = load_glMatrixRotatefEXT
func load_glMatrixRotatefEXT(mode:GL.Enum, angle:GL.Float, x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glMatrixRotatefEXT = unsafeBitCast(get_fp("glMatrixRotatefEXT", support: [ss143]), to: Swift.type(of: fp_glMatrixRotatefEXT))
    fp_glMatrixRotatefEXT(mode, angle, x, y, z)
}
public
func glMatrixRotatefEXT(mode:GL.Enum, angle:GL.Float, x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glMatrixRotatefEXT(mode, angle, x, y, z)
}
public
func glMatrixRotatefEXT(_ mode:GL.Enum, _ angle:GL.Float, _ x:GL.Float, _ y:GL.Float, _ z:GL.Float)
{
    fp_glMatrixRotatefEXT(mode, angle, x, y, z)
}

var fp_glMatrixScaledEXT:@convention(c) (GL.Enum, GL.Double, GL.Double, GL.Double) -> () = load_glMatrixScaledEXT
func load_glMatrixScaledEXT(mode:GL.Enum, x:GL.Double, y:GL.Double, z:GL.Double)
{
    fp_glMatrixScaledEXT = unsafeBitCast(get_fp("glMatrixScaledEXT", support: [ss143]), to: Swift.type(of: fp_glMatrixScaledEXT))
    fp_glMatrixScaledEXT(mode, x, y, z)
}
public
func glMatrixScaledEXT(mode:GL.Enum, x:GL.Double, y:GL.Double, z:GL.Double)
{
    fp_glMatrixScaledEXT(mode, x, y, z)
}
public
func glMatrixScaledEXT(_ mode:GL.Enum, _ x:GL.Double, _ y:GL.Double, _ z:GL.Double)
{
    fp_glMatrixScaledEXT(mode, x, y, z)
}

var fp_glMatrixScalefEXT:@convention(c) (GL.Enum, GL.Float, GL.Float, GL.Float) -> () = load_glMatrixScalefEXT
func load_glMatrixScalefEXT(mode:GL.Enum, x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glMatrixScalefEXT = unsafeBitCast(get_fp("glMatrixScalefEXT", support: [ss143]), to: Swift.type(of: fp_glMatrixScalefEXT))
    fp_glMatrixScalefEXT(mode, x, y, z)
}
public
func glMatrixScalefEXT(mode:GL.Enum, x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glMatrixScalefEXT(mode, x, y, z)
}
public
func glMatrixScalefEXT(_ mode:GL.Enum, _ x:GL.Float, _ y:GL.Float, _ z:GL.Float)
{
    fp_glMatrixScalefEXT(mode, x, y, z)
}

var fp_glMatrixTranslatedEXT:@convention(c) (GL.Enum, GL.Double, GL.Double, GL.Double) -> () = load_glMatrixTranslatedEXT
func load_glMatrixTranslatedEXT(mode:GL.Enum, x:GL.Double, y:GL.Double, z:GL.Double)
{
    fp_glMatrixTranslatedEXT = unsafeBitCast(get_fp("glMatrixTranslatedEXT", support: [ss143]), to: Swift.type(of: fp_glMatrixTranslatedEXT))
    fp_glMatrixTranslatedEXT(mode, x, y, z)
}
public
func glMatrixTranslatedEXT(mode:GL.Enum, x:GL.Double, y:GL.Double, z:GL.Double)
{
    fp_glMatrixTranslatedEXT(mode, x, y, z)
}
public
func glMatrixTranslatedEXT(_ mode:GL.Enum, _ x:GL.Double, _ y:GL.Double, _ z:GL.Double)
{
    fp_glMatrixTranslatedEXT(mode, x, y, z)
}

var fp_glMatrixTranslatefEXT:@convention(c) (GL.Enum, GL.Float, GL.Float, GL.Float) -> () = load_glMatrixTranslatefEXT
func load_glMatrixTranslatefEXT(mode:GL.Enum, x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glMatrixTranslatefEXT = unsafeBitCast(get_fp("glMatrixTranslatefEXT", support: [ss143]), to: Swift.type(of: fp_glMatrixTranslatefEXT))
    fp_glMatrixTranslatefEXT(mode, x, y, z)
}
public
func glMatrixTranslatefEXT(mode:GL.Enum, x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glMatrixTranslatefEXT(mode, x, y, z)
}
public
func glMatrixTranslatefEXT(_ mode:GL.Enum, _ x:GL.Float, _ y:GL.Float, _ z:GL.Float)
{
    fp_glMatrixTranslatefEXT(mode, x, y, z)
}

var fp_glMaxShaderCompilerThreadsARB:@convention(c) (GL.UInt) -> () = load_glMaxShaderCompilerThreadsARB
func load_glMaxShaderCompilerThreadsARB(count:GL.UInt)
{
    fp_glMaxShaderCompilerThreadsARB = unsafeBitCast(get_fp("glMaxShaderCompilerThreadsARB", support: [ss72]), to: Swift.type(of: fp_glMaxShaderCompilerThreadsARB))
    fp_glMaxShaderCompilerThreadsARB(count)
}
public
func glMaxShaderCompilerThreadsARB(count:GL.UInt)
{
    fp_glMaxShaderCompilerThreadsARB(count)
}
public
func glMaxShaderCompilerThreadsARB(_ count:GL.UInt)
{
    fp_glMaxShaderCompilerThreadsARB(count)
}

var fp_glMemoryBarrier:@convention(c) (GL.Bitfield) -> () = load_glMemoryBarrier
func load_glMemoryBarrier(barriers:GL.Bitfield)
{
    fp_glMemoryBarrier = unsafeBitCast(get_fp("glMemoryBarrier", support: [ss360, ss367, ss82]), to: Swift.type(of: fp_glMemoryBarrier))
    fp_glMemoryBarrier(barriers)
}
public
func glMemoryBarrier(barriers:GL.Bitfield)
{
    fp_glMemoryBarrier(barriers)
}
public
func glMemoryBarrier(_ barriers:GL.Bitfield)
{
    fp_glMemoryBarrier(barriers)
}

var fp_glMemoryBarrierByRegion:@convention(c) (GL.Bitfield) -> () = load_glMemoryBarrierByRegion
func load_glMemoryBarrierByRegion(barriers:GL.Bitfield)
{
    fp_glMemoryBarrierByRegion = unsafeBitCast(get_fp("glMemoryBarrierByRegion", support: [ss363, ss367, ss49]), to: Swift.type(of: fp_glMemoryBarrierByRegion))
    fp_glMemoryBarrierByRegion(barriers)
}
public
func glMemoryBarrierByRegion(barriers:GL.Bitfield)
{
    fp_glMemoryBarrierByRegion(barriers)
}
public
func glMemoryBarrierByRegion(_ barriers:GL.Bitfield)
{
    fp_glMemoryBarrierByRegion(barriers)
}

var fp_glMemoryBarrierEXT:@convention(c) (GL.Bitfield) -> () = load_glMemoryBarrierEXT
func load_glMemoryBarrierEXT(barriers:GL.Bitfield)
{
    fp_glMemoryBarrierEXT = unsafeBitCast(get_fp("glMemoryBarrierEXT", support: [ss183]), to: Swift.type(of: fp_glMemoryBarrierEXT))
    fp_glMemoryBarrierEXT(barriers)
}
public
func glMemoryBarrierEXT(barriers:GL.Bitfield)
{
    fp_glMemoryBarrierEXT(barriers)
}
public
func glMemoryBarrierEXT(_ barriers:GL.Bitfield)
{
    fp_glMemoryBarrierEXT(barriers)
}

var fp_glMinSampleShading:@convention(c) (GL.Float) -> () = load_glMinSampleShading
func load_glMinSampleShading(value:GL.Float)
{
    fp_glMinSampleShading = unsafeBitCast(get_fp("glMinSampleShading", support: [ss358, ss368]), to: Swift.type(of: fp_glMinSampleShading))
    fp_glMinSampleShading(value)
}
public
func glMinSampleShading(value:GL.Float)
{
    fp_glMinSampleShading(value)
}
public
func glMinSampleShading(_ value:GL.Float)
{
    fp_glMinSampleShading(value)
}

var fp_glMinSampleShadingARB:@convention(c) (GL.Float) -> () = load_glMinSampleShadingARB
func load_glMinSampleShadingARB(value:GL.Float)
{
    fp_glMinSampleShadingARB = unsafeBitCast(get_fp("glMinSampleShadingARB", support: [ss78]), to: Swift.type(of: fp_glMinSampleShadingARB))
    fp_glMinSampleShadingARB(value)
}
public
func glMinSampleShadingARB(value:GL.Float)
{
    fp_glMinSampleShadingARB(value)
}
public
func glMinSampleShadingARB(_ value:GL.Float)
{
    fp_glMinSampleShadingARB(value)
}

var fp_glMinSampleShadingOES:@convention(c) (GL.Float) -> () = load_glMinSampleShadingOES
func load_glMinSampleShadingOES(value:GL.Float)
{
    fp_glMinSampleShadingOES = unsafeBitCast(get_fp("glMinSampleShadingOES", support: [ss301]), to: Swift.type(of: fp_glMinSampleShadingOES))
    fp_glMinSampleShadingOES(value)
}
public
func glMinSampleShadingOES(value:GL.Float)
{
    fp_glMinSampleShadingOES(value)
}
public
func glMinSampleShadingOES(_ value:GL.Float)
{
    fp_glMinSampleShadingOES(value)
}

var fp_glMinmax:@convention(c) (GL.Enum, GL.Enum, GL.Bool) -> () = load_glMinmax
func load_glMinmax(target:GL.Enum, internalformat:GL.Enum, sink:GL.Bool)
{
    fp_glMinmax = unsafeBitCast(get_fp("glMinmax", support: [ss59]), to: Swift.type(of: fp_glMinmax))
    fp_glMinmax(target, internalformat, sink)
}
public
func glMinmax(target:GL.Enum, internalformat:GL.Enum, sink:GL.Bool)
{
    fp_glMinmax(target, internalformat, sink)
}
public
func glMinmax(_ target:GL.Enum, _ internalformat:GL.Enum, _ sink:GL.Bool)
{
    fp_glMinmax(target, internalformat, sink)
}

var fp_glMinmaxEXT:@convention(c) (GL.Enum, GL.Enum, GL.Bool) -> () = load_glMinmaxEXT
func load_glMinmaxEXT(target:GL.Enum, internalformat:GL.Enum, sink:GL.Bool)
{
    fp_glMinmaxEXT = unsafeBitCast(get_fp("glMinmaxEXT", support: [ss160]), to: Swift.type(of: fp_glMinmaxEXT))
    fp_glMinmaxEXT(target, internalformat, sink)
}
public
func glMinmaxEXT(target:GL.Enum, internalformat:GL.Enum, sink:GL.Bool)
{
    fp_glMinmaxEXT(target, internalformat, sink)
}
public
func glMinmaxEXT(_ target:GL.Enum, _ internalformat:GL.Enum, _ sink:GL.Bool)
{
    fp_glMinmaxEXT(target, internalformat, sink)
}

var fp_glMultMatrixd:@convention(c) (UnsafePointer<GL.Double>?) -> () = load_glMultMatrixd
func load_glMultMatrixd(m:UnsafePointer<GL.Double>?)
{
    fp_glMultMatrixd = unsafeBitCast(get_fp("glMultMatrixd", support: [ss346, ss369]), to: Swift.type(of: fp_glMultMatrixd))
    fp_glMultMatrixd(m)
}
public
func glMultMatrixd(m:UnsafePointer<GL.Double>?)
{
    fp_glMultMatrixd(m)
}
public
func glMultMatrixd(_ m:UnsafePointer<GL.Double>?)
{
    fp_glMultMatrixd(m)
}

var fp_glMultMatrixf:@convention(c) (UnsafePointer<GL.Float>?) -> () = load_glMultMatrixf
func load_glMultMatrixf(m:UnsafePointer<GL.Float>?)
{
    fp_glMultMatrixf = unsafeBitCast(get_fp("glMultMatrixf", support: [ss346, ss369, ss364]), to: Swift.type(of: fp_glMultMatrixf))
    fp_glMultMatrixf(m)
}
public
func glMultMatrixf(m:UnsafePointer<GL.Float>?)
{
    fp_glMultMatrixf(m)
}
public
func glMultMatrixf(_ m:UnsafePointer<GL.Float>?)
{
    fp_glMultMatrixf(m)
}

var fp_glMultMatrixx:@convention(c) (UnsafePointer<GL.Fixed>?) -> () = load_glMultMatrixx
func load_glMultMatrixx(m:UnsafePointer<GL.Fixed>?)
{
    fp_glMultMatrixx = unsafeBitCast(get_fp("glMultMatrixx", support: [ss364]), to: Swift.type(of: fp_glMultMatrixx))
    fp_glMultMatrixx(m)
}
public
func glMultMatrixx(m:UnsafePointer<GL.Fixed>?)
{
    fp_glMultMatrixx(m)
}
public
func glMultMatrixx(_ m:UnsafePointer<GL.Fixed>?)
{
    fp_glMultMatrixx(m)
}

var fp_glMultMatrixxOES:@convention(c) (UnsafePointer<GL.Fixed>?) -> () = load_glMultMatrixxOES
func load_glMultMatrixxOES(m:UnsafePointer<GL.Fixed>?)
{
    fp_glMultMatrixxOES = unsafeBitCast(get_fp("glMultMatrixxOES", support: [ss292]), to: Swift.type(of: fp_glMultMatrixxOES))
    fp_glMultMatrixxOES(m)
}
public
func glMultMatrixxOES(m:UnsafePointer<GL.Fixed>?)
{
    fp_glMultMatrixxOES(m)
}
public
func glMultMatrixxOES(_ m:UnsafePointer<GL.Fixed>?)
{
    fp_glMultMatrixxOES(m)
}

var fp_glMultTransposeMatrixd:@convention(c) (UnsafePointer<GL.Double>?) -> () = load_glMultTransposeMatrixd
func load_glMultTransposeMatrixd(m:UnsafePointer<GL.Double>?)
{
    fp_glMultTransposeMatrixd = unsafeBitCast(get_fp("glMultTransposeMatrixd", support: [ss349, ss369]), to: Swift.type(of: fp_glMultTransposeMatrixd))
    fp_glMultTransposeMatrixd(m)
}
public
func glMultTransposeMatrixd(m:UnsafePointer<GL.Double>?)
{
    fp_glMultTransposeMatrixd(m)
}
public
func glMultTransposeMatrixd(_ m:UnsafePointer<GL.Double>?)
{
    fp_glMultTransposeMatrixd(m)
}

var fp_glMultTransposeMatrixdARB:@convention(c) (UnsafePointer<GL.Double>?) -> () = load_glMultTransposeMatrixdARB
func load_glMultTransposeMatrixdARB(m:UnsafePointer<GL.Double>?)
{
    fp_glMultTransposeMatrixdARB = unsafeBitCast(get_fp("glMultTransposeMatrixdARB", support: [ss103]), to: Swift.type(of: fp_glMultTransposeMatrixdARB))
    fp_glMultTransposeMatrixdARB(m)
}
public
func glMultTransposeMatrixdARB(m:UnsafePointer<GL.Double>?)
{
    fp_glMultTransposeMatrixdARB(m)
}
public
func glMultTransposeMatrixdARB(_ m:UnsafePointer<GL.Double>?)
{
    fp_glMultTransposeMatrixdARB(m)
}

var fp_glMultTransposeMatrixf:@convention(c) (UnsafePointer<GL.Float>?) -> () = load_glMultTransposeMatrixf
func load_glMultTransposeMatrixf(m:UnsafePointer<GL.Float>?)
{
    fp_glMultTransposeMatrixf = unsafeBitCast(get_fp("glMultTransposeMatrixf", support: [ss349, ss369]), to: Swift.type(of: fp_glMultTransposeMatrixf))
    fp_glMultTransposeMatrixf(m)
}
public
func glMultTransposeMatrixf(m:UnsafePointer<GL.Float>?)
{
    fp_glMultTransposeMatrixf(m)
}
public
func glMultTransposeMatrixf(_ m:UnsafePointer<GL.Float>?)
{
    fp_glMultTransposeMatrixf(m)
}

var fp_glMultTransposeMatrixfARB:@convention(c) (UnsafePointer<GL.Float>?) -> () = load_glMultTransposeMatrixfARB
func load_glMultTransposeMatrixfARB(m:UnsafePointer<GL.Float>?)
{
    fp_glMultTransposeMatrixfARB = unsafeBitCast(get_fp("glMultTransposeMatrixfARB", support: [ss103]), to: Swift.type(of: fp_glMultTransposeMatrixfARB))
    fp_glMultTransposeMatrixfARB(m)
}
public
func glMultTransposeMatrixfARB(m:UnsafePointer<GL.Float>?)
{
    fp_glMultTransposeMatrixfARB(m)
}
public
func glMultTransposeMatrixfARB(_ m:UnsafePointer<GL.Float>?)
{
    fp_glMultTransposeMatrixfARB(m)
}

var fp_glMultTransposeMatrixxOES:@convention(c) (UnsafePointer<GL.Fixed>?) -> () = load_glMultTransposeMatrixxOES
func load_glMultTransposeMatrixxOES(m:UnsafePointer<GL.Fixed>?)
{
    fp_glMultTransposeMatrixxOES = unsafeBitCast(get_fp("glMultTransposeMatrixxOES", support: [ss292]), to: Swift.type(of: fp_glMultTransposeMatrixxOES))
    fp_glMultTransposeMatrixxOES(m)
}
public
func glMultTransposeMatrixxOES(m:UnsafePointer<GL.Fixed>?)
{
    fp_glMultTransposeMatrixxOES(m)
}
public
func glMultTransposeMatrixxOES(_ m:UnsafePointer<GL.Fixed>?)
{
    fp_glMultTransposeMatrixxOES(m)
}

var fp_glMultiDrawArrays:@convention(c) (GL.Enum, UnsafePointer<GL.Int>?, UnsafePointer<GL.Size>?, GL.Size) -> () = load_glMultiDrawArrays
func load_glMultiDrawArrays(mode:GL.Enum, first:UnsafePointer<GL.Int>?, count:UnsafePointer<GL.Size>?, drawcount:GL.Size)
{
    fp_glMultiDrawArrays = unsafeBitCast(get_fp("glMultiDrawArrays", support: [ss350]), to: Swift.type(of: fp_glMultiDrawArrays))
    fp_glMultiDrawArrays(mode, first, count, drawcount)
}
public
func glMultiDrawArrays(mode:GL.Enum, first:UnsafePointer<GL.Int>?, count:UnsafePointer<GL.Size>?, drawcount:GL.Size)
{
    fp_glMultiDrawArrays(mode, first, count, drawcount)
}
public
func glMultiDrawArrays(_ mode:GL.Enum, _ first:UnsafePointer<GL.Int>?, _ count:UnsafePointer<GL.Size>?, _ drawcount:GL.Size)
{
    fp_glMultiDrawArrays(mode, first, count, drawcount)
}

var fp_glMultiDrawArraysEXT:@convention(c) (GL.Enum, UnsafePointer<GL.Int>?, UnsafePointer<GL.Size>?, GL.Size) -> () = load_glMultiDrawArraysEXT
func load_glMultiDrawArraysEXT(mode:GL.Enum, first:UnsafePointer<GL.Int>?, count:UnsafePointer<GL.Size>?, primcount:GL.Size)
{
    fp_glMultiDrawArraysEXT = unsafeBitCast(get_fp("glMultiDrawArraysEXT", support: [ss166]), to: Swift.type(of: fp_glMultiDrawArraysEXT))
    fp_glMultiDrawArraysEXT(mode, first, count, primcount)
}
public
func glMultiDrawArraysEXT(mode:GL.Enum, first:UnsafePointer<GL.Int>?, count:UnsafePointer<GL.Size>?, primcount:GL.Size)
{
    fp_glMultiDrawArraysEXT(mode, first, count, primcount)
}
public
func glMultiDrawArraysEXT(_ mode:GL.Enum, _ first:UnsafePointer<GL.Int>?, _ count:UnsafePointer<GL.Size>?, _ primcount:GL.Size)
{
    fp_glMultiDrawArraysEXT(mode, first, count, primcount)
}

var fp_glMultiDrawArraysIndirect:@convention(c) (GL.Enum, UnsafeRawPointer?, GL.Size, GL.Size) -> () = load_glMultiDrawArraysIndirect
func load_glMultiDrawArraysIndirect(mode:GL.Enum, indirect:UnsafeRawPointer?, drawcount:GL.Size, stride:GL.Size)
{
    fp_glMultiDrawArraysIndirect = unsafeBitCast(get_fp("glMultiDrawArraysIndirect", support: [ss361, ss68]), to: Swift.type(of: fp_glMultiDrawArraysIndirect))
    fp_glMultiDrawArraysIndirect(mode, indirect, drawcount, stride)
}
public
func glMultiDrawArraysIndirect(mode:GL.Enum, indirect:UnsafeRawPointer?, drawcount:GL.Size, stride:GL.Size)
{
    fp_glMultiDrawArraysIndirect(mode, indirect, drawcount, stride)
}
public
func glMultiDrawArraysIndirect(_ mode:GL.Enum, _ indirect:UnsafeRawPointer?, _ drawcount:GL.Size, _ stride:GL.Size)
{
    fp_glMultiDrawArraysIndirect(mode, indirect, drawcount, stride)
}

var fp_glMultiDrawArraysIndirectAMD:@convention(c) (GL.Enum, UnsafeRawPointer?, GL.Size, GL.Size) -> () = load_glMultiDrawArraysIndirectAMD
func load_glMultiDrawArraysIndirectAMD(mode:GL.Enum, indirect:UnsafeRawPointer?, primcount:GL.Size, stride:GL.Size)
{
    fp_glMultiDrawArraysIndirectAMD = unsafeBitCast(get_fp("glMultiDrawArraysIndirectAMD", support: [ss5]), to: Swift.type(of: fp_glMultiDrawArraysIndirectAMD))
    fp_glMultiDrawArraysIndirectAMD(mode, indirect, primcount, stride)
}
public
func glMultiDrawArraysIndirectAMD(mode:GL.Enum, indirect:UnsafeRawPointer?, primcount:GL.Size, stride:GL.Size)
{
    fp_glMultiDrawArraysIndirectAMD(mode, indirect, primcount, stride)
}
public
func glMultiDrawArraysIndirectAMD(_ mode:GL.Enum, _ indirect:UnsafeRawPointer?, _ primcount:GL.Size, _ stride:GL.Size)
{
    fp_glMultiDrawArraysIndirectAMD(mode, indirect, primcount, stride)
}

var fp_glMultiDrawArraysIndirectBindlessCountNV:@convention(c) (GL.Enum, UnsafeRawPointer?, GL.Size, GL.Size, GL.Size, GL.Int) -> () = load_glMultiDrawArraysIndirectBindlessCountNV
func load_glMultiDrawArraysIndirectBindlessCountNV(mode:GL.Enum, indirect:UnsafeRawPointer?, drawCount:GL.Size, maxDrawCount:GL.Size, stride:GL.Size, vertexBufferCount:GL.Int)
{
    fp_glMultiDrawArraysIndirectBindlessCountNV = unsafeBitCast(get_fp("glMultiDrawArraysIndirectBindlessCountNV", support: [ss225]), to: Swift.type(of: fp_glMultiDrawArraysIndirectBindlessCountNV))
    fp_glMultiDrawArraysIndirectBindlessCountNV(mode, indirect, drawCount, maxDrawCount, stride, vertexBufferCount)
}
public
func glMultiDrawArraysIndirectBindlessCountNV(mode:GL.Enum, indirect:UnsafeRawPointer?, drawCount:GL.Size, maxDrawCount:GL.Size, stride:GL.Size, vertexBufferCount:GL.Int)
{
    fp_glMultiDrawArraysIndirectBindlessCountNV(mode, indirect, drawCount, maxDrawCount, stride, vertexBufferCount)
}
public
func glMultiDrawArraysIndirectBindlessCountNV(_ mode:GL.Enum, _ indirect:UnsafeRawPointer?, _ drawCount:GL.Size, _ maxDrawCount:GL.Size, _ stride:GL.Size, _ vertexBufferCount:GL.Int)
{
    fp_glMultiDrawArraysIndirectBindlessCountNV(mode, indirect, drawCount, maxDrawCount, stride, vertexBufferCount)
}

var fp_glMultiDrawArraysIndirectBindlessNV:@convention(c) (GL.Enum, UnsafeRawPointer?, GL.Size, GL.Size, GL.Int) -> () = load_glMultiDrawArraysIndirectBindlessNV
func load_glMultiDrawArraysIndirectBindlessNV(mode:GL.Enum, indirect:UnsafeRawPointer?, drawCount:GL.Size, stride:GL.Size, vertexBufferCount:GL.Int)
{
    fp_glMultiDrawArraysIndirectBindlessNV = unsafeBitCast(get_fp("glMultiDrawArraysIndirectBindlessNV", support: [ss226]), to: Swift.type(of: fp_glMultiDrawArraysIndirectBindlessNV))
    fp_glMultiDrawArraysIndirectBindlessNV(mode, indirect, drawCount, stride, vertexBufferCount)
}
public
func glMultiDrawArraysIndirectBindlessNV(mode:GL.Enum, indirect:UnsafeRawPointer?, drawCount:GL.Size, stride:GL.Size, vertexBufferCount:GL.Int)
{
    fp_glMultiDrawArraysIndirectBindlessNV(mode, indirect, drawCount, stride, vertexBufferCount)
}
public
func glMultiDrawArraysIndirectBindlessNV(_ mode:GL.Enum, _ indirect:UnsafeRawPointer?, _ drawCount:GL.Size, _ stride:GL.Size, _ vertexBufferCount:GL.Int)
{
    fp_glMultiDrawArraysIndirectBindlessNV(mode, indirect, drawCount, stride, vertexBufferCount)
}

var fp_glMultiDrawArraysIndirectCountARB:@convention(c) (GL.Enum, GL.IntPointer, GL.IntPointer, GL.Size, GL.Size) -> () = load_glMultiDrawArraysIndirectCountARB
func load_glMultiDrawArraysIndirectCountARB(mode:GL.Enum, indirect:GL.IntPointer, drawcount:GL.IntPointer, maxdrawcount:GL.Size, stride:GL.Size)
{
    fp_glMultiDrawArraysIndirectCountARB = unsafeBitCast(get_fp("glMultiDrawArraysIndirectCountARB", support: [ss60]), to: Swift.type(of: fp_glMultiDrawArraysIndirectCountARB))
    fp_glMultiDrawArraysIndirectCountARB(mode, indirect, drawcount, maxdrawcount, stride)
}
public
func glMultiDrawArraysIndirectCountARB(mode:GL.Enum, indirect:GL.IntPointer, drawcount:GL.IntPointer, maxdrawcount:GL.Size, stride:GL.Size)
{
    fp_glMultiDrawArraysIndirectCountARB(mode, indirect, drawcount, maxdrawcount, stride)
}
public
func glMultiDrawArraysIndirectCountARB(_ mode:GL.Enum, _ indirect:GL.IntPointer, _ drawcount:GL.IntPointer, _ maxdrawcount:GL.Size, _ stride:GL.Size)
{
    fp_glMultiDrawArraysIndirectCountARB(mode, indirect, drawcount, maxdrawcount, stride)
}

var fp_glMultiDrawArraysIndirectEXT:@convention(c) (GL.Enum, UnsafeRawPointer?, GL.Size, GL.Size) -> () = load_glMultiDrawArraysIndirectEXT
func load_glMultiDrawArraysIndirectEXT(mode:GL.Enum, indirect:UnsafeRawPointer?, drawcount:GL.Size, stride:GL.Size)
{
    fp_glMultiDrawArraysIndirectEXT = unsafeBitCast(get_fp("glMultiDrawArraysIndirectEXT", support: [ss167]), to: Swift.type(of: fp_glMultiDrawArraysIndirectEXT))
    fp_glMultiDrawArraysIndirectEXT(mode, indirect, drawcount, stride)
}
public
func glMultiDrawArraysIndirectEXT(mode:GL.Enum, indirect:UnsafeRawPointer?, drawcount:GL.Size, stride:GL.Size)
{
    fp_glMultiDrawArraysIndirectEXT(mode, indirect, drawcount, stride)
}
public
func glMultiDrawArraysIndirectEXT(_ mode:GL.Enum, _ indirect:UnsafeRawPointer?, _ drawcount:GL.Size, _ stride:GL.Size)
{
    fp_glMultiDrawArraysIndirectEXT(mode, indirect, drawcount, stride)
}

var fp_glMultiDrawElementArrayAPPLE:@convention(c) (GL.Enum, UnsafePointer<GL.Int>?, UnsafePointer<GL.Size>?, GL.Size) -> () = load_glMultiDrawElementArrayAPPLE
func load_glMultiDrawElementArrayAPPLE(mode:GL.Enum, first:UnsafePointer<GL.Int>?, count:UnsafePointer<GL.Size>?, primcount:GL.Size)
{
    fp_glMultiDrawElementArrayAPPLE = unsafeBitCast(get_fp("glMultiDrawElementArrayAPPLE", support: [ss18]), to: Swift.type(of: fp_glMultiDrawElementArrayAPPLE))
    fp_glMultiDrawElementArrayAPPLE(mode, first, count, primcount)
}
public
func glMultiDrawElementArrayAPPLE(mode:GL.Enum, first:UnsafePointer<GL.Int>?, count:UnsafePointer<GL.Size>?, primcount:GL.Size)
{
    fp_glMultiDrawElementArrayAPPLE(mode, first, count, primcount)
}
public
func glMultiDrawElementArrayAPPLE(_ mode:GL.Enum, _ first:UnsafePointer<GL.Int>?, _ count:UnsafePointer<GL.Size>?, _ primcount:GL.Size)
{
    fp_glMultiDrawElementArrayAPPLE(mode, first, count, primcount)
}

var fp_glMultiDrawElements:@convention(c) (GL.Enum, UnsafePointer<GL.Size>?, GL.Enum, UnsafePointer<UnsafeRawPointer?>?, GL.Size) -> () = load_glMultiDrawElements
func load_glMultiDrawElements(mode:GL.Enum, count:UnsafePointer<GL.Size>?, type:GL.Enum, indices:UnsafePointer<UnsafeRawPointer?>?, drawcount:GL.Size)
{
    fp_glMultiDrawElements = unsafeBitCast(get_fp("glMultiDrawElements", support: [ss350]), to: Swift.type(of: fp_glMultiDrawElements))
    fp_glMultiDrawElements(mode, count, type, indices, drawcount)
}
public
func glMultiDrawElements(mode:GL.Enum, count:UnsafePointer<GL.Size>?, type:GL.Enum, indices:UnsafePointer<UnsafeRawPointer?>?, drawcount:GL.Size)
{
    fp_glMultiDrawElements(mode, count, type, indices, drawcount)
}
public
func glMultiDrawElements(_ mode:GL.Enum, _ count:UnsafePointer<GL.Size>?, _ type:GL.Enum, _ indices:UnsafePointer<UnsafeRawPointer?>?, _ drawcount:GL.Size)
{
    fp_glMultiDrawElements(mode, count, type, indices, drawcount)
}

var fp_glMultiDrawElementsBaseVertex:@convention(c) (GL.Enum, UnsafePointer<GL.Size>?, GL.Enum, UnsafePointer<UnsafeRawPointer?>?, GL.Size, UnsafePointer<GL.Int>?) -> () = load_glMultiDrawElementsBaseVertex
func load_glMultiDrawElementsBaseVertex(mode:GL.Enum, count:UnsafePointer<GL.Size>?, type:GL.Enum, indices:UnsafePointer<UnsafeRawPointer?>?, drawcount:GL.Size, basevertex:UnsafePointer<GL.Int>?)
{
    fp_glMultiDrawElementsBaseVertex = unsafeBitCast(get_fp("glMultiDrawElementsBaseVertex", support: [ss356, ss45]), to: Swift.type(of: fp_glMultiDrawElementsBaseVertex))
    fp_glMultiDrawElementsBaseVertex(mode, count, type, indices, drawcount, basevertex)
}
public
func glMultiDrawElementsBaseVertex(mode:GL.Enum, count:UnsafePointer<GL.Size>?, type:GL.Enum, indices:UnsafePointer<UnsafeRawPointer?>?, drawcount:GL.Size, basevertex:UnsafePointer<GL.Int>?)
{
    fp_glMultiDrawElementsBaseVertex(mode, count, type, indices, drawcount, basevertex)
}
public
func glMultiDrawElementsBaseVertex(_ mode:GL.Enum, _ count:UnsafePointer<GL.Size>?, _ type:GL.Enum, _ indices:UnsafePointer<UnsafeRawPointer?>?, _ drawcount:GL.Size, _ basevertex:UnsafePointer<GL.Int>?)
{
    fp_glMultiDrawElementsBaseVertex(mode, count, type, indices, drawcount, basevertex)
}

var fp_glMultiDrawElementsBaseVertexEXT:@convention(c) (GL.Enum, UnsafePointer<GL.Size>?, GL.Enum, UnsafePointer<UnsafeRawPointer?>?, GL.Size, UnsafePointer<GL.Int>?) -> () = load_glMultiDrawElementsBaseVertexEXT
func load_glMultiDrawElementsBaseVertexEXT(mode:GL.Enum, count:UnsafePointer<GL.Size>?, type:GL.Enum, indices:UnsafePointer<UnsafeRawPointer?>?, primcount:GL.Size, basevertex:UnsafePointer<GL.Int>?)
{
    fp_glMultiDrawElementsBaseVertexEXT = unsafeBitCast(get_fp("glMultiDrawElementsBaseVertexEXT", support: [ss149]), to: Swift.type(of: fp_glMultiDrawElementsBaseVertexEXT))
    fp_glMultiDrawElementsBaseVertexEXT(mode, count, type, indices, primcount, basevertex)
}
public
func glMultiDrawElementsBaseVertexEXT(mode:GL.Enum, count:UnsafePointer<GL.Size>?, type:GL.Enum, indices:UnsafePointer<UnsafeRawPointer?>?, primcount:GL.Size, basevertex:UnsafePointer<GL.Int>?)
{
    fp_glMultiDrawElementsBaseVertexEXT(mode, count, type, indices, primcount, basevertex)
}
public
func glMultiDrawElementsBaseVertexEXT(_ mode:GL.Enum, _ count:UnsafePointer<GL.Size>?, _ type:GL.Enum, _ indices:UnsafePointer<UnsafeRawPointer?>?, _ primcount:GL.Size, _ basevertex:UnsafePointer<GL.Int>?)
{
    fp_glMultiDrawElementsBaseVertexEXT(mode, count, type, indices, primcount, basevertex)
}

var fp_glMultiDrawElementsBaseVertexOES:@convention(c) (GL.Enum, UnsafePointer<GL.Size>?, GL.Enum, UnsafePointer<UnsafeRawPointer?>?, GL.Size, UnsafePointer<GL.Int>?) -> () = load_glMultiDrawElementsBaseVertexOES
func load_glMultiDrawElementsBaseVertexOES(mode:GL.Enum, count:UnsafePointer<GL.Size>?, type:GL.Enum, indices:UnsafePointer<UnsafeRawPointer?>?, primcount:GL.Size, basevertex:UnsafePointer<GL.Int>?)
{
    fp_glMultiDrawElementsBaseVertexOES = unsafeBitCast(get_fp("glMultiDrawElementsBaseVertexOES", support: [ss289]), to: Swift.type(of: fp_glMultiDrawElementsBaseVertexOES))
    fp_glMultiDrawElementsBaseVertexOES(mode, count, type, indices, primcount, basevertex)
}
public
func glMultiDrawElementsBaseVertexOES(mode:GL.Enum, count:UnsafePointer<GL.Size>?, type:GL.Enum, indices:UnsafePointer<UnsafeRawPointer?>?, primcount:GL.Size, basevertex:UnsafePointer<GL.Int>?)
{
    fp_glMultiDrawElementsBaseVertexOES(mode, count, type, indices, primcount, basevertex)
}
public
func glMultiDrawElementsBaseVertexOES(_ mode:GL.Enum, _ count:UnsafePointer<GL.Size>?, _ type:GL.Enum, _ indices:UnsafePointer<UnsafeRawPointer?>?, _ primcount:GL.Size, _ basevertex:UnsafePointer<GL.Int>?)
{
    fp_glMultiDrawElementsBaseVertexOES(mode, count, type, indices, primcount, basevertex)
}

var fp_glMultiDrawElementsEXT:@convention(c) (GL.Enum, UnsafePointer<GL.Size>?, GL.Enum, UnsafePointer<UnsafeRawPointer?>?, GL.Size) -> () = load_glMultiDrawElementsEXT
func load_glMultiDrawElementsEXT(mode:GL.Enum, count:UnsafePointer<GL.Size>?, type:GL.Enum, indices:UnsafePointer<UnsafeRawPointer?>?, primcount:GL.Size)
{
    fp_glMultiDrawElementsEXT = unsafeBitCast(get_fp("glMultiDrawElementsEXT", support: [ss166]), to: Swift.type(of: fp_glMultiDrawElementsEXT))
    fp_glMultiDrawElementsEXT(mode, count, type, indices, primcount)
}
public
func glMultiDrawElementsEXT(mode:GL.Enum, count:UnsafePointer<GL.Size>?, type:GL.Enum, indices:UnsafePointer<UnsafeRawPointer?>?, primcount:GL.Size)
{
    fp_glMultiDrawElementsEXT(mode, count, type, indices, primcount)
}
public
func glMultiDrawElementsEXT(_ mode:GL.Enum, _ count:UnsafePointer<GL.Size>?, _ type:GL.Enum, _ indices:UnsafePointer<UnsafeRawPointer?>?, _ primcount:GL.Size)
{
    fp_glMultiDrawElementsEXT(mode, count, type, indices, primcount)
}

var fp_glMultiDrawElementsIndirect:@convention(c) (GL.Enum, GL.Enum, UnsafeRawPointer?, GL.Size, GL.Size) -> () = load_glMultiDrawElementsIndirect
func load_glMultiDrawElementsIndirect(mode:GL.Enum, type:GL.Enum, indirect:UnsafeRawPointer?, drawcount:GL.Size, stride:GL.Size)
{
    fp_glMultiDrawElementsIndirect = unsafeBitCast(get_fp("glMultiDrawElementsIndirect", support: [ss361, ss68]), to: Swift.type(of: fp_glMultiDrawElementsIndirect))
    fp_glMultiDrawElementsIndirect(mode, type, indirect, drawcount, stride)
}
public
func glMultiDrawElementsIndirect(mode:GL.Enum, type:GL.Enum, indirect:UnsafeRawPointer?, drawcount:GL.Size, stride:GL.Size)
{
    fp_glMultiDrawElementsIndirect(mode, type, indirect, drawcount, stride)
}
public
func glMultiDrawElementsIndirect(_ mode:GL.Enum, _ type:GL.Enum, _ indirect:UnsafeRawPointer?, _ drawcount:GL.Size, _ stride:GL.Size)
{
    fp_glMultiDrawElementsIndirect(mode, type, indirect, drawcount, stride)
}

var fp_glMultiDrawElementsIndirectAMD:@convention(c) (GL.Enum, GL.Enum, UnsafeRawPointer?, GL.Size, GL.Size) -> () = load_glMultiDrawElementsIndirectAMD
func load_glMultiDrawElementsIndirectAMD(mode:GL.Enum, type:GL.Enum, indirect:UnsafeRawPointer?, primcount:GL.Size, stride:GL.Size)
{
    fp_glMultiDrawElementsIndirectAMD = unsafeBitCast(get_fp("glMultiDrawElementsIndirectAMD", support: [ss5]), to: Swift.type(of: fp_glMultiDrawElementsIndirectAMD))
    fp_glMultiDrawElementsIndirectAMD(mode, type, indirect, primcount, stride)
}
public
func glMultiDrawElementsIndirectAMD(mode:GL.Enum, type:GL.Enum, indirect:UnsafeRawPointer?, primcount:GL.Size, stride:GL.Size)
{
    fp_glMultiDrawElementsIndirectAMD(mode, type, indirect, primcount, stride)
}
public
func glMultiDrawElementsIndirectAMD(_ mode:GL.Enum, _ type:GL.Enum, _ indirect:UnsafeRawPointer?, _ primcount:GL.Size, _ stride:GL.Size)
{
    fp_glMultiDrawElementsIndirectAMD(mode, type, indirect, primcount, stride)
}

var fp_glMultiDrawElementsIndirectBindlessCountNV:@convention(c) (GL.Enum, GL.Enum, UnsafeRawPointer?, GL.Size, GL.Size, GL.Size, GL.Int) -> () = load_glMultiDrawElementsIndirectBindlessCountNV
func load_glMultiDrawElementsIndirectBindlessCountNV(mode:GL.Enum, type:GL.Enum, indirect:UnsafeRawPointer?, drawCount:GL.Size, maxDrawCount:GL.Size, stride:GL.Size, vertexBufferCount:GL.Int)
{
    fp_glMultiDrawElementsIndirectBindlessCountNV = unsafeBitCast(get_fp("glMultiDrawElementsIndirectBindlessCountNV", support: [ss225]), to: Swift.type(of: fp_glMultiDrawElementsIndirectBindlessCountNV))
    fp_glMultiDrawElementsIndirectBindlessCountNV(mode, type, indirect, drawCount, maxDrawCount, stride, vertexBufferCount)
}
public
func glMultiDrawElementsIndirectBindlessCountNV(mode:GL.Enum, type:GL.Enum, indirect:UnsafeRawPointer?, drawCount:GL.Size, maxDrawCount:GL.Size, stride:GL.Size, vertexBufferCount:GL.Int)
{
    fp_glMultiDrawElementsIndirectBindlessCountNV(mode, type, indirect, drawCount, maxDrawCount, stride, vertexBufferCount)
}
public
func glMultiDrawElementsIndirectBindlessCountNV(_ mode:GL.Enum, _ type:GL.Enum, _ indirect:UnsafeRawPointer?, _ drawCount:GL.Size, _ maxDrawCount:GL.Size, _ stride:GL.Size, _ vertexBufferCount:GL.Int)
{
    fp_glMultiDrawElementsIndirectBindlessCountNV(mode, type, indirect, drawCount, maxDrawCount, stride, vertexBufferCount)
}

var fp_glMultiDrawElementsIndirectBindlessNV:@convention(c) (GL.Enum, GL.Enum, UnsafeRawPointer?, GL.Size, GL.Size, GL.Int) -> () = load_glMultiDrawElementsIndirectBindlessNV
func load_glMultiDrawElementsIndirectBindlessNV(mode:GL.Enum, type:GL.Enum, indirect:UnsafeRawPointer?, drawCount:GL.Size, stride:GL.Size, vertexBufferCount:GL.Int)
{
    fp_glMultiDrawElementsIndirectBindlessNV = unsafeBitCast(get_fp("glMultiDrawElementsIndirectBindlessNV", support: [ss226]), to: Swift.type(of: fp_glMultiDrawElementsIndirectBindlessNV))
    fp_glMultiDrawElementsIndirectBindlessNV(mode, type, indirect, drawCount, stride, vertexBufferCount)
}
public
func glMultiDrawElementsIndirectBindlessNV(mode:GL.Enum, type:GL.Enum, indirect:UnsafeRawPointer?, drawCount:GL.Size, stride:GL.Size, vertexBufferCount:GL.Int)
{
    fp_glMultiDrawElementsIndirectBindlessNV(mode, type, indirect, drawCount, stride, vertexBufferCount)
}
public
func glMultiDrawElementsIndirectBindlessNV(_ mode:GL.Enum, _ type:GL.Enum, _ indirect:UnsafeRawPointer?, _ drawCount:GL.Size, _ stride:GL.Size, _ vertexBufferCount:GL.Int)
{
    fp_glMultiDrawElementsIndirectBindlessNV(mode, type, indirect, drawCount, stride, vertexBufferCount)
}

var fp_glMultiDrawElementsIndirectCountARB:@convention(c) (GL.Enum, GL.Enum, GL.IntPointer, GL.IntPointer, GL.Size, GL.Size) -> () = load_glMultiDrawElementsIndirectCountARB
func load_glMultiDrawElementsIndirectCountARB(mode:GL.Enum, type:GL.Enum, indirect:GL.IntPointer, drawcount:GL.IntPointer, maxdrawcount:GL.Size, stride:GL.Size)
{
    fp_glMultiDrawElementsIndirectCountARB = unsafeBitCast(get_fp("glMultiDrawElementsIndirectCountARB", support: [ss60]), to: Swift.type(of: fp_glMultiDrawElementsIndirectCountARB))
    fp_glMultiDrawElementsIndirectCountARB(mode, type, indirect, drawcount, maxdrawcount, stride)
}
public
func glMultiDrawElementsIndirectCountARB(mode:GL.Enum, type:GL.Enum, indirect:GL.IntPointer, drawcount:GL.IntPointer, maxdrawcount:GL.Size, stride:GL.Size)
{
    fp_glMultiDrawElementsIndirectCountARB(mode, type, indirect, drawcount, maxdrawcount, stride)
}
public
func glMultiDrawElementsIndirectCountARB(_ mode:GL.Enum, _ type:GL.Enum, _ indirect:GL.IntPointer, _ drawcount:GL.IntPointer, _ maxdrawcount:GL.Size, _ stride:GL.Size)
{
    fp_glMultiDrawElementsIndirectCountARB(mode, type, indirect, drawcount, maxdrawcount, stride)
}

var fp_glMultiDrawElementsIndirectEXT:@convention(c) (GL.Enum, GL.Enum, UnsafeRawPointer?, GL.Size, GL.Size) -> () = load_glMultiDrawElementsIndirectEXT
func load_glMultiDrawElementsIndirectEXT(mode:GL.Enum, type:GL.Enum, indirect:UnsafeRawPointer?, drawcount:GL.Size, stride:GL.Size)
{
    fp_glMultiDrawElementsIndirectEXT = unsafeBitCast(get_fp("glMultiDrawElementsIndirectEXT", support: [ss167]), to: Swift.type(of: fp_glMultiDrawElementsIndirectEXT))
    fp_glMultiDrawElementsIndirectEXT(mode, type, indirect, drawcount, stride)
}
public
func glMultiDrawElementsIndirectEXT(mode:GL.Enum, type:GL.Enum, indirect:UnsafeRawPointer?, drawcount:GL.Size, stride:GL.Size)
{
    fp_glMultiDrawElementsIndirectEXT(mode, type, indirect, drawcount, stride)
}
public
func glMultiDrawElementsIndirectEXT(_ mode:GL.Enum, _ type:GL.Enum, _ indirect:UnsafeRawPointer?, _ drawcount:GL.Size, _ stride:GL.Size)
{
    fp_glMultiDrawElementsIndirectEXT(mode, type, indirect, drawcount, stride)
}

var fp_glMultiDrawRangeElementArrayAPPLE:@convention(c) (GL.Enum, GL.UInt, GL.UInt, UnsafePointer<GL.Int>?, UnsafePointer<GL.Size>?, GL.Size) -> () = load_glMultiDrawRangeElementArrayAPPLE
func load_glMultiDrawRangeElementArrayAPPLE(mode:GL.Enum, start:GL.UInt, end:GL.UInt, first:UnsafePointer<GL.Int>?, count:UnsafePointer<GL.Size>?, primcount:GL.Size)
{
    fp_glMultiDrawRangeElementArrayAPPLE = unsafeBitCast(get_fp("glMultiDrawRangeElementArrayAPPLE", support: [ss18]), to: Swift.type(of: fp_glMultiDrawRangeElementArrayAPPLE))
    fp_glMultiDrawRangeElementArrayAPPLE(mode, start, end, first, count, primcount)
}
public
func glMultiDrawRangeElementArrayAPPLE(mode:GL.Enum, start:GL.UInt, end:GL.UInt, first:UnsafePointer<GL.Int>?, count:UnsafePointer<GL.Size>?, primcount:GL.Size)
{
    fp_glMultiDrawRangeElementArrayAPPLE(mode, start, end, first, count, primcount)
}
public
func glMultiDrawRangeElementArrayAPPLE(_ mode:GL.Enum, _ start:GL.UInt, _ end:GL.UInt, _ first:UnsafePointer<GL.Int>?, _ count:UnsafePointer<GL.Size>?, _ primcount:GL.Size)
{
    fp_glMultiDrawRangeElementArrayAPPLE(mode, start, end, first, count, primcount)
}

var fp_glMultiModeDrawArraysIBM:@convention(c) (UnsafePointer<GL.Enum>?, UnsafePointer<GL.Int>?, UnsafePointer<GL.Size>?, GL.Size, GL.Int) -> () = load_glMultiModeDrawArraysIBM
func load_glMultiModeDrawArraysIBM(mode:UnsafePointer<GL.Enum>?, first:UnsafePointer<GL.Int>?, count:UnsafePointer<GL.Size>?, primcount:GL.Size, modestride:GL.Int)
{
    fp_glMultiModeDrawArraysIBM = unsafeBitCast(get_fp("glMultiModeDrawArraysIBM", support: [ss210]), to: Swift.type(of: fp_glMultiModeDrawArraysIBM))
    fp_glMultiModeDrawArraysIBM(mode, first, count, primcount, modestride)
}
public
func glMultiModeDrawArraysIBM(mode:UnsafePointer<GL.Enum>?, first:UnsafePointer<GL.Int>?, count:UnsafePointer<GL.Size>?, primcount:GL.Size, modestride:GL.Int)
{
    fp_glMultiModeDrawArraysIBM(mode, first, count, primcount, modestride)
}
public
func glMultiModeDrawArraysIBM(_ mode:UnsafePointer<GL.Enum>?, _ first:UnsafePointer<GL.Int>?, _ count:UnsafePointer<GL.Size>?, _ primcount:GL.Size, _ modestride:GL.Int)
{
    fp_glMultiModeDrawArraysIBM(mode, first, count, primcount, modestride)
}

var fp_glMultiModeDrawElementsIBM:@convention(c) (UnsafePointer<GL.Enum>?, UnsafePointer<GL.Size>?, GL.Enum, UnsafePointer<UnsafeRawPointer?>?, GL.Size, GL.Int) -> () = load_glMultiModeDrawElementsIBM
func load_glMultiModeDrawElementsIBM(mode:UnsafePointer<GL.Enum>?, count:UnsafePointer<GL.Size>?, type:GL.Enum, indices:UnsafePointer<UnsafeRawPointer?>?, primcount:GL.Size, modestride:GL.Int)
{
    fp_glMultiModeDrawElementsIBM = unsafeBitCast(get_fp("glMultiModeDrawElementsIBM", support: [ss210]), to: Swift.type(of: fp_glMultiModeDrawElementsIBM))
    fp_glMultiModeDrawElementsIBM(mode, count, type, indices, primcount, modestride)
}
public
func glMultiModeDrawElementsIBM(mode:UnsafePointer<GL.Enum>?, count:UnsafePointer<GL.Size>?, type:GL.Enum, indices:UnsafePointer<UnsafeRawPointer?>?, primcount:GL.Size, modestride:GL.Int)
{
    fp_glMultiModeDrawElementsIBM(mode, count, type, indices, primcount, modestride)
}
public
func glMultiModeDrawElementsIBM(_ mode:UnsafePointer<GL.Enum>?, _ count:UnsafePointer<GL.Size>?, _ type:GL.Enum, _ indices:UnsafePointer<UnsafeRawPointer?>?, _ primcount:GL.Size, _ modestride:GL.Int)
{
    fp_glMultiModeDrawElementsIBM(mode, count, type, indices, primcount, modestride)
}

var fp_glMultiTexBufferEXT:@convention(c) (GL.Enum, GL.Enum, GL.Enum, GL.UInt) -> () = load_glMultiTexBufferEXT
func load_glMultiTexBufferEXT(texunit:GL.Enum, target:GL.Enum, internalformat:GL.Enum, buffer:GL.UInt)
{
    fp_glMultiTexBufferEXT = unsafeBitCast(get_fp("glMultiTexBufferEXT", support: [ss143]), to: Swift.type(of: fp_glMultiTexBufferEXT))
    fp_glMultiTexBufferEXT(texunit, target, internalformat, buffer)
}
public
func glMultiTexBufferEXT(texunit:GL.Enum, target:GL.Enum, internalformat:GL.Enum, buffer:GL.UInt)
{
    fp_glMultiTexBufferEXT(texunit, target, internalformat, buffer)
}
public
func glMultiTexBufferEXT(_ texunit:GL.Enum, _ target:GL.Enum, _ internalformat:GL.Enum, _ buffer:GL.UInt)
{
    fp_glMultiTexBufferEXT(texunit, target, internalformat, buffer)
}

var fp_glMultiTexCoord1bOES:@convention(c) (GL.Enum, GL.Byte) -> () = load_glMultiTexCoord1bOES
func load_glMultiTexCoord1bOES(texture:GL.Enum, s:GL.Byte)
{
    fp_glMultiTexCoord1bOES = unsafeBitCast(get_fp("glMultiTexCoord1bOES", support: [ss286]), to: Swift.type(of: fp_glMultiTexCoord1bOES))
    fp_glMultiTexCoord1bOES(texture, s)
}
public
func glMultiTexCoord1bOES(texture:GL.Enum, s:GL.Byte)
{
    fp_glMultiTexCoord1bOES(texture, s)
}
public
func glMultiTexCoord1bOES(_ texture:GL.Enum, _ s:GL.Byte)
{
    fp_glMultiTexCoord1bOES(texture, s)
}

var fp_glMultiTexCoord1bvOES:@convention(c) (GL.Enum, UnsafePointer<GL.Byte>?) -> () = load_glMultiTexCoord1bvOES
func load_glMultiTexCoord1bvOES(texture:GL.Enum, coords:UnsafePointer<GL.Byte>?)
{
    fp_glMultiTexCoord1bvOES = unsafeBitCast(get_fp("glMultiTexCoord1bvOES", support: [ss286]), to: Swift.type(of: fp_glMultiTexCoord1bvOES))
    fp_glMultiTexCoord1bvOES(texture, coords)
}
public
func glMultiTexCoord1bvOES(texture:GL.Enum, coords:UnsafePointer<GL.Byte>?)
{
    fp_glMultiTexCoord1bvOES(texture, coords)
}
public
func glMultiTexCoord1bvOES(_ texture:GL.Enum, _ coords:UnsafePointer<GL.Byte>?)
{
    fp_glMultiTexCoord1bvOES(texture, coords)
}

var fp_glMultiTexCoord1d:@convention(c) (GL.Enum, GL.Double) -> () = load_glMultiTexCoord1d
func load_glMultiTexCoord1d(target:GL.Enum, s:GL.Double)
{
    fp_glMultiTexCoord1d = unsafeBitCast(get_fp("glMultiTexCoord1d", support: [ss349, ss369]), to: Swift.type(of: fp_glMultiTexCoord1d))
    fp_glMultiTexCoord1d(target, s)
}
public
func glMultiTexCoord1d(target:GL.Enum, s:GL.Double)
{
    fp_glMultiTexCoord1d(target, s)
}
public
func glMultiTexCoord1d(_ target:GL.Enum, _ s:GL.Double)
{
    fp_glMultiTexCoord1d(target, s)
}

var fp_glMultiTexCoord1dARB:@convention(c) (GL.Enum, GL.Double) -> () = load_glMultiTexCoord1dARB
func load_glMultiTexCoord1dARB(target:GL.Enum, s:GL.Double)
{
    fp_glMultiTexCoord1dARB = unsafeBitCast(get_fp("glMultiTexCoord1dARB", support: [ss70]), to: Swift.type(of: fp_glMultiTexCoord1dARB))
    fp_glMultiTexCoord1dARB(target, s)
}
public
func glMultiTexCoord1dARB(target:GL.Enum, s:GL.Double)
{
    fp_glMultiTexCoord1dARB(target, s)
}
public
func glMultiTexCoord1dARB(_ target:GL.Enum, _ s:GL.Double)
{
    fp_glMultiTexCoord1dARB(target, s)
}

var fp_glMultiTexCoord1dv:@convention(c) (GL.Enum, UnsafePointer<GL.Double>?) -> () = load_glMultiTexCoord1dv
func load_glMultiTexCoord1dv(target:GL.Enum, v:UnsafePointer<GL.Double>?)
{
    fp_glMultiTexCoord1dv = unsafeBitCast(get_fp("glMultiTexCoord1dv", support: [ss349, ss369]), to: Swift.type(of: fp_glMultiTexCoord1dv))
    fp_glMultiTexCoord1dv(target, v)
}
public
func glMultiTexCoord1dv(target:GL.Enum, v:UnsafePointer<GL.Double>?)
{
    fp_glMultiTexCoord1dv(target, v)
}
public
func glMultiTexCoord1dv(_ target:GL.Enum, _ v:UnsafePointer<GL.Double>?)
{
    fp_glMultiTexCoord1dv(target, v)
}

var fp_glMultiTexCoord1dvARB:@convention(c) (GL.Enum, UnsafePointer<GL.Double>?) -> () = load_glMultiTexCoord1dvARB
func load_glMultiTexCoord1dvARB(target:GL.Enum, v:UnsafePointer<GL.Double>?)
{
    fp_glMultiTexCoord1dvARB = unsafeBitCast(get_fp("glMultiTexCoord1dvARB", support: [ss70]), to: Swift.type(of: fp_glMultiTexCoord1dvARB))
    fp_glMultiTexCoord1dvARB(target, v)
}
public
func glMultiTexCoord1dvARB(target:GL.Enum, v:UnsafePointer<GL.Double>?)
{
    fp_glMultiTexCoord1dvARB(target, v)
}
public
func glMultiTexCoord1dvARB(_ target:GL.Enum, _ v:UnsafePointer<GL.Double>?)
{
    fp_glMultiTexCoord1dvARB(target, v)
}

var fp_glMultiTexCoord1f:@convention(c) (GL.Enum, GL.Float) -> () = load_glMultiTexCoord1f
func load_glMultiTexCoord1f(target:GL.Enum, s:GL.Float)
{
    fp_glMultiTexCoord1f = unsafeBitCast(get_fp("glMultiTexCoord1f", support: [ss349, ss369]), to: Swift.type(of: fp_glMultiTexCoord1f))
    fp_glMultiTexCoord1f(target, s)
}
public
func glMultiTexCoord1f(target:GL.Enum, s:GL.Float)
{
    fp_glMultiTexCoord1f(target, s)
}
public
func glMultiTexCoord1f(_ target:GL.Enum, _ s:GL.Float)
{
    fp_glMultiTexCoord1f(target, s)
}

var fp_glMultiTexCoord1fARB:@convention(c) (GL.Enum, GL.Float) -> () = load_glMultiTexCoord1fARB
func load_glMultiTexCoord1fARB(target:GL.Enum, s:GL.Float)
{
    fp_glMultiTexCoord1fARB = unsafeBitCast(get_fp("glMultiTexCoord1fARB", support: [ss70]), to: Swift.type(of: fp_glMultiTexCoord1fARB))
    fp_glMultiTexCoord1fARB(target, s)
}
public
func glMultiTexCoord1fARB(target:GL.Enum, s:GL.Float)
{
    fp_glMultiTexCoord1fARB(target, s)
}
public
func glMultiTexCoord1fARB(_ target:GL.Enum, _ s:GL.Float)
{
    fp_glMultiTexCoord1fARB(target, s)
}

var fp_glMultiTexCoord1fv:@convention(c) (GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glMultiTexCoord1fv
func load_glMultiTexCoord1fv(target:GL.Enum, v:UnsafePointer<GL.Float>?)
{
    fp_glMultiTexCoord1fv = unsafeBitCast(get_fp("glMultiTexCoord1fv", support: [ss349, ss369]), to: Swift.type(of: fp_glMultiTexCoord1fv))
    fp_glMultiTexCoord1fv(target, v)
}
public
func glMultiTexCoord1fv(target:GL.Enum, v:UnsafePointer<GL.Float>?)
{
    fp_glMultiTexCoord1fv(target, v)
}
public
func glMultiTexCoord1fv(_ target:GL.Enum, _ v:UnsafePointer<GL.Float>?)
{
    fp_glMultiTexCoord1fv(target, v)
}

var fp_glMultiTexCoord1fvARB:@convention(c) (GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glMultiTexCoord1fvARB
func load_glMultiTexCoord1fvARB(target:GL.Enum, v:UnsafePointer<GL.Float>?)
{
    fp_glMultiTexCoord1fvARB = unsafeBitCast(get_fp("glMultiTexCoord1fvARB", support: [ss70]), to: Swift.type(of: fp_glMultiTexCoord1fvARB))
    fp_glMultiTexCoord1fvARB(target, v)
}
public
func glMultiTexCoord1fvARB(target:GL.Enum, v:UnsafePointer<GL.Float>?)
{
    fp_glMultiTexCoord1fvARB(target, v)
}
public
func glMultiTexCoord1fvARB(_ target:GL.Enum, _ v:UnsafePointer<GL.Float>?)
{
    fp_glMultiTexCoord1fvARB(target, v)
}

var fp_glMultiTexCoord1hNV:@convention(c) (GL.Enum, GL.HalfNV) -> () = load_glMultiTexCoord1hNV
func load_glMultiTexCoord1hNV(target:GL.Enum, s:GL.HalfNV)
{
    fp_glMultiTexCoord1hNV = unsafeBitCast(get_fp("glMultiTexCoord1hNV", support: [ss253]), to: Swift.type(of: fp_glMultiTexCoord1hNV))
    fp_glMultiTexCoord1hNV(target, s)
}
public
func glMultiTexCoord1hNV(target:GL.Enum, s:GL.HalfNV)
{
    fp_glMultiTexCoord1hNV(target, s)
}
public
func glMultiTexCoord1hNV(_ target:GL.Enum, _ s:GL.HalfNV)
{
    fp_glMultiTexCoord1hNV(target, s)
}

var fp_glMultiTexCoord1hvNV:@convention(c) (GL.Enum, UnsafePointer<GL.HalfNV>?) -> () = load_glMultiTexCoord1hvNV
func load_glMultiTexCoord1hvNV(target:GL.Enum, v:UnsafePointer<GL.HalfNV>?)
{
    fp_glMultiTexCoord1hvNV = unsafeBitCast(get_fp("glMultiTexCoord1hvNV", support: [ss253]), to: Swift.type(of: fp_glMultiTexCoord1hvNV))
    fp_glMultiTexCoord1hvNV(target, v)
}
public
func glMultiTexCoord1hvNV(target:GL.Enum, v:UnsafePointer<GL.HalfNV>?)
{
    fp_glMultiTexCoord1hvNV(target, v)
}
public
func glMultiTexCoord1hvNV(_ target:GL.Enum, _ v:UnsafePointer<GL.HalfNV>?)
{
    fp_glMultiTexCoord1hvNV(target, v)
}

var fp_glMultiTexCoord1i:@convention(c) (GL.Enum, GL.Int) -> () = load_glMultiTexCoord1i
func load_glMultiTexCoord1i(target:GL.Enum, s:GL.Int)
{
    fp_glMultiTexCoord1i = unsafeBitCast(get_fp("glMultiTexCoord1i", support: [ss349, ss369]), to: Swift.type(of: fp_glMultiTexCoord1i))
    fp_glMultiTexCoord1i(target, s)
}
public
func glMultiTexCoord1i(target:GL.Enum, s:GL.Int)
{
    fp_glMultiTexCoord1i(target, s)
}
public
func glMultiTexCoord1i(_ target:GL.Enum, _ s:GL.Int)
{
    fp_glMultiTexCoord1i(target, s)
}

var fp_glMultiTexCoord1iARB:@convention(c) (GL.Enum, GL.Int) -> () = load_glMultiTexCoord1iARB
func load_glMultiTexCoord1iARB(target:GL.Enum, s:GL.Int)
{
    fp_glMultiTexCoord1iARB = unsafeBitCast(get_fp("glMultiTexCoord1iARB", support: [ss70]), to: Swift.type(of: fp_glMultiTexCoord1iARB))
    fp_glMultiTexCoord1iARB(target, s)
}
public
func glMultiTexCoord1iARB(target:GL.Enum, s:GL.Int)
{
    fp_glMultiTexCoord1iARB(target, s)
}
public
func glMultiTexCoord1iARB(_ target:GL.Enum, _ s:GL.Int)
{
    fp_glMultiTexCoord1iARB(target, s)
}

var fp_glMultiTexCoord1iv:@convention(c) (GL.Enum, UnsafePointer<GL.Int>?) -> () = load_glMultiTexCoord1iv
func load_glMultiTexCoord1iv(target:GL.Enum, v:UnsafePointer<GL.Int>?)
{
    fp_glMultiTexCoord1iv = unsafeBitCast(get_fp("glMultiTexCoord1iv", support: [ss349, ss369]), to: Swift.type(of: fp_glMultiTexCoord1iv))
    fp_glMultiTexCoord1iv(target, v)
}
public
func glMultiTexCoord1iv(target:GL.Enum, v:UnsafePointer<GL.Int>?)
{
    fp_glMultiTexCoord1iv(target, v)
}
public
func glMultiTexCoord1iv(_ target:GL.Enum, _ v:UnsafePointer<GL.Int>?)
{
    fp_glMultiTexCoord1iv(target, v)
}

var fp_glMultiTexCoord1ivARB:@convention(c) (GL.Enum, UnsafePointer<GL.Int>?) -> () = load_glMultiTexCoord1ivARB
func load_glMultiTexCoord1ivARB(target:GL.Enum, v:UnsafePointer<GL.Int>?)
{
    fp_glMultiTexCoord1ivARB = unsafeBitCast(get_fp("glMultiTexCoord1ivARB", support: [ss70]), to: Swift.type(of: fp_glMultiTexCoord1ivARB))
    fp_glMultiTexCoord1ivARB(target, v)
}
public
func glMultiTexCoord1ivARB(target:GL.Enum, v:UnsafePointer<GL.Int>?)
{
    fp_glMultiTexCoord1ivARB(target, v)
}
public
func glMultiTexCoord1ivARB(_ target:GL.Enum, _ v:UnsafePointer<GL.Int>?)
{
    fp_glMultiTexCoord1ivARB(target, v)
}

var fp_glMultiTexCoord1s:@convention(c) (GL.Enum, GL.Short) -> () = load_glMultiTexCoord1s
func load_glMultiTexCoord1s(target:GL.Enum, s:GL.Short)
{
    fp_glMultiTexCoord1s = unsafeBitCast(get_fp("glMultiTexCoord1s", support: [ss349, ss369]), to: Swift.type(of: fp_glMultiTexCoord1s))
    fp_glMultiTexCoord1s(target, s)
}
public
func glMultiTexCoord1s(target:GL.Enum, s:GL.Short)
{
    fp_glMultiTexCoord1s(target, s)
}
public
func glMultiTexCoord1s(_ target:GL.Enum, _ s:GL.Short)
{
    fp_glMultiTexCoord1s(target, s)
}

var fp_glMultiTexCoord1sARB:@convention(c) (GL.Enum, GL.Short) -> () = load_glMultiTexCoord1sARB
func load_glMultiTexCoord1sARB(target:GL.Enum, s:GL.Short)
{
    fp_glMultiTexCoord1sARB = unsafeBitCast(get_fp("glMultiTexCoord1sARB", support: [ss70]), to: Swift.type(of: fp_glMultiTexCoord1sARB))
    fp_glMultiTexCoord1sARB(target, s)
}
public
func glMultiTexCoord1sARB(target:GL.Enum, s:GL.Short)
{
    fp_glMultiTexCoord1sARB(target, s)
}
public
func glMultiTexCoord1sARB(_ target:GL.Enum, _ s:GL.Short)
{
    fp_glMultiTexCoord1sARB(target, s)
}

var fp_glMultiTexCoord1sv:@convention(c) (GL.Enum, UnsafePointer<GL.Short>?) -> () = load_glMultiTexCoord1sv
func load_glMultiTexCoord1sv(target:GL.Enum, v:UnsafePointer<GL.Short>?)
{
    fp_glMultiTexCoord1sv = unsafeBitCast(get_fp("glMultiTexCoord1sv", support: [ss349, ss369]), to: Swift.type(of: fp_glMultiTexCoord1sv))
    fp_glMultiTexCoord1sv(target, v)
}
public
func glMultiTexCoord1sv(target:GL.Enum, v:UnsafePointer<GL.Short>?)
{
    fp_glMultiTexCoord1sv(target, v)
}
public
func glMultiTexCoord1sv(_ target:GL.Enum, _ v:UnsafePointer<GL.Short>?)
{
    fp_glMultiTexCoord1sv(target, v)
}

var fp_glMultiTexCoord1svARB:@convention(c) (GL.Enum, UnsafePointer<GL.Short>?) -> () = load_glMultiTexCoord1svARB
func load_glMultiTexCoord1svARB(target:GL.Enum, v:UnsafePointer<GL.Short>?)
{
    fp_glMultiTexCoord1svARB = unsafeBitCast(get_fp("glMultiTexCoord1svARB", support: [ss70]), to: Swift.type(of: fp_glMultiTexCoord1svARB))
    fp_glMultiTexCoord1svARB(target, v)
}
public
func glMultiTexCoord1svARB(target:GL.Enum, v:UnsafePointer<GL.Short>?)
{
    fp_glMultiTexCoord1svARB(target, v)
}
public
func glMultiTexCoord1svARB(_ target:GL.Enum, _ v:UnsafePointer<GL.Short>?)
{
    fp_glMultiTexCoord1svARB(target, v)
}

var fp_glMultiTexCoord1xOES:@convention(c) (GL.Enum, GL.Fixed) -> () = load_glMultiTexCoord1xOES
func load_glMultiTexCoord1xOES(texture:GL.Enum, s:GL.Fixed)
{
    fp_glMultiTexCoord1xOES = unsafeBitCast(get_fp("glMultiTexCoord1xOES", support: [ss292]), to: Swift.type(of: fp_glMultiTexCoord1xOES))
    fp_glMultiTexCoord1xOES(texture, s)
}
public
func glMultiTexCoord1xOES(texture:GL.Enum, s:GL.Fixed)
{
    fp_glMultiTexCoord1xOES(texture, s)
}
public
func glMultiTexCoord1xOES(_ texture:GL.Enum, _ s:GL.Fixed)
{
    fp_glMultiTexCoord1xOES(texture, s)
}

var fp_glMultiTexCoord1xvOES:@convention(c) (GL.Enum, UnsafePointer<GL.Fixed>?) -> () = load_glMultiTexCoord1xvOES
func load_glMultiTexCoord1xvOES(texture:GL.Enum, coords:UnsafePointer<GL.Fixed>?)
{
    fp_glMultiTexCoord1xvOES = unsafeBitCast(get_fp("glMultiTexCoord1xvOES", support: [ss292]), to: Swift.type(of: fp_glMultiTexCoord1xvOES))
    fp_glMultiTexCoord1xvOES(texture, coords)
}
public
func glMultiTexCoord1xvOES(texture:GL.Enum, coords:UnsafePointer<GL.Fixed>?)
{
    fp_glMultiTexCoord1xvOES(texture, coords)
}
public
func glMultiTexCoord1xvOES(_ texture:GL.Enum, _ coords:UnsafePointer<GL.Fixed>?)
{
    fp_glMultiTexCoord1xvOES(texture, coords)
}

var fp_glMultiTexCoord2bOES:@convention(c) (GL.Enum, GL.Byte, GL.Byte) -> () = load_glMultiTexCoord2bOES
func load_glMultiTexCoord2bOES(texture:GL.Enum, s:GL.Byte, t:GL.Byte)
{
    fp_glMultiTexCoord2bOES = unsafeBitCast(get_fp("glMultiTexCoord2bOES", support: [ss286]), to: Swift.type(of: fp_glMultiTexCoord2bOES))
    fp_glMultiTexCoord2bOES(texture, s, t)
}
public
func glMultiTexCoord2bOES(texture:GL.Enum, s:GL.Byte, t:GL.Byte)
{
    fp_glMultiTexCoord2bOES(texture, s, t)
}
public
func glMultiTexCoord2bOES(_ texture:GL.Enum, _ s:GL.Byte, _ t:GL.Byte)
{
    fp_glMultiTexCoord2bOES(texture, s, t)
}

var fp_glMultiTexCoord2bvOES:@convention(c) (GL.Enum, UnsafePointer<GL.Byte>?) -> () = load_glMultiTexCoord2bvOES
func load_glMultiTexCoord2bvOES(texture:GL.Enum, coords:UnsafePointer<GL.Byte>?)
{
    fp_glMultiTexCoord2bvOES = unsafeBitCast(get_fp("glMultiTexCoord2bvOES", support: [ss286]), to: Swift.type(of: fp_glMultiTexCoord2bvOES))
    fp_glMultiTexCoord2bvOES(texture, coords)
}
public
func glMultiTexCoord2bvOES(texture:GL.Enum, coords:UnsafePointer<GL.Byte>?)
{
    fp_glMultiTexCoord2bvOES(texture, coords)
}
public
func glMultiTexCoord2bvOES(_ texture:GL.Enum, _ coords:UnsafePointer<GL.Byte>?)
{
    fp_glMultiTexCoord2bvOES(texture, coords)
}

var fp_glMultiTexCoord2d:@convention(c) (GL.Enum, GL.Double, GL.Double) -> () = load_glMultiTexCoord2d
func load_glMultiTexCoord2d(target:GL.Enum, s:GL.Double, t:GL.Double)
{
    fp_glMultiTexCoord2d = unsafeBitCast(get_fp("glMultiTexCoord2d", support: [ss349, ss369]), to: Swift.type(of: fp_glMultiTexCoord2d))
    fp_glMultiTexCoord2d(target, s, t)
}
public
func glMultiTexCoord2d(target:GL.Enum, s:GL.Double, t:GL.Double)
{
    fp_glMultiTexCoord2d(target, s, t)
}
public
func glMultiTexCoord2d(_ target:GL.Enum, _ s:GL.Double, _ t:GL.Double)
{
    fp_glMultiTexCoord2d(target, s, t)
}

var fp_glMultiTexCoord2dARB:@convention(c) (GL.Enum, GL.Double, GL.Double) -> () = load_glMultiTexCoord2dARB
func load_glMultiTexCoord2dARB(target:GL.Enum, s:GL.Double, t:GL.Double)
{
    fp_glMultiTexCoord2dARB = unsafeBitCast(get_fp("glMultiTexCoord2dARB", support: [ss70]), to: Swift.type(of: fp_glMultiTexCoord2dARB))
    fp_glMultiTexCoord2dARB(target, s, t)
}
public
func glMultiTexCoord2dARB(target:GL.Enum, s:GL.Double, t:GL.Double)
{
    fp_glMultiTexCoord2dARB(target, s, t)
}
public
func glMultiTexCoord2dARB(_ target:GL.Enum, _ s:GL.Double, _ t:GL.Double)
{
    fp_glMultiTexCoord2dARB(target, s, t)
}

var fp_glMultiTexCoord2dv:@convention(c) (GL.Enum, UnsafePointer<GL.Double>?) -> () = load_glMultiTexCoord2dv
func load_glMultiTexCoord2dv(target:GL.Enum, v:UnsafePointer<GL.Double>?)
{
    fp_glMultiTexCoord2dv = unsafeBitCast(get_fp("glMultiTexCoord2dv", support: [ss349, ss369]), to: Swift.type(of: fp_glMultiTexCoord2dv))
    fp_glMultiTexCoord2dv(target, v)
}
public
func glMultiTexCoord2dv(target:GL.Enum, v:UnsafePointer<GL.Double>?)
{
    fp_glMultiTexCoord2dv(target, v)
}
public
func glMultiTexCoord2dv(_ target:GL.Enum, _ v:UnsafePointer<GL.Double>?)
{
    fp_glMultiTexCoord2dv(target, v)
}

var fp_glMultiTexCoord2dvARB:@convention(c) (GL.Enum, UnsafePointer<GL.Double>?) -> () = load_glMultiTexCoord2dvARB
func load_glMultiTexCoord2dvARB(target:GL.Enum, v:UnsafePointer<GL.Double>?)
{
    fp_glMultiTexCoord2dvARB = unsafeBitCast(get_fp("glMultiTexCoord2dvARB", support: [ss70]), to: Swift.type(of: fp_glMultiTexCoord2dvARB))
    fp_glMultiTexCoord2dvARB(target, v)
}
public
func glMultiTexCoord2dvARB(target:GL.Enum, v:UnsafePointer<GL.Double>?)
{
    fp_glMultiTexCoord2dvARB(target, v)
}
public
func glMultiTexCoord2dvARB(_ target:GL.Enum, _ v:UnsafePointer<GL.Double>?)
{
    fp_glMultiTexCoord2dvARB(target, v)
}

var fp_glMultiTexCoord2f:@convention(c) (GL.Enum, GL.Float, GL.Float) -> () = load_glMultiTexCoord2f
func load_glMultiTexCoord2f(target:GL.Enum, s:GL.Float, t:GL.Float)
{
    fp_glMultiTexCoord2f = unsafeBitCast(get_fp("glMultiTexCoord2f", support: [ss349, ss369]), to: Swift.type(of: fp_glMultiTexCoord2f))
    fp_glMultiTexCoord2f(target, s, t)
}
public
func glMultiTexCoord2f(target:GL.Enum, s:GL.Float, t:GL.Float)
{
    fp_glMultiTexCoord2f(target, s, t)
}
public
func glMultiTexCoord2f(_ target:GL.Enum, _ s:GL.Float, _ t:GL.Float)
{
    fp_glMultiTexCoord2f(target, s, t)
}

var fp_glMultiTexCoord2fARB:@convention(c) (GL.Enum, GL.Float, GL.Float) -> () = load_glMultiTexCoord2fARB
func load_glMultiTexCoord2fARB(target:GL.Enum, s:GL.Float, t:GL.Float)
{
    fp_glMultiTexCoord2fARB = unsafeBitCast(get_fp("glMultiTexCoord2fARB", support: [ss70]), to: Swift.type(of: fp_glMultiTexCoord2fARB))
    fp_glMultiTexCoord2fARB(target, s, t)
}
public
func glMultiTexCoord2fARB(target:GL.Enum, s:GL.Float, t:GL.Float)
{
    fp_glMultiTexCoord2fARB(target, s, t)
}
public
func glMultiTexCoord2fARB(_ target:GL.Enum, _ s:GL.Float, _ t:GL.Float)
{
    fp_glMultiTexCoord2fARB(target, s, t)
}

var fp_glMultiTexCoord2fv:@convention(c) (GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glMultiTexCoord2fv
func load_glMultiTexCoord2fv(target:GL.Enum, v:UnsafePointer<GL.Float>?)
{
    fp_glMultiTexCoord2fv = unsafeBitCast(get_fp("glMultiTexCoord2fv", support: [ss349, ss369]), to: Swift.type(of: fp_glMultiTexCoord2fv))
    fp_glMultiTexCoord2fv(target, v)
}
public
func glMultiTexCoord2fv(target:GL.Enum, v:UnsafePointer<GL.Float>?)
{
    fp_glMultiTexCoord2fv(target, v)
}
public
func glMultiTexCoord2fv(_ target:GL.Enum, _ v:UnsafePointer<GL.Float>?)
{
    fp_glMultiTexCoord2fv(target, v)
}

var fp_glMultiTexCoord2fvARB:@convention(c) (GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glMultiTexCoord2fvARB
func load_glMultiTexCoord2fvARB(target:GL.Enum, v:UnsafePointer<GL.Float>?)
{
    fp_glMultiTexCoord2fvARB = unsafeBitCast(get_fp("glMultiTexCoord2fvARB", support: [ss70]), to: Swift.type(of: fp_glMultiTexCoord2fvARB))
    fp_glMultiTexCoord2fvARB(target, v)
}
public
func glMultiTexCoord2fvARB(target:GL.Enum, v:UnsafePointer<GL.Float>?)
{
    fp_glMultiTexCoord2fvARB(target, v)
}
public
func glMultiTexCoord2fvARB(_ target:GL.Enum, _ v:UnsafePointer<GL.Float>?)
{
    fp_glMultiTexCoord2fvARB(target, v)
}

var fp_glMultiTexCoord2hNV:@convention(c) (GL.Enum, GL.HalfNV, GL.HalfNV) -> () = load_glMultiTexCoord2hNV
func load_glMultiTexCoord2hNV(target:GL.Enum, s:GL.HalfNV, t:GL.HalfNV)
{
    fp_glMultiTexCoord2hNV = unsafeBitCast(get_fp("glMultiTexCoord2hNV", support: [ss253]), to: Swift.type(of: fp_glMultiTexCoord2hNV))
    fp_glMultiTexCoord2hNV(target, s, t)
}
public
func glMultiTexCoord2hNV(target:GL.Enum, s:GL.HalfNV, t:GL.HalfNV)
{
    fp_glMultiTexCoord2hNV(target, s, t)
}
public
func glMultiTexCoord2hNV(_ target:GL.Enum, _ s:GL.HalfNV, _ t:GL.HalfNV)
{
    fp_glMultiTexCoord2hNV(target, s, t)
}

var fp_glMultiTexCoord2hvNV:@convention(c) (GL.Enum, UnsafePointer<GL.HalfNV>?) -> () = load_glMultiTexCoord2hvNV
func load_glMultiTexCoord2hvNV(target:GL.Enum, v:UnsafePointer<GL.HalfNV>?)
{
    fp_glMultiTexCoord2hvNV = unsafeBitCast(get_fp("glMultiTexCoord2hvNV", support: [ss253]), to: Swift.type(of: fp_glMultiTexCoord2hvNV))
    fp_glMultiTexCoord2hvNV(target, v)
}
public
func glMultiTexCoord2hvNV(target:GL.Enum, v:UnsafePointer<GL.HalfNV>?)
{
    fp_glMultiTexCoord2hvNV(target, v)
}
public
func glMultiTexCoord2hvNV(_ target:GL.Enum, _ v:UnsafePointer<GL.HalfNV>?)
{
    fp_glMultiTexCoord2hvNV(target, v)
}

var fp_glMultiTexCoord2i:@convention(c) (GL.Enum, GL.Int, GL.Int) -> () = load_glMultiTexCoord2i
func load_glMultiTexCoord2i(target:GL.Enum, s:GL.Int, t:GL.Int)
{
    fp_glMultiTexCoord2i = unsafeBitCast(get_fp("glMultiTexCoord2i", support: [ss349, ss369]), to: Swift.type(of: fp_glMultiTexCoord2i))
    fp_glMultiTexCoord2i(target, s, t)
}
public
func glMultiTexCoord2i(target:GL.Enum, s:GL.Int, t:GL.Int)
{
    fp_glMultiTexCoord2i(target, s, t)
}
public
func glMultiTexCoord2i(_ target:GL.Enum, _ s:GL.Int, _ t:GL.Int)
{
    fp_glMultiTexCoord2i(target, s, t)
}

var fp_glMultiTexCoord2iARB:@convention(c) (GL.Enum, GL.Int, GL.Int) -> () = load_glMultiTexCoord2iARB
func load_glMultiTexCoord2iARB(target:GL.Enum, s:GL.Int, t:GL.Int)
{
    fp_glMultiTexCoord2iARB = unsafeBitCast(get_fp("glMultiTexCoord2iARB", support: [ss70]), to: Swift.type(of: fp_glMultiTexCoord2iARB))
    fp_glMultiTexCoord2iARB(target, s, t)
}
public
func glMultiTexCoord2iARB(target:GL.Enum, s:GL.Int, t:GL.Int)
{
    fp_glMultiTexCoord2iARB(target, s, t)
}
public
func glMultiTexCoord2iARB(_ target:GL.Enum, _ s:GL.Int, _ t:GL.Int)
{
    fp_glMultiTexCoord2iARB(target, s, t)
}

var fp_glMultiTexCoord2iv:@convention(c) (GL.Enum, UnsafePointer<GL.Int>?) -> () = load_glMultiTexCoord2iv
func load_glMultiTexCoord2iv(target:GL.Enum, v:UnsafePointer<GL.Int>?)
{
    fp_glMultiTexCoord2iv = unsafeBitCast(get_fp("glMultiTexCoord2iv", support: [ss349, ss369]), to: Swift.type(of: fp_glMultiTexCoord2iv))
    fp_glMultiTexCoord2iv(target, v)
}
public
func glMultiTexCoord2iv(target:GL.Enum, v:UnsafePointer<GL.Int>?)
{
    fp_glMultiTexCoord2iv(target, v)
}
public
func glMultiTexCoord2iv(_ target:GL.Enum, _ v:UnsafePointer<GL.Int>?)
{
    fp_glMultiTexCoord2iv(target, v)
}

var fp_glMultiTexCoord2ivARB:@convention(c) (GL.Enum, UnsafePointer<GL.Int>?) -> () = load_glMultiTexCoord2ivARB
func load_glMultiTexCoord2ivARB(target:GL.Enum, v:UnsafePointer<GL.Int>?)
{
    fp_glMultiTexCoord2ivARB = unsafeBitCast(get_fp("glMultiTexCoord2ivARB", support: [ss70]), to: Swift.type(of: fp_glMultiTexCoord2ivARB))
    fp_glMultiTexCoord2ivARB(target, v)
}
public
func glMultiTexCoord2ivARB(target:GL.Enum, v:UnsafePointer<GL.Int>?)
{
    fp_glMultiTexCoord2ivARB(target, v)
}
public
func glMultiTexCoord2ivARB(_ target:GL.Enum, _ v:UnsafePointer<GL.Int>?)
{
    fp_glMultiTexCoord2ivARB(target, v)
}

var fp_glMultiTexCoord2s:@convention(c) (GL.Enum, GL.Short, GL.Short) -> () = load_glMultiTexCoord2s
func load_glMultiTexCoord2s(target:GL.Enum, s:GL.Short, t:GL.Short)
{
    fp_glMultiTexCoord2s = unsafeBitCast(get_fp("glMultiTexCoord2s", support: [ss349, ss369]), to: Swift.type(of: fp_glMultiTexCoord2s))
    fp_glMultiTexCoord2s(target, s, t)
}
public
func glMultiTexCoord2s(target:GL.Enum, s:GL.Short, t:GL.Short)
{
    fp_glMultiTexCoord2s(target, s, t)
}
public
func glMultiTexCoord2s(_ target:GL.Enum, _ s:GL.Short, _ t:GL.Short)
{
    fp_glMultiTexCoord2s(target, s, t)
}

var fp_glMultiTexCoord2sARB:@convention(c) (GL.Enum, GL.Short, GL.Short) -> () = load_glMultiTexCoord2sARB
func load_glMultiTexCoord2sARB(target:GL.Enum, s:GL.Short, t:GL.Short)
{
    fp_glMultiTexCoord2sARB = unsafeBitCast(get_fp("glMultiTexCoord2sARB", support: [ss70]), to: Swift.type(of: fp_glMultiTexCoord2sARB))
    fp_glMultiTexCoord2sARB(target, s, t)
}
public
func glMultiTexCoord2sARB(target:GL.Enum, s:GL.Short, t:GL.Short)
{
    fp_glMultiTexCoord2sARB(target, s, t)
}
public
func glMultiTexCoord2sARB(_ target:GL.Enum, _ s:GL.Short, _ t:GL.Short)
{
    fp_glMultiTexCoord2sARB(target, s, t)
}

var fp_glMultiTexCoord2sv:@convention(c) (GL.Enum, UnsafePointer<GL.Short>?) -> () = load_glMultiTexCoord2sv
func load_glMultiTexCoord2sv(target:GL.Enum, v:UnsafePointer<GL.Short>?)
{
    fp_glMultiTexCoord2sv = unsafeBitCast(get_fp("glMultiTexCoord2sv", support: [ss349, ss369]), to: Swift.type(of: fp_glMultiTexCoord2sv))
    fp_glMultiTexCoord2sv(target, v)
}
public
func glMultiTexCoord2sv(target:GL.Enum, v:UnsafePointer<GL.Short>?)
{
    fp_glMultiTexCoord2sv(target, v)
}
public
func glMultiTexCoord2sv(_ target:GL.Enum, _ v:UnsafePointer<GL.Short>?)
{
    fp_glMultiTexCoord2sv(target, v)
}

var fp_glMultiTexCoord2svARB:@convention(c) (GL.Enum, UnsafePointer<GL.Short>?) -> () = load_glMultiTexCoord2svARB
func load_glMultiTexCoord2svARB(target:GL.Enum, v:UnsafePointer<GL.Short>?)
{
    fp_glMultiTexCoord2svARB = unsafeBitCast(get_fp("glMultiTexCoord2svARB", support: [ss70]), to: Swift.type(of: fp_glMultiTexCoord2svARB))
    fp_glMultiTexCoord2svARB(target, v)
}
public
func glMultiTexCoord2svARB(target:GL.Enum, v:UnsafePointer<GL.Short>?)
{
    fp_glMultiTexCoord2svARB(target, v)
}
public
func glMultiTexCoord2svARB(_ target:GL.Enum, _ v:UnsafePointer<GL.Short>?)
{
    fp_glMultiTexCoord2svARB(target, v)
}

var fp_glMultiTexCoord2xOES:@convention(c) (GL.Enum, GL.Fixed, GL.Fixed) -> () = load_glMultiTexCoord2xOES
func load_glMultiTexCoord2xOES(texture:GL.Enum, s:GL.Fixed, t:GL.Fixed)
{
    fp_glMultiTexCoord2xOES = unsafeBitCast(get_fp("glMultiTexCoord2xOES", support: [ss292]), to: Swift.type(of: fp_glMultiTexCoord2xOES))
    fp_glMultiTexCoord2xOES(texture, s, t)
}
public
func glMultiTexCoord2xOES(texture:GL.Enum, s:GL.Fixed, t:GL.Fixed)
{
    fp_glMultiTexCoord2xOES(texture, s, t)
}
public
func glMultiTexCoord2xOES(_ texture:GL.Enum, _ s:GL.Fixed, _ t:GL.Fixed)
{
    fp_glMultiTexCoord2xOES(texture, s, t)
}

var fp_glMultiTexCoord2xvOES:@convention(c) (GL.Enum, UnsafePointer<GL.Fixed>?) -> () = load_glMultiTexCoord2xvOES
func load_glMultiTexCoord2xvOES(texture:GL.Enum, coords:UnsafePointer<GL.Fixed>?)
{
    fp_glMultiTexCoord2xvOES = unsafeBitCast(get_fp("glMultiTexCoord2xvOES", support: [ss292]), to: Swift.type(of: fp_glMultiTexCoord2xvOES))
    fp_glMultiTexCoord2xvOES(texture, coords)
}
public
func glMultiTexCoord2xvOES(texture:GL.Enum, coords:UnsafePointer<GL.Fixed>?)
{
    fp_glMultiTexCoord2xvOES(texture, coords)
}
public
func glMultiTexCoord2xvOES(_ texture:GL.Enum, _ coords:UnsafePointer<GL.Fixed>?)
{
    fp_glMultiTexCoord2xvOES(texture, coords)
}

var fp_glMultiTexCoord3bOES:@convention(c) (GL.Enum, GL.Byte, GL.Byte, GL.Byte) -> () = load_glMultiTexCoord3bOES
func load_glMultiTexCoord3bOES(texture:GL.Enum, s:GL.Byte, t:GL.Byte, r:GL.Byte)
{
    fp_glMultiTexCoord3bOES = unsafeBitCast(get_fp("glMultiTexCoord3bOES", support: [ss286]), to: Swift.type(of: fp_glMultiTexCoord3bOES))
    fp_glMultiTexCoord3bOES(texture, s, t, r)
}
public
func glMultiTexCoord3bOES(texture:GL.Enum, s:GL.Byte, t:GL.Byte, r:GL.Byte)
{
    fp_glMultiTexCoord3bOES(texture, s, t, r)
}
public
func glMultiTexCoord3bOES(_ texture:GL.Enum, _ s:GL.Byte, _ t:GL.Byte, _ r:GL.Byte)
{
    fp_glMultiTexCoord3bOES(texture, s, t, r)
}

var fp_glMultiTexCoord3bvOES:@convention(c) (GL.Enum, UnsafePointer<GL.Byte>?) -> () = load_glMultiTexCoord3bvOES
func load_glMultiTexCoord3bvOES(texture:GL.Enum, coords:UnsafePointer<GL.Byte>?)
{
    fp_glMultiTexCoord3bvOES = unsafeBitCast(get_fp("glMultiTexCoord3bvOES", support: [ss286]), to: Swift.type(of: fp_glMultiTexCoord3bvOES))
    fp_glMultiTexCoord3bvOES(texture, coords)
}
public
func glMultiTexCoord3bvOES(texture:GL.Enum, coords:UnsafePointer<GL.Byte>?)
{
    fp_glMultiTexCoord3bvOES(texture, coords)
}
public
func glMultiTexCoord3bvOES(_ texture:GL.Enum, _ coords:UnsafePointer<GL.Byte>?)
{
    fp_glMultiTexCoord3bvOES(texture, coords)
}

var fp_glMultiTexCoord3d:@convention(c) (GL.Enum, GL.Double, GL.Double, GL.Double) -> () = load_glMultiTexCoord3d
func load_glMultiTexCoord3d(target:GL.Enum, s:GL.Double, t:GL.Double, r:GL.Double)
{
    fp_glMultiTexCoord3d = unsafeBitCast(get_fp("glMultiTexCoord3d", support: [ss349, ss369]), to: Swift.type(of: fp_glMultiTexCoord3d))
    fp_glMultiTexCoord3d(target, s, t, r)
}
public
func glMultiTexCoord3d(target:GL.Enum, s:GL.Double, t:GL.Double, r:GL.Double)
{
    fp_glMultiTexCoord3d(target, s, t, r)
}
public
func glMultiTexCoord3d(_ target:GL.Enum, _ s:GL.Double, _ t:GL.Double, _ r:GL.Double)
{
    fp_glMultiTexCoord3d(target, s, t, r)
}

var fp_glMultiTexCoord3dARB:@convention(c) (GL.Enum, GL.Double, GL.Double, GL.Double) -> () = load_glMultiTexCoord3dARB
func load_glMultiTexCoord3dARB(target:GL.Enum, s:GL.Double, t:GL.Double, r:GL.Double)
{
    fp_glMultiTexCoord3dARB = unsafeBitCast(get_fp("glMultiTexCoord3dARB", support: [ss70]), to: Swift.type(of: fp_glMultiTexCoord3dARB))
    fp_glMultiTexCoord3dARB(target, s, t, r)
}
public
func glMultiTexCoord3dARB(target:GL.Enum, s:GL.Double, t:GL.Double, r:GL.Double)
{
    fp_glMultiTexCoord3dARB(target, s, t, r)
}
public
func glMultiTexCoord3dARB(_ target:GL.Enum, _ s:GL.Double, _ t:GL.Double, _ r:GL.Double)
{
    fp_glMultiTexCoord3dARB(target, s, t, r)
}

var fp_glMultiTexCoord3dv:@convention(c) (GL.Enum, UnsafePointer<GL.Double>?) -> () = load_glMultiTexCoord3dv
func load_glMultiTexCoord3dv(target:GL.Enum, v:UnsafePointer<GL.Double>?)
{
    fp_glMultiTexCoord3dv = unsafeBitCast(get_fp("glMultiTexCoord3dv", support: [ss349, ss369]), to: Swift.type(of: fp_glMultiTexCoord3dv))
    fp_glMultiTexCoord3dv(target, v)
}
public
func glMultiTexCoord3dv(target:GL.Enum, v:UnsafePointer<GL.Double>?)
{
    fp_glMultiTexCoord3dv(target, v)
}
public
func glMultiTexCoord3dv(_ target:GL.Enum, _ v:UnsafePointer<GL.Double>?)
{
    fp_glMultiTexCoord3dv(target, v)
}

var fp_glMultiTexCoord3dvARB:@convention(c) (GL.Enum, UnsafePointer<GL.Double>?) -> () = load_glMultiTexCoord3dvARB
func load_glMultiTexCoord3dvARB(target:GL.Enum, v:UnsafePointer<GL.Double>?)
{
    fp_glMultiTexCoord3dvARB = unsafeBitCast(get_fp("glMultiTexCoord3dvARB", support: [ss70]), to: Swift.type(of: fp_glMultiTexCoord3dvARB))
    fp_glMultiTexCoord3dvARB(target, v)
}
public
func glMultiTexCoord3dvARB(target:GL.Enum, v:UnsafePointer<GL.Double>?)
{
    fp_glMultiTexCoord3dvARB(target, v)
}
public
func glMultiTexCoord3dvARB(_ target:GL.Enum, _ v:UnsafePointer<GL.Double>?)
{
    fp_glMultiTexCoord3dvARB(target, v)
}

var fp_glMultiTexCoord3f:@convention(c) (GL.Enum, GL.Float, GL.Float, GL.Float) -> () = load_glMultiTexCoord3f
func load_glMultiTexCoord3f(target:GL.Enum, s:GL.Float, t:GL.Float, r:GL.Float)
{
    fp_glMultiTexCoord3f = unsafeBitCast(get_fp("glMultiTexCoord3f", support: [ss349, ss369]), to: Swift.type(of: fp_glMultiTexCoord3f))
    fp_glMultiTexCoord3f(target, s, t, r)
}
public
func glMultiTexCoord3f(target:GL.Enum, s:GL.Float, t:GL.Float, r:GL.Float)
{
    fp_glMultiTexCoord3f(target, s, t, r)
}
public
func glMultiTexCoord3f(_ target:GL.Enum, _ s:GL.Float, _ t:GL.Float, _ r:GL.Float)
{
    fp_glMultiTexCoord3f(target, s, t, r)
}

var fp_glMultiTexCoord3fARB:@convention(c) (GL.Enum, GL.Float, GL.Float, GL.Float) -> () = load_glMultiTexCoord3fARB
func load_glMultiTexCoord3fARB(target:GL.Enum, s:GL.Float, t:GL.Float, r:GL.Float)
{
    fp_glMultiTexCoord3fARB = unsafeBitCast(get_fp("glMultiTexCoord3fARB", support: [ss70]), to: Swift.type(of: fp_glMultiTexCoord3fARB))
    fp_glMultiTexCoord3fARB(target, s, t, r)
}
public
func glMultiTexCoord3fARB(target:GL.Enum, s:GL.Float, t:GL.Float, r:GL.Float)
{
    fp_glMultiTexCoord3fARB(target, s, t, r)
}
public
func glMultiTexCoord3fARB(_ target:GL.Enum, _ s:GL.Float, _ t:GL.Float, _ r:GL.Float)
{
    fp_glMultiTexCoord3fARB(target, s, t, r)
}

var fp_glMultiTexCoord3fv:@convention(c) (GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glMultiTexCoord3fv
func load_glMultiTexCoord3fv(target:GL.Enum, v:UnsafePointer<GL.Float>?)
{
    fp_glMultiTexCoord3fv = unsafeBitCast(get_fp("glMultiTexCoord3fv", support: [ss349, ss369]), to: Swift.type(of: fp_glMultiTexCoord3fv))
    fp_glMultiTexCoord3fv(target, v)
}
public
func glMultiTexCoord3fv(target:GL.Enum, v:UnsafePointer<GL.Float>?)
{
    fp_glMultiTexCoord3fv(target, v)
}
public
func glMultiTexCoord3fv(_ target:GL.Enum, _ v:UnsafePointer<GL.Float>?)
{
    fp_glMultiTexCoord3fv(target, v)
}

var fp_glMultiTexCoord3fvARB:@convention(c) (GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glMultiTexCoord3fvARB
func load_glMultiTexCoord3fvARB(target:GL.Enum, v:UnsafePointer<GL.Float>?)
{
    fp_glMultiTexCoord3fvARB = unsafeBitCast(get_fp("glMultiTexCoord3fvARB", support: [ss70]), to: Swift.type(of: fp_glMultiTexCoord3fvARB))
    fp_glMultiTexCoord3fvARB(target, v)
}
public
func glMultiTexCoord3fvARB(target:GL.Enum, v:UnsafePointer<GL.Float>?)
{
    fp_glMultiTexCoord3fvARB(target, v)
}
public
func glMultiTexCoord3fvARB(_ target:GL.Enum, _ v:UnsafePointer<GL.Float>?)
{
    fp_glMultiTexCoord3fvARB(target, v)
}

var fp_glMultiTexCoord3hNV:@convention(c) (GL.Enum, GL.HalfNV, GL.HalfNV, GL.HalfNV) -> () = load_glMultiTexCoord3hNV
func load_glMultiTexCoord3hNV(target:GL.Enum, s:GL.HalfNV, t:GL.HalfNV, r:GL.HalfNV)
{
    fp_glMultiTexCoord3hNV = unsafeBitCast(get_fp("glMultiTexCoord3hNV", support: [ss253]), to: Swift.type(of: fp_glMultiTexCoord3hNV))
    fp_glMultiTexCoord3hNV(target, s, t, r)
}
public
func glMultiTexCoord3hNV(target:GL.Enum, s:GL.HalfNV, t:GL.HalfNV, r:GL.HalfNV)
{
    fp_glMultiTexCoord3hNV(target, s, t, r)
}
public
func glMultiTexCoord3hNV(_ target:GL.Enum, _ s:GL.HalfNV, _ t:GL.HalfNV, _ r:GL.HalfNV)
{
    fp_glMultiTexCoord3hNV(target, s, t, r)
}

var fp_glMultiTexCoord3hvNV:@convention(c) (GL.Enum, UnsafePointer<GL.HalfNV>?) -> () = load_glMultiTexCoord3hvNV
func load_glMultiTexCoord3hvNV(target:GL.Enum, v:UnsafePointer<GL.HalfNV>?)
{
    fp_glMultiTexCoord3hvNV = unsafeBitCast(get_fp("glMultiTexCoord3hvNV", support: [ss253]), to: Swift.type(of: fp_glMultiTexCoord3hvNV))
    fp_glMultiTexCoord3hvNV(target, v)
}
public
func glMultiTexCoord3hvNV(target:GL.Enum, v:UnsafePointer<GL.HalfNV>?)
{
    fp_glMultiTexCoord3hvNV(target, v)
}
public
func glMultiTexCoord3hvNV(_ target:GL.Enum, _ v:UnsafePointer<GL.HalfNV>?)
{
    fp_glMultiTexCoord3hvNV(target, v)
}

var fp_glMultiTexCoord3i:@convention(c) (GL.Enum, GL.Int, GL.Int, GL.Int) -> () = load_glMultiTexCoord3i
func load_glMultiTexCoord3i(target:GL.Enum, s:GL.Int, t:GL.Int, r:GL.Int)
{
    fp_glMultiTexCoord3i = unsafeBitCast(get_fp("glMultiTexCoord3i", support: [ss349, ss369]), to: Swift.type(of: fp_glMultiTexCoord3i))
    fp_glMultiTexCoord3i(target, s, t, r)
}
public
func glMultiTexCoord3i(target:GL.Enum, s:GL.Int, t:GL.Int, r:GL.Int)
{
    fp_glMultiTexCoord3i(target, s, t, r)
}
public
func glMultiTexCoord3i(_ target:GL.Enum, _ s:GL.Int, _ t:GL.Int, _ r:GL.Int)
{
    fp_glMultiTexCoord3i(target, s, t, r)
}

var fp_glMultiTexCoord3iARB:@convention(c) (GL.Enum, GL.Int, GL.Int, GL.Int) -> () = load_glMultiTexCoord3iARB
func load_glMultiTexCoord3iARB(target:GL.Enum, s:GL.Int, t:GL.Int, r:GL.Int)
{
    fp_glMultiTexCoord3iARB = unsafeBitCast(get_fp("glMultiTexCoord3iARB", support: [ss70]), to: Swift.type(of: fp_glMultiTexCoord3iARB))
    fp_glMultiTexCoord3iARB(target, s, t, r)
}
public
func glMultiTexCoord3iARB(target:GL.Enum, s:GL.Int, t:GL.Int, r:GL.Int)
{
    fp_glMultiTexCoord3iARB(target, s, t, r)
}
public
func glMultiTexCoord3iARB(_ target:GL.Enum, _ s:GL.Int, _ t:GL.Int, _ r:GL.Int)
{
    fp_glMultiTexCoord3iARB(target, s, t, r)
}

var fp_glMultiTexCoord3iv:@convention(c) (GL.Enum, UnsafePointer<GL.Int>?) -> () = load_glMultiTexCoord3iv
func load_glMultiTexCoord3iv(target:GL.Enum, v:UnsafePointer<GL.Int>?)
{
    fp_glMultiTexCoord3iv = unsafeBitCast(get_fp("glMultiTexCoord3iv", support: [ss349, ss369]), to: Swift.type(of: fp_glMultiTexCoord3iv))
    fp_glMultiTexCoord3iv(target, v)
}
public
func glMultiTexCoord3iv(target:GL.Enum, v:UnsafePointer<GL.Int>?)
{
    fp_glMultiTexCoord3iv(target, v)
}
public
func glMultiTexCoord3iv(_ target:GL.Enum, _ v:UnsafePointer<GL.Int>?)
{
    fp_glMultiTexCoord3iv(target, v)
}

var fp_glMultiTexCoord3ivARB:@convention(c) (GL.Enum, UnsafePointer<GL.Int>?) -> () = load_glMultiTexCoord3ivARB
func load_glMultiTexCoord3ivARB(target:GL.Enum, v:UnsafePointer<GL.Int>?)
{
    fp_glMultiTexCoord3ivARB = unsafeBitCast(get_fp("glMultiTexCoord3ivARB", support: [ss70]), to: Swift.type(of: fp_glMultiTexCoord3ivARB))
    fp_glMultiTexCoord3ivARB(target, v)
}
public
func glMultiTexCoord3ivARB(target:GL.Enum, v:UnsafePointer<GL.Int>?)
{
    fp_glMultiTexCoord3ivARB(target, v)
}
public
func glMultiTexCoord3ivARB(_ target:GL.Enum, _ v:UnsafePointer<GL.Int>?)
{
    fp_glMultiTexCoord3ivARB(target, v)
}

var fp_glMultiTexCoord3s:@convention(c) (GL.Enum, GL.Short, GL.Short, GL.Short) -> () = load_glMultiTexCoord3s
func load_glMultiTexCoord3s(target:GL.Enum, s:GL.Short, t:GL.Short, r:GL.Short)
{
    fp_glMultiTexCoord3s = unsafeBitCast(get_fp("glMultiTexCoord3s", support: [ss349, ss369]), to: Swift.type(of: fp_glMultiTexCoord3s))
    fp_glMultiTexCoord3s(target, s, t, r)
}
public
func glMultiTexCoord3s(target:GL.Enum, s:GL.Short, t:GL.Short, r:GL.Short)
{
    fp_glMultiTexCoord3s(target, s, t, r)
}
public
func glMultiTexCoord3s(_ target:GL.Enum, _ s:GL.Short, _ t:GL.Short, _ r:GL.Short)
{
    fp_glMultiTexCoord3s(target, s, t, r)
}

var fp_glMultiTexCoord3sARB:@convention(c) (GL.Enum, GL.Short, GL.Short, GL.Short) -> () = load_glMultiTexCoord3sARB
func load_glMultiTexCoord3sARB(target:GL.Enum, s:GL.Short, t:GL.Short, r:GL.Short)
{
    fp_glMultiTexCoord3sARB = unsafeBitCast(get_fp("glMultiTexCoord3sARB", support: [ss70]), to: Swift.type(of: fp_glMultiTexCoord3sARB))
    fp_glMultiTexCoord3sARB(target, s, t, r)
}
public
func glMultiTexCoord3sARB(target:GL.Enum, s:GL.Short, t:GL.Short, r:GL.Short)
{
    fp_glMultiTexCoord3sARB(target, s, t, r)
}
public
func glMultiTexCoord3sARB(_ target:GL.Enum, _ s:GL.Short, _ t:GL.Short, _ r:GL.Short)
{
    fp_glMultiTexCoord3sARB(target, s, t, r)
}

var fp_glMultiTexCoord3sv:@convention(c) (GL.Enum, UnsafePointer<GL.Short>?) -> () = load_glMultiTexCoord3sv
func load_glMultiTexCoord3sv(target:GL.Enum, v:UnsafePointer<GL.Short>?)
{
    fp_glMultiTexCoord3sv = unsafeBitCast(get_fp("glMultiTexCoord3sv", support: [ss349, ss369]), to: Swift.type(of: fp_glMultiTexCoord3sv))
    fp_glMultiTexCoord3sv(target, v)
}
public
func glMultiTexCoord3sv(target:GL.Enum, v:UnsafePointer<GL.Short>?)
{
    fp_glMultiTexCoord3sv(target, v)
}
public
func glMultiTexCoord3sv(_ target:GL.Enum, _ v:UnsafePointer<GL.Short>?)
{
    fp_glMultiTexCoord3sv(target, v)
}

var fp_glMultiTexCoord3svARB:@convention(c) (GL.Enum, UnsafePointer<GL.Short>?) -> () = load_glMultiTexCoord3svARB
func load_glMultiTexCoord3svARB(target:GL.Enum, v:UnsafePointer<GL.Short>?)
{
    fp_glMultiTexCoord3svARB = unsafeBitCast(get_fp("glMultiTexCoord3svARB", support: [ss70]), to: Swift.type(of: fp_glMultiTexCoord3svARB))
    fp_glMultiTexCoord3svARB(target, v)
}
public
func glMultiTexCoord3svARB(target:GL.Enum, v:UnsafePointer<GL.Short>?)
{
    fp_glMultiTexCoord3svARB(target, v)
}
public
func glMultiTexCoord3svARB(_ target:GL.Enum, _ v:UnsafePointer<GL.Short>?)
{
    fp_glMultiTexCoord3svARB(target, v)
}

var fp_glMultiTexCoord3xOES:@convention(c) (GL.Enum, GL.Fixed, GL.Fixed, GL.Fixed) -> () = load_glMultiTexCoord3xOES
func load_glMultiTexCoord3xOES(texture:GL.Enum, s:GL.Fixed, t:GL.Fixed, r:GL.Fixed)
{
    fp_glMultiTexCoord3xOES = unsafeBitCast(get_fp("glMultiTexCoord3xOES", support: [ss292]), to: Swift.type(of: fp_glMultiTexCoord3xOES))
    fp_glMultiTexCoord3xOES(texture, s, t, r)
}
public
func glMultiTexCoord3xOES(texture:GL.Enum, s:GL.Fixed, t:GL.Fixed, r:GL.Fixed)
{
    fp_glMultiTexCoord3xOES(texture, s, t, r)
}
public
func glMultiTexCoord3xOES(_ texture:GL.Enum, _ s:GL.Fixed, _ t:GL.Fixed, _ r:GL.Fixed)
{
    fp_glMultiTexCoord3xOES(texture, s, t, r)
}

var fp_glMultiTexCoord3xvOES:@convention(c) (GL.Enum, UnsafePointer<GL.Fixed>?) -> () = load_glMultiTexCoord3xvOES
func load_glMultiTexCoord3xvOES(texture:GL.Enum, coords:UnsafePointer<GL.Fixed>?)
{
    fp_glMultiTexCoord3xvOES = unsafeBitCast(get_fp("glMultiTexCoord3xvOES", support: [ss292]), to: Swift.type(of: fp_glMultiTexCoord3xvOES))
    fp_glMultiTexCoord3xvOES(texture, coords)
}
public
func glMultiTexCoord3xvOES(texture:GL.Enum, coords:UnsafePointer<GL.Fixed>?)
{
    fp_glMultiTexCoord3xvOES(texture, coords)
}
public
func glMultiTexCoord3xvOES(_ texture:GL.Enum, _ coords:UnsafePointer<GL.Fixed>?)
{
    fp_glMultiTexCoord3xvOES(texture, coords)
}

var fp_glMultiTexCoord4bOES:@convention(c) (GL.Enum, GL.Byte, GL.Byte, GL.Byte, GL.Byte) -> () = load_glMultiTexCoord4bOES
func load_glMultiTexCoord4bOES(texture:GL.Enum, s:GL.Byte, t:GL.Byte, r:GL.Byte, q:GL.Byte)
{
    fp_glMultiTexCoord4bOES = unsafeBitCast(get_fp("glMultiTexCoord4bOES", support: [ss286]), to: Swift.type(of: fp_glMultiTexCoord4bOES))
    fp_glMultiTexCoord4bOES(texture, s, t, r, q)
}
public
func glMultiTexCoord4bOES(texture:GL.Enum, s:GL.Byte, t:GL.Byte, r:GL.Byte, q:GL.Byte)
{
    fp_glMultiTexCoord4bOES(texture, s, t, r, q)
}
public
func glMultiTexCoord4bOES(_ texture:GL.Enum, _ s:GL.Byte, _ t:GL.Byte, _ r:GL.Byte, _ q:GL.Byte)
{
    fp_glMultiTexCoord4bOES(texture, s, t, r, q)
}

var fp_glMultiTexCoord4bvOES:@convention(c) (GL.Enum, UnsafePointer<GL.Byte>?) -> () = load_glMultiTexCoord4bvOES
func load_glMultiTexCoord4bvOES(texture:GL.Enum, coords:UnsafePointer<GL.Byte>?)
{
    fp_glMultiTexCoord4bvOES = unsafeBitCast(get_fp("glMultiTexCoord4bvOES", support: [ss286]), to: Swift.type(of: fp_glMultiTexCoord4bvOES))
    fp_glMultiTexCoord4bvOES(texture, coords)
}
public
func glMultiTexCoord4bvOES(texture:GL.Enum, coords:UnsafePointer<GL.Byte>?)
{
    fp_glMultiTexCoord4bvOES(texture, coords)
}
public
func glMultiTexCoord4bvOES(_ texture:GL.Enum, _ coords:UnsafePointer<GL.Byte>?)
{
    fp_glMultiTexCoord4bvOES(texture, coords)
}

var fp_glMultiTexCoord4d:@convention(c) (GL.Enum, GL.Double, GL.Double, GL.Double, GL.Double) -> () = load_glMultiTexCoord4d
func load_glMultiTexCoord4d(target:GL.Enum, s:GL.Double, t:GL.Double, r:GL.Double, q:GL.Double)
{
    fp_glMultiTexCoord4d = unsafeBitCast(get_fp("glMultiTexCoord4d", support: [ss349, ss369]), to: Swift.type(of: fp_glMultiTexCoord4d))
    fp_glMultiTexCoord4d(target, s, t, r, q)
}
public
func glMultiTexCoord4d(target:GL.Enum, s:GL.Double, t:GL.Double, r:GL.Double, q:GL.Double)
{
    fp_glMultiTexCoord4d(target, s, t, r, q)
}
public
func glMultiTexCoord4d(_ target:GL.Enum, _ s:GL.Double, _ t:GL.Double, _ r:GL.Double, _ q:GL.Double)
{
    fp_glMultiTexCoord4d(target, s, t, r, q)
}

var fp_glMultiTexCoord4dARB:@convention(c) (GL.Enum, GL.Double, GL.Double, GL.Double, GL.Double) -> () = load_glMultiTexCoord4dARB
func load_glMultiTexCoord4dARB(target:GL.Enum, s:GL.Double, t:GL.Double, r:GL.Double, q:GL.Double)
{
    fp_glMultiTexCoord4dARB = unsafeBitCast(get_fp("glMultiTexCoord4dARB", support: [ss70]), to: Swift.type(of: fp_glMultiTexCoord4dARB))
    fp_glMultiTexCoord4dARB(target, s, t, r, q)
}
public
func glMultiTexCoord4dARB(target:GL.Enum, s:GL.Double, t:GL.Double, r:GL.Double, q:GL.Double)
{
    fp_glMultiTexCoord4dARB(target, s, t, r, q)
}
public
func glMultiTexCoord4dARB(_ target:GL.Enum, _ s:GL.Double, _ t:GL.Double, _ r:GL.Double, _ q:GL.Double)
{
    fp_glMultiTexCoord4dARB(target, s, t, r, q)
}

var fp_glMultiTexCoord4dv:@convention(c) (GL.Enum, UnsafePointer<GL.Double>?) -> () = load_glMultiTexCoord4dv
func load_glMultiTexCoord4dv(target:GL.Enum, v:UnsafePointer<GL.Double>?)
{
    fp_glMultiTexCoord4dv = unsafeBitCast(get_fp("glMultiTexCoord4dv", support: [ss349, ss369]), to: Swift.type(of: fp_glMultiTexCoord4dv))
    fp_glMultiTexCoord4dv(target, v)
}
public
func glMultiTexCoord4dv(target:GL.Enum, v:UnsafePointer<GL.Double>?)
{
    fp_glMultiTexCoord4dv(target, v)
}
public
func glMultiTexCoord4dv(_ target:GL.Enum, _ v:UnsafePointer<GL.Double>?)
{
    fp_glMultiTexCoord4dv(target, v)
}

var fp_glMultiTexCoord4dvARB:@convention(c) (GL.Enum, UnsafePointer<GL.Double>?) -> () = load_glMultiTexCoord4dvARB
func load_glMultiTexCoord4dvARB(target:GL.Enum, v:UnsafePointer<GL.Double>?)
{
    fp_glMultiTexCoord4dvARB = unsafeBitCast(get_fp("glMultiTexCoord4dvARB", support: [ss70]), to: Swift.type(of: fp_glMultiTexCoord4dvARB))
    fp_glMultiTexCoord4dvARB(target, v)
}
public
func glMultiTexCoord4dvARB(target:GL.Enum, v:UnsafePointer<GL.Double>?)
{
    fp_glMultiTexCoord4dvARB(target, v)
}
public
func glMultiTexCoord4dvARB(_ target:GL.Enum, _ v:UnsafePointer<GL.Double>?)
{
    fp_glMultiTexCoord4dvARB(target, v)
}

var fp_glMultiTexCoord4f:@convention(c) (GL.Enum, GL.Float, GL.Float, GL.Float, GL.Float) -> () = load_glMultiTexCoord4f
func load_glMultiTexCoord4f(target:GL.Enum, s:GL.Float, t:GL.Float, r:GL.Float, q:GL.Float)
{
    fp_glMultiTexCoord4f = unsafeBitCast(get_fp("glMultiTexCoord4f", support: [ss349, ss369, ss364]), to: Swift.type(of: fp_glMultiTexCoord4f))
    fp_glMultiTexCoord4f(target, s, t, r, q)
}
public
func glMultiTexCoord4f(target:GL.Enum, s:GL.Float, t:GL.Float, r:GL.Float, q:GL.Float)
{
    fp_glMultiTexCoord4f(target, s, t, r, q)
}
public
func glMultiTexCoord4f(_ target:GL.Enum, _ s:GL.Float, _ t:GL.Float, _ r:GL.Float, _ q:GL.Float)
{
    fp_glMultiTexCoord4f(target, s, t, r, q)
}

var fp_glMultiTexCoord4fARB:@convention(c) (GL.Enum, GL.Float, GL.Float, GL.Float, GL.Float) -> () = load_glMultiTexCoord4fARB
func load_glMultiTexCoord4fARB(target:GL.Enum, s:GL.Float, t:GL.Float, r:GL.Float, q:GL.Float)
{
    fp_glMultiTexCoord4fARB = unsafeBitCast(get_fp("glMultiTexCoord4fARB", support: [ss70]), to: Swift.type(of: fp_glMultiTexCoord4fARB))
    fp_glMultiTexCoord4fARB(target, s, t, r, q)
}
public
func glMultiTexCoord4fARB(target:GL.Enum, s:GL.Float, t:GL.Float, r:GL.Float, q:GL.Float)
{
    fp_glMultiTexCoord4fARB(target, s, t, r, q)
}
public
func glMultiTexCoord4fARB(_ target:GL.Enum, _ s:GL.Float, _ t:GL.Float, _ r:GL.Float, _ q:GL.Float)
{
    fp_glMultiTexCoord4fARB(target, s, t, r, q)
}

var fp_glMultiTexCoord4fv:@convention(c) (GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glMultiTexCoord4fv
func load_glMultiTexCoord4fv(target:GL.Enum, v:UnsafePointer<GL.Float>?)
{
    fp_glMultiTexCoord4fv = unsafeBitCast(get_fp("glMultiTexCoord4fv", support: [ss349, ss369]), to: Swift.type(of: fp_glMultiTexCoord4fv))
    fp_glMultiTexCoord4fv(target, v)
}
public
func glMultiTexCoord4fv(target:GL.Enum, v:UnsafePointer<GL.Float>?)
{
    fp_glMultiTexCoord4fv(target, v)
}
public
func glMultiTexCoord4fv(_ target:GL.Enum, _ v:UnsafePointer<GL.Float>?)
{
    fp_glMultiTexCoord4fv(target, v)
}

var fp_glMultiTexCoord4fvARB:@convention(c) (GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glMultiTexCoord4fvARB
func load_glMultiTexCoord4fvARB(target:GL.Enum, v:UnsafePointer<GL.Float>?)
{
    fp_glMultiTexCoord4fvARB = unsafeBitCast(get_fp("glMultiTexCoord4fvARB", support: [ss70]), to: Swift.type(of: fp_glMultiTexCoord4fvARB))
    fp_glMultiTexCoord4fvARB(target, v)
}
public
func glMultiTexCoord4fvARB(target:GL.Enum, v:UnsafePointer<GL.Float>?)
{
    fp_glMultiTexCoord4fvARB(target, v)
}
public
func glMultiTexCoord4fvARB(_ target:GL.Enum, _ v:UnsafePointer<GL.Float>?)
{
    fp_glMultiTexCoord4fvARB(target, v)
}

var fp_glMultiTexCoord4hNV:@convention(c) (GL.Enum, GL.HalfNV, GL.HalfNV, GL.HalfNV, GL.HalfNV) -> () = load_glMultiTexCoord4hNV
func load_glMultiTexCoord4hNV(target:GL.Enum, s:GL.HalfNV, t:GL.HalfNV, r:GL.HalfNV, q:GL.HalfNV)
{
    fp_glMultiTexCoord4hNV = unsafeBitCast(get_fp("glMultiTexCoord4hNV", support: [ss253]), to: Swift.type(of: fp_glMultiTexCoord4hNV))
    fp_glMultiTexCoord4hNV(target, s, t, r, q)
}
public
func glMultiTexCoord4hNV(target:GL.Enum, s:GL.HalfNV, t:GL.HalfNV, r:GL.HalfNV, q:GL.HalfNV)
{
    fp_glMultiTexCoord4hNV(target, s, t, r, q)
}
public
func glMultiTexCoord4hNV(_ target:GL.Enum, _ s:GL.HalfNV, _ t:GL.HalfNV, _ r:GL.HalfNV, _ q:GL.HalfNV)
{
    fp_glMultiTexCoord4hNV(target, s, t, r, q)
}

var fp_glMultiTexCoord4hvNV:@convention(c) (GL.Enum, UnsafePointer<GL.HalfNV>?) -> () = load_glMultiTexCoord4hvNV
func load_glMultiTexCoord4hvNV(target:GL.Enum, v:UnsafePointer<GL.HalfNV>?)
{
    fp_glMultiTexCoord4hvNV = unsafeBitCast(get_fp("glMultiTexCoord4hvNV", support: [ss253]), to: Swift.type(of: fp_glMultiTexCoord4hvNV))
    fp_glMultiTexCoord4hvNV(target, v)
}
public
func glMultiTexCoord4hvNV(target:GL.Enum, v:UnsafePointer<GL.HalfNV>?)
{
    fp_glMultiTexCoord4hvNV(target, v)
}
public
func glMultiTexCoord4hvNV(_ target:GL.Enum, _ v:UnsafePointer<GL.HalfNV>?)
{
    fp_glMultiTexCoord4hvNV(target, v)
}

var fp_glMultiTexCoord4i:@convention(c) (GL.Enum, GL.Int, GL.Int, GL.Int, GL.Int) -> () = load_glMultiTexCoord4i
func load_glMultiTexCoord4i(target:GL.Enum, s:GL.Int, t:GL.Int, r:GL.Int, q:GL.Int)
{
    fp_glMultiTexCoord4i = unsafeBitCast(get_fp("glMultiTexCoord4i", support: [ss349, ss369]), to: Swift.type(of: fp_glMultiTexCoord4i))
    fp_glMultiTexCoord4i(target, s, t, r, q)
}
public
func glMultiTexCoord4i(target:GL.Enum, s:GL.Int, t:GL.Int, r:GL.Int, q:GL.Int)
{
    fp_glMultiTexCoord4i(target, s, t, r, q)
}
public
func glMultiTexCoord4i(_ target:GL.Enum, _ s:GL.Int, _ t:GL.Int, _ r:GL.Int, _ q:GL.Int)
{
    fp_glMultiTexCoord4i(target, s, t, r, q)
}

var fp_glMultiTexCoord4iARB:@convention(c) (GL.Enum, GL.Int, GL.Int, GL.Int, GL.Int) -> () = load_glMultiTexCoord4iARB
func load_glMultiTexCoord4iARB(target:GL.Enum, s:GL.Int, t:GL.Int, r:GL.Int, q:GL.Int)
{
    fp_glMultiTexCoord4iARB = unsafeBitCast(get_fp("glMultiTexCoord4iARB", support: [ss70]), to: Swift.type(of: fp_glMultiTexCoord4iARB))
    fp_glMultiTexCoord4iARB(target, s, t, r, q)
}
public
func glMultiTexCoord4iARB(target:GL.Enum, s:GL.Int, t:GL.Int, r:GL.Int, q:GL.Int)
{
    fp_glMultiTexCoord4iARB(target, s, t, r, q)
}
public
func glMultiTexCoord4iARB(_ target:GL.Enum, _ s:GL.Int, _ t:GL.Int, _ r:GL.Int, _ q:GL.Int)
{
    fp_glMultiTexCoord4iARB(target, s, t, r, q)
}

var fp_glMultiTexCoord4iv:@convention(c) (GL.Enum, UnsafePointer<GL.Int>?) -> () = load_glMultiTexCoord4iv
func load_glMultiTexCoord4iv(target:GL.Enum, v:UnsafePointer<GL.Int>?)
{
    fp_glMultiTexCoord4iv = unsafeBitCast(get_fp("glMultiTexCoord4iv", support: [ss349, ss369]), to: Swift.type(of: fp_glMultiTexCoord4iv))
    fp_glMultiTexCoord4iv(target, v)
}
public
func glMultiTexCoord4iv(target:GL.Enum, v:UnsafePointer<GL.Int>?)
{
    fp_glMultiTexCoord4iv(target, v)
}
public
func glMultiTexCoord4iv(_ target:GL.Enum, _ v:UnsafePointer<GL.Int>?)
{
    fp_glMultiTexCoord4iv(target, v)
}

var fp_glMultiTexCoord4ivARB:@convention(c) (GL.Enum, UnsafePointer<GL.Int>?) -> () = load_glMultiTexCoord4ivARB
func load_glMultiTexCoord4ivARB(target:GL.Enum, v:UnsafePointer<GL.Int>?)
{
    fp_glMultiTexCoord4ivARB = unsafeBitCast(get_fp("glMultiTexCoord4ivARB", support: [ss70]), to: Swift.type(of: fp_glMultiTexCoord4ivARB))
    fp_glMultiTexCoord4ivARB(target, v)
}
public
func glMultiTexCoord4ivARB(target:GL.Enum, v:UnsafePointer<GL.Int>?)
{
    fp_glMultiTexCoord4ivARB(target, v)
}
public
func glMultiTexCoord4ivARB(_ target:GL.Enum, _ v:UnsafePointer<GL.Int>?)
{
    fp_glMultiTexCoord4ivARB(target, v)
}

var fp_glMultiTexCoord4s:@convention(c) (GL.Enum, GL.Short, GL.Short, GL.Short, GL.Short) -> () = load_glMultiTexCoord4s
func load_glMultiTexCoord4s(target:GL.Enum, s:GL.Short, t:GL.Short, r:GL.Short, q:GL.Short)
{
    fp_glMultiTexCoord4s = unsafeBitCast(get_fp("glMultiTexCoord4s", support: [ss349, ss369]), to: Swift.type(of: fp_glMultiTexCoord4s))
    fp_glMultiTexCoord4s(target, s, t, r, q)
}
public
func glMultiTexCoord4s(target:GL.Enum, s:GL.Short, t:GL.Short, r:GL.Short, q:GL.Short)
{
    fp_glMultiTexCoord4s(target, s, t, r, q)
}
public
func glMultiTexCoord4s(_ target:GL.Enum, _ s:GL.Short, _ t:GL.Short, _ r:GL.Short, _ q:GL.Short)
{
    fp_glMultiTexCoord4s(target, s, t, r, q)
}

var fp_glMultiTexCoord4sARB:@convention(c) (GL.Enum, GL.Short, GL.Short, GL.Short, GL.Short) -> () = load_glMultiTexCoord4sARB
func load_glMultiTexCoord4sARB(target:GL.Enum, s:GL.Short, t:GL.Short, r:GL.Short, q:GL.Short)
{
    fp_glMultiTexCoord4sARB = unsafeBitCast(get_fp("glMultiTexCoord4sARB", support: [ss70]), to: Swift.type(of: fp_glMultiTexCoord4sARB))
    fp_glMultiTexCoord4sARB(target, s, t, r, q)
}
public
func glMultiTexCoord4sARB(target:GL.Enum, s:GL.Short, t:GL.Short, r:GL.Short, q:GL.Short)
{
    fp_glMultiTexCoord4sARB(target, s, t, r, q)
}
public
func glMultiTexCoord4sARB(_ target:GL.Enum, _ s:GL.Short, _ t:GL.Short, _ r:GL.Short, _ q:GL.Short)
{
    fp_glMultiTexCoord4sARB(target, s, t, r, q)
}

var fp_glMultiTexCoord4sv:@convention(c) (GL.Enum, UnsafePointer<GL.Short>?) -> () = load_glMultiTexCoord4sv
func load_glMultiTexCoord4sv(target:GL.Enum, v:UnsafePointer<GL.Short>?)
{
    fp_glMultiTexCoord4sv = unsafeBitCast(get_fp("glMultiTexCoord4sv", support: [ss349, ss369]), to: Swift.type(of: fp_glMultiTexCoord4sv))
    fp_glMultiTexCoord4sv(target, v)
}
public
func glMultiTexCoord4sv(target:GL.Enum, v:UnsafePointer<GL.Short>?)
{
    fp_glMultiTexCoord4sv(target, v)
}
public
func glMultiTexCoord4sv(_ target:GL.Enum, _ v:UnsafePointer<GL.Short>?)
{
    fp_glMultiTexCoord4sv(target, v)
}

var fp_glMultiTexCoord4svARB:@convention(c) (GL.Enum, UnsafePointer<GL.Short>?) -> () = load_glMultiTexCoord4svARB
func load_glMultiTexCoord4svARB(target:GL.Enum, v:UnsafePointer<GL.Short>?)
{
    fp_glMultiTexCoord4svARB = unsafeBitCast(get_fp("glMultiTexCoord4svARB", support: [ss70]), to: Swift.type(of: fp_glMultiTexCoord4svARB))
    fp_glMultiTexCoord4svARB(target, v)
}
public
func glMultiTexCoord4svARB(target:GL.Enum, v:UnsafePointer<GL.Short>?)
{
    fp_glMultiTexCoord4svARB(target, v)
}
public
func glMultiTexCoord4svARB(_ target:GL.Enum, _ v:UnsafePointer<GL.Short>?)
{
    fp_glMultiTexCoord4svARB(target, v)
}

var fp_glMultiTexCoord4x:@convention(c) (GL.Enum, GL.Fixed, GL.Fixed, GL.Fixed, GL.Fixed) -> () = load_glMultiTexCoord4x
func load_glMultiTexCoord4x(texture:GL.Enum, s:GL.Fixed, t:GL.Fixed, r:GL.Fixed, q:GL.Fixed)
{
    fp_glMultiTexCoord4x = unsafeBitCast(get_fp("glMultiTexCoord4x", support: [ss364]), to: Swift.type(of: fp_glMultiTexCoord4x))
    fp_glMultiTexCoord4x(texture, s, t, r, q)
}
public
func glMultiTexCoord4x(texture:GL.Enum, s:GL.Fixed, t:GL.Fixed, r:GL.Fixed, q:GL.Fixed)
{
    fp_glMultiTexCoord4x(texture, s, t, r, q)
}
public
func glMultiTexCoord4x(_ texture:GL.Enum, _ s:GL.Fixed, _ t:GL.Fixed, _ r:GL.Fixed, _ q:GL.Fixed)
{
    fp_glMultiTexCoord4x(texture, s, t, r, q)
}

var fp_glMultiTexCoord4xOES:@convention(c) (GL.Enum, GL.Fixed, GL.Fixed, GL.Fixed, GL.Fixed) -> () = load_glMultiTexCoord4xOES
func load_glMultiTexCoord4xOES(texture:GL.Enum, s:GL.Fixed, t:GL.Fixed, r:GL.Fixed, q:GL.Fixed)
{
    fp_glMultiTexCoord4xOES = unsafeBitCast(get_fp("glMultiTexCoord4xOES", support: [ss292]), to: Swift.type(of: fp_glMultiTexCoord4xOES))
    fp_glMultiTexCoord4xOES(texture, s, t, r, q)
}
public
func glMultiTexCoord4xOES(texture:GL.Enum, s:GL.Fixed, t:GL.Fixed, r:GL.Fixed, q:GL.Fixed)
{
    fp_glMultiTexCoord4xOES(texture, s, t, r, q)
}
public
func glMultiTexCoord4xOES(_ texture:GL.Enum, _ s:GL.Fixed, _ t:GL.Fixed, _ r:GL.Fixed, _ q:GL.Fixed)
{
    fp_glMultiTexCoord4xOES(texture, s, t, r, q)
}

var fp_glMultiTexCoord4xvOES:@convention(c) (GL.Enum, UnsafePointer<GL.Fixed>?) -> () = load_glMultiTexCoord4xvOES
func load_glMultiTexCoord4xvOES(texture:GL.Enum, coords:UnsafePointer<GL.Fixed>?)
{
    fp_glMultiTexCoord4xvOES = unsafeBitCast(get_fp("glMultiTexCoord4xvOES", support: [ss292]), to: Swift.type(of: fp_glMultiTexCoord4xvOES))
    fp_glMultiTexCoord4xvOES(texture, coords)
}
public
func glMultiTexCoord4xvOES(texture:GL.Enum, coords:UnsafePointer<GL.Fixed>?)
{
    fp_glMultiTexCoord4xvOES(texture, coords)
}
public
func glMultiTexCoord4xvOES(_ texture:GL.Enum, _ coords:UnsafePointer<GL.Fixed>?)
{
    fp_glMultiTexCoord4xvOES(texture, coords)
}

var fp_glMultiTexCoordP1ui:@convention(c) (GL.Enum, GL.Enum, GL.UInt) -> () = load_glMultiTexCoordP1ui
func load_glMultiTexCoordP1ui(texture:GL.Enum, type:GL.Enum, coords:GL.UInt)
{
    fp_glMultiTexCoordP1ui = unsafeBitCast(get_fp("glMultiTexCoordP1ui", support: [ss357, ss112]), to: Swift.type(of: fp_glMultiTexCoordP1ui))
    fp_glMultiTexCoordP1ui(texture, type, coords)
}
public
func glMultiTexCoordP1ui(texture:GL.Enum, type:GL.Enum, coords:GL.UInt)
{
    fp_glMultiTexCoordP1ui(texture, type, coords)
}
public
func glMultiTexCoordP1ui(_ texture:GL.Enum, _ type:GL.Enum, _ coords:GL.UInt)
{
    fp_glMultiTexCoordP1ui(texture, type, coords)
}

var fp_glMultiTexCoordP1uiv:@convention(c) (GL.Enum, GL.Enum, UnsafePointer<GL.UInt>?) -> () = load_glMultiTexCoordP1uiv
func load_glMultiTexCoordP1uiv(texture:GL.Enum, type:GL.Enum, coords:UnsafePointer<GL.UInt>?)
{
    fp_glMultiTexCoordP1uiv = unsafeBitCast(get_fp("glMultiTexCoordP1uiv", support: [ss357, ss112]), to: Swift.type(of: fp_glMultiTexCoordP1uiv))
    fp_glMultiTexCoordP1uiv(texture, type, coords)
}
public
func glMultiTexCoordP1uiv(texture:GL.Enum, type:GL.Enum, coords:UnsafePointer<GL.UInt>?)
{
    fp_glMultiTexCoordP1uiv(texture, type, coords)
}
public
func glMultiTexCoordP1uiv(_ texture:GL.Enum, _ type:GL.Enum, _ coords:UnsafePointer<GL.UInt>?)
{
    fp_glMultiTexCoordP1uiv(texture, type, coords)
}

var fp_glMultiTexCoordP2ui:@convention(c) (GL.Enum, GL.Enum, GL.UInt) -> () = load_glMultiTexCoordP2ui
func load_glMultiTexCoordP2ui(texture:GL.Enum, type:GL.Enum, coords:GL.UInt)
{
    fp_glMultiTexCoordP2ui = unsafeBitCast(get_fp("glMultiTexCoordP2ui", support: [ss357, ss112]), to: Swift.type(of: fp_glMultiTexCoordP2ui))
    fp_glMultiTexCoordP2ui(texture, type, coords)
}
public
func glMultiTexCoordP2ui(texture:GL.Enum, type:GL.Enum, coords:GL.UInt)
{
    fp_glMultiTexCoordP2ui(texture, type, coords)
}
public
func glMultiTexCoordP2ui(_ texture:GL.Enum, _ type:GL.Enum, _ coords:GL.UInt)
{
    fp_glMultiTexCoordP2ui(texture, type, coords)
}

var fp_glMultiTexCoordP2uiv:@convention(c) (GL.Enum, GL.Enum, UnsafePointer<GL.UInt>?) -> () = load_glMultiTexCoordP2uiv
func load_glMultiTexCoordP2uiv(texture:GL.Enum, type:GL.Enum, coords:UnsafePointer<GL.UInt>?)
{
    fp_glMultiTexCoordP2uiv = unsafeBitCast(get_fp("glMultiTexCoordP2uiv", support: [ss357, ss112]), to: Swift.type(of: fp_glMultiTexCoordP2uiv))
    fp_glMultiTexCoordP2uiv(texture, type, coords)
}
public
func glMultiTexCoordP2uiv(texture:GL.Enum, type:GL.Enum, coords:UnsafePointer<GL.UInt>?)
{
    fp_glMultiTexCoordP2uiv(texture, type, coords)
}
public
func glMultiTexCoordP2uiv(_ texture:GL.Enum, _ type:GL.Enum, _ coords:UnsafePointer<GL.UInt>?)
{
    fp_glMultiTexCoordP2uiv(texture, type, coords)
}

var fp_glMultiTexCoordP3ui:@convention(c) (GL.Enum, GL.Enum, GL.UInt) -> () = load_glMultiTexCoordP3ui
func load_glMultiTexCoordP3ui(texture:GL.Enum, type:GL.Enum, coords:GL.UInt)
{
    fp_glMultiTexCoordP3ui = unsafeBitCast(get_fp("glMultiTexCoordP3ui", support: [ss357, ss112]), to: Swift.type(of: fp_glMultiTexCoordP3ui))
    fp_glMultiTexCoordP3ui(texture, type, coords)
}
public
func glMultiTexCoordP3ui(texture:GL.Enum, type:GL.Enum, coords:GL.UInt)
{
    fp_glMultiTexCoordP3ui(texture, type, coords)
}
public
func glMultiTexCoordP3ui(_ texture:GL.Enum, _ type:GL.Enum, _ coords:GL.UInt)
{
    fp_glMultiTexCoordP3ui(texture, type, coords)
}

var fp_glMultiTexCoordP3uiv:@convention(c) (GL.Enum, GL.Enum, UnsafePointer<GL.UInt>?) -> () = load_glMultiTexCoordP3uiv
func load_glMultiTexCoordP3uiv(texture:GL.Enum, type:GL.Enum, coords:UnsafePointer<GL.UInt>?)
{
    fp_glMultiTexCoordP3uiv = unsafeBitCast(get_fp("glMultiTexCoordP3uiv", support: [ss357, ss112]), to: Swift.type(of: fp_glMultiTexCoordP3uiv))
    fp_glMultiTexCoordP3uiv(texture, type, coords)
}
public
func glMultiTexCoordP3uiv(texture:GL.Enum, type:GL.Enum, coords:UnsafePointer<GL.UInt>?)
{
    fp_glMultiTexCoordP3uiv(texture, type, coords)
}
public
func glMultiTexCoordP3uiv(_ texture:GL.Enum, _ type:GL.Enum, _ coords:UnsafePointer<GL.UInt>?)
{
    fp_glMultiTexCoordP3uiv(texture, type, coords)
}

var fp_glMultiTexCoordP4ui:@convention(c) (GL.Enum, GL.Enum, GL.UInt) -> () = load_glMultiTexCoordP4ui
func load_glMultiTexCoordP4ui(texture:GL.Enum, type:GL.Enum, coords:GL.UInt)
{
    fp_glMultiTexCoordP4ui = unsafeBitCast(get_fp("glMultiTexCoordP4ui", support: [ss357, ss112]), to: Swift.type(of: fp_glMultiTexCoordP4ui))
    fp_glMultiTexCoordP4ui(texture, type, coords)
}
public
func glMultiTexCoordP4ui(texture:GL.Enum, type:GL.Enum, coords:GL.UInt)
{
    fp_glMultiTexCoordP4ui(texture, type, coords)
}
public
func glMultiTexCoordP4ui(_ texture:GL.Enum, _ type:GL.Enum, _ coords:GL.UInt)
{
    fp_glMultiTexCoordP4ui(texture, type, coords)
}

var fp_glMultiTexCoordP4uiv:@convention(c) (GL.Enum, GL.Enum, UnsafePointer<GL.UInt>?) -> () = load_glMultiTexCoordP4uiv
func load_glMultiTexCoordP4uiv(texture:GL.Enum, type:GL.Enum, coords:UnsafePointer<GL.UInt>?)
{
    fp_glMultiTexCoordP4uiv = unsafeBitCast(get_fp("glMultiTexCoordP4uiv", support: [ss357, ss112]), to: Swift.type(of: fp_glMultiTexCoordP4uiv))
    fp_glMultiTexCoordP4uiv(texture, type, coords)
}
public
func glMultiTexCoordP4uiv(texture:GL.Enum, type:GL.Enum, coords:UnsafePointer<GL.UInt>?)
{
    fp_glMultiTexCoordP4uiv(texture, type, coords)
}
public
func glMultiTexCoordP4uiv(_ texture:GL.Enum, _ type:GL.Enum, _ coords:UnsafePointer<GL.UInt>?)
{
    fp_glMultiTexCoordP4uiv(texture, type, coords)
}

var fp_glMultiTexCoordPointerEXT:@convention(c) (GL.Enum, GL.Int, GL.Enum, GL.Size, UnsafeRawPointer?) -> () = load_glMultiTexCoordPointerEXT
func load_glMultiTexCoordPointerEXT(texunit:GL.Enum, size:GL.Int, type:GL.Enum, stride:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glMultiTexCoordPointerEXT = unsafeBitCast(get_fp("glMultiTexCoordPointerEXT", support: [ss143]), to: Swift.type(of: fp_glMultiTexCoordPointerEXT))
    fp_glMultiTexCoordPointerEXT(texunit, size, type, stride, pointer)
}
public
func glMultiTexCoordPointerEXT(texunit:GL.Enum, size:GL.Int, type:GL.Enum, stride:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glMultiTexCoordPointerEXT(texunit, size, type, stride, pointer)
}
public
func glMultiTexCoordPointerEXT(_ texunit:GL.Enum, _ size:GL.Int, _ type:GL.Enum, _ stride:GL.Size, _ pointer:UnsafeRawPointer?)
{
    fp_glMultiTexCoordPointerEXT(texunit, size, type, stride, pointer)
}

var fp_glMultiTexEnvfEXT:@convention(c) (GL.Enum, GL.Enum, GL.Enum, GL.Float) -> () = load_glMultiTexEnvfEXT
func load_glMultiTexEnvfEXT(texunit:GL.Enum, target:GL.Enum, pname:GL.Enum, param:GL.Float)
{
    fp_glMultiTexEnvfEXT = unsafeBitCast(get_fp("glMultiTexEnvfEXT", support: [ss143]), to: Swift.type(of: fp_glMultiTexEnvfEXT))
    fp_glMultiTexEnvfEXT(texunit, target, pname, param)
}
public
func glMultiTexEnvfEXT(texunit:GL.Enum, target:GL.Enum, pname:GL.Enum, param:GL.Float)
{
    fp_glMultiTexEnvfEXT(texunit, target, pname, param)
}
public
func glMultiTexEnvfEXT(_ texunit:GL.Enum, _ target:GL.Enum, _ pname:GL.Enum, _ param:GL.Float)
{
    fp_glMultiTexEnvfEXT(texunit, target, pname, param)
}

var fp_glMultiTexEnvfvEXT:@convention(c) (GL.Enum, GL.Enum, GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glMultiTexEnvfvEXT
func load_glMultiTexEnvfvEXT(texunit:GL.Enum, target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glMultiTexEnvfvEXT = unsafeBitCast(get_fp("glMultiTexEnvfvEXT", support: [ss143]), to: Swift.type(of: fp_glMultiTexEnvfvEXT))
    fp_glMultiTexEnvfvEXT(texunit, target, pname, params)
}
public
func glMultiTexEnvfvEXT(texunit:GL.Enum, target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glMultiTexEnvfvEXT(texunit, target, pname, params)
}
public
func glMultiTexEnvfvEXT(_ texunit:GL.Enum, _ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.Float>?)
{
    fp_glMultiTexEnvfvEXT(texunit, target, pname, params)
}

var fp_glMultiTexEnviEXT:@convention(c) (GL.Enum, GL.Enum, GL.Enum, GL.Int) -> () = load_glMultiTexEnviEXT
func load_glMultiTexEnviEXT(texunit:GL.Enum, target:GL.Enum, pname:GL.Enum, param:GL.Int)
{
    fp_glMultiTexEnviEXT = unsafeBitCast(get_fp("glMultiTexEnviEXT", support: [ss143]), to: Swift.type(of: fp_glMultiTexEnviEXT))
    fp_glMultiTexEnviEXT(texunit, target, pname, param)
}
public
func glMultiTexEnviEXT(texunit:GL.Enum, target:GL.Enum, pname:GL.Enum, param:GL.Int)
{
    fp_glMultiTexEnviEXT(texunit, target, pname, param)
}
public
func glMultiTexEnviEXT(_ texunit:GL.Enum, _ target:GL.Enum, _ pname:GL.Enum, _ param:GL.Int)
{
    fp_glMultiTexEnviEXT(texunit, target, pname, param)
}

var fp_glMultiTexEnvivEXT:@convention(c) (GL.Enum, GL.Enum, GL.Enum, UnsafePointer<GL.Int>?) -> () = load_glMultiTexEnvivEXT
func load_glMultiTexEnvivEXT(texunit:GL.Enum, target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glMultiTexEnvivEXT = unsafeBitCast(get_fp("glMultiTexEnvivEXT", support: [ss143]), to: Swift.type(of: fp_glMultiTexEnvivEXT))
    fp_glMultiTexEnvivEXT(texunit, target, pname, params)
}
public
func glMultiTexEnvivEXT(texunit:GL.Enum, target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glMultiTexEnvivEXT(texunit, target, pname, params)
}
public
func glMultiTexEnvivEXT(_ texunit:GL.Enum, _ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.Int>?)
{
    fp_glMultiTexEnvivEXT(texunit, target, pname, params)
}

var fp_glMultiTexGendEXT:@convention(c) (GL.Enum, GL.Enum, GL.Enum, GL.Double) -> () = load_glMultiTexGendEXT
func load_glMultiTexGendEXT(texunit:GL.Enum, coord:GL.Enum, pname:GL.Enum, param:GL.Double)
{
    fp_glMultiTexGendEXT = unsafeBitCast(get_fp("glMultiTexGendEXT", support: [ss143]), to: Swift.type(of: fp_glMultiTexGendEXT))
    fp_glMultiTexGendEXT(texunit, coord, pname, param)
}
public
func glMultiTexGendEXT(texunit:GL.Enum, coord:GL.Enum, pname:GL.Enum, param:GL.Double)
{
    fp_glMultiTexGendEXT(texunit, coord, pname, param)
}
public
func glMultiTexGendEXT(_ texunit:GL.Enum, _ coord:GL.Enum, _ pname:GL.Enum, _ param:GL.Double)
{
    fp_glMultiTexGendEXT(texunit, coord, pname, param)
}

var fp_glMultiTexGendvEXT:@convention(c) (GL.Enum, GL.Enum, GL.Enum, UnsafePointer<GL.Double>?) -> () = load_glMultiTexGendvEXT
func load_glMultiTexGendvEXT(texunit:GL.Enum, coord:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Double>?)
{
    fp_glMultiTexGendvEXT = unsafeBitCast(get_fp("glMultiTexGendvEXT", support: [ss143]), to: Swift.type(of: fp_glMultiTexGendvEXT))
    fp_glMultiTexGendvEXT(texunit, coord, pname, params)
}
public
func glMultiTexGendvEXT(texunit:GL.Enum, coord:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Double>?)
{
    fp_glMultiTexGendvEXT(texunit, coord, pname, params)
}
public
func glMultiTexGendvEXT(_ texunit:GL.Enum, _ coord:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.Double>?)
{
    fp_glMultiTexGendvEXT(texunit, coord, pname, params)
}

var fp_glMultiTexGenfEXT:@convention(c) (GL.Enum, GL.Enum, GL.Enum, GL.Float) -> () = load_glMultiTexGenfEXT
func load_glMultiTexGenfEXT(texunit:GL.Enum, coord:GL.Enum, pname:GL.Enum, param:GL.Float)
{
    fp_glMultiTexGenfEXT = unsafeBitCast(get_fp("glMultiTexGenfEXT", support: [ss143]), to: Swift.type(of: fp_glMultiTexGenfEXT))
    fp_glMultiTexGenfEXT(texunit, coord, pname, param)
}
public
func glMultiTexGenfEXT(texunit:GL.Enum, coord:GL.Enum, pname:GL.Enum, param:GL.Float)
{
    fp_glMultiTexGenfEXT(texunit, coord, pname, param)
}
public
func glMultiTexGenfEXT(_ texunit:GL.Enum, _ coord:GL.Enum, _ pname:GL.Enum, _ param:GL.Float)
{
    fp_glMultiTexGenfEXT(texunit, coord, pname, param)
}

var fp_glMultiTexGenfvEXT:@convention(c) (GL.Enum, GL.Enum, GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glMultiTexGenfvEXT
func load_glMultiTexGenfvEXT(texunit:GL.Enum, coord:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glMultiTexGenfvEXT = unsafeBitCast(get_fp("glMultiTexGenfvEXT", support: [ss143]), to: Swift.type(of: fp_glMultiTexGenfvEXT))
    fp_glMultiTexGenfvEXT(texunit, coord, pname, params)
}
public
func glMultiTexGenfvEXT(texunit:GL.Enum, coord:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glMultiTexGenfvEXT(texunit, coord, pname, params)
}
public
func glMultiTexGenfvEXT(_ texunit:GL.Enum, _ coord:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.Float>?)
{
    fp_glMultiTexGenfvEXT(texunit, coord, pname, params)
}

var fp_glMultiTexGeniEXT:@convention(c) (GL.Enum, GL.Enum, GL.Enum, GL.Int) -> () = load_glMultiTexGeniEXT
func load_glMultiTexGeniEXT(texunit:GL.Enum, coord:GL.Enum, pname:GL.Enum, param:GL.Int)
{
    fp_glMultiTexGeniEXT = unsafeBitCast(get_fp("glMultiTexGeniEXT", support: [ss143]), to: Swift.type(of: fp_glMultiTexGeniEXT))
    fp_glMultiTexGeniEXT(texunit, coord, pname, param)
}
public
func glMultiTexGeniEXT(texunit:GL.Enum, coord:GL.Enum, pname:GL.Enum, param:GL.Int)
{
    fp_glMultiTexGeniEXT(texunit, coord, pname, param)
}
public
func glMultiTexGeniEXT(_ texunit:GL.Enum, _ coord:GL.Enum, _ pname:GL.Enum, _ param:GL.Int)
{
    fp_glMultiTexGeniEXT(texunit, coord, pname, param)
}

var fp_glMultiTexGenivEXT:@convention(c) (GL.Enum, GL.Enum, GL.Enum, UnsafePointer<GL.Int>?) -> () = load_glMultiTexGenivEXT
func load_glMultiTexGenivEXT(texunit:GL.Enum, coord:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glMultiTexGenivEXT = unsafeBitCast(get_fp("glMultiTexGenivEXT", support: [ss143]), to: Swift.type(of: fp_glMultiTexGenivEXT))
    fp_glMultiTexGenivEXT(texunit, coord, pname, params)
}
public
func glMultiTexGenivEXT(texunit:GL.Enum, coord:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glMultiTexGenivEXT(texunit, coord, pname, params)
}
public
func glMultiTexGenivEXT(_ texunit:GL.Enum, _ coord:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.Int>?)
{
    fp_glMultiTexGenivEXT(texunit, coord, pname, params)
}

var fp_glMultiTexImage1DEXT:@convention(c) (GL.Enum, GL.Enum, GL.Int, GL.Int, GL.Size, GL.Int, GL.Enum, GL.Enum, UnsafeRawPointer?) -> () = load_glMultiTexImage1DEXT
func load_glMultiTexImage1DEXT(texunit:GL.Enum, target:GL.Enum, level:GL.Int, internalformat:GL.Int, width:GL.Size, border:GL.Int, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glMultiTexImage1DEXT = unsafeBitCast(get_fp("glMultiTexImage1DEXT", support: [ss143]), to: Swift.type(of: fp_glMultiTexImage1DEXT))
    fp_glMultiTexImage1DEXT(texunit, target, level, internalformat, width, border, format, type, pixels)
}
public
func glMultiTexImage1DEXT(texunit:GL.Enum, target:GL.Enum, level:GL.Int, internalformat:GL.Int, width:GL.Size, border:GL.Int, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glMultiTexImage1DEXT(texunit, target, level, internalformat, width, border, format, type, pixels)
}
public
func glMultiTexImage1DEXT(_ texunit:GL.Enum, _ target:GL.Enum, _ level:GL.Int, _ internalformat:GL.Int, _ width:GL.Size, _ border:GL.Int, _ format:GL.Enum, _ type:GL.Enum, _ pixels:UnsafeRawPointer?)
{
    fp_glMultiTexImage1DEXT(texunit, target, level, internalformat, width, border, format, type, pixels)
}

var fp_glMultiTexImage2DEXT:@convention(c) (GL.Enum, GL.Enum, GL.Int, GL.Int, GL.Size, GL.Size, GL.Int, GL.Enum, GL.Enum, UnsafeRawPointer?) -> () = load_glMultiTexImage2DEXT
func load_glMultiTexImage2DEXT(texunit:GL.Enum, target:GL.Enum, level:GL.Int, internalformat:GL.Int, width:GL.Size, height:GL.Size, border:GL.Int, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glMultiTexImage2DEXT = unsafeBitCast(get_fp("glMultiTexImage2DEXT", support: [ss143]), to: Swift.type(of: fp_glMultiTexImage2DEXT))
    fp_glMultiTexImage2DEXT(texunit, target, level, internalformat, width, height, border, format, type, pixels)
}
public
func glMultiTexImage2DEXT(texunit:GL.Enum, target:GL.Enum, level:GL.Int, internalformat:GL.Int, width:GL.Size, height:GL.Size, border:GL.Int, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glMultiTexImage2DEXT(texunit, target, level, internalformat, width, height, border, format, type, pixels)
}
public
func glMultiTexImage2DEXT(_ texunit:GL.Enum, _ target:GL.Enum, _ level:GL.Int, _ internalformat:GL.Int, _ width:GL.Size, _ height:GL.Size, _ border:GL.Int, _ format:GL.Enum, _ type:GL.Enum, _ pixels:UnsafeRawPointer?)
{
    fp_glMultiTexImage2DEXT(texunit, target, level, internalformat, width, height, border, format, type, pixels)
}

var fp_glMultiTexImage3DEXT:@convention(c) (GL.Enum, GL.Enum, GL.Int, GL.Int, GL.Size, GL.Size, GL.Size, GL.Int, GL.Enum, GL.Enum, UnsafeRawPointer?) -> () = load_glMultiTexImage3DEXT
func load_glMultiTexImage3DEXT(texunit:GL.Enum, target:GL.Enum, level:GL.Int, internalformat:GL.Int, width:GL.Size, height:GL.Size, depth:GL.Size, border:GL.Int, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glMultiTexImage3DEXT = unsafeBitCast(get_fp("glMultiTexImage3DEXT", support: [ss143]), to: Swift.type(of: fp_glMultiTexImage3DEXT))
    fp_glMultiTexImage3DEXT(texunit, target, level, internalformat, width, height, depth, border, format, type, pixels)
}
public
func glMultiTexImage3DEXT(texunit:GL.Enum, target:GL.Enum, level:GL.Int, internalformat:GL.Int, width:GL.Size, height:GL.Size, depth:GL.Size, border:GL.Int, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glMultiTexImage3DEXT(texunit, target, level, internalformat, width, height, depth, border, format, type, pixels)
}
public
func glMultiTexImage3DEXT(_ texunit:GL.Enum, _ target:GL.Enum, _ level:GL.Int, _ internalformat:GL.Int, _ width:GL.Size, _ height:GL.Size, _ depth:GL.Size, _ border:GL.Int, _ format:GL.Enum, _ type:GL.Enum, _ pixels:UnsafeRawPointer?)
{
    fp_glMultiTexImage3DEXT(texunit, target, level, internalformat, width, height, depth, border, format, type, pixels)
}

var fp_glMultiTexParameterIivEXT:@convention(c) (GL.Enum, GL.Enum, GL.Enum, UnsafePointer<GL.Int>?) -> () = load_glMultiTexParameterIivEXT
func load_glMultiTexParameterIivEXT(texunit:GL.Enum, target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glMultiTexParameterIivEXT = unsafeBitCast(get_fp("glMultiTexParameterIivEXT", support: [ss143]), to: Swift.type(of: fp_glMultiTexParameterIivEXT))
    fp_glMultiTexParameterIivEXT(texunit, target, pname, params)
}
public
func glMultiTexParameterIivEXT(texunit:GL.Enum, target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glMultiTexParameterIivEXT(texunit, target, pname, params)
}
public
func glMultiTexParameterIivEXT(_ texunit:GL.Enum, _ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.Int>?)
{
    fp_glMultiTexParameterIivEXT(texunit, target, pname, params)
}

var fp_glMultiTexParameterIuivEXT:@convention(c) (GL.Enum, GL.Enum, GL.Enum, UnsafePointer<GL.UInt>?) -> () = load_glMultiTexParameterIuivEXT
func load_glMultiTexParameterIuivEXT(texunit:GL.Enum, target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.UInt>?)
{
    fp_glMultiTexParameterIuivEXT = unsafeBitCast(get_fp("glMultiTexParameterIuivEXT", support: [ss143]), to: Swift.type(of: fp_glMultiTexParameterIuivEXT))
    fp_glMultiTexParameterIuivEXT(texunit, target, pname, params)
}
public
func glMultiTexParameterIuivEXT(texunit:GL.Enum, target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.UInt>?)
{
    fp_glMultiTexParameterIuivEXT(texunit, target, pname, params)
}
public
func glMultiTexParameterIuivEXT(_ texunit:GL.Enum, _ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.UInt>?)
{
    fp_glMultiTexParameterIuivEXT(texunit, target, pname, params)
}

var fp_glMultiTexParameterfEXT:@convention(c) (GL.Enum, GL.Enum, GL.Enum, GL.Float) -> () = load_glMultiTexParameterfEXT
func load_glMultiTexParameterfEXT(texunit:GL.Enum, target:GL.Enum, pname:GL.Enum, param:GL.Float)
{
    fp_glMultiTexParameterfEXT = unsafeBitCast(get_fp("glMultiTexParameterfEXT", support: [ss143]), to: Swift.type(of: fp_glMultiTexParameterfEXT))
    fp_glMultiTexParameterfEXT(texunit, target, pname, param)
}
public
func glMultiTexParameterfEXT(texunit:GL.Enum, target:GL.Enum, pname:GL.Enum, param:GL.Float)
{
    fp_glMultiTexParameterfEXT(texunit, target, pname, param)
}
public
func glMultiTexParameterfEXT(_ texunit:GL.Enum, _ target:GL.Enum, _ pname:GL.Enum, _ param:GL.Float)
{
    fp_glMultiTexParameterfEXT(texunit, target, pname, param)
}

var fp_glMultiTexParameterfvEXT:@convention(c) (GL.Enum, GL.Enum, GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glMultiTexParameterfvEXT
func load_glMultiTexParameterfvEXT(texunit:GL.Enum, target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glMultiTexParameterfvEXT = unsafeBitCast(get_fp("glMultiTexParameterfvEXT", support: [ss143]), to: Swift.type(of: fp_glMultiTexParameterfvEXT))
    fp_glMultiTexParameterfvEXT(texunit, target, pname, params)
}
public
func glMultiTexParameterfvEXT(texunit:GL.Enum, target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glMultiTexParameterfvEXT(texunit, target, pname, params)
}
public
func glMultiTexParameterfvEXT(_ texunit:GL.Enum, _ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.Float>?)
{
    fp_glMultiTexParameterfvEXT(texunit, target, pname, params)
}

var fp_glMultiTexParameteriEXT:@convention(c) (GL.Enum, GL.Enum, GL.Enum, GL.Int) -> () = load_glMultiTexParameteriEXT
func load_glMultiTexParameteriEXT(texunit:GL.Enum, target:GL.Enum, pname:GL.Enum, param:GL.Int)
{
    fp_glMultiTexParameteriEXT = unsafeBitCast(get_fp("glMultiTexParameteriEXT", support: [ss143]), to: Swift.type(of: fp_glMultiTexParameteriEXT))
    fp_glMultiTexParameteriEXT(texunit, target, pname, param)
}
public
func glMultiTexParameteriEXT(texunit:GL.Enum, target:GL.Enum, pname:GL.Enum, param:GL.Int)
{
    fp_glMultiTexParameteriEXT(texunit, target, pname, param)
}
public
func glMultiTexParameteriEXT(_ texunit:GL.Enum, _ target:GL.Enum, _ pname:GL.Enum, _ param:GL.Int)
{
    fp_glMultiTexParameteriEXT(texunit, target, pname, param)
}

var fp_glMultiTexParameterivEXT:@convention(c) (GL.Enum, GL.Enum, GL.Enum, UnsafePointer<GL.Int>?) -> () = load_glMultiTexParameterivEXT
func load_glMultiTexParameterivEXT(texunit:GL.Enum, target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glMultiTexParameterivEXT = unsafeBitCast(get_fp("glMultiTexParameterivEXT", support: [ss143]), to: Swift.type(of: fp_glMultiTexParameterivEXT))
    fp_glMultiTexParameterivEXT(texunit, target, pname, params)
}
public
func glMultiTexParameterivEXT(texunit:GL.Enum, target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glMultiTexParameterivEXT(texunit, target, pname, params)
}
public
func glMultiTexParameterivEXT(_ texunit:GL.Enum, _ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.Int>?)
{
    fp_glMultiTexParameterivEXT(texunit, target, pname, params)
}

var fp_glMultiTexRenderbufferEXT:@convention(c) (GL.Enum, GL.Enum, GL.UInt) -> () = load_glMultiTexRenderbufferEXT
func load_glMultiTexRenderbufferEXT(texunit:GL.Enum, target:GL.Enum, renderbuffer:GL.UInt)
{
    fp_glMultiTexRenderbufferEXT = unsafeBitCast(get_fp("glMultiTexRenderbufferEXT", support: [ss143]), to: Swift.type(of: fp_glMultiTexRenderbufferEXT))
    fp_glMultiTexRenderbufferEXT(texunit, target, renderbuffer)
}
public
func glMultiTexRenderbufferEXT(texunit:GL.Enum, target:GL.Enum, renderbuffer:GL.UInt)
{
    fp_glMultiTexRenderbufferEXT(texunit, target, renderbuffer)
}
public
func glMultiTexRenderbufferEXT(_ texunit:GL.Enum, _ target:GL.Enum, _ renderbuffer:GL.UInt)
{
    fp_glMultiTexRenderbufferEXT(texunit, target, renderbuffer)
}

var fp_glMultiTexSubImage1DEXT:@convention(c) (GL.Enum, GL.Enum, GL.Int, GL.Int, GL.Size, GL.Enum, GL.Enum, UnsafeRawPointer?) -> () = load_glMultiTexSubImage1DEXT
func load_glMultiTexSubImage1DEXT(texunit:GL.Enum, target:GL.Enum, level:GL.Int, xoffset:GL.Int, width:GL.Size, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glMultiTexSubImage1DEXT = unsafeBitCast(get_fp("glMultiTexSubImage1DEXT", support: [ss143]), to: Swift.type(of: fp_glMultiTexSubImage1DEXT))
    fp_glMultiTexSubImage1DEXT(texunit, target, level, xoffset, width, format, type, pixels)
}
public
func glMultiTexSubImage1DEXT(texunit:GL.Enum, target:GL.Enum, level:GL.Int, xoffset:GL.Int, width:GL.Size, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glMultiTexSubImage1DEXT(texunit, target, level, xoffset, width, format, type, pixels)
}
public
func glMultiTexSubImage1DEXT(_ texunit:GL.Enum, _ target:GL.Enum, _ level:GL.Int, _ xoffset:GL.Int, _ width:GL.Size, _ format:GL.Enum, _ type:GL.Enum, _ pixels:UnsafeRawPointer?)
{
    fp_glMultiTexSubImage1DEXT(texunit, target, level, xoffset, width, format, type, pixels)
}

var fp_glMultiTexSubImage2DEXT:@convention(c) (GL.Enum, GL.Enum, GL.Int, GL.Int, GL.Int, GL.Size, GL.Size, GL.Enum, GL.Enum, UnsafeRawPointer?) -> () = load_glMultiTexSubImage2DEXT
func load_glMultiTexSubImage2DEXT(texunit:GL.Enum, target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, width:GL.Size, height:GL.Size, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glMultiTexSubImage2DEXT = unsafeBitCast(get_fp("glMultiTexSubImage2DEXT", support: [ss143]), to: Swift.type(of: fp_glMultiTexSubImage2DEXT))
    fp_glMultiTexSubImage2DEXT(texunit, target, level, xoffset, yoffset, width, height, format, type, pixels)
}
public
func glMultiTexSubImage2DEXT(texunit:GL.Enum, target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, width:GL.Size, height:GL.Size, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glMultiTexSubImage2DEXT(texunit, target, level, xoffset, yoffset, width, height, format, type, pixels)
}
public
func glMultiTexSubImage2DEXT(_ texunit:GL.Enum, _ target:GL.Enum, _ level:GL.Int, _ xoffset:GL.Int, _ yoffset:GL.Int, _ width:GL.Size, _ height:GL.Size, _ format:GL.Enum, _ type:GL.Enum, _ pixels:UnsafeRawPointer?)
{
    fp_glMultiTexSubImage2DEXT(texunit, target, level, xoffset, yoffset, width, height, format, type, pixels)
}

var fp_glMultiTexSubImage3DEXT:@convention(c) (GL.Enum, GL.Enum, GL.Int, GL.Int, GL.Int, GL.Int, GL.Size, GL.Size, GL.Size, GL.Enum, GL.Enum, UnsafeRawPointer?) -> () = load_glMultiTexSubImage3DEXT
func load_glMultiTexSubImage3DEXT(texunit:GL.Enum, target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, zoffset:GL.Int, width:GL.Size, height:GL.Size, depth:GL.Size, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glMultiTexSubImage3DEXT = unsafeBitCast(get_fp("glMultiTexSubImage3DEXT", support: [ss143]), to: Swift.type(of: fp_glMultiTexSubImage3DEXT))
    fp_glMultiTexSubImage3DEXT(texunit, target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels)
}
public
func glMultiTexSubImage3DEXT(texunit:GL.Enum, target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, zoffset:GL.Int, width:GL.Size, height:GL.Size, depth:GL.Size, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glMultiTexSubImage3DEXT(texunit, target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels)
}
public
func glMultiTexSubImage3DEXT(_ texunit:GL.Enum, _ target:GL.Enum, _ level:GL.Int, _ xoffset:GL.Int, _ yoffset:GL.Int, _ zoffset:GL.Int, _ width:GL.Size, _ height:GL.Size, _ depth:GL.Size, _ format:GL.Enum, _ type:GL.Enum, _ pixels:UnsafeRawPointer?)
{
    fp_glMultiTexSubImage3DEXT(texunit, target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels)
}

var fp_glNamedBufferData:@convention(c) (GL.UInt, GL.SizePointer, UnsafeRawPointer?, GL.Enum) -> () = load_glNamedBufferData
func load_glNamedBufferData(buffer:GL.UInt, size:GL.SizePointer, data:UnsafeRawPointer?, usage:GL.Enum)
{
    fp_glNamedBufferData = unsafeBitCast(get_fp("glNamedBufferData", support: [ss363, ss42]), to: Swift.type(of: fp_glNamedBufferData))
    fp_glNamedBufferData(buffer, size, data, usage)
}
public
func glNamedBufferData(buffer:GL.UInt, size:GL.SizePointer, data:UnsafeRawPointer?, usage:GL.Enum)
{
    fp_glNamedBufferData(buffer, size, data, usage)
}
public
func glNamedBufferData(_ buffer:GL.UInt, _ size:GL.SizePointer, _ data:UnsafeRawPointer?, _ usage:GL.Enum)
{
    fp_glNamedBufferData(buffer, size, data, usage)
}

var fp_glNamedBufferDataEXT:@convention(c) (GL.UInt, GL.SizePointer, UnsafeRawPointer?, GL.Enum) -> () = load_glNamedBufferDataEXT
func load_glNamedBufferDataEXT(buffer:GL.UInt, size:GL.SizePointer, data:UnsafeRawPointer?, usage:GL.Enum)
{
    fp_glNamedBufferDataEXT = unsafeBitCast(get_fp("glNamedBufferDataEXT", support: [ss143]), to: Swift.type(of: fp_glNamedBufferDataEXT))
    fp_glNamedBufferDataEXT(buffer, size, data, usage)
}
public
func glNamedBufferDataEXT(buffer:GL.UInt, size:GL.SizePointer, data:UnsafeRawPointer?, usage:GL.Enum)
{
    fp_glNamedBufferDataEXT(buffer, size, data, usage)
}
public
func glNamedBufferDataEXT(_ buffer:GL.UInt, _ size:GL.SizePointer, _ data:UnsafeRawPointer?, _ usage:GL.Enum)
{
    fp_glNamedBufferDataEXT(buffer, size, data, usage)
}

var fp_glNamedBufferPageCommitmentARB:@convention(c) (GL.UInt, GL.IntPointer, GL.SizePointer, GL.Bool) -> () = load_glNamedBufferPageCommitmentARB
func load_glNamedBufferPageCommitmentARB(buffer:GL.UInt, offset:GL.IntPointer, size:GL.SizePointer, commit:GL.Bool)
{
    fp_glNamedBufferPageCommitmentARB = unsafeBitCast(get_fp("glNamedBufferPageCommitmentARB", support: [ss87]), to: Swift.type(of: fp_glNamedBufferPageCommitmentARB))
    fp_glNamedBufferPageCommitmentARB(buffer, offset, size, commit)
}
public
func glNamedBufferPageCommitmentARB(buffer:GL.UInt, offset:GL.IntPointer, size:GL.SizePointer, commit:GL.Bool)
{
    fp_glNamedBufferPageCommitmentARB(buffer, offset, size, commit)
}
public
func glNamedBufferPageCommitmentARB(_ buffer:GL.UInt, _ offset:GL.IntPointer, _ size:GL.SizePointer, _ commit:GL.Bool)
{
    fp_glNamedBufferPageCommitmentARB(buffer, offset, size, commit)
}

var fp_glNamedBufferPageCommitmentEXT:@convention(c) (GL.UInt, GL.IntPointer, GL.SizePointer, GL.Bool) -> () = load_glNamedBufferPageCommitmentEXT
func load_glNamedBufferPageCommitmentEXT(buffer:GL.UInt, offset:GL.IntPointer, size:GL.SizePointer, commit:GL.Bool)
{
    fp_glNamedBufferPageCommitmentEXT = unsafeBitCast(get_fp("glNamedBufferPageCommitmentEXT", support: [ss87]), to: Swift.type(of: fp_glNamedBufferPageCommitmentEXT))
    fp_glNamedBufferPageCommitmentEXT(buffer, offset, size, commit)
}
public
func glNamedBufferPageCommitmentEXT(buffer:GL.UInt, offset:GL.IntPointer, size:GL.SizePointer, commit:GL.Bool)
{
    fp_glNamedBufferPageCommitmentEXT(buffer, offset, size, commit)
}
public
func glNamedBufferPageCommitmentEXT(_ buffer:GL.UInt, _ offset:GL.IntPointer, _ size:GL.SizePointer, _ commit:GL.Bool)
{
    fp_glNamedBufferPageCommitmentEXT(buffer, offset, size, commit)
}

var fp_glNamedBufferStorage:@convention(c) (GL.UInt, GL.SizePointer, UnsafeRawPointer?, GL.Bitfield) -> () = load_glNamedBufferStorage
func load_glNamedBufferStorage(buffer:GL.UInt, size:GL.SizePointer, data:UnsafeRawPointer?, flags:GL.Bitfield)
{
    fp_glNamedBufferStorage = unsafeBitCast(get_fp("glNamedBufferStorage", support: [ss363, ss42]), to: Swift.type(of: fp_glNamedBufferStorage))
    fp_glNamedBufferStorage(buffer, size, data, flags)
}
public
func glNamedBufferStorage(buffer:GL.UInt, size:GL.SizePointer, data:UnsafeRawPointer?, flags:GL.Bitfield)
{
    fp_glNamedBufferStorage(buffer, size, data, flags)
}
public
func glNamedBufferStorage(_ buffer:GL.UInt, _ size:GL.SizePointer, _ data:UnsafeRawPointer?, _ flags:GL.Bitfield)
{
    fp_glNamedBufferStorage(buffer, size, data, flags)
}

var fp_glNamedBufferStorageEXT:@convention(c) (GL.UInt, GL.SizePointer, UnsafeRawPointer?, GL.Bitfield) -> () = load_glNamedBufferStorageEXT
func load_glNamedBufferStorageEXT(buffer:GL.UInt, size:GL.SizePointer, data:UnsafeRawPointer?, flags:GL.Bitfield)
{
    fp_glNamedBufferStorageEXT = unsafeBitCast(get_fp("glNamedBufferStorageEXT", support: [ss143]), to: Swift.type(of: fp_glNamedBufferStorageEXT))
    fp_glNamedBufferStorageEXT(buffer, size, data, flags)
}
public
func glNamedBufferStorageEXT(buffer:GL.UInt, size:GL.SizePointer, data:UnsafeRawPointer?, flags:GL.Bitfield)
{
    fp_glNamedBufferStorageEXT(buffer, size, data, flags)
}
public
func glNamedBufferStorageEXT(_ buffer:GL.UInt, _ size:GL.SizePointer, _ data:UnsafeRawPointer?, _ flags:GL.Bitfield)
{
    fp_glNamedBufferStorageEXT(buffer, size, data, flags)
}

var fp_glNamedBufferSubData:@convention(c) (GL.UInt, GL.IntPointer, GL.SizePointer, UnsafeRawPointer?) -> () = load_glNamedBufferSubData
func load_glNamedBufferSubData(buffer:GL.UInt, offset:GL.IntPointer, size:GL.SizePointer, data:UnsafeRawPointer?)
{
    fp_glNamedBufferSubData = unsafeBitCast(get_fp("glNamedBufferSubData", support: [ss363, ss42]), to: Swift.type(of: fp_glNamedBufferSubData))
    fp_glNamedBufferSubData(buffer, offset, size, data)
}
public
func glNamedBufferSubData(buffer:GL.UInt, offset:GL.IntPointer, size:GL.SizePointer, data:UnsafeRawPointer?)
{
    fp_glNamedBufferSubData(buffer, offset, size, data)
}
public
func glNamedBufferSubData(_ buffer:GL.UInt, _ offset:GL.IntPointer, _ size:GL.SizePointer, _ data:UnsafeRawPointer?)
{
    fp_glNamedBufferSubData(buffer, offset, size, data)
}

var fp_glNamedBufferSubDataEXT:@convention(c) (GL.UInt, GL.IntPointer, GL.SizePointer, UnsafeRawPointer?) -> () = load_glNamedBufferSubDataEXT
func load_glNamedBufferSubDataEXT(buffer:GL.UInt, offset:GL.IntPointer, size:GL.SizePointer, data:UnsafeRawPointer?)
{
    fp_glNamedBufferSubDataEXT = unsafeBitCast(get_fp("glNamedBufferSubDataEXT", support: [ss143]), to: Swift.type(of: fp_glNamedBufferSubDataEXT))
    fp_glNamedBufferSubDataEXT(buffer, offset, size, data)
}
public
func glNamedBufferSubDataEXT(buffer:GL.UInt, offset:GL.IntPointer, size:GL.SizePointer, data:UnsafeRawPointer?)
{
    fp_glNamedBufferSubDataEXT(buffer, offset, size, data)
}
public
func glNamedBufferSubDataEXT(_ buffer:GL.UInt, _ offset:GL.IntPointer, _ size:GL.SizePointer, _ data:UnsafeRawPointer?)
{
    fp_glNamedBufferSubDataEXT(buffer, offset, size, data)
}

var fp_glNamedCopyBufferSubDataEXT:@convention(c) (GL.UInt, GL.UInt, GL.IntPointer, GL.IntPointer, GL.SizePointer) -> () = load_glNamedCopyBufferSubDataEXT
func load_glNamedCopyBufferSubDataEXT(readBuffer:GL.UInt, writeBuffer:GL.UInt, readOffset:GL.IntPointer, writeOffset:GL.IntPointer, size:GL.SizePointer)
{
    fp_glNamedCopyBufferSubDataEXT = unsafeBitCast(get_fp("glNamedCopyBufferSubDataEXT", support: [ss143]), to: Swift.type(of: fp_glNamedCopyBufferSubDataEXT))
    fp_glNamedCopyBufferSubDataEXT(readBuffer, writeBuffer, readOffset, writeOffset, size)
}
public
func glNamedCopyBufferSubDataEXT(readBuffer:GL.UInt, writeBuffer:GL.UInt, readOffset:GL.IntPointer, writeOffset:GL.IntPointer, size:GL.SizePointer)
{
    fp_glNamedCopyBufferSubDataEXT(readBuffer, writeBuffer, readOffset, writeOffset, size)
}
public
func glNamedCopyBufferSubDataEXT(_ readBuffer:GL.UInt, _ writeBuffer:GL.UInt, _ readOffset:GL.IntPointer, _ writeOffset:GL.IntPointer, _ size:GL.SizePointer)
{
    fp_glNamedCopyBufferSubDataEXT(readBuffer, writeBuffer, readOffset, writeOffset, size)
}

var fp_glNamedFramebufferDrawBuffer:@convention(c) (GL.UInt, GL.Enum) -> () = load_glNamedFramebufferDrawBuffer
func load_glNamedFramebufferDrawBuffer(framebuffer:GL.UInt, buf:GL.Enum)
{
    fp_glNamedFramebufferDrawBuffer = unsafeBitCast(get_fp("glNamedFramebufferDrawBuffer", support: [ss363, ss42]), to: Swift.type(of: fp_glNamedFramebufferDrawBuffer))
    fp_glNamedFramebufferDrawBuffer(framebuffer, buf)
}
public
func glNamedFramebufferDrawBuffer(framebuffer:GL.UInt, buf:GL.Enum)
{
    fp_glNamedFramebufferDrawBuffer(framebuffer, buf)
}
public
func glNamedFramebufferDrawBuffer(_ framebuffer:GL.UInt, _ buf:GL.Enum)
{
    fp_glNamedFramebufferDrawBuffer(framebuffer, buf)
}

var fp_glNamedFramebufferDrawBuffers:@convention(c) (GL.UInt, GL.Size, UnsafePointer<GL.Enum>?) -> () = load_glNamedFramebufferDrawBuffers
func load_glNamedFramebufferDrawBuffers(framebuffer:GL.UInt, n:GL.Size, bufs:UnsafePointer<GL.Enum>?)
{
    fp_glNamedFramebufferDrawBuffers = unsafeBitCast(get_fp("glNamedFramebufferDrawBuffers", support: [ss363, ss42]), to: Swift.type(of: fp_glNamedFramebufferDrawBuffers))
    fp_glNamedFramebufferDrawBuffers(framebuffer, n, bufs)
}
public
func glNamedFramebufferDrawBuffers(framebuffer:GL.UInt, n:GL.Size, bufs:UnsafePointer<GL.Enum>?)
{
    fp_glNamedFramebufferDrawBuffers(framebuffer, n, bufs)
}
public
func glNamedFramebufferDrawBuffers(_ framebuffer:GL.UInt, _ n:GL.Size, _ bufs:UnsafePointer<GL.Enum>?)
{
    fp_glNamedFramebufferDrawBuffers(framebuffer, n, bufs)
}

var fp_glNamedFramebufferParameteri:@convention(c) (GL.UInt, GL.Enum, GL.Int) -> () = load_glNamedFramebufferParameteri
func load_glNamedFramebufferParameteri(framebuffer:GL.UInt, pname:GL.Enum, param:GL.Int)
{
    fp_glNamedFramebufferParameteri = unsafeBitCast(get_fp("glNamedFramebufferParameteri", support: [ss363, ss42]), to: Swift.type(of: fp_glNamedFramebufferParameteri))
    fp_glNamedFramebufferParameteri(framebuffer, pname, param)
}
public
func glNamedFramebufferParameteri(framebuffer:GL.UInt, pname:GL.Enum, param:GL.Int)
{
    fp_glNamedFramebufferParameteri(framebuffer, pname, param)
}
public
func glNamedFramebufferParameteri(_ framebuffer:GL.UInt, _ pname:GL.Enum, _ param:GL.Int)
{
    fp_glNamedFramebufferParameteri(framebuffer, pname, param)
}

var fp_glNamedFramebufferParameteriEXT:@convention(c) (GL.UInt, GL.Enum, GL.Int) -> () = load_glNamedFramebufferParameteriEXT
func load_glNamedFramebufferParameteriEXT(framebuffer:GL.UInt, pname:GL.Enum, param:GL.Int)
{
    fp_glNamedFramebufferParameteriEXT = unsafeBitCast(get_fp("glNamedFramebufferParameteriEXT", support: [ss143]), to: Swift.type(of: fp_glNamedFramebufferParameteriEXT))
    fp_glNamedFramebufferParameteriEXT(framebuffer, pname, param)
}
public
func glNamedFramebufferParameteriEXT(framebuffer:GL.UInt, pname:GL.Enum, param:GL.Int)
{
    fp_glNamedFramebufferParameteriEXT(framebuffer, pname, param)
}
public
func glNamedFramebufferParameteriEXT(_ framebuffer:GL.UInt, _ pname:GL.Enum, _ param:GL.Int)
{
    fp_glNamedFramebufferParameteriEXT(framebuffer, pname, param)
}

var fp_glNamedFramebufferReadBuffer:@convention(c) (GL.UInt, GL.Enum) -> () = load_glNamedFramebufferReadBuffer
func load_glNamedFramebufferReadBuffer(framebuffer:GL.UInt, src:GL.Enum)
{
    fp_glNamedFramebufferReadBuffer = unsafeBitCast(get_fp("glNamedFramebufferReadBuffer", support: [ss363, ss42]), to: Swift.type(of: fp_glNamedFramebufferReadBuffer))
    fp_glNamedFramebufferReadBuffer(framebuffer, src)
}
public
func glNamedFramebufferReadBuffer(framebuffer:GL.UInt, src:GL.Enum)
{
    fp_glNamedFramebufferReadBuffer(framebuffer, src)
}
public
func glNamedFramebufferReadBuffer(_ framebuffer:GL.UInt, _ src:GL.Enum)
{
    fp_glNamedFramebufferReadBuffer(framebuffer, src)
}

var fp_glNamedFramebufferRenderbuffer:@convention(c) (GL.UInt, GL.Enum, GL.Enum, GL.UInt) -> () = load_glNamedFramebufferRenderbuffer
func load_glNamedFramebufferRenderbuffer(framebuffer:GL.UInt, attachment:GL.Enum, renderbuffertarget:GL.Enum, renderbuffer:GL.UInt)
{
    fp_glNamedFramebufferRenderbuffer = unsafeBitCast(get_fp("glNamedFramebufferRenderbuffer", support: [ss363, ss42]), to: Swift.type(of: fp_glNamedFramebufferRenderbuffer))
    fp_glNamedFramebufferRenderbuffer(framebuffer, attachment, renderbuffertarget, renderbuffer)
}
public
func glNamedFramebufferRenderbuffer(framebuffer:GL.UInt, attachment:GL.Enum, renderbuffertarget:GL.Enum, renderbuffer:GL.UInt)
{
    fp_glNamedFramebufferRenderbuffer(framebuffer, attachment, renderbuffertarget, renderbuffer)
}
public
func glNamedFramebufferRenderbuffer(_ framebuffer:GL.UInt, _ attachment:GL.Enum, _ renderbuffertarget:GL.Enum, _ renderbuffer:GL.UInt)
{
    fp_glNamedFramebufferRenderbuffer(framebuffer, attachment, renderbuffertarget, renderbuffer)
}

var fp_glNamedFramebufferRenderbufferEXT:@convention(c) (GL.UInt, GL.Enum, GL.Enum, GL.UInt) -> () = load_glNamedFramebufferRenderbufferEXT
func load_glNamedFramebufferRenderbufferEXT(framebuffer:GL.UInt, attachment:GL.Enum, renderbuffertarget:GL.Enum, renderbuffer:GL.UInt)
{
    fp_glNamedFramebufferRenderbufferEXT = unsafeBitCast(get_fp("glNamedFramebufferRenderbufferEXT", support: [ss143]), to: Swift.type(of: fp_glNamedFramebufferRenderbufferEXT))
    fp_glNamedFramebufferRenderbufferEXT(framebuffer, attachment, renderbuffertarget, renderbuffer)
}
public
func glNamedFramebufferRenderbufferEXT(framebuffer:GL.UInt, attachment:GL.Enum, renderbuffertarget:GL.Enum, renderbuffer:GL.UInt)
{
    fp_glNamedFramebufferRenderbufferEXT(framebuffer, attachment, renderbuffertarget, renderbuffer)
}
public
func glNamedFramebufferRenderbufferEXT(_ framebuffer:GL.UInt, _ attachment:GL.Enum, _ renderbuffertarget:GL.Enum, _ renderbuffer:GL.UInt)
{
    fp_glNamedFramebufferRenderbufferEXT(framebuffer, attachment, renderbuffertarget, renderbuffer)
}

var fp_glNamedFramebufferSampleLocationsfvARB:@convention(c) (GL.UInt, GL.UInt, GL.Size, UnsafePointer<GL.Float>?) -> () = load_glNamedFramebufferSampleLocationsfvARB
func load_glNamedFramebufferSampleLocationsfvARB(framebuffer:GL.UInt, start:GL.UInt, count:GL.Size, v:UnsafePointer<GL.Float>?)
{
    fp_glNamedFramebufferSampleLocationsfvARB = unsafeBitCast(get_fp("glNamedFramebufferSampleLocationsfvARB", support: [ss77]), to: Swift.type(of: fp_glNamedFramebufferSampleLocationsfvARB))
    fp_glNamedFramebufferSampleLocationsfvARB(framebuffer, start, count, v)
}
public
func glNamedFramebufferSampleLocationsfvARB(framebuffer:GL.UInt, start:GL.UInt, count:GL.Size, v:UnsafePointer<GL.Float>?)
{
    fp_glNamedFramebufferSampleLocationsfvARB(framebuffer, start, count, v)
}
public
func glNamedFramebufferSampleLocationsfvARB(_ framebuffer:GL.UInt, _ start:GL.UInt, _ count:GL.Size, _ v:UnsafePointer<GL.Float>?)
{
    fp_glNamedFramebufferSampleLocationsfvARB(framebuffer, start, count, v)
}

var fp_glNamedFramebufferSampleLocationsfvNV:@convention(c) (GL.UInt, GL.UInt, GL.Size, UnsafePointer<GL.Float>?) -> () = load_glNamedFramebufferSampleLocationsfvNV
func load_glNamedFramebufferSampleLocationsfvNV(framebuffer:GL.UInt, start:GL.UInt, count:GL.Size, v:UnsafePointer<GL.Float>?)
{
    fp_glNamedFramebufferSampleLocationsfvNV = unsafeBitCast(get_fp("glNamedFramebufferSampleLocationsfvNV", support: [ss268]), to: Swift.type(of: fp_glNamedFramebufferSampleLocationsfvNV))
    fp_glNamedFramebufferSampleLocationsfvNV(framebuffer, start, count, v)
}
public
func glNamedFramebufferSampleLocationsfvNV(framebuffer:GL.UInt, start:GL.UInt, count:GL.Size, v:UnsafePointer<GL.Float>?)
{
    fp_glNamedFramebufferSampleLocationsfvNV(framebuffer, start, count, v)
}
public
func glNamedFramebufferSampleLocationsfvNV(_ framebuffer:GL.UInt, _ start:GL.UInt, _ count:GL.Size, _ v:UnsafePointer<GL.Float>?)
{
    fp_glNamedFramebufferSampleLocationsfvNV(framebuffer, start, count, v)
}

var fp_glNamedFramebufferTexture:@convention(c) (GL.UInt, GL.Enum, GL.UInt, GL.Int) -> () = load_glNamedFramebufferTexture
func load_glNamedFramebufferTexture(framebuffer:GL.UInt, attachment:GL.Enum, texture:GL.UInt, level:GL.Int)
{
    fp_glNamedFramebufferTexture = unsafeBitCast(get_fp("glNamedFramebufferTexture", support: [ss363, ss42]), to: Swift.type(of: fp_glNamedFramebufferTexture))
    fp_glNamedFramebufferTexture(framebuffer, attachment, texture, level)
}
public
func glNamedFramebufferTexture(framebuffer:GL.UInt, attachment:GL.Enum, texture:GL.UInt, level:GL.Int)
{
    fp_glNamedFramebufferTexture(framebuffer, attachment, texture, level)
}
public
func glNamedFramebufferTexture(_ framebuffer:GL.UInt, _ attachment:GL.Enum, _ texture:GL.UInt, _ level:GL.Int)
{
    fp_glNamedFramebufferTexture(framebuffer, attachment, texture, level)
}

var fp_glNamedFramebufferTexture1DEXT:@convention(c) (GL.UInt, GL.Enum, GL.Enum, GL.UInt, GL.Int) -> () = load_glNamedFramebufferTexture1DEXT
func load_glNamedFramebufferTexture1DEXT(framebuffer:GL.UInt, attachment:GL.Enum, textarget:GL.Enum, texture:GL.UInt, level:GL.Int)
{
    fp_glNamedFramebufferTexture1DEXT = unsafeBitCast(get_fp("glNamedFramebufferTexture1DEXT", support: [ss143]), to: Swift.type(of: fp_glNamedFramebufferTexture1DEXT))
    fp_glNamedFramebufferTexture1DEXT(framebuffer, attachment, textarget, texture, level)
}
public
func glNamedFramebufferTexture1DEXT(framebuffer:GL.UInt, attachment:GL.Enum, textarget:GL.Enum, texture:GL.UInt, level:GL.Int)
{
    fp_glNamedFramebufferTexture1DEXT(framebuffer, attachment, textarget, texture, level)
}
public
func glNamedFramebufferTexture1DEXT(_ framebuffer:GL.UInt, _ attachment:GL.Enum, _ textarget:GL.Enum, _ texture:GL.UInt, _ level:GL.Int)
{
    fp_glNamedFramebufferTexture1DEXT(framebuffer, attachment, textarget, texture, level)
}

var fp_glNamedFramebufferTexture2DEXT:@convention(c) (GL.UInt, GL.Enum, GL.Enum, GL.UInt, GL.Int) -> () = load_glNamedFramebufferTexture2DEXT
func load_glNamedFramebufferTexture2DEXT(framebuffer:GL.UInt, attachment:GL.Enum, textarget:GL.Enum, texture:GL.UInt, level:GL.Int)
{
    fp_glNamedFramebufferTexture2DEXT = unsafeBitCast(get_fp("glNamedFramebufferTexture2DEXT", support: [ss143]), to: Swift.type(of: fp_glNamedFramebufferTexture2DEXT))
    fp_glNamedFramebufferTexture2DEXT(framebuffer, attachment, textarget, texture, level)
}
public
func glNamedFramebufferTexture2DEXT(framebuffer:GL.UInt, attachment:GL.Enum, textarget:GL.Enum, texture:GL.UInt, level:GL.Int)
{
    fp_glNamedFramebufferTexture2DEXT(framebuffer, attachment, textarget, texture, level)
}
public
func glNamedFramebufferTexture2DEXT(_ framebuffer:GL.UInt, _ attachment:GL.Enum, _ textarget:GL.Enum, _ texture:GL.UInt, _ level:GL.Int)
{
    fp_glNamedFramebufferTexture2DEXT(framebuffer, attachment, textarget, texture, level)
}

var fp_glNamedFramebufferTexture3DEXT:@convention(c) (GL.UInt, GL.Enum, GL.Enum, GL.UInt, GL.Int, GL.Int) -> () = load_glNamedFramebufferTexture3DEXT
func load_glNamedFramebufferTexture3DEXT(framebuffer:GL.UInt, attachment:GL.Enum, textarget:GL.Enum, texture:GL.UInt, level:GL.Int, zoffset:GL.Int)
{
    fp_glNamedFramebufferTexture3DEXT = unsafeBitCast(get_fp("glNamedFramebufferTexture3DEXT", support: [ss143]), to: Swift.type(of: fp_glNamedFramebufferTexture3DEXT))
    fp_glNamedFramebufferTexture3DEXT(framebuffer, attachment, textarget, texture, level, zoffset)
}
public
func glNamedFramebufferTexture3DEXT(framebuffer:GL.UInt, attachment:GL.Enum, textarget:GL.Enum, texture:GL.UInt, level:GL.Int, zoffset:GL.Int)
{
    fp_glNamedFramebufferTexture3DEXT(framebuffer, attachment, textarget, texture, level, zoffset)
}
public
func glNamedFramebufferTexture3DEXT(_ framebuffer:GL.UInt, _ attachment:GL.Enum, _ textarget:GL.Enum, _ texture:GL.UInt, _ level:GL.Int, _ zoffset:GL.Int)
{
    fp_glNamedFramebufferTexture3DEXT(framebuffer, attachment, textarget, texture, level, zoffset)
}

var fp_glNamedFramebufferTextureEXT:@convention(c) (GL.UInt, GL.Enum, GL.UInt, GL.Int) -> () = load_glNamedFramebufferTextureEXT
func load_glNamedFramebufferTextureEXT(framebuffer:GL.UInt, attachment:GL.Enum, texture:GL.UInt, level:GL.Int)
{
    fp_glNamedFramebufferTextureEXT = unsafeBitCast(get_fp("glNamedFramebufferTextureEXT", support: [ss143]), to: Swift.type(of: fp_glNamedFramebufferTextureEXT))
    fp_glNamedFramebufferTextureEXT(framebuffer, attachment, texture, level)
}
public
func glNamedFramebufferTextureEXT(framebuffer:GL.UInt, attachment:GL.Enum, texture:GL.UInt, level:GL.Int)
{
    fp_glNamedFramebufferTextureEXT(framebuffer, attachment, texture, level)
}
public
func glNamedFramebufferTextureEXT(_ framebuffer:GL.UInt, _ attachment:GL.Enum, _ texture:GL.UInt, _ level:GL.Int)
{
    fp_glNamedFramebufferTextureEXT(framebuffer, attachment, texture, level)
}

var fp_glNamedFramebufferTextureFaceEXT:@convention(c) (GL.UInt, GL.Enum, GL.UInt, GL.Int, GL.Enum) -> () = load_glNamedFramebufferTextureFaceEXT
func load_glNamedFramebufferTextureFaceEXT(framebuffer:GL.UInt, attachment:GL.Enum, texture:GL.UInt, level:GL.Int, face:GL.Enum)
{
    fp_glNamedFramebufferTextureFaceEXT = unsafeBitCast(get_fp("glNamedFramebufferTextureFaceEXT", support: [ss143]), to: Swift.type(of: fp_glNamedFramebufferTextureFaceEXT))
    fp_glNamedFramebufferTextureFaceEXT(framebuffer, attachment, texture, level, face)
}
public
func glNamedFramebufferTextureFaceEXT(framebuffer:GL.UInt, attachment:GL.Enum, texture:GL.UInt, level:GL.Int, face:GL.Enum)
{
    fp_glNamedFramebufferTextureFaceEXT(framebuffer, attachment, texture, level, face)
}
public
func glNamedFramebufferTextureFaceEXT(_ framebuffer:GL.UInt, _ attachment:GL.Enum, _ texture:GL.UInt, _ level:GL.Int, _ face:GL.Enum)
{
    fp_glNamedFramebufferTextureFaceEXT(framebuffer, attachment, texture, level, face)
}

var fp_glNamedFramebufferTextureLayer:@convention(c) (GL.UInt, GL.Enum, GL.UInt, GL.Int, GL.Int) -> () = load_glNamedFramebufferTextureLayer
func load_glNamedFramebufferTextureLayer(framebuffer:GL.UInt, attachment:GL.Enum, texture:GL.UInt, level:GL.Int, layer:GL.Int)
{
    fp_glNamedFramebufferTextureLayer = unsafeBitCast(get_fp("glNamedFramebufferTextureLayer", support: [ss363, ss42]), to: Swift.type(of: fp_glNamedFramebufferTextureLayer))
    fp_glNamedFramebufferTextureLayer(framebuffer, attachment, texture, level, layer)
}
public
func glNamedFramebufferTextureLayer(framebuffer:GL.UInt, attachment:GL.Enum, texture:GL.UInt, level:GL.Int, layer:GL.Int)
{
    fp_glNamedFramebufferTextureLayer(framebuffer, attachment, texture, level, layer)
}
public
func glNamedFramebufferTextureLayer(_ framebuffer:GL.UInt, _ attachment:GL.Enum, _ texture:GL.UInt, _ level:GL.Int, _ layer:GL.Int)
{
    fp_glNamedFramebufferTextureLayer(framebuffer, attachment, texture, level, layer)
}

var fp_glNamedFramebufferTextureLayerEXT:@convention(c) (GL.UInt, GL.Enum, GL.UInt, GL.Int, GL.Int) -> () = load_glNamedFramebufferTextureLayerEXT
func load_glNamedFramebufferTextureLayerEXT(framebuffer:GL.UInt, attachment:GL.Enum, texture:GL.UInt, level:GL.Int, layer:GL.Int)
{
    fp_glNamedFramebufferTextureLayerEXT = unsafeBitCast(get_fp("glNamedFramebufferTextureLayerEXT", support: [ss143]), to: Swift.type(of: fp_glNamedFramebufferTextureLayerEXT))
    fp_glNamedFramebufferTextureLayerEXT(framebuffer, attachment, texture, level, layer)
}
public
func glNamedFramebufferTextureLayerEXT(framebuffer:GL.UInt, attachment:GL.Enum, texture:GL.UInt, level:GL.Int, layer:GL.Int)
{
    fp_glNamedFramebufferTextureLayerEXT(framebuffer, attachment, texture, level, layer)
}
public
func glNamedFramebufferTextureLayerEXT(_ framebuffer:GL.UInt, _ attachment:GL.Enum, _ texture:GL.UInt, _ level:GL.Int, _ layer:GL.Int)
{
    fp_glNamedFramebufferTextureLayerEXT(framebuffer, attachment, texture, level, layer)
}

var fp_glNamedProgramLocalParameter4dEXT:@convention(c) (GL.UInt, GL.Enum, GL.UInt, GL.Double, GL.Double, GL.Double, GL.Double) -> () = load_glNamedProgramLocalParameter4dEXT
func load_glNamedProgramLocalParameter4dEXT(program:GL.UInt, target:GL.Enum, index:GL.UInt, x:GL.Double, y:GL.Double, z:GL.Double, w:GL.Double)
{
    fp_glNamedProgramLocalParameter4dEXT = unsafeBitCast(get_fp("glNamedProgramLocalParameter4dEXT", support: [ss143]), to: Swift.type(of: fp_glNamedProgramLocalParameter4dEXT))
    fp_glNamedProgramLocalParameter4dEXT(program, target, index, x, y, z, w)
}
public
func glNamedProgramLocalParameter4dEXT(program:GL.UInt, target:GL.Enum, index:GL.UInt, x:GL.Double, y:GL.Double, z:GL.Double, w:GL.Double)
{
    fp_glNamedProgramLocalParameter4dEXT(program, target, index, x, y, z, w)
}
public
func glNamedProgramLocalParameter4dEXT(_ program:GL.UInt, _ target:GL.Enum, _ index:GL.UInt, _ x:GL.Double, _ y:GL.Double, _ z:GL.Double, _ w:GL.Double)
{
    fp_glNamedProgramLocalParameter4dEXT(program, target, index, x, y, z, w)
}

var fp_glNamedProgramLocalParameter4dvEXT:@convention(c) (GL.UInt, GL.Enum, GL.UInt, UnsafePointer<GL.Double>?) -> () = load_glNamedProgramLocalParameter4dvEXT
func load_glNamedProgramLocalParameter4dvEXT(program:GL.UInt, target:GL.Enum, index:GL.UInt, params:UnsafePointer<GL.Double>?)
{
    fp_glNamedProgramLocalParameter4dvEXT = unsafeBitCast(get_fp("glNamedProgramLocalParameter4dvEXT", support: [ss143]), to: Swift.type(of: fp_glNamedProgramLocalParameter4dvEXT))
    fp_glNamedProgramLocalParameter4dvEXT(program, target, index, params)
}
public
func glNamedProgramLocalParameter4dvEXT(program:GL.UInt, target:GL.Enum, index:GL.UInt, params:UnsafePointer<GL.Double>?)
{
    fp_glNamedProgramLocalParameter4dvEXT(program, target, index, params)
}
public
func glNamedProgramLocalParameter4dvEXT(_ program:GL.UInt, _ target:GL.Enum, _ index:GL.UInt, _ params:UnsafePointer<GL.Double>?)
{
    fp_glNamedProgramLocalParameter4dvEXT(program, target, index, params)
}

var fp_glNamedProgramLocalParameter4fEXT:@convention(c) (GL.UInt, GL.Enum, GL.UInt, GL.Float, GL.Float, GL.Float, GL.Float) -> () = load_glNamedProgramLocalParameter4fEXT
func load_glNamedProgramLocalParameter4fEXT(program:GL.UInt, target:GL.Enum, index:GL.UInt, x:GL.Float, y:GL.Float, z:GL.Float, w:GL.Float)
{
    fp_glNamedProgramLocalParameter4fEXT = unsafeBitCast(get_fp("glNamedProgramLocalParameter4fEXT", support: [ss143]), to: Swift.type(of: fp_glNamedProgramLocalParameter4fEXT))
    fp_glNamedProgramLocalParameter4fEXT(program, target, index, x, y, z, w)
}
public
func glNamedProgramLocalParameter4fEXT(program:GL.UInt, target:GL.Enum, index:GL.UInt, x:GL.Float, y:GL.Float, z:GL.Float, w:GL.Float)
{
    fp_glNamedProgramLocalParameter4fEXT(program, target, index, x, y, z, w)
}
public
func glNamedProgramLocalParameter4fEXT(_ program:GL.UInt, _ target:GL.Enum, _ index:GL.UInt, _ x:GL.Float, _ y:GL.Float, _ z:GL.Float, _ w:GL.Float)
{
    fp_glNamedProgramLocalParameter4fEXT(program, target, index, x, y, z, w)
}

var fp_glNamedProgramLocalParameter4fvEXT:@convention(c) (GL.UInt, GL.Enum, GL.UInt, UnsafePointer<GL.Float>?) -> () = load_glNamedProgramLocalParameter4fvEXT
func load_glNamedProgramLocalParameter4fvEXT(program:GL.UInt, target:GL.Enum, index:GL.UInt, params:UnsafePointer<GL.Float>?)
{
    fp_glNamedProgramLocalParameter4fvEXT = unsafeBitCast(get_fp("glNamedProgramLocalParameter4fvEXT", support: [ss143]), to: Swift.type(of: fp_glNamedProgramLocalParameter4fvEXT))
    fp_glNamedProgramLocalParameter4fvEXT(program, target, index, params)
}
public
func glNamedProgramLocalParameter4fvEXT(program:GL.UInt, target:GL.Enum, index:GL.UInt, params:UnsafePointer<GL.Float>?)
{
    fp_glNamedProgramLocalParameter4fvEXT(program, target, index, params)
}
public
func glNamedProgramLocalParameter4fvEXT(_ program:GL.UInt, _ target:GL.Enum, _ index:GL.UInt, _ params:UnsafePointer<GL.Float>?)
{
    fp_glNamedProgramLocalParameter4fvEXT(program, target, index, params)
}

var fp_glNamedProgramLocalParameterI4iEXT:@convention(c) (GL.UInt, GL.Enum, GL.UInt, GL.Int, GL.Int, GL.Int, GL.Int) -> () = load_glNamedProgramLocalParameterI4iEXT
func load_glNamedProgramLocalParameterI4iEXT(program:GL.UInt, target:GL.Enum, index:GL.UInt, x:GL.Int, y:GL.Int, z:GL.Int, w:GL.Int)
{
    fp_glNamedProgramLocalParameterI4iEXT = unsafeBitCast(get_fp("glNamedProgramLocalParameterI4iEXT", support: [ss143]), to: Swift.type(of: fp_glNamedProgramLocalParameterI4iEXT))
    fp_glNamedProgramLocalParameterI4iEXT(program, target, index, x, y, z, w)
}
public
func glNamedProgramLocalParameterI4iEXT(program:GL.UInt, target:GL.Enum, index:GL.UInt, x:GL.Int, y:GL.Int, z:GL.Int, w:GL.Int)
{
    fp_glNamedProgramLocalParameterI4iEXT(program, target, index, x, y, z, w)
}
public
func glNamedProgramLocalParameterI4iEXT(_ program:GL.UInt, _ target:GL.Enum, _ index:GL.UInt, _ x:GL.Int, _ y:GL.Int, _ z:GL.Int, _ w:GL.Int)
{
    fp_glNamedProgramLocalParameterI4iEXT(program, target, index, x, y, z, w)
}

var fp_glNamedProgramLocalParameterI4ivEXT:@convention(c) (GL.UInt, GL.Enum, GL.UInt, UnsafePointer<GL.Int>?) -> () = load_glNamedProgramLocalParameterI4ivEXT
func load_glNamedProgramLocalParameterI4ivEXT(program:GL.UInt, target:GL.Enum, index:GL.UInt, params:UnsafePointer<GL.Int>?)
{
    fp_glNamedProgramLocalParameterI4ivEXT = unsafeBitCast(get_fp("glNamedProgramLocalParameterI4ivEXT", support: [ss143]), to: Swift.type(of: fp_glNamedProgramLocalParameterI4ivEXT))
    fp_glNamedProgramLocalParameterI4ivEXT(program, target, index, params)
}
public
func glNamedProgramLocalParameterI4ivEXT(program:GL.UInt, target:GL.Enum, index:GL.UInt, params:UnsafePointer<GL.Int>?)
{
    fp_glNamedProgramLocalParameterI4ivEXT(program, target, index, params)
}
public
func glNamedProgramLocalParameterI4ivEXT(_ program:GL.UInt, _ target:GL.Enum, _ index:GL.UInt, _ params:UnsafePointer<GL.Int>?)
{
    fp_glNamedProgramLocalParameterI4ivEXT(program, target, index, params)
}

var fp_glNamedProgramLocalParameterI4uiEXT:@convention(c) (GL.UInt, GL.Enum, GL.UInt, GL.UInt, GL.UInt, GL.UInt, GL.UInt) -> () = load_glNamedProgramLocalParameterI4uiEXT
func load_glNamedProgramLocalParameterI4uiEXT(program:GL.UInt, target:GL.Enum, index:GL.UInt, x:GL.UInt, y:GL.UInt, z:GL.UInt, w:GL.UInt)
{
    fp_glNamedProgramLocalParameterI4uiEXT = unsafeBitCast(get_fp("glNamedProgramLocalParameterI4uiEXT", support: [ss143]), to: Swift.type(of: fp_glNamedProgramLocalParameterI4uiEXT))
    fp_glNamedProgramLocalParameterI4uiEXT(program, target, index, x, y, z, w)
}
public
func glNamedProgramLocalParameterI4uiEXT(program:GL.UInt, target:GL.Enum, index:GL.UInt, x:GL.UInt, y:GL.UInt, z:GL.UInt, w:GL.UInt)
{
    fp_glNamedProgramLocalParameterI4uiEXT(program, target, index, x, y, z, w)
}
public
func glNamedProgramLocalParameterI4uiEXT(_ program:GL.UInt, _ target:GL.Enum, _ index:GL.UInt, _ x:GL.UInt, _ y:GL.UInt, _ z:GL.UInt, _ w:GL.UInt)
{
    fp_glNamedProgramLocalParameterI4uiEXT(program, target, index, x, y, z, w)
}

var fp_glNamedProgramLocalParameterI4uivEXT:@convention(c) (GL.UInt, GL.Enum, GL.UInt, UnsafePointer<GL.UInt>?) -> () = load_glNamedProgramLocalParameterI4uivEXT
func load_glNamedProgramLocalParameterI4uivEXT(program:GL.UInt, target:GL.Enum, index:GL.UInt, params:UnsafePointer<GL.UInt>?)
{
    fp_glNamedProgramLocalParameterI4uivEXT = unsafeBitCast(get_fp("glNamedProgramLocalParameterI4uivEXT", support: [ss143]), to: Swift.type(of: fp_glNamedProgramLocalParameterI4uivEXT))
    fp_glNamedProgramLocalParameterI4uivEXT(program, target, index, params)
}
public
func glNamedProgramLocalParameterI4uivEXT(program:GL.UInt, target:GL.Enum, index:GL.UInt, params:UnsafePointer<GL.UInt>?)
{
    fp_glNamedProgramLocalParameterI4uivEXT(program, target, index, params)
}
public
func glNamedProgramLocalParameterI4uivEXT(_ program:GL.UInt, _ target:GL.Enum, _ index:GL.UInt, _ params:UnsafePointer<GL.UInt>?)
{
    fp_glNamedProgramLocalParameterI4uivEXT(program, target, index, params)
}

var fp_glNamedProgramLocalParameters4fvEXT:@convention(c) (GL.UInt, GL.Enum, GL.UInt, GL.Size, UnsafePointer<GL.Float>?) -> () = load_glNamedProgramLocalParameters4fvEXT
func load_glNamedProgramLocalParameters4fvEXT(program:GL.UInt, target:GL.Enum, index:GL.UInt, count:GL.Size, params:UnsafePointer<GL.Float>?)
{
    fp_glNamedProgramLocalParameters4fvEXT = unsafeBitCast(get_fp("glNamedProgramLocalParameters4fvEXT", support: [ss143]), to: Swift.type(of: fp_glNamedProgramLocalParameters4fvEXT))
    fp_glNamedProgramLocalParameters4fvEXT(program, target, index, count, params)
}
public
func glNamedProgramLocalParameters4fvEXT(program:GL.UInt, target:GL.Enum, index:GL.UInt, count:GL.Size, params:UnsafePointer<GL.Float>?)
{
    fp_glNamedProgramLocalParameters4fvEXT(program, target, index, count, params)
}
public
func glNamedProgramLocalParameters4fvEXT(_ program:GL.UInt, _ target:GL.Enum, _ index:GL.UInt, _ count:GL.Size, _ params:UnsafePointer<GL.Float>?)
{
    fp_glNamedProgramLocalParameters4fvEXT(program, target, index, count, params)
}

var fp_glNamedProgramLocalParametersI4ivEXT:@convention(c) (GL.UInt, GL.Enum, GL.UInt, GL.Size, UnsafePointer<GL.Int>?) -> () = load_glNamedProgramLocalParametersI4ivEXT
func load_glNamedProgramLocalParametersI4ivEXT(program:GL.UInt, target:GL.Enum, index:GL.UInt, count:GL.Size, params:UnsafePointer<GL.Int>?)
{
    fp_glNamedProgramLocalParametersI4ivEXT = unsafeBitCast(get_fp("glNamedProgramLocalParametersI4ivEXT", support: [ss143]), to: Swift.type(of: fp_glNamedProgramLocalParametersI4ivEXT))
    fp_glNamedProgramLocalParametersI4ivEXT(program, target, index, count, params)
}
public
func glNamedProgramLocalParametersI4ivEXT(program:GL.UInt, target:GL.Enum, index:GL.UInt, count:GL.Size, params:UnsafePointer<GL.Int>?)
{
    fp_glNamedProgramLocalParametersI4ivEXT(program, target, index, count, params)
}
public
func glNamedProgramLocalParametersI4ivEXT(_ program:GL.UInt, _ target:GL.Enum, _ index:GL.UInt, _ count:GL.Size, _ params:UnsafePointer<GL.Int>?)
{
    fp_glNamedProgramLocalParametersI4ivEXT(program, target, index, count, params)
}

var fp_glNamedProgramLocalParametersI4uivEXT:@convention(c) (GL.UInt, GL.Enum, GL.UInt, GL.Size, UnsafePointer<GL.UInt>?) -> () = load_glNamedProgramLocalParametersI4uivEXT
func load_glNamedProgramLocalParametersI4uivEXT(program:GL.UInt, target:GL.Enum, index:GL.UInt, count:GL.Size, params:UnsafePointer<GL.UInt>?)
{
    fp_glNamedProgramLocalParametersI4uivEXT = unsafeBitCast(get_fp("glNamedProgramLocalParametersI4uivEXT", support: [ss143]), to: Swift.type(of: fp_glNamedProgramLocalParametersI4uivEXT))
    fp_glNamedProgramLocalParametersI4uivEXT(program, target, index, count, params)
}
public
func glNamedProgramLocalParametersI4uivEXT(program:GL.UInt, target:GL.Enum, index:GL.UInt, count:GL.Size, params:UnsafePointer<GL.UInt>?)
{
    fp_glNamedProgramLocalParametersI4uivEXT(program, target, index, count, params)
}
public
func glNamedProgramLocalParametersI4uivEXT(_ program:GL.UInt, _ target:GL.Enum, _ index:GL.UInt, _ count:GL.Size, _ params:UnsafePointer<GL.UInt>?)
{
    fp_glNamedProgramLocalParametersI4uivEXT(program, target, index, count, params)
}

var fp_glNamedProgramStringEXT:@convention(c) (GL.UInt, GL.Enum, GL.Enum, GL.Size, UnsafeRawPointer?) -> () = load_glNamedProgramStringEXT
func load_glNamedProgramStringEXT(program:GL.UInt, target:GL.Enum, format:GL.Enum, len:GL.Size, string:UnsafeRawPointer?)
{
    fp_glNamedProgramStringEXT = unsafeBitCast(get_fp("glNamedProgramStringEXT", support: [ss143]), to: Swift.type(of: fp_glNamedProgramStringEXT))
    fp_glNamedProgramStringEXT(program, target, format, len, string)
}
public
func glNamedProgramStringEXT(program:GL.UInt, target:GL.Enum, format:GL.Enum, len:GL.Size, string:UnsafeRawPointer?)
{
    fp_glNamedProgramStringEXT(program, target, format, len, string)
}
public
func glNamedProgramStringEXT(_ program:GL.UInt, _ target:GL.Enum, _ format:GL.Enum, _ len:GL.Size, _ string:UnsafeRawPointer?)
{
    fp_glNamedProgramStringEXT(program, target, format, len, string)
}

var fp_glNamedRenderbufferStorage:@convention(c) (GL.UInt, GL.Enum, GL.Size, GL.Size) -> () = load_glNamedRenderbufferStorage
func load_glNamedRenderbufferStorage(renderbuffer:GL.UInt, internalformat:GL.Enum, width:GL.Size, height:GL.Size)
{
    fp_glNamedRenderbufferStorage = unsafeBitCast(get_fp("glNamedRenderbufferStorage", support: [ss363, ss42]), to: Swift.type(of: fp_glNamedRenderbufferStorage))
    fp_glNamedRenderbufferStorage(renderbuffer, internalformat, width, height)
}
public
func glNamedRenderbufferStorage(renderbuffer:GL.UInt, internalformat:GL.Enum, width:GL.Size, height:GL.Size)
{
    fp_glNamedRenderbufferStorage(renderbuffer, internalformat, width, height)
}
public
func glNamedRenderbufferStorage(_ renderbuffer:GL.UInt, _ internalformat:GL.Enum, _ width:GL.Size, _ height:GL.Size)
{
    fp_glNamedRenderbufferStorage(renderbuffer, internalformat, width, height)
}

var fp_glNamedRenderbufferStorageEXT:@convention(c) (GL.UInt, GL.Enum, GL.Size, GL.Size) -> () = load_glNamedRenderbufferStorageEXT
func load_glNamedRenderbufferStorageEXT(renderbuffer:GL.UInt, internalformat:GL.Enum, width:GL.Size, height:GL.Size)
{
    fp_glNamedRenderbufferStorageEXT = unsafeBitCast(get_fp("glNamedRenderbufferStorageEXT", support: [ss143]), to: Swift.type(of: fp_glNamedRenderbufferStorageEXT))
    fp_glNamedRenderbufferStorageEXT(renderbuffer, internalformat, width, height)
}
public
func glNamedRenderbufferStorageEXT(renderbuffer:GL.UInt, internalformat:GL.Enum, width:GL.Size, height:GL.Size)
{
    fp_glNamedRenderbufferStorageEXT(renderbuffer, internalformat, width, height)
}
public
func glNamedRenderbufferStorageEXT(_ renderbuffer:GL.UInt, _ internalformat:GL.Enum, _ width:GL.Size, _ height:GL.Size)
{
    fp_glNamedRenderbufferStorageEXT(renderbuffer, internalformat, width, height)
}

var fp_glNamedRenderbufferStorageMultisample:@convention(c) (GL.UInt, GL.Size, GL.Enum, GL.Size, GL.Size) -> () = load_glNamedRenderbufferStorageMultisample
func load_glNamedRenderbufferStorageMultisample(renderbuffer:GL.UInt, samples:GL.Size, internalformat:GL.Enum, width:GL.Size, height:GL.Size)
{
    fp_glNamedRenderbufferStorageMultisample = unsafeBitCast(get_fp("glNamedRenderbufferStorageMultisample", support: [ss363, ss42]), to: Swift.type(of: fp_glNamedRenderbufferStorageMultisample))
    fp_glNamedRenderbufferStorageMultisample(renderbuffer, samples, internalformat, width, height)
}
public
func glNamedRenderbufferStorageMultisample(renderbuffer:GL.UInt, samples:GL.Size, internalformat:GL.Enum, width:GL.Size, height:GL.Size)
{
    fp_glNamedRenderbufferStorageMultisample(renderbuffer, samples, internalformat, width, height)
}
public
func glNamedRenderbufferStorageMultisample(_ renderbuffer:GL.UInt, _ samples:GL.Size, _ internalformat:GL.Enum, _ width:GL.Size, _ height:GL.Size)
{
    fp_glNamedRenderbufferStorageMultisample(renderbuffer, samples, internalformat, width, height)
}

var fp_glNamedRenderbufferStorageMultisampleCoverageEXT:@convention(c) (GL.UInt, GL.Size, GL.Size, GL.Enum, GL.Size, GL.Size) -> () = load_glNamedRenderbufferStorageMultisampleCoverageEXT
func load_glNamedRenderbufferStorageMultisampleCoverageEXT(renderbuffer:GL.UInt, coverageSamples:GL.Size, colorSamples:GL.Size, internalformat:GL.Enum, width:GL.Size, height:GL.Size)
{
    fp_glNamedRenderbufferStorageMultisampleCoverageEXT = unsafeBitCast(get_fp("glNamedRenderbufferStorageMultisampleCoverageEXT", support: [ss143]), to: Swift.type(of: fp_glNamedRenderbufferStorageMultisampleCoverageEXT))
    fp_glNamedRenderbufferStorageMultisampleCoverageEXT(renderbuffer, coverageSamples, colorSamples, internalformat, width, height)
}
public
func glNamedRenderbufferStorageMultisampleCoverageEXT(renderbuffer:GL.UInt, coverageSamples:GL.Size, colorSamples:GL.Size, internalformat:GL.Enum, width:GL.Size, height:GL.Size)
{
    fp_glNamedRenderbufferStorageMultisampleCoverageEXT(renderbuffer, coverageSamples, colorSamples, internalformat, width, height)
}
public
func glNamedRenderbufferStorageMultisampleCoverageEXT(_ renderbuffer:GL.UInt, _ coverageSamples:GL.Size, _ colorSamples:GL.Size, _ internalformat:GL.Enum, _ width:GL.Size, _ height:GL.Size)
{
    fp_glNamedRenderbufferStorageMultisampleCoverageEXT(renderbuffer, coverageSamples, colorSamples, internalformat, width, height)
}

var fp_glNamedRenderbufferStorageMultisampleEXT:@convention(c) (GL.UInt, GL.Size, GL.Enum, GL.Size, GL.Size) -> () = load_glNamedRenderbufferStorageMultisampleEXT
func load_glNamedRenderbufferStorageMultisampleEXT(renderbuffer:GL.UInt, samples:GL.Size, internalformat:GL.Enum, width:GL.Size, height:GL.Size)
{
    fp_glNamedRenderbufferStorageMultisampleEXT = unsafeBitCast(get_fp("glNamedRenderbufferStorageMultisampleEXT", support: [ss143]), to: Swift.type(of: fp_glNamedRenderbufferStorageMultisampleEXT))
    fp_glNamedRenderbufferStorageMultisampleEXT(renderbuffer, samples, internalformat, width, height)
}
public
func glNamedRenderbufferStorageMultisampleEXT(renderbuffer:GL.UInt, samples:GL.Size, internalformat:GL.Enum, width:GL.Size, height:GL.Size)
{
    fp_glNamedRenderbufferStorageMultisampleEXT(renderbuffer, samples, internalformat, width, height)
}
public
func glNamedRenderbufferStorageMultisampleEXT(_ renderbuffer:GL.UInt, _ samples:GL.Size, _ internalformat:GL.Enum, _ width:GL.Size, _ height:GL.Size)
{
    fp_glNamedRenderbufferStorageMultisampleEXT(renderbuffer, samples, internalformat, width, height)
}

var fp_glNamedStringARB:@convention(c) (GL.Enum, GL.Int, UnsafePointer<GL.Char>?, GL.Int, UnsafePointer<GL.Char>?) -> () = load_glNamedStringARB
func load_glNamedStringARB(type:GL.Enum, namelen:GL.Int, name:UnsafePointer<GL.Char>?, stringlen:GL.Int, string:UnsafePointer<GL.Char>?)
{
    fp_glNamedStringARB = unsafeBitCast(get_fp("glNamedStringARB", support: [ss86]), to: Swift.type(of: fp_glNamedStringARB))
    fp_glNamedStringARB(type, namelen, name, stringlen, string)
}
public
func glNamedStringARB(type:GL.Enum, namelen:GL.Int, name:UnsafePointer<GL.Char>?, stringlen:GL.Int, string:UnsafePointer<GL.Char>?)
{
    fp_glNamedStringARB(type, namelen, name, stringlen, string)
}
public
func glNamedStringARB(_ type:GL.Enum, _ namelen:GL.Int, _ name:UnsafePointer<GL.Char>?, _ stringlen:GL.Int, _ string:UnsafePointer<GL.Char>?)
{
    fp_glNamedStringARB(type, namelen, name, stringlen, string)
}

var fp_glNewList:@convention(c) (GL.UInt, GL.Enum) -> () = load_glNewList
func load_glNewList(list:GL.UInt, mode:GL.Enum)
{
    fp_glNewList = unsafeBitCast(get_fp("glNewList", support: [ss346, ss369]), to: Swift.type(of: fp_glNewList))
    fp_glNewList(list, mode)
}
public
func glNewList(list:GL.UInt, mode:GL.Enum)
{
    fp_glNewList(list, mode)
}
public
func glNewList(_ list:GL.UInt, _ mode:GL.Enum)
{
    fp_glNewList(list, mode)
}

var fp_glNewObjectBufferATI:@convention(c) (GL.Size, UnsafeRawPointer?, GL.Enum) -> GL.UInt = load_glNewObjectBufferATI
func load_glNewObjectBufferATI(size:GL.Size, pointer:UnsafeRawPointer?, usage:GL.Enum) -> GL.UInt
{
    fp_glNewObjectBufferATI = unsafeBitCast(get_fp("glNewObjectBufferATI", support: [ss122]), to: Swift.type(of: fp_glNewObjectBufferATI))
    return fp_glNewObjectBufferATI(size, pointer, usage)
}
public
func glNewObjectBufferATI(size:GL.Size, pointer:UnsafeRawPointer?, usage:GL.Enum) -> GL.UInt
{
    return fp_glNewObjectBufferATI(size, pointer, usage)
}
public
func glNewObjectBufferATI(_ size:GL.Size, _ pointer:UnsafeRawPointer?, _ usage:GL.Enum) -> GL.UInt
{
    return fp_glNewObjectBufferATI(size, pointer, usage)
}

var fp_glNormal3b:@convention(c) (GL.Byte, GL.Byte, GL.Byte) -> () = load_glNormal3b
func load_glNormal3b(nx:GL.Byte, ny:GL.Byte, nz:GL.Byte)
{
    fp_glNormal3b = unsafeBitCast(get_fp("glNormal3b", support: [ss346, ss369]), to: Swift.type(of: fp_glNormal3b))
    fp_glNormal3b(nx, ny, nz)
}
public
func glNormal3b(nx:GL.Byte, ny:GL.Byte, nz:GL.Byte)
{
    fp_glNormal3b(nx, ny, nz)
}
public
func glNormal3b(_ nx:GL.Byte, _ ny:GL.Byte, _ nz:GL.Byte)
{
    fp_glNormal3b(nx, ny, nz)
}

var fp_glNormal3bv:@convention(c) (UnsafePointer<GL.Byte>?) -> () = load_glNormal3bv
func load_glNormal3bv(v:UnsafePointer<GL.Byte>?)
{
    fp_glNormal3bv = unsafeBitCast(get_fp("glNormal3bv", support: [ss346, ss369]), to: Swift.type(of: fp_glNormal3bv))
    fp_glNormal3bv(v)
}
public
func glNormal3bv(v:UnsafePointer<GL.Byte>?)
{
    fp_glNormal3bv(v)
}
public
func glNormal3bv(_ v:UnsafePointer<GL.Byte>?)
{
    fp_glNormal3bv(v)
}

var fp_glNormal3d:@convention(c) (GL.Double, GL.Double, GL.Double) -> () = load_glNormal3d
func load_glNormal3d(nx:GL.Double, ny:GL.Double, nz:GL.Double)
{
    fp_glNormal3d = unsafeBitCast(get_fp("glNormal3d", support: [ss346, ss369]), to: Swift.type(of: fp_glNormal3d))
    fp_glNormal3d(nx, ny, nz)
}
public
func glNormal3d(nx:GL.Double, ny:GL.Double, nz:GL.Double)
{
    fp_glNormal3d(nx, ny, nz)
}
public
func glNormal3d(_ nx:GL.Double, _ ny:GL.Double, _ nz:GL.Double)
{
    fp_glNormal3d(nx, ny, nz)
}

var fp_glNormal3dv:@convention(c) (UnsafePointer<GL.Double>?) -> () = load_glNormal3dv
func load_glNormal3dv(v:UnsafePointer<GL.Double>?)
{
    fp_glNormal3dv = unsafeBitCast(get_fp("glNormal3dv", support: [ss346, ss369]), to: Swift.type(of: fp_glNormal3dv))
    fp_glNormal3dv(v)
}
public
func glNormal3dv(v:UnsafePointer<GL.Double>?)
{
    fp_glNormal3dv(v)
}
public
func glNormal3dv(_ v:UnsafePointer<GL.Double>?)
{
    fp_glNormal3dv(v)
}

var fp_glNormal3f:@convention(c) (GL.Float, GL.Float, GL.Float) -> () = load_glNormal3f
func load_glNormal3f(nx:GL.Float, ny:GL.Float, nz:GL.Float)
{
    fp_glNormal3f = unsafeBitCast(get_fp("glNormal3f", support: [ss346, ss369, ss364]), to: Swift.type(of: fp_glNormal3f))
    fp_glNormal3f(nx, ny, nz)
}
public
func glNormal3f(nx:GL.Float, ny:GL.Float, nz:GL.Float)
{
    fp_glNormal3f(nx, ny, nz)
}
public
func glNormal3f(_ nx:GL.Float, _ ny:GL.Float, _ nz:GL.Float)
{
    fp_glNormal3f(nx, ny, nz)
}

var fp_glNormal3fVertex3fSUN:@convention(c) (GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float) -> () = load_glNormal3fVertex3fSUN
func load_glNormal3fVertex3fSUN(nx:GL.Float, ny:GL.Float, nz:GL.Float, x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glNormal3fVertex3fSUN = unsafeBitCast(get_fp("glNormal3fVertex3fSUN", support: [ss344]), to: Swift.type(of: fp_glNormal3fVertex3fSUN))
    fp_glNormal3fVertex3fSUN(nx, ny, nz, x, y, z)
}
public
func glNormal3fVertex3fSUN(nx:GL.Float, ny:GL.Float, nz:GL.Float, x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glNormal3fVertex3fSUN(nx, ny, nz, x, y, z)
}
public
func glNormal3fVertex3fSUN(_ nx:GL.Float, _ ny:GL.Float, _ nz:GL.Float, _ x:GL.Float, _ y:GL.Float, _ z:GL.Float)
{
    fp_glNormal3fVertex3fSUN(nx, ny, nz, x, y, z)
}

var fp_glNormal3fVertex3fvSUN:@convention(c) (UnsafePointer<GL.Float>?, UnsafePointer<GL.Float>?) -> () = load_glNormal3fVertex3fvSUN
func load_glNormal3fVertex3fvSUN(n:UnsafePointer<GL.Float>?, v:UnsafePointer<GL.Float>?)
{
    fp_glNormal3fVertex3fvSUN = unsafeBitCast(get_fp("glNormal3fVertex3fvSUN", support: [ss344]), to: Swift.type(of: fp_glNormal3fVertex3fvSUN))
    fp_glNormal3fVertex3fvSUN(n, v)
}
public
func glNormal3fVertex3fvSUN(n:UnsafePointer<GL.Float>?, v:UnsafePointer<GL.Float>?)
{
    fp_glNormal3fVertex3fvSUN(n, v)
}
public
func glNormal3fVertex3fvSUN(_ n:UnsafePointer<GL.Float>?, _ v:UnsafePointer<GL.Float>?)
{
    fp_glNormal3fVertex3fvSUN(n, v)
}

var fp_glNormal3fv:@convention(c) (UnsafePointer<GL.Float>?) -> () = load_glNormal3fv
func load_glNormal3fv(v:UnsafePointer<GL.Float>?)
{
    fp_glNormal3fv = unsafeBitCast(get_fp("glNormal3fv", support: [ss346, ss369]), to: Swift.type(of: fp_glNormal3fv))
    fp_glNormal3fv(v)
}
public
func glNormal3fv(v:UnsafePointer<GL.Float>?)
{
    fp_glNormal3fv(v)
}
public
func glNormal3fv(_ v:UnsafePointer<GL.Float>?)
{
    fp_glNormal3fv(v)
}

var fp_glNormal3hNV:@convention(c) (GL.HalfNV, GL.HalfNV, GL.HalfNV) -> () = load_glNormal3hNV
func load_glNormal3hNV(nx:GL.HalfNV, ny:GL.HalfNV, nz:GL.HalfNV)
{
    fp_glNormal3hNV = unsafeBitCast(get_fp("glNormal3hNV", support: [ss253]), to: Swift.type(of: fp_glNormal3hNV))
    fp_glNormal3hNV(nx, ny, nz)
}
public
func glNormal3hNV(nx:GL.HalfNV, ny:GL.HalfNV, nz:GL.HalfNV)
{
    fp_glNormal3hNV(nx, ny, nz)
}
public
func glNormal3hNV(_ nx:GL.HalfNV, _ ny:GL.HalfNV, _ nz:GL.HalfNV)
{
    fp_glNormal3hNV(nx, ny, nz)
}

var fp_glNormal3hvNV:@convention(c) (UnsafePointer<GL.HalfNV>?) -> () = load_glNormal3hvNV
func load_glNormal3hvNV(v:UnsafePointer<GL.HalfNV>?)
{
    fp_glNormal3hvNV = unsafeBitCast(get_fp("glNormal3hvNV", support: [ss253]), to: Swift.type(of: fp_glNormal3hvNV))
    fp_glNormal3hvNV(v)
}
public
func glNormal3hvNV(v:UnsafePointer<GL.HalfNV>?)
{
    fp_glNormal3hvNV(v)
}
public
func glNormal3hvNV(_ v:UnsafePointer<GL.HalfNV>?)
{
    fp_glNormal3hvNV(v)
}

var fp_glNormal3i:@convention(c) (GL.Int, GL.Int, GL.Int) -> () = load_glNormal3i
func load_glNormal3i(nx:GL.Int, ny:GL.Int, nz:GL.Int)
{
    fp_glNormal3i = unsafeBitCast(get_fp("glNormal3i", support: [ss346, ss369]), to: Swift.type(of: fp_glNormal3i))
    fp_glNormal3i(nx, ny, nz)
}
public
func glNormal3i(nx:GL.Int, ny:GL.Int, nz:GL.Int)
{
    fp_glNormal3i(nx, ny, nz)
}
public
func glNormal3i(_ nx:GL.Int, _ ny:GL.Int, _ nz:GL.Int)
{
    fp_glNormal3i(nx, ny, nz)
}

var fp_glNormal3iv:@convention(c) (UnsafePointer<GL.Int>?) -> () = load_glNormal3iv
func load_glNormal3iv(v:UnsafePointer<GL.Int>?)
{
    fp_glNormal3iv = unsafeBitCast(get_fp("glNormal3iv", support: [ss346, ss369]), to: Swift.type(of: fp_glNormal3iv))
    fp_glNormal3iv(v)
}
public
func glNormal3iv(v:UnsafePointer<GL.Int>?)
{
    fp_glNormal3iv(v)
}
public
func glNormal3iv(_ v:UnsafePointer<GL.Int>?)
{
    fp_glNormal3iv(v)
}

var fp_glNormal3s:@convention(c) (GL.Short, GL.Short, GL.Short) -> () = load_glNormal3s
func load_glNormal3s(nx:GL.Short, ny:GL.Short, nz:GL.Short)
{
    fp_glNormal3s = unsafeBitCast(get_fp("glNormal3s", support: [ss346, ss369]), to: Swift.type(of: fp_glNormal3s))
    fp_glNormal3s(nx, ny, nz)
}
public
func glNormal3s(nx:GL.Short, ny:GL.Short, nz:GL.Short)
{
    fp_glNormal3s(nx, ny, nz)
}
public
func glNormal3s(_ nx:GL.Short, _ ny:GL.Short, _ nz:GL.Short)
{
    fp_glNormal3s(nx, ny, nz)
}

var fp_glNormal3sv:@convention(c) (UnsafePointer<GL.Short>?) -> () = load_glNormal3sv
func load_glNormal3sv(v:UnsafePointer<GL.Short>?)
{
    fp_glNormal3sv = unsafeBitCast(get_fp("glNormal3sv", support: [ss346, ss369]), to: Swift.type(of: fp_glNormal3sv))
    fp_glNormal3sv(v)
}
public
func glNormal3sv(v:UnsafePointer<GL.Short>?)
{
    fp_glNormal3sv(v)
}
public
func glNormal3sv(_ v:UnsafePointer<GL.Short>?)
{
    fp_glNormal3sv(v)
}

var fp_glNormal3x:@convention(c) (GL.Fixed, GL.Fixed, GL.Fixed) -> () = load_glNormal3x
func load_glNormal3x(nx:GL.Fixed, ny:GL.Fixed, nz:GL.Fixed)
{
    fp_glNormal3x = unsafeBitCast(get_fp("glNormal3x", support: [ss364]), to: Swift.type(of: fp_glNormal3x))
    fp_glNormal3x(nx, ny, nz)
}
public
func glNormal3x(nx:GL.Fixed, ny:GL.Fixed, nz:GL.Fixed)
{
    fp_glNormal3x(nx, ny, nz)
}
public
func glNormal3x(_ nx:GL.Fixed, _ ny:GL.Fixed, _ nz:GL.Fixed)
{
    fp_glNormal3x(nx, ny, nz)
}

var fp_glNormal3xOES:@convention(c) (GL.Fixed, GL.Fixed, GL.Fixed) -> () = load_glNormal3xOES
func load_glNormal3xOES(nx:GL.Fixed, ny:GL.Fixed, nz:GL.Fixed)
{
    fp_glNormal3xOES = unsafeBitCast(get_fp("glNormal3xOES", support: [ss292]), to: Swift.type(of: fp_glNormal3xOES))
    fp_glNormal3xOES(nx, ny, nz)
}
public
func glNormal3xOES(nx:GL.Fixed, ny:GL.Fixed, nz:GL.Fixed)
{
    fp_glNormal3xOES(nx, ny, nz)
}
public
func glNormal3xOES(_ nx:GL.Fixed, _ ny:GL.Fixed, _ nz:GL.Fixed)
{
    fp_glNormal3xOES(nx, ny, nz)
}

var fp_glNormal3xvOES:@convention(c) (UnsafePointer<GL.Fixed>?) -> () = load_glNormal3xvOES
func load_glNormal3xvOES(coords:UnsafePointer<GL.Fixed>?)
{
    fp_glNormal3xvOES = unsafeBitCast(get_fp("glNormal3xvOES", support: [ss292]), to: Swift.type(of: fp_glNormal3xvOES))
    fp_glNormal3xvOES(coords)
}
public
func glNormal3xvOES(coords:UnsafePointer<GL.Fixed>?)
{
    fp_glNormal3xvOES(coords)
}
public
func glNormal3xvOES(_ coords:UnsafePointer<GL.Fixed>?)
{
    fp_glNormal3xvOES(coords)
}

var fp_glNormalFormatNV:@convention(c) (GL.Enum, GL.Size) -> () = load_glNormalFormatNV
func load_glNormalFormatNV(type:GL.Enum, stride:GL.Size)
{
    fp_glNormalFormatNV = unsafeBitCast(get_fp("glNormalFormatNV", support: [ss277]), to: Swift.type(of: fp_glNormalFormatNV))
    fp_glNormalFormatNV(type, stride)
}
public
func glNormalFormatNV(type:GL.Enum, stride:GL.Size)
{
    fp_glNormalFormatNV(type, stride)
}
public
func glNormalFormatNV(_ type:GL.Enum, _ stride:GL.Size)
{
    fp_glNormalFormatNV(type, stride)
}

var fp_glNormalP3ui:@convention(c) (GL.Enum, GL.UInt) -> () = load_glNormalP3ui
func load_glNormalP3ui(type:GL.Enum, coords:GL.UInt)
{
    fp_glNormalP3ui = unsafeBitCast(get_fp("glNormalP3ui", support: [ss357, ss112]), to: Swift.type(of: fp_glNormalP3ui))
    fp_glNormalP3ui(type, coords)
}
public
func glNormalP3ui(type:GL.Enum, coords:GL.UInt)
{
    fp_glNormalP3ui(type, coords)
}
public
func glNormalP3ui(_ type:GL.Enum, _ coords:GL.UInt)
{
    fp_glNormalP3ui(type, coords)
}

var fp_glNormalP3uiv:@convention(c) (GL.Enum, UnsafePointer<GL.UInt>?) -> () = load_glNormalP3uiv
func load_glNormalP3uiv(type:GL.Enum, coords:UnsafePointer<GL.UInt>?)
{
    fp_glNormalP3uiv = unsafeBitCast(get_fp("glNormalP3uiv", support: [ss357, ss112]), to: Swift.type(of: fp_glNormalP3uiv))
    fp_glNormalP3uiv(type, coords)
}
public
func glNormalP3uiv(type:GL.Enum, coords:UnsafePointer<GL.UInt>?)
{
    fp_glNormalP3uiv(type, coords)
}
public
func glNormalP3uiv(_ type:GL.Enum, _ coords:UnsafePointer<GL.UInt>?)
{
    fp_glNormalP3uiv(type, coords)
}

var fp_glNormalPointer:@convention(c) (GL.Enum, GL.Size, UnsafeRawPointer?) -> () = load_glNormalPointer
func load_glNormalPointer(type:GL.Enum, stride:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glNormalPointer = unsafeBitCast(get_fp("glNormalPointer", support: [ss347, ss369, ss364]), to: Swift.type(of: fp_glNormalPointer))
    fp_glNormalPointer(type, stride, pointer)
}
public
func glNormalPointer(type:GL.Enum, stride:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glNormalPointer(type, stride, pointer)
}
public
func glNormalPointer(_ type:GL.Enum, _ stride:GL.Size, _ pointer:UnsafeRawPointer?)
{
    fp_glNormalPointer(type, stride, pointer)
}

var fp_glNormalPointerEXT:@convention(c) (GL.Enum, GL.Size, GL.Size, UnsafeRawPointer?) -> () = load_glNormalPointerEXT
func load_glNormalPointerEXT(type:GL.Enum, stride:GL.Size, count:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glNormalPointerEXT = unsafeBitCast(get_fp("glNormalPointerEXT", support: [ss202]), to: Swift.type(of: fp_glNormalPointerEXT))
    fp_glNormalPointerEXT(type, stride, count, pointer)
}
public
func glNormalPointerEXT(type:GL.Enum, stride:GL.Size, count:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glNormalPointerEXT(type, stride, count, pointer)
}
public
func glNormalPointerEXT(_ type:GL.Enum, _ stride:GL.Size, _ count:GL.Size, _ pointer:UnsafeRawPointer?)
{
    fp_glNormalPointerEXT(type, stride, count, pointer)
}

var fp_glNormalPointerListIBM:@convention(c) (GL.Enum, GL.Int, UnsafeMutablePointer<UnsafeRawPointer?>?, GL.Int) -> () = load_glNormalPointerListIBM
func load_glNormalPointerListIBM(type:GL.Enum, stride:GL.Int, pointer:UnsafeMutablePointer<UnsafeRawPointer?>?, ptrstride:GL.Int)
{
    fp_glNormalPointerListIBM = unsafeBitCast(get_fp("glNormalPointerListIBM", support: [ss212]), to: Swift.type(of: fp_glNormalPointerListIBM))
    fp_glNormalPointerListIBM(type, stride, pointer, ptrstride)
}
public
func glNormalPointerListIBM(type:GL.Enum, stride:GL.Int, pointer:UnsafeMutablePointer<UnsafeRawPointer?>?, ptrstride:GL.Int)
{
    fp_glNormalPointerListIBM(type, stride, pointer, ptrstride)
}
public
func glNormalPointerListIBM(_ type:GL.Enum, _ stride:GL.Int, _ pointer:UnsafeMutablePointer<UnsafeRawPointer?>?, _ ptrstride:GL.Int)
{
    fp_glNormalPointerListIBM(type, stride, pointer, ptrstride)
}

var fp_glNormalPointervINTEL:@convention(c) (GL.Enum, UnsafeMutablePointer<UnsafeRawPointer?>?) -> () = load_glNormalPointervINTEL
func load_glNormalPointervINTEL(type:GL.Enum, pointer:UnsafeMutablePointer<UnsafeRawPointer?>?)
{
    fp_glNormalPointervINTEL = unsafeBitCast(get_fp("glNormalPointervINTEL", support: [ss218]), to: Swift.type(of: fp_glNormalPointervINTEL))
    fp_glNormalPointervINTEL(type, pointer)
}
public
func glNormalPointervINTEL(type:GL.Enum, pointer:UnsafeMutablePointer<UnsafeRawPointer?>?)
{
    fp_glNormalPointervINTEL(type, pointer)
}
public
func glNormalPointervINTEL(_ type:GL.Enum, _ pointer:UnsafeMutablePointer<UnsafeRawPointer?>?)
{
    fp_glNormalPointervINTEL(type, pointer)
}

var fp_glNormalStream3bATI:@convention(c) (GL.Enum, GL.Byte, GL.Byte, GL.Byte) -> () = load_glNormalStream3bATI
func load_glNormalStream3bATI(stream:GL.Enum, nx:GL.Byte, ny:GL.Byte, nz:GL.Byte)
{
    fp_glNormalStream3bATI = unsafeBitCast(get_fp("glNormalStream3bATI", support: [ss124]), to: Swift.type(of: fp_glNormalStream3bATI))
    fp_glNormalStream3bATI(stream, nx, ny, nz)
}
public
func glNormalStream3bATI(stream:GL.Enum, nx:GL.Byte, ny:GL.Byte, nz:GL.Byte)
{
    fp_glNormalStream3bATI(stream, nx, ny, nz)
}
public
func glNormalStream3bATI(_ stream:GL.Enum, _ nx:GL.Byte, _ ny:GL.Byte, _ nz:GL.Byte)
{
    fp_glNormalStream3bATI(stream, nx, ny, nz)
}

var fp_glNormalStream3bvATI:@convention(c) (GL.Enum, UnsafePointer<GL.Byte>?) -> () = load_glNormalStream3bvATI
func load_glNormalStream3bvATI(stream:GL.Enum, coords:UnsafePointer<GL.Byte>?)
{
    fp_glNormalStream3bvATI = unsafeBitCast(get_fp("glNormalStream3bvATI", support: [ss124]), to: Swift.type(of: fp_glNormalStream3bvATI))
    fp_glNormalStream3bvATI(stream, coords)
}
public
func glNormalStream3bvATI(stream:GL.Enum, coords:UnsafePointer<GL.Byte>?)
{
    fp_glNormalStream3bvATI(stream, coords)
}
public
func glNormalStream3bvATI(_ stream:GL.Enum, _ coords:UnsafePointer<GL.Byte>?)
{
    fp_glNormalStream3bvATI(stream, coords)
}

var fp_glNormalStream3dATI:@convention(c) (GL.Enum, GL.Double, GL.Double, GL.Double) -> () = load_glNormalStream3dATI
func load_glNormalStream3dATI(stream:GL.Enum, nx:GL.Double, ny:GL.Double, nz:GL.Double)
{
    fp_glNormalStream3dATI = unsafeBitCast(get_fp("glNormalStream3dATI", support: [ss124]), to: Swift.type(of: fp_glNormalStream3dATI))
    fp_glNormalStream3dATI(stream, nx, ny, nz)
}
public
func glNormalStream3dATI(stream:GL.Enum, nx:GL.Double, ny:GL.Double, nz:GL.Double)
{
    fp_glNormalStream3dATI(stream, nx, ny, nz)
}
public
func glNormalStream3dATI(_ stream:GL.Enum, _ nx:GL.Double, _ ny:GL.Double, _ nz:GL.Double)
{
    fp_glNormalStream3dATI(stream, nx, ny, nz)
}

var fp_glNormalStream3dvATI:@convention(c) (GL.Enum, UnsafePointer<GL.Double>?) -> () = load_glNormalStream3dvATI
func load_glNormalStream3dvATI(stream:GL.Enum, coords:UnsafePointer<GL.Double>?)
{
    fp_glNormalStream3dvATI = unsafeBitCast(get_fp("glNormalStream3dvATI", support: [ss124]), to: Swift.type(of: fp_glNormalStream3dvATI))
    fp_glNormalStream3dvATI(stream, coords)
}
public
func glNormalStream3dvATI(stream:GL.Enum, coords:UnsafePointer<GL.Double>?)
{
    fp_glNormalStream3dvATI(stream, coords)
}
public
func glNormalStream3dvATI(_ stream:GL.Enum, _ coords:UnsafePointer<GL.Double>?)
{
    fp_glNormalStream3dvATI(stream, coords)
}

var fp_glNormalStream3fATI:@convention(c) (GL.Enum, GL.Float, GL.Float, GL.Float) -> () = load_glNormalStream3fATI
func load_glNormalStream3fATI(stream:GL.Enum, nx:GL.Float, ny:GL.Float, nz:GL.Float)
{
    fp_glNormalStream3fATI = unsafeBitCast(get_fp("glNormalStream3fATI", support: [ss124]), to: Swift.type(of: fp_glNormalStream3fATI))
    fp_glNormalStream3fATI(stream, nx, ny, nz)
}
public
func glNormalStream3fATI(stream:GL.Enum, nx:GL.Float, ny:GL.Float, nz:GL.Float)
{
    fp_glNormalStream3fATI(stream, nx, ny, nz)
}
public
func glNormalStream3fATI(_ stream:GL.Enum, _ nx:GL.Float, _ ny:GL.Float, _ nz:GL.Float)
{
    fp_glNormalStream3fATI(stream, nx, ny, nz)
}

var fp_glNormalStream3fvATI:@convention(c) (GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glNormalStream3fvATI
func load_glNormalStream3fvATI(stream:GL.Enum, coords:UnsafePointer<GL.Float>?)
{
    fp_glNormalStream3fvATI = unsafeBitCast(get_fp("glNormalStream3fvATI", support: [ss124]), to: Swift.type(of: fp_glNormalStream3fvATI))
    fp_glNormalStream3fvATI(stream, coords)
}
public
func glNormalStream3fvATI(stream:GL.Enum, coords:UnsafePointer<GL.Float>?)
{
    fp_glNormalStream3fvATI(stream, coords)
}
public
func glNormalStream3fvATI(_ stream:GL.Enum, _ coords:UnsafePointer<GL.Float>?)
{
    fp_glNormalStream3fvATI(stream, coords)
}

var fp_glNormalStream3iATI:@convention(c) (GL.Enum, GL.Int, GL.Int, GL.Int) -> () = load_glNormalStream3iATI
func load_glNormalStream3iATI(stream:GL.Enum, nx:GL.Int, ny:GL.Int, nz:GL.Int)
{
    fp_glNormalStream3iATI = unsafeBitCast(get_fp("glNormalStream3iATI", support: [ss124]), to: Swift.type(of: fp_glNormalStream3iATI))
    fp_glNormalStream3iATI(stream, nx, ny, nz)
}
public
func glNormalStream3iATI(stream:GL.Enum, nx:GL.Int, ny:GL.Int, nz:GL.Int)
{
    fp_glNormalStream3iATI(stream, nx, ny, nz)
}
public
func glNormalStream3iATI(_ stream:GL.Enum, _ nx:GL.Int, _ ny:GL.Int, _ nz:GL.Int)
{
    fp_glNormalStream3iATI(stream, nx, ny, nz)
}

var fp_glNormalStream3ivATI:@convention(c) (GL.Enum, UnsafePointer<GL.Int>?) -> () = load_glNormalStream3ivATI
func load_glNormalStream3ivATI(stream:GL.Enum, coords:UnsafePointer<GL.Int>?)
{
    fp_glNormalStream3ivATI = unsafeBitCast(get_fp("glNormalStream3ivATI", support: [ss124]), to: Swift.type(of: fp_glNormalStream3ivATI))
    fp_glNormalStream3ivATI(stream, coords)
}
public
func glNormalStream3ivATI(stream:GL.Enum, coords:UnsafePointer<GL.Int>?)
{
    fp_glNormalStream3ivATI(stream, coords)
}
public
func glNormalStream3ivATI(_ stream:GL.Enum, _ coords:UnsafePointer<GL.Int>?)
{
    fp_glNormalStream3ivATI(stream, coords)
}

var fp_glNormalStream3sATI:@convention(c) (GL.Enum, GL.Short, GL.Short, GL.Short) -> () = load_glNormalStream3sATI
func load_glNormalStream3sATI(stream:GL.Enum, nx:GL.Short, ny:GL.Short, nz:GL.Short)
{
    fp_glNormalStream3sATI = unsafeBitCast(get_fp("glNormalStream3sATI", support: [ss124]), to: Swift.type(of: fp_glNormalStream3sATI))
    fp_glNormalStream3sATI(stream, nx, ny, nz)
}
public
func glNormalStream3sATI(stream:GL.Enum, nx:GL.Short, ny:GL.Short, nz:GL.Short)
{
    fp_glNormalStream3sATI(stream, nx, ny, nz)
}
public
func glNormalStream3sATI(_ stream:GL.Enum, _ nx:GL.Short, _ ny:GL.Short, _ nz:GL.Short)
{
    fp_glNormalStream3sATI(stream, nx, ny, nz)
}

var fp_glNormalStream3svATI:@convention(c) (GL.Enum, UnsafePointer<GL.Short>?) -> () = load_glNormalStream3svATI
func load_glNormalStream3svATI(stream:GL.Enum, coords:UnsafePointer<GL.Short>?)
{
    fp_glNormalStream3svATI = unsafeBitCast(get_fp("glNormalStream3svATI", support: [ss124]), to: Swift.type(of: fp_glNormalStream3svATI))
    fp_glNormalStream3svATI(stream, coords)
}
public
func glNormalStream3svATI(stream:GL.Enum, coords:UnsafePointer<GL.Short>?)
{
    fp_glNormalStream3svATI(stream, coords)
}
public
func glNormalStream3svATI(_ stream:GL.Enum, _ coords:UnsafePointer<GL.Short>?)
{
    fp_glNormalStream3svATI(stream, coords)
}

var fp_glObjectLabel:@convention(c) (GL.Enum, GL.UInt, GL.Size, UnsafePointer<GL.Char>?) -> () = load_glObjectLabel
func load_glObjectLabel(identifier:GL.Enum, name:GL.UInt, length:GL.Size, label:UnsafePointer<GL.Char>?)
{
    fp_glObjectLabel = unsafeBitCast(get_fp("glObjectLabel", support: [ss361, ss368, ss221]), to: Swift.type(of: fp_glObjectLabel))
    fp_glObjectLabel(identifier, name, length, label)
}
public
func glObjectLabel(identifier:GL.Enum, name:GL.UInt, length:GL.Size, label:UnsafePointer<GL.Char>?)
{
    fp_glObjectLabel(identifier, name, length, label)
}
public
func glObjectLabel(_ identifier:GL.Enum, _ name:GL.UInt, _ length:GL.Size, _ label:UnsafePointer<GL.Char>?)
{
    fp_glObjectLabel(identifier, name, length, label)
}

var fp_glObjectLabelKHR:@convention(c) (GL.Enum, GL.UInt, GL.Size, UnsafePointer<GL.Char>?) -> () = load_glObjectLabelKHR
func load_glObjectLabelKHR(identifier:GL.Enum, name:GL.UInt, length:GL.Size, label:UnsafePointer<GL.Char>?)
{
    fp_glObjectLabelKHR = unsafeBitCast(get_fp("glObjectLabelKHR", support: [ss221]), to: Swift.type(of: fp_glObjectLabelKHR))
    fp_glObjectLabelKHR(identifier, name, length, label)
}
public
func glObjectLabelKHR(identifier:GL.Enum, name:GL.UInt, length:GL.Size, label:UnsafePointer<GL.Char>?)
{
    fp_glObjectLabelKHR(identifier, name, length, label)
}
public
func glObjectLabelKHR(_ identifier:GL.Enum, _ name:GL.UInt, _ length:GL.Size, _ label:UnsafePointer<GL.Char>?)
{
    fp_glObjectLabelKHR(identifier, name, length, label)
}

var fp_glObjectPtrLabel:@convention(c) (UnsafeRawPointer?, GL.Size, UnsafePointer<GL.Char>?) -> () = load_glObjectPtrLabel
func load_glObjectPtrLabel(ptr:UnsafeRawPointer?, length:GL.Size, label:UnsafePointer<GL.Char>?)
{
    fp_glObjectPtrLabel = unsafeBitCast(get_fp("glObjectPtrLabel", support: [ss361, ss368, ss221]), to: Swift.type(of: fp_glObjectPtrLabel))
    fp_glObjectPtrLabel(ptr, length, label)
}
public
func glObjectPtrLabel(ptr:UnsafeRawPointer?, length:GL.Size, label:UnsafePointer<GL.Char>?)
{
    fp_glObjectPtrLabel(ptr, length, label)
}
public
func glObjectPtrLabel(_ ptr:UnsafeRawPointer?, _ length:GL.Size, _ label:UnsafePointer<GL.Char>?)
{
    fp_glObjectPtrLabel(ptr, length, label)
}

var fp_glObjectPtrLabelKHR:@convention(c) (UnsafeRawPointer?, GL.Size, UnsafePointer<GL.Char>?) -> () = load_glObjectPtrLabelKHR
func load_glObjectPtrLabelKHR(ptr:UnsafeRawPointer?, length:GL.Size, label:UnsafePointer<GL.Char>?)
{
    fp_glObjectPtrLabelKHR = unsafeBitCast(get_fp("glObjectPtrLabelKHR", support: [ss221]), to: Swift.type(of: fp_glObjectPtrLabelKHR))
    fp_glObjectPtrLabelKHR(ptr, length, label)
}
public
func glObjectPtrLabelKHR(ptr:UnsafeRawPointer?, length:GL.Size, label:UnsafePointer<GL.Char>?)
{
    fp_glObjectPtrLabelKHR(ptr, length, label)
}
public
func glObjectPtrLabelKHR(_ ptr:UnsafeRawPointer?, _ length:GL.Size, _ label:UnsafePointer<GL.Char>?)
{
    fp_glObjectPtrLabelKHR(ptr, length, label)
}

var fp_glObjectPurgeableAPPLE:@convention(c) (GL.Enum, GL.UInt, GL.Enum) -> GL.Enum = load_glObjectPurgeableAPPLE
func load_glObjectPurgeableAPPLE(objectType:GL.Enum, name:GL.UInt, option:GL.Enum) -> GL.Enum
{
    fp_glObjectPurgeableAPPLE = unsafeBitCast(get_fp("glObjectPurgeableAPPLE", support: [ss22]), to: Swift.type(of: fp_glObjectPurgeableAPPLE))
    return fp_glObjectPurgeableAPPLE(objectType, name, option)
}
public
func glObjectPurgeableAPPLE(objectType:GL.Enum, name:GL.UInt, option:GL.Enum) -> GL.Enum
{
    return fp_glObjectPurgeableAPPLE(objectType, name, option)
}
public
func glObjectPurgeableAPPLE(_ objectType:GL.Enum, _ name:GL.UInt, _ option:GL.Enum) -> GL.Enum
{
    return fp_glObjectPurgeableAPPLE(objectType, name, option)
}

var fp_glObjectUnpurgeableAPPLE:@convention(c) (GL.Enum, GL.UInt, GL.Enum) -> GL.Enum = load_glObjectUnpurgeableAPPLE
func load_glObjectUnpurgeableAPPLE(objectType:GL.Enum, name:GL.UInt, option:GL.Enum) -> GL.Enum
{
    fp_glObjectUnpurgeableAPPLE = unsafeBitCast(get_fp("glObjectUnpurgeableAPPLE", support: [ss22]), to: Swift.type(of: fp_glObjectUnpurgeableAPPLE))
    return fp_glObjectUnpurgeableAPPLE(objectType, name, option)
}
public
func glObjectUnpurgeableAPPLE(objectType:GL.Enum, name:GL.UInt, option:GL.Enum) -> GL.Enum
{
    return fp_glObjectUnpurgeableAPPLE(objectType, name, option)
}
public
func glObjectUnpurgeableAPPLE(_ objectType:GL.Enum, _ name:GL.UInt, _ option:GL.Enum) -> GL.Enum
{
    return fp_glObjectUnpurgeableAPPLE(objectType, name, option)
}

var fp_glOrtho:@convention(c) (GL.Double, GL.Double, GL.Double, GL.Double, GL.Double, GL.Double) -> () = load_glOrtho
func load_glOrtho(left:GL.Double, right:GL.Double, bottom:GL.Double, top:GL.Double, zNear:GL.Double, zFar:GL.Double)
{
    fp_glOrtho = unsafeBitCast(get_fp("glOrtho", support: [ss346, ss369]), to: Swift.type(of: fp_glOrtho))
    fp_glOrtho(left, right, bottom, top, zNear, zFar)
}
public
func glOrtho(left:GL.Double, right:GL.Double, bottom:GL.Double, top:GL.Double, zNear:GL.Double, zFar:GL.Double)
{
    fp_glOrtho(left, right, bottom, top, zNear, zFar)
}
public
func glOrtho(_ left:GL.Double, _ right:GL.Double, _ bottom:GL.Double, _ top:GL.Double, _ zNear:GL.Double, _ zFar:GL.Double)
{
    fp_glOrtho(left, right, bottom, top, zNear, zFar)
}

var fp_glOrthof:@convention(c) (GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float) -> () = load_glOrthof
func load_glOrthof(l:GL.Float, r:GL.Float, b:GL.Float, t:GL.Float, n:GL.Float, f:GL.Float)
{
    fp_glOrthof = unsafeBitCast(get_fp("glOrthof", support: [ss364]), to: Swift.type(of: fp_glOrthof))
    fp_glOrthof(l, r, b, t, n, f)
}
public
func glOrthof(l:GL.Float, r:GL.Float, b:GL.Float, t:GL.Float, n:GL.Float, f:GL.Float)
{
    fp_glOrthof(l, r, b, t, n, f)
}
public
func glOrthof(_ l:GL.Float, _ r:GL.Float, _ b:GL.Float, _ t:GL.Float, _ n:GL.Float, _ f:GL.Float)
{
    fp_glOrthof(l, r, b, t, n, f)
}

var fp_glOrthofOES:@convention(c) (GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float) -> () = load_glOrthofOES
func load_glOrthofOES(l:GL.Float, r:GL.Float, b:GL.Float, t:GL.Float, n:GL.Float, f:GL.Float)
{
    fp_glOrthofOES = unsafeBitCast(get_fp("glOrthofOES", support: [ss302]), to: Swift.type(of: fp_glOrthofOES))
    fp_glOrthofOES(l, r, b, t, n, f)
}
public
func glOrthofOES(l:GL.Float, r:GL.Float, b:GL.Float, t:GL.Float, n:GL.Float, f:GL.Float)
{
    fp_glOrthofOES(l, r, b, t, n, f)
}
public
func glOrthofOES(_ l:GL.Float, _ r:GL.Float, _ b:GL.Float, _ t:GL.Float, _ n:GL.Float, _ f:GL.Float)
{
    fp_glOrthofOES(l, r, b, t, n, f)
}

var fp_glOrthox:@convention(c) (GL.Fixed, GL.Fixed, GL.Fixed, GL.Fixed, GL.Fixed, GL.Fixed) -> () = load_glOrthox
func load_glOrthox(l:GL.Fixed, r:GL.Fixed, b:GL.Fixed, t:GL.Fixed, n:GL.Fixed, f:GL.Fixed)
{
    fp_glOrthox = unsafeBitCast(get_fp("glOrthox", support: [ss364]), to: Swift.type(of: fp_glOrthox))
    fp_glOrthox(l, r, b, t, n, f)
}
public
func glOrthox(l:GL.Fixed, r:GL.Fixed, b:GL.Fixed, t:GL.Fixed, n:GL.Fixed, f:GL.Fixed)
{
    fp_glOrthox(l, r, b, t, n, f)
}
public
func glOrthox(_ l:GL.Fixed, _ r:GL.Fixed, _ b:GL.Fixed, _ t:GL.Fixed, _ n:GL.Fixed, _ f:GL.Fixed)
{
    fp_glOrthox(l, r, b, t, n, f)
}

var fp_glOrthoxOES:@convention(c) (GL.Fixed, GL.Fixed, GL.Fixed, GL.Fixed, GL.Fixed, GL.Fixed) -> () = load_glOrthoxOES
func load_glOrthoxOES(l:GL.Fixed, r:GL.Fixed, b:GL.Fixed, t:GL.Fixed, n:GL.Fixed, f:GL.Fixed)
{
    fp_glOrthoxOES = unsafeBitCast(get_fp("glOrthoxOES", support: [ss292]), to: Swift.type(of: fp_glOrthoxOES))
    fp_glOrthoxOES(l, r, b, t, n, f)
}
public
func glOrthoxOES(l:GL.Fixed, r:GL.Fixed, b:GL.Fixed, t:GL.Fixed, n:GL.Fixed, f:GL.Fixed)
{
    fp_glOrthoxOES(l, r, b, t, n, f)
}
public
func glOrthoxOES(_ l:GL.Fixed, _ r:GL.Fixed, _ b:GL.Fixed, _ t:GL.Fixed, _ n:GL.Fixed, _ f:GL.Fixed)
{
    fp_glOrthoxOES(l, r, b, t, n, f)
}

var fp_glPNTrianglesfATI:@convention(c) (GL.Enum, GL.Float) -> () = load_glPNTrianglesfATI
func load_glPNTrianglesfATI(pname:GL.Enum, param:GL.Float)
{
    fp_glPNTrianglesfATI = unsafeBitCast(get_fp("glPNTrianglesfATI", support: [ss120]), to: Swift.type(of: fp_glPNTrianglesfATI))
    fp_glPNTrianglesfATI(pname, param)
}
public
func glPNTrianglesfATI(pname:GL.Enum, param:GL.Float)
{
    fp_glPNTrianglesfATI(pname, param)
}
public
func glPNTrianglesfATI(_ pname:GL.Enum, _ param:GL.Float)
{
    fp_glPNTrianglesfATI(pname, param)
}

var fp_glPNTrianglesiATI:@convention(c) (GL.Enum, GL.Int) -> () = load_glPNTrianglesiATI
func load_glPNTrianglesiATI(pname:GL.Enum, param:GL.Int)
{
    fp_glPNTrianglesiATI = unsafeBitCast(get_fp("glPNTrianglesiATI", support: [ss120]), to: Swift.type(of: fp_glPNTrianglesiATI))
    fp_glPNTrianglesiATI(pname, param)
}
public
func glPNTrianglesiATI(pname:GL.Enum, param:GL.Int)
{
    fp_glPNTrianglesiATI(pname, param)
}
public
func glPNTrianglesiATI(_ pname:GL.Enum, _ param:GL.Int)
{
    fp_glPNTrianglesiATI(pname, param)
}

var fp_glPassTexCoordATI:@convention(c) (GL.UInt, GL.UInt, GL.Enum) -> () = load_glPassTexCoordATI
func load_glPassTexCoordATI(dst:GL.UInt, coord:GL.UInt, swizzle:GL.Enum)
{
    fp_glPassTexCoordATI = unsafeBitCast(get_fp("glPassTexCoordATI", support: [ss118]), to: Swift.type(of: fp_glPassTexCoordATI))
    fp_glPassTexCoordATI(dst, coord, swizzle)
}
public
func glPassTexCoordATI(dst:GL.UInt, coord:GL.UInt, swizzle:GL.Enum)
{
    fp_glPassTexCoordATI(dst, coord, swizzle)
}
public
func glPassTexCoordATI(_ dst:GL.UInt, _ coord:GL.UInt, _ swizzle:GL.Enum)
{
    fp_glPassTexCoordATI(dst, coord, swizzle)
}

var fp_glPassThrough:@convention(c) (GL.Float) -> () = load_glPassThrough
func load_glPassThrough(token:GL.Float)
{
    fp_glPassThrough = unsafeBitCast(get_fp("glPassThrough", support: [ss346, ss369]), to: Swift.type(of: fp_glPassThrough))
    fp_glPassThrough(token)
}
public
func glPassThrough(token:GL.Float)
{
    fp_glPassThrough(token)
}
public
func glPassThrough(_ token:GL.Float)
{
    fp_glPassThrough(token)
}

var fp_glPassThroughxOES:@convention(c) (GL.Fixed) -> () = load_glPassThroughxOES
func load_glPassThroughxOES(token:GL.Fixed)
{
    fp_glPassThroughxOES = unsafeBitCast(get_fp("glPassThroughxOES", support: [ss292]), to: Swift.type(of: fp_glPassThroughxOES))
    fp_glPassThroughxOES(token)
}
public
func glPassThroughxOES(token:GL.Fixed)
{
    fp_glPassThroughxOES(token)
}
public
func glPassThroughxOES(_ token:GL.Fixed)
{
    fp_glPassThroughxOES(token)
}

var fp_glPatchParameterfv:@convention(c) (GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glPatchParameterfv
func load_glPatchParameterfv(pname:GL.Enum, values:UnsafePointer<GL.Float>?)
{
    fp_glPatchParameterfv = unsafeBitCast(get_fp("glPatchParameterfv", support: [ss358, ss90]), to: Swift.type(of: fp_glPatchParameterfv))
    fp_glPatchParameterfv(pname, values)
}
public
func glPatchParameterfv(pname:GL.Enum, values:UnsafePointer<GL.Float>?)
{
    fp_glPatchParameterfv(pname, values)
}
public
func glPatchParameterfv(_ pname:GL.Enum, _ values:UnsafePointer<GL.Float>?)
{
    fp_glPatchParameterfv(pname, values)
}

var fp_glPatchParameteri:@convention(c) (GL.Enum, GL.Int) -> () = load_glPatchParameteri
func load_glPatchParameteri(pname:GL.Enum, value:GL.Int)
{
    fp_glPatchParameteri = unsafeBitCast(get_fp("glPatchParameteri", support: [ss358, ss368, ss90]), to: Swift.type(of: fp_glPatchParameteri))
    fp_glPatchParameteri(pname, value)
}
public
func glPatchParameteri(pname:GL.Enum, value:GL.Int)
{
    fp_glPatchParameteri(pname, value)
}
public
func glPatchParameteri(_ pname:GL.Enum, _ value:GL.Int)
{
    fp_glPatchParameteri(pname, value)
}

var fp_glPatchParameteriEXT:@convention(c) (GL.Enum, GL.Int) -> () = load_glPatchParameteriEXT
func load_glPatchParameteriEXT(pname:GL.Enum, value:GL.Int)
{
    fp_glPatchParameteriEXT = unsafeBitCast(get_fp("glPatchParameteriEXT", support: [ss188]), to: Swift.type(of: fp_glPatchParameteriEXT))
    fp_glPatchParameteriEXT(pname, value)
}
public
func glPatchParameteriEXT(pname:GL.Enum, value:GL.Int)
{
    fp_glPatchParameteriEXT(pname, value)
}
public
func glPatchParameteriEXT(_ pname:GL.Enum, _ value:GL.Int)
{
    fp_glPatchParameteriEXT(pname, value)
}

var fp_glPatchParameteriOES:@convention(c) (GL.Enum, GL.Int) -> () = load_glPatchParameteriOES
func load_glPatchParameteriOES(pname:GL.Enum, value:GL.Int)
{
    fp_glPatchParameteriOES = unsafeBitCast(get_fp("glPatchParameteriOES", support: [ss303]), to: Swift.type(of: fp_glPatchParameteriOES))
    fp_glPatchParameteriOES(pname, value)
}
public
func glPatchParameteriOES(pname:GL.Enum, value:GL.Int)
{
    fp_glPatchParameteriOES(pname, value)
}
public
func glPatchParameteriOES(_ pname:GL.Enum, _ value:GL.Int)
{
    fp_glPatchParameteriOES(pname, value)
}

var fp_glPathColorGenNV:@convention(c) (GL.Enum, GL.Enum, GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glPathColorGenNV
func load_glPathColorGenNV(color:GL.Enum, genMode:GL.Enum, colorFormat:GL.Enum, coeffs:UnsafePointer<GL.Float>?)
{
    fp_glPathColorGenNV = unsafeBitCast(get_fp("glPathColorGenNV", support: [ss259]), to: Swift.type(of: fp_glPathColorGenNV))
    fp_glPathColorGenNV(color, genMode, colorFormat, coeffs)
}
public
func glPathColorGenNV(color:GL.Enum, genMode:GL.Enum, colorFormat:GL.Enum, coeffs:UnsafePointer<GL.Float>?)
{
    fp_glPathColorGenNV(color, genMode, colorFormat, coeffs)
}
public
func glPathColorGenNV(_ color:GL.Enum, _ genMode:GL.Enum, _ colorFormat:GL.Enum, _ coeffs:UnsafePointer<GL.Float>?)
{
    fp_glPathColorGenNV(color, genMode, colorFormat, coeffs)
}

var fp_glPathCommandsNV:@convention(c) (GL.UInt, GL.Size, UnsafePointer<GL.UByte>?, GL.Size, GL.Enum, UnsafeRawPointer?) -> () = load_glPathCommandsNV
func load_glPathCommandsNV(path:GL.UInt, numCommands:GL.Size, commands:UnsafePointer<GL.UByte>?, numCoords:GL.Size, coordType:GL.Enum, coords:UnsafeRawPointer?)
{
    fp_glPathCommandsNV = unsafeBitCast(get_fp("glPathCommandsNV", support: [ss259]), to: Swift.type(of: fp_glPathCommandsNV))
    fp_glPathCommandsNV(path, numCommands, commands, numCoords, coordType, coords)
}
public
func glPathCommandsNV(path:GL.UInt, numCommands:GL.Size, commands:UnsafePointer<GL.UByte>?, numCoords:GL.Size, coordType:GL.Enum, coords:UnsafeRawPointer?)
{
    fp_glPathCommandsNV(path, numCommands, commands, numCoords, coordType, coords)
}
public
func glPathCommandsNV(_ path:GL.UInt, _ numCommands:GL.Size, _ commands:UnsafePointer<GL.UByte>?, _ numCoords:GL.Size, _ coordType:GL.Enum, _ coords:UnsafeRawPointer?)
{
    fp_glPathCommandsNV(path, numCommands, commands, numCoords, coordType, coords)
}

var fp_glPathCoordsNV:@convention(c) (GL.UInt, GL.Size, GL.Enum, UnsafeRawPointer?) -> () = load_glPathCoordsNV
func load_glPathCoordsNV(path:GL.UInt, numCoords:GL.Size, coordType:GL.Enum, coords:UnsafeRawPointer?)
{
    fp_glPathCoordsNV = unsafeBitCast(get_fp("glPathCoordsNV", support: [ss259]), to: Swift.type(of: fp_glPathCoordsNV))
    fp_glPathCoordsNV(path, numCoords, coordType, coords)
}
public
func glPathCoordsNV(path:GL.UInt, numCoords:GL.Size, coordType:GL.Enum, coords:UnsafeRawPointer?)
{
    fp_glPathCoordsNV(path, numCoords, coordType, coords)
}
public
func glPathCoordsNV(_ path:GL.UInt, _ numCoords:GL.Size, _ coordType:GL.Enum, _ coords:UnsafeRawPointer?)
{
    fp_glPathCoordsNV(path, numCoords, coordType, coords)
}

var fp_glPathCoverDepthFuncNV:@convention(c) (GL.Enum) -> () = load_glPathCoverDepthFuncNV
func load_glPathCoverDepthFuncNV(f:GL.Enum)
{
    fp_glPathCoverDepthFuncNV = unsafeBitCast(get_fp("glPathCoverDepthFuncNV", support: [ss259]), to: Swift.type(of: fp_glPathCoverDepthFuncNV))
    fp_glPathCoverDepthFuncNV(f)
}
public
func glPathCoverDepthFuncNV(f:GL.Enum)
{
    fp_glPathCoverDepthFuncNV(f)
}
public
func glPathCoverDepthFuncNV(_ f:GL.Enum)
{
    fp_glPathCoverDepthFuncNV(f)
}

var fp_glPathDashArrayNV:@convention(c) (GL.UInt, GL.Size, UnsafePointer<GL.Float>?) -> () = load_glPathDashArrayNV
func load_glPathDashArrayNV(path:GL.UInt, dashCount:GL.Size, dashArray:UnsafePointer<GL.Float>?)
{
    fp_glPathDashArrayNV = unsafeBitCast(get_fp("glPathDashArrayNV", support: [ss259]), to: Swift.type(of: fp_glPathDashArrayNV))
    fp_glPathDashArrayNV(path, dashCount, dashArray)
}
public
func glPathDashArrayNV(path:GL.UInt, dashCount:GL.Size, dashArray:UnsafePointer<GL.Float>?)
{
    fp_glPathDashArrayNV(path, dashCount, dashArray)
}
public
func glPathDashArrayNV(_ path:GL.UInt, _ dashCount:GL.Size, _ dashArray:UnsafePointer<GL.Float>?)
{
    fp_glPathDashArrayNV(path, dashCount, dashArray)
}

var fp_glPathFogGenNV:@convention(c) (GL.Enum) -> () = load_glPathFogGenNV
func load_glPathFogGenNV(genMode:GL.Enum)
{
    fp_glPathFogGenNV = unsafeBitCast(get_fp("glPathFogGenNV", support: [ss259]), to: Swift.type(of: fp_glPathFogGenNV))
    fp_glPathFogGenNV(genMode)
}
public
func glPathFogGenNV(genMode:GL.Enum)
{
    fp_glPathFogGenNV(genMode)
}
public
func glPathFogGenNV(_ genMode:GL.Enum)
{
    fp_glPathFogGenNV(genMode)
}

var fp_glPathGlyphIndexArrayNV:@convention(c) (GL.UInt, GL.Enum, UnsafeRawPointer?, GL.Bitfield, GL.UInt, GL.Size, GL.UInt, GL.Float) -> GL.Enum = load_glPathGlyphIndexArrayNV
func load_glPathGlyphIndexArrayNV(firstPathName:GL.UInt, fontTarget:GL.Enum, fontName:UnsafeRawPointer?, fontStyle:GL.Bitfield, firstGlyphIndex:GL.UInt, numGlyphs:GL.Size, pathParameterTemplate:GL.UInt, emScale:GL.Float) -> GL.Enum
{
    fp_glPathGlyphIndexArrayNV = unsafeBitCast(get_fp("glPathGlyphIndexArrayNV", support: [ss259]), to: Swift.type(of: fp_glPathGlyphIndexArrayNV))
    return fp_glPathGlyphIndexArrayNV(firstPathName, fontTarget, fontName, fontStyle, firstGlyphIndex, numGlyphs, pathParameterTemplate, emScale)
}
public
func glPathGlyphIndexArrayNV(firstPathName:GL.UInt, fontTarget:GL.Enum, fontName:UnsafeRawPointer?, fontStyle:GL.Bitfield, firstGlyphIndex:GL.UInt, numGlyphs:GL.Size, pathParameterTemplate:GL.UInt, emScale:GL.Float) -> GL.Enum
{
    return fp_glPathGlyphIndexArrayNV(firstPathName, fontTarget, fontName, fontStyle, firstGlyphIndex, numGlyphs, pathParameterTemplate, emScale)
}
public
func glPathGlyphIndexArrayNV(_ firstPathName:GL.UInt, _ fontTarget:GL.Enum, _ fontName:UnsafeRawPointer?, _ fontStyle:GL.Bitfield, _ firstGlyphIndex:GL.UInt, _ numGlyphs:GL.Size, _ pathParameterTemplate:GL.UInt, _ emScale:GL.Float) -> GL.Enum
{
    return fp_glPathGlyphIndexArrayNV(firstPathName, fontTarget, fontName, fontStyle, firstGlyphIndex, numGlyphs, pathParameterTemplate, emScale)
}

var fp_glPathGlyphIndexRangeNV:@convention(c) (GL.Enum, UnsafeRawPointer?, GL.Bitfield, GL.UInt, GL.Float, UnsafePointer<GL.UInt>?) -> GL.Enum = load_glPathGlyphIndexRangeNV
func load_glPathGlyphIndexRangeNV(fontTarget:GL.Enum, fontName:UnsafeRawPointer?, fontStyle:GL.Bitfield, pathParameterTemplate:GL.UInt, emScale:GL.Float, baseAndCount:UnsafePointer<GL.UInt>?) -> GL.Enum
{
    fp_glPathGlyphIndexRangeNV = unsafeBitCast(get_fp("glPathGlyphIndexRangeNV", support: [ss259]), to: Swift.type(of: fp_glPathGlyphIndexRangeNV))
    return fp_glPathGlyphIndexRangeNV(fontTarget, fontName, fontStyle, pathParameterTemplate, emScale, baseAndCount)
}
public
func glPathGlyphIndexRangeNV(fontTarget:GL.Enum, fontName:UnsafeRawPointer?, fontStyle:GL.Bitfield, pathParameterTemplate:GL.UInt, emScale:GL.Float, baseAndCount:UnsafePointer<GL.UInt>?) -> GL.Enum
{
    return fp_glPathGlyphIndexRangeNV(fontTarget, fontName, fontStyle, pathParameterTemplate, emScale, baseAndCount)
}
public
func glPathGlyphIndexRangeNV(_ fontTarget:GL.Enum, _ fontName:UnsafeRawPointer?, _ fontStyle:GL.Bitfield, _ pathParameterTemplate:GL.UInt, _ emScale:GL.Float, _ baseAndCount:UnsafePointer<GL.UInt>?) -> GL.Enum
{
    return fp_glPathGlyphIndexRangeNV(fontTarget, fontName, fontStyle, pathParameterTemplate, emScale, baseAndCount)
}

var fp_glPathGlyphRangeNV:@convention(c) (GL.UInt, GL.Enum, UnsafeRawPointer?, GL.Bitfield, GL.UInt, GL.Size, GL.Enum, GL.UInt, GL.Float) -> () = load_glPathGlyphRangeNV
func load_glPathGlyphRangeNV(firstPathName:GL.UInt, fontTarget:GL.Enum, fontName:UnsafeRawPointer?, fontStyle:GL.Bitfield, firstGlyph:GL.UInt, numGlyphs:GL.Size, handleMissingGlyphs:GL.Enum, pathParameterTemplate:GL.UInt, emScale:GL.Float)
{
    fp_glPathGlyphRangeNV = unsafeBitCast(get_fp("glPathGlyphRangeNV", support: [ss259]), to: Swift.type(of: fp_glPathGlyphRangeNV))
    fp_glPathGlyphRangeNV(firstPathName, fontTarget, fontName, fontStyle, firstGlyph, numGlyphs, handleMissingGlyphs, pathParameterTemplate, emScale)
}
public
func glPathGlyphRangeNV(firstPathName:GL.UInt, fontTarget:GL.Enum, fontName:UnsafeRawPointer?, fontStyle:GL.Bitfield, firstGlyph:GL.UInt, numGlyphs:GL.Size, handleMissingGlyphs:GL.Enum, pathParameterTemplate:GL.UInt, emScale:GL.Float)
{
    fp_glPathGlyphRangeNV(firstPathName, fontTarget, fontName, fontStyle, firstGlyph, numGlyphs, handleMissingGlyphs, pathParameterTemplate, emScale)
}
public
func glPathGlyphRangeNV(_ firstPathName:GL.UInt, _ fontTarget:GL.Enum, _ fontName:UnsafeRawPointer?, _ fontStyle:GL.Bitfield, _ firstGlyph:GL.UInt, _ numGlyphs:GL.Size, _ handleMissingGlyphs:GL.Enum, _ pathParameterTemplate:GL.UInt, _ emScale:GL.Float)
{
    fp_glPathGlyphRangeNV(firstPathName, fontTarget, fontName, fontStyle, firstGlyph, numGlyphs, handleMissingGlyphs, pathParameterTemplate, emScale)
}

var fp_glPathGlyphsNV:@convention(c) (GL.UInt, GL.Enum, UnsafeRawPointer?, GL.Bitfield, GL.Size, GL.Enum, UnsafeRawPointer?, GL.Enum, GL.UInt, GL.Float) -> () = load_glPathGlyphsNV
func load_glPathGlyphsNV(firstPathName:GL.UInt, fontTarget:GL.Enum, fontName:UnsafeRawPointer?, fontStyle:GL.Bitfield, numGlyphs:GL.Size, type:GL.Enum, charcodes:UnsafeRawPointer?, handleMissingGlyphs:GL.Enum, pathParameterTemplate:GL.UInt, emScale:GL.Float)
{
    fp_glPathGlyphsNV = unsafeBitCast(get_fp("glPathGlyphsNV", support: [ss259]), to: Swift.type(of: fp_glPathGlyphsNV))
    fp_glPathGlyphsNV(firstPathName, fontTarget, fontName, fontStyle, numGlyphs, type, charcodes, handleMissingGlyphs, pathParameterTemplate, emScale)
}
public
func glPathGlyphsNV(firstPathName:GL.UInt, fontTarget:GL.Enum, fontName:UnsafeRawPointer?, fontStyle:GL.Bitfield, numGlyphs:GL.Size, type:GL.Enum, charcodes:UnsafeRawPointer?, handleMissingGlyphs:GL.Enum, pathParameterTemplate:GL.UInt, emScale:GL.Float)
{
    fp_glPathGlyphsNV(firstPathName, fontTarget, fontName, fontStyle, numGlyphs, type, charcodes, handleMissingGlyphs, pathParameterTemplate, emScale)
}
public
func glPathGlyphsNV(_ firstPathName:GL.UInt, _ fontTarget:GL.Enum, _ fontName:UnsafeRawPointer?, _ fontStyle:GL.Bitfield, _ numGlyphs:GL.Size, _ type:GL.Enum, _ charcodes:UnsafeRawPointer?, _ handleMissingGlyphs:GL.Enum, _ pathParameterTemplate:GL.UInt, _ emScale:GL.Float)
{
    fp_glPathGlyphsNV(firstPathName, fontTarget, fontName, fontStyle, numGlyphs, type, charcodes, handleMissingGlyphs, pathParameterTemplate, emScale)
}

var fp_glPathMemoryGlyphIndexArrayNV:@convention(c) (GL.UInt, GL.Enum, GL.SizePointer, UnsafeRawPointer?, GL.Size, GL.UInt, GL.Size, GL.UInt, GL.Float) -> GL.Enum = load_glPathMemoryGlyphIndexArrayNV
func load_glPathMemoryGlyphIndexArrayNV(firstPathName:GL.UInt, fontTarget:GL.Enum, fontSize:GL.SizePointer, fontData:UnsafeRawPointer?, faceIndex:GL.Size, firstGlyphIndex:GL.UInt, numGlyphs:GL.Size, pathParameterTemplate:GL.UInt, emScale:GL.Float) -> GL.Enum
{
    fp_glPathMemoryGlyphIndexArrayNV = unsafeBitCast(get_fp("glPathMemoryGlyphIndexArrayNV", support: [ss259]), to: Swift.type(of: fp_glPathMemoryGlyphIndexArrayNV))
    return fp_glPathMemoryGlyphIndexArrayNV(firstPathName, fontTarget, fontSize, fontData, faceIndex, firstGlyphIndex, numGlyphs, pathParameterTemplate, emScale)
}
public
func glPathMemoryGlyphIndexArrayNV(firstPathName:GL.UInt, fontTarget:GL.Enum, fontSize:GL.SizePointer, fontData:UnsafeRawPointer?, faceIndex:GL.Size, firstGlyphIndex:GL.UInt, numGlyphs:GL.Size, pathParameterTemplate:GL.UInt, emScale:GL.Float) -> GL.Enum
{
    return fp_glPathMemoryGlyphIndexArrayNV(firstPathName, fontTarget, fontSize, fontData, faceIndex, firstGlyphIndex, numGlyphs, pathParameterTemplate, emScale)
}
public
func glPathMemoryGlyphIndexArrayNV(_ firstPathName:GL.UInt, _ fontTarget:GL.Enum, _ fontSize:GL.SizePointer, _ fontData:UnsafeRawPointer?, _ faceIndex:GL.Size, _ firstGlyphIndex:GL.UInt, _ numGlyphs:GL.Size, _ pathParameterTemplate:GL.UInt, _ emScale:GL.Float) -> GL.Enum
{
    return fp_glPathMemoryGlyphIndexArrayNV(firstPathName, fontTarget, fontSize, fontData, faceIndex, firstGlyphIndex, numGlyphs, pathParameterTemplate, emScale)
}

var fp_glPathParameterfNV:@convention(c) (GL.UInt, GL.Enum, GL.Float) -> () = load_glPathParameterfNV
func load_glPathParameterfNV(path:GL.UInt, pname:GL.Enum, value:GL.Float)
{
    fp_glPathParameterfNV = unsafeBitCast(get_fp("glPathParameterfNV", support: [ss259]), to: Swift.type(of: fp_glPathParameterfNV))
    fp_glPathParameterfNV(path, pname, value)
}
public
func glPathParameterfNV(path:GL.UInt, pname:GL.Enum, value:GL.Float)
{
    fp_glPathParameterfNV(path, pname, value)
}
public
func glPathParameterfNV(_ path:GL.UInt, _ pname:GL.Enum, _ value:GL.Float)
{
    fp_glPathParameterfNV(path, pname, value)
}

var fp_glPathParameterfvNV:@convention(c) (GL.UInt, GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glPathParameterfvNV
func load_glPathParameterfvNV(path:GL.UInt, pname:GL.Enum, value:UnsafePointer<GL.Float>?)
{
    fp_glPathParameterfvNV = unsafeBitCast(get_fp("glPathParameterfvNV", support: [ss259]), to: Swift.type(of: fp_glPathParameterfvNV))
    fp_glPathParameterfvNV(path, pname, value)
}
public
func glPathParameterfvNV(path:GL.UInt, pname:GL.Enum, value:UnsafePointer<GL.Float>?)
{
    fp_glPathParameterfvNV(path, pname, value)
}
public
func glPathParameterfvNV(_ path:GL.UInt, _ pname:GL.Enum, _ value:UnsafePointer<GL.Float>?)
{
    fp_glPathParameterfvNV(path, pname, value)
}

var fp_glPathParameteriNV:@convention(c) (GL.UInt, GL.Enum, GL.Int) -> () = load_glPathParameteriNV
func load_glPathParameteriNV(path:GL.UInt, pname:GL.Enum, value:GL.Int)
{
    fp_glPathParameteriNV = unsafeBitCast(get_fp("glPathParameteriNV", support: [ss259]), to: Swift.type(of: fp_glPathParameteriNV))
    fp_glPathParameteriNV(path, pname, value)
}
public
func glPathParameteriNV(path:GL.UInt, pname:GL.Enum, value:GL.Int)
{
    fp_glPathParameteriNV(path, pname, value)
}
public
func glPathParameteriNV(_ path:GL.UInt, _ pname:GL.Enum, _ value:GL.Int)
{
    fp_glPathParameteriNV(path, pname, value)
}

var fp_glPathParameterivNV:@convention(c) (GL.UInt, GL.Enum, UnsafePointer<GL.Int>?) -> () = load_glPathParameterivNV
func load_glPathParameterivNV(path:GL.UInt, pname:GL.Enum, value:UnsafePointer<GL.Int>?)
{
    fp_glPathParameterivNV = unsafeBitCast(get_fp("glPathParameterivNV", support: [ss259]), to: Swift.type(of: fp_glPathParameterivNV))
    fp_glPathParameterivNV(path, pname, value)
}
public
func glPathParameterivNV(path:GL.UInt, pname:GL.Enum, value:UnsafePointer<GL.Int>?)
{
    fp_glPathParameterivNV(path, pname, value)
}
public
func glPathParameterivNV(_ path:GL.UInt, _ pname:GL.Enum, _ value:UnsafePointer<GL.Int>?)
{
    fp_glPathParameterivNV(path, pname, value)
}

var fp_glPathStencilDepthOffsetNV:@convention(c) (GL.Float, GL.Float) -> () = load_glPathStencilDepthOffsetNV
func load_glPathStencilDepthOffsetNV(factor:GL.Float, units:GL.Float)
{
    fp_glPathStencilDepthOffsetNV = unsafeBitCast(get_fp("glPathStencilDepthOffsetNV", support: [ss259]), to: Swift.type(of: fp_glPathStencilDepthOffsetNV))
    fp_glPathStencilDepthOffsetNV(factor, units)
}
public
func glPathStencilDepthOffsetNV(factor:GL.Float, units:GL.Float)
{
    fp_glPathStencilDepthOffsetNV(factor, units)
}
public
func glPathStencilDepthOffsetNV(_ factor:GL.Float, _ units:GL.Float)
{
    fp_glPathStencilDepthOffsetNV(factor, units)
}

var fp_glPathStencilFuncNV:@convention(c) (GL.Enum, GL.Int, GL.UInt) -> () = load_glPathStencilFuncNV
func load_glPathStencilFuncNV(f:GL.Enum, ref:GL.Int, mask:GL.UInt)
{
    fp_glPathStencilFuncNV = unsafeBitCast(get_fp("glPathStencilFuncNV", support: [ss259]), to: Swift.type(of: fp_glPathStencilFuncNV))
    fp_glPathStencilFuncNV(f, ref, mask)
}
public
func glPathStencilFuncNV(f:GL.Enum, ref:GL.Int, mask:GL.UInt)
{
    fp_glPathStencilFuncNV(f, ref, mask)
}
public
func glPathStencilFuncNV(_ f:GL.Enum, _ ref:GL.Int, _ mask:GL.UInt)
{
    fp_glPathStencilFuncNV(f, ref, mask)
}

var fp_glPathStringNV:@convention(c) (GL.UInt, GL.Enum, GL.Size, UnsafeRawPointer?) -> () = load_glPathStringNV
func load_glPathStringNV(path:GL.UInt, format:GL.Enum, length:GL.Size, pathString:UnsafeRawPointer?)
{
    fp_glPathStringNV = unsafeBitCast(get_fp("glPathStringNV", support: [ss259]), to: Swift.type(of: fp_glPathStringNV))
    fp_glPathStringNV(path, format, length, pathString)
}
public
func glPathStringNV(path:GL.UInt, format:GL.Enum, length:GL.Size, pathString:UnsafeRawPointer?)
{
    fp_glPathStringNV(path, format, length, pathString)
}
public
func glPathStringNV(_ path:GL.UInt, _ format:GL.Enum, _ length:GL.Size, _ pathString:UnsafeRawPointer?)
{
    fp_glPathStringNV(path, format, length, pathString)
}

var fp_glPathSubCommandsNV:@convention(c) (GL.UInt, GL.Size, GL.Size, GL.Size, UnsafePointer<GL.UByte>?, GL.Size, GL.Enum, UnsafeRawPointer?) -> () = load_glPathSubCommandsNV
func load_glPathSubCommandsNV(path:GL.UInt, commandStart:GL.Size, commandsToDelete:GL.Size, numCommands:GL.Size, commands:UnsafePointer<GL.UByte>?, numCoords:GL.Size, coordType:GL.Enum, coords:UnsafeRawPointer?)
{
    fp_glPathSubCommandsNV = unsafeBitCast(get_fp("glPathSubCommandsNV", support: [ss259]), to: Swift.type(of: fp_glPathSubCommandsNV))
    fp_glPathSubCommandsNV(path, commandStart, commandsToDelete, numCommands, commands, numCoords, coordType, coords)
}
public
func glPathSubCommandsNV(path:GL.UInt, commandStart:GL.Size, commandsToDelete:GL.Size, numCommands:GL.Size, commands:UnsafePointer<GL.UByte>?, numCoords:GL.Size, coordType:GL.Enum, coords:UnsafeRawPointer?)
{
    fp_glPathSubCommandsNV(path, commandStart, commandsToDelete, numCommands, commands, numCoords, coordType, coords)
}
public
func glPathSubCommandsNV(_ path:GL.UInt, _ commandStart:GL.Size, _ commandsToDelete:GL.Size, _ numCommands:GL.Size, _ commands:UnsafePointer<GL.UByte>?, _ numCoords:GL.Size, _ coordType:GL.Enum, _ coords:UnsafeRawPointer?)
{
    fp_glPathSubCommandsNV(path, commandStart, commandsToDelete, numCommands, commands, numCoords, coordType, coords)
}

var fp_glPathSubCoordsNV:@convention(c) (GL.UInt, GL.Size, GL.Size, GL.Enum, UnsafeRawPointer?) -> () = load_glPathSubCoordsNV
func load_glPathSubCoordsNV(path:GL.UInt, coordStart:GL.Size, numCoords:GL.Size, coordType:GL.Enum, coords:UnsafeRawPointer?)
{
    fp_glPathSubCoordsNV = unsafeBitCast(get_fp("glPathSubCoordsNV", support: [ss259]), to: Swift.type(of: fp_glPathSubCoordsNV))
    fp_glPathSubCoordsNV(path, coordStart, numCoords, coordType, coords)
}
public
func glPathSubCoordsNV(path:GL.UInt, coordStart:GL.Size, numCoords:GL.Size, coordType:GL.Enum, coords:UnsafeRawPointer?)
{
    fp_glPathSubCoordsNV(path, coordStart, numCoords, coordType, coords)
}
public
func glPathSubCoordsNV(_ path:GL.UInt, _ coordStart:GL.Size, _ numCoords:GL.Size, _ coordType:GL.Enum, _ coords:UnsafeRawPointer?)
{
    fp_glPathSubCoordsNV(path, coordStart, numCoords, coordType, coords)
}

var fp_glPathTexGenNV:@convention(c) (GL.Enum, GL.Enum, GL.Int, UnsafePointer<GL.Float>?) -> () = load_glPathTexGenNV
func load_glPathTexGenNV(texCoordSet:GL.Enum, genMode:GL.Enum, components:GL.Int, coeffs:UnsafePointer<GL.Float>?)
{
    fp_glPathTexGenNV = unsafeBitCast(get_fp("glPathTexGenNV", support: [ss259]), to: Swift.type(of: fp_glPathTexGenNV))
    fp_glPathTexGenNV(texCoordSet, genMode, components, coeffs)
}
public
func glPathTexGenNV(texCoordSet:GL.Enum, genMode:GL.Enum, components:GL.Int, coeffs:UnsafePointer<GL.Float>?)
{
    fp_glPathTexGenNV(texCoordSet, genMode, components, coeffs)
}
public
func glPathTexGenNV(_ texCoordSet:GL.Enum, _ genMode:GL.Enum, _ components:GL.Int, _ coeffs:UnsafePointer<GL.Float>?)
{
    fp_glPathTexGenNV(texCoordSet, genMode, components, coeffs)
}

var fp_glPauseTransformFeedback:@convention(c) () -> () = load_glPauseTransformFeedback
func load_glPauseTransformFeedback()
{
    fp_glPauseTransformFeedback = unsafeBitCast(get_fp("glPauseTransformFeedback", support: [ss358, ss366, ss101]), to: Swift.type(of: fp_glPauseTransformFeedback))
    fp_glPauseTransformFeedback()
}
public
func glPauseTransformFeedback()
{
    fp_glPauseTransformFeedback()
}

var fp_glPauseTransformFeedbackNV:@convention(c) () -> () = load_glPauseTransformFeedbackNV
func load_glPauseTransformFeedbackNV()
{
    fp_glPauseTransformFeedbackNV = unsafeBitCast(get_fp("glPauseTransformFeedbackNV", support: [ss273]), to: Swift.type(of: fp_glPauseTransformFeedbackNV))
    fp_glPauseTransformFeedbackNV()
}
public
func glPauseTransformFeedbackNV()
{
    fp_glPauseTransformFeedbackNV()
}

var fp_glPixelDataRangeNV:@convention(c) (GL.Enum, GL.Size, UnsafeRawPointer?) -> () = load_glPixelDataRangeNV
func load_glPixelDataRangeNV(target:GL.Enum, length:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glPixelDataRangeNV = unsafeBitCast(get_fp("glPixelDataRangeNV", support: [ss260]), to: Swift.type(of: fp_glPixelDataRangeNV))
    fp_glPixelDataRangeNV(target, length, pointer)
}
public
func glPixelDataRangeNV(target:GL.Enum, length:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glPixelDataRangeNV(target, length, pointer)
}
public
func glPixelDataRangeNV(_ target:GL.Enum, _ length:GL.Size, _ pointer:UnsafeRawPointer?)
{
    fp_glPixelDataRangeNV(target, length, pointer)
}

var fp_glPixelMapfv:@convention(c) (GL.Enum, GL.Size, UnsafePointer<GL.Float>?) -> () = load_glPixelMapfv
func load_glPixelMapfv(map:GL.Enum, mapsize:GL.Size, values:UnsafePointer<GL.Float>?)
{
    fp_glPixelMapfv = unsafeBitCast(get_fp("glPixelMapfv", support: [ss346, ss369]), to: Swift.type(of: fp_glPixelMapfv))
    fp_glPixelMapfv(map, mapsize, values)
}
public
func glPixelMapfv(map:GL.Enum, mapsize:GL.Size, values:UnsafePointer<GL.Float>?)
{
    fp_glPixelMapfv(map, mapsize, values)
}
public
func glPixelMapfv(_ map:GL.Enum, _ mapsize:GL.Size, _ values:UnsafePointer<GL.Float>?)
{
    fp_glPixelMapfv(map, mapsize, values)
}

var fp_glPixelMapuiv:@convention(c) (GL.Enum, GL.Size, UnsafePointer<GL.UInt>?) -> () = load_glPixelMapuiv
func load_glPixelMapuiv(map:GL.Enum, mapsize:GL.Size, values:UnsafePointer<GL.UInt>?)
{
    fp_glPixelMapuiv = unsafeBitCast(get_fp("glPixelMapuiv", support: [ss346, ss369]), to: Swift.type(of: fp_glPixelMapuiv))
    fp_glPixelMapuiv(map, mapsize, values)
}
public
func glPixelMapuiv(map:GL.Enum, mapsize:GL.Size, values:UnsafePointer<GL.UInt>?)
{
    fp_glPixelMapuiv(map, mapsize, values)
}
public
func glPixelMapuiv(_ map:GL.Enum, _ mapsize:GL.Size, _ values:UnsafePointer<GL.UInt>?)
{
    fp_glPixelMapuiv(map, mapsize, values)
}

var fp_glPixelMapusv:@convention(c) (GL.Enum, GL.Size, UnsafePointer<GL.UShort>?) -> () = load_glPixelMapusv
func load_glPixelMapusv(map:GL.Enum, mapsize:GL.Size, values:UnsafePointer<GL.UShort>?)
{
    fp_glPixelMapusv = unsafeBitCast(get_fp("glPixelMapusv", support: [ss346, ss369]), to: Swift.type(of: fp_glPixelMapusv))
    fp_glPixelMapusv(map, mapsize, values)
}
public
func glPixelMapusv(map:GL.Enum, mapsize:GL.Size, values:UnsafePointer<GL.UShort>?)
{
    fp_glPixelMapusv(map, mapsize, values)
}
public
func glPixelMapusv(_ map:GL.Enum, _ mapsize:GL.Size, _ values:UnsafePointer<GL.UShort>?)
{
    fp_glPixelMapusv(map, mapsize, values)
}

var fp_glPixelMapx:@convention(c) (GL.Enum, GL.Int, UnsafePointer<GL.Fixed>?) -> () = load_glPixelMapx
func load_glPixelMapx(map:GL.Enum, size:GL.Int, values:UnsafePointer<GL.Fixed>?)
{
    fp_glPixelMapx = unsafeBitCast(get_fp("glPixelMapx", support: [ss292]), to: Swift.type(of: fp_glPixelMapx))
    fp_glPixelMapx(map, size, values)
}
public
func glPixelMapx(map:GL.Enum, size:GL.Int, values:UnsafePointer<GL.Fixed>?)
{
    fp_glPixelMapx(map, size, values)
}
public
func glPixelMapx(_ map:GL.Enum, _ size:GL.Int, _ values:UnsafePointer<GL.Fixed>?)
{
    fp_glPixelMapx(map, size, values)
}

var fp_glPixelStoref:@convention(c) (GL.Enum, GL.Float) -> () = load_glPixelStoref
func load_glPixelStoref(pname:GL.Enum, param:GL.Float)
{
    fp_glPixelStoref = unsafeBitCast(get_fp("glPixelStoref", support: [ss346]), to: Swift.type(of: fp_glPixelStoref))
    fp_glPixelStoref(pname, param)
}
public
func glPixelStoref(pname:GL.Enum, param:GL.Float)
{
    fp_glPixelStoref(pname, param)
}
public
func glPixelStoref(_ pname:GL.Enum, _ param:GL.Float)
{
    fp_glPixelStoref(pname, param)
}

var fp_glPixelStorei:@convention(c) (GL.Enum, GL.Int) -> () = load_glPixelStorei
func load_glPixelStorei(pname:GL.Enum, param:GL.Int)
{
    fp_glPixelStorei = unsafeBitCast(get_fp("glPixelStorei", support: [ss346, ss365]), to: Swift.type(of: fp_glPixelStorei))
    fp_glPixelStorei(pname, param)
}
public
func glPixelStorei(pname:GL.Enum, param:GL.Int)
{
    fp_glPixelStorei(pname, param)
}
public
func glPixelStorei(_ pname:GL.Enum, _ param:GL.Int)
{
    fp_glPixelStorei(pname, param)
}

var fp_glPixelStorex:@convention(c) (GL.Enum, GL.Fixed) -> () = load_glPixelStorex
func load_glPixelStorex(pname:GL.Enum, param:GL.Fixed)
{
    fp_glPixelStorex = unsafeBitCast(get_fp("glPixelStorex", support: [ss292]), to: Swift.type(of: fp_glPixelStorex))
    fp_glPixelStorex(pname, param)
}
public
func glPixelStorex(pname:GL.Enum, param:GL.Fixed)
{
    fp_glPixelStorex(pname, param)
}
public
func glPixelStorex(_ pname:GL.Enum, _ param:GL.Fixed)
{
    fp_glPixelStorex(pname, param)
}

var fp_glPixelTexGenParameterfSGIS:@convention(c) (GL.Enum, GL.Float) -> () = load_glPixelTexGenParameterfSGIS
func load_glPixelTexGenParameterfSGIS(pname:GL.Enum, param:GL.Float)
{
    fp_glPixelTexGenParameterfSGIS = unsafeBitCast(get_fp("glPixelTexGenParameterfSGIS", support: [ss323]), to: Swift.type(of: fp_glPixelTexGenParameterfSGIS))
    fp_glPixelTexGenParameterfSGIS(pname, param)
}
public
func glPixelTexGenParameterfSGIS(pname:GL.Enum, param:GL.Float)
{
    fp_glPixelTexGenParameterfSGIS(pname, param)
}
public
func glPixelTexGenParameterfSGIS(_ pname:GL.Enum, _ param:GL.Float)
{
    fp_glPixelTexGenParameterfSGIS(pname, param)
}

var fp_glPixelTexGenParameterfvSGIS:@convention(c) (GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glPixelTexGenParameterfvSGIS
func load_glPixelTexGenParameterfvSGIS(pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glPixelTexGenParameterfvSGIS = unsafeBitCast(get_fp("glPixelTexGenParameterfvSGIS", support: [ss323]), to: Swift.type(of: fp_glPixelTexGenParameterfvSGIS))
    fp_glPixelTexGenParameterfvSGIS(pname, params)
}
public
func glPixelTexGenParameterfvSGIS(pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glPixelTexGenParameterfvSGIS(pname, params)
}
public
func glPixelTexGenParameterfvSGIS(_ pname:GL.Enum, _ params:UnsafePointer<GL.Float>?)
{
    fp_glPixelTexGenParameterfvSGIS(pname, params)
}

var fp_glPixelTexGenParameteriSGIS:@convention(c) (GL.Enum, GL.Int) -> () = load_glPixelTexGenParameteriSGIS
func load_glPixelTexGenParameteriSGIS(pname:GL.Enum, param:GL.Int)
{
    fp_glPixelTexGenParameteriSGIS = unsafeBitCast(get_fp("glPixelTexGenParameteriSGIS", support: [ss323]), to: Swift.type(of: fp_glPixelTexGenParameteriSGIS))
    fp_glPixelTexGenParameteriSGIS(pname, param)
}
public
func glPixelTexGenParameteriSGIS(pname:GL.Enum, param:GL.Int)
{
    fp_glPixelTexGenParameteriSGIS(pname, param)
}
public
func glPixelTexGenParameteriSGIS(_ pname:GL.Enum, _ param:GL.Int)
{
    fp_glPixelTexGenParameteriSGIS(pname, param)
}

var fp_glPixelTexGenParameterivSGIS:@convention(c) (GL.Enum, UnsafePointer<GL.Int>?) -> () = load_glPixelTexGenParameterivSGIS
func load_glPixelTexGenParameterivSGIS(pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glPixelTexGenParameterivSGIS = unsafeBitCast(get_fp("glPixelTexGenParameterivSGIS", support: [ss323]), to: Swift.type(of: fp_glPixelTexGenParameterivSGIS))
    fp_glPixelTexGenParameterivSGIS(pname, params)
}
public
func glPixelTexGenParameterivSGIS(pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glPixelTexGenParameterivSGIS(pname, params)
}
public
func glPixelTexGenParameterivSGIS(_ pname:GL.Enum, _ params:UnsafePointer<GL.Int>?)
{
    fp_glPixelTexGenParameterivSGIS(pname, params)
}

var fp_glPixelTexGenSGIX:@convention(c) (GL.Enum) -> () = load_glPixelTexGenSGIX
func load_glPixelTexGenSGIX(mode:GL.Enum)
{
    fp_glPixelTexGenSGIX = unsafeBitCast(get_fp("glPixelTexGenSGIX", support: [ss336]), to: Swift.type(of: fp_glPixelTexGenSGIX))
    fp_glPixelTexGenSGIX(mode)
}
public
func glPixelTexGenSGIX(mode:GL.Enum)
{
    fp_glPixelTexGenSGIX(mode)
}
public
func glPixelTexGenSGIX(_ mode:GL.Enum)
{
    fp_glPixelTexGenSGIX(mode)
}

var fp_glPixelTransferf:@convention(c) (GL.Enum, GL.Float) -> () = load_glPixelTransferf
func load_glPixelTransferf(pname:GL.Enum, param:GL.Float)
{
    fp_glPixelTransferf = unsafeBitCast(get_fp("glPixelTransferf", support: [ss346, ss369]), to: Swift.type(of: fp_glPixelTransferf))
    fp_glPixelTransferf(pname, param)
}
public
func glPixelTransferf(pname:GL.Enum, param:GL.Float)
{
    fp_glPixelTransferf(pname, param)
}
public
func glPixelTransferf(_ pname:GL.Enum, _ param:GL.Float)
{
    fp_glPixelTransferf(pname, param)
}

var fp_glPixelTransferi:@convention(c) (GL.Enum, GL.Int) -> () = load_glPixelTransferi
func load_glPixelTransferi(pname:GL.Enum, param:GL.Int)
{
    fp_glPixelTransferi = unsafeBitCast(get_fp("glPixelTransferi", support: [ss346, ss369]), to: Swift.type(of: fp_glPixelTransferi))
    fp_glPixelTransferi(pname, param)
}
public
func glPixelTransferi(pname:GL.Enum, param:GL.Int)
{
    fp_glPixelTransferi(pname, param)
}
public
func glPixelTransferi(_ pname:GL.Enum, _ param:GL.Int)
{
    fp_glPixelTransferi(pname, param)
}

var fp_glPixelTransferxOES:@convention(c) (GL.Enum, GL.Fixed) -> () = load_glPixelTransferxOES
func load_glPixelTransferxOES(pname:GL.Enum, param:GL.Fixed)
{
    fp_glPixelTransferxOES = unsafeBitCast(get_fp("glPixelTransferxOES", support: [ss292]), to: Swift.type(of: fp_glPixelTransferxOES))
    fp_glPixelTransferxOES(pname, param)
}
public
func glPixelTransferxOES(pname:GL.Enum, param:GL.Fixed)
{
    fp_glPixelTransferxOES(pname, param)
}
public
func glPixelTransferxOES(_ pname:GL.Enum, _ param:GL.Fixed)
{
    fp_glPixelTransferxOES(pname, param)
}

var fp_glPixelTransformParameterfEXT:@convention(c) (GL.Enum, GL.Enum, GL.Float) -> () = load_glPixelTransformParameterfEXT
func load_glPixelTransformParameterfEXT(target:GL.Enum, pname:GL.Enum, param:GL.Float)
{
    fp_glPixelTransformParameterfEXT = unsafeBitCast(get_fp("glPixelTransformParameterfEXT", support: [ss173]), to: Swift.type(of: fp_glPixelTransformParameterfEXT))
    fp_glPixelTransformParameterfEXT(target, pname, param)
}
public
func glPixelTransformParameterfEXT(target:GL.Enum, pname:GL.Enum, param:GL.Float)
{
    fp_glPixelTransformParameterfEXT(target, pname, param)
}
public
func glPixelTransformParameterfEXT(_ target:GL.Enum, _ pname:GL.Enum, _ param:GL.Float)
{
    fp_glPixelTransformParameterfEXT(target, pname, param)
}

var fp_glPixelTransformParameterfvEXT:@convention(c) (GL.Enum, GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glPixelTransformParameterfvEXT
func load_glPixelTransformParameterfvEXT(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glPixelTransformParameterfvEXT = unsafeBitCast(get_fp("glPixelTransformParameterfvEXT", support: [ss173]), to: Swift.type(of: fp_glPixelTransformParameterfvEXT))
    fp_glPixelTransformParameterfvEXT(target, pname, params)
}
public
func glPixelTransformParameterfvEXT(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glPixelTransformParameterfvEXT(target, pname, params)
}
public
func glPixelTransformParameterfvEXT(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.Float>?)
{
    fp_glPixelTransformParameterfvEXT(target, pname, params)
}

var fp_glPixelTransformParameteriEXT:@convention(c) (GL.Enum, GL.Enum, GL.Int) -> () = load_glPixelTransformParameteriEXT
func load_glPixelTransformParameteriEXT(target:GL.Enum, pname:GL.Enum, param:GL.Int)
{
    fp_glPixelTransformParameteriEXT = unsafeBitCast(get_fp("glPixelTransformParameteriEXT", support: [ss173]), to: Swift.type(of: fp_glPixelTransformParameteriEXT))
    fp_glPixelTransformParameteriEXT(target, pname, param)
}
public
func glPixelTransformParameteriEXT(target:GL.Enum, pname:GL.Enum, param:GL.Int)
{
    fp_glPixelTransformParameteriEXT(target, pname, param)
}
public
func glPixelTransformParameteriEXT(_ target:GL.Enum, _ pname:GL.Enum, _ param:GL.Int)
{
    fp_glPixelTransformParameteriEXT(target, pname, param)
}

var fp_glPixelTransformParameterivEXT:@convention(c) (GL.Enum, GL.Enum, UnsafePointer<GL.Int>?) -> () = load_glPixelTransformParameterivEXT
func load_glPixelTransformParameterivEXT(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glPixelTransformParameterivEXT = unsafeBitCast(get_fp("glPixelTransformParameterivEXT", support: [ss173]), to: Swift.type(of: fp_glPixelTransformParameterivEXT))
    fp_glPixelTransformParameterivEXT(target, pname, params)
}
public
func glPixelTransformParameterivEXT(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glPixelTransformParameterivEXT(target, pname, params)
}
public
func glPixelTransformParameterivEXT(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.Int>?)
{
    fp_glPixelTransformParameterivEXT(target, pname, params)
}

var fp_glPixelZoom:@convention(c) (GL.Float, GL.Float) -> () = load_glPixelZoom
func load_glPixelZoom(xfactor:GL.Float, yfactor:GL.Float)
{
    fp_glPixelZoom = unsafeBitCast(get_fp("glPixelZoom", support: [ss346, ss369]), to: Swift.type(of: fp_glPixelZoom))
    fp_glPixelZoom(xfactor, yfactor)
}
public
func glPixelZoom(xfactor:GL.Float, yfactor:GL.Float)
{
    fp_glPixelZoom(xfactor, yfactor)
}
public
func glPixelZoom(_ xfactor:GL.Float, _ yfactor:GL.Float)
{
    fp_glPixelZoom(xfactor, yfactor)
}

var fp_glPixelZoomxOES:@convention(c) (GL.Fixed, GL.Fixed) -> () = load_glPixelZoomxOES
func load_glPixelZoomxOES(xfactor:GL.Fixed, yfactor:GL.Fixed)
{
    fp_glPixelZoomxOES = unsafeBitCast(get_fp("glPixelZoomxOES", support: [ss292]), to: Swift.type(of: fp_glPixelZoomxOES))
    fp_glPixelZoomxOES(xfactor, yfactor)
}
public
func glPixelZoomxOES(xfactor:GL.Fixed, yfactor:GL.Fixed)
{
    fp_glPixelZoomxOES(xfactor, yfactor)
}
public
func glPixelZoomxOES(_ xfactor:GL.Fixed, _ yfactor:GL.Fixed)
{
    fp_glPixelZoomxOES(xfactor, yfactor)
}

var fp_glPointAlongPathNV:@convention(c) (GL.UInt, GL.Size, GL.Size, GL.Float, UnsafeMutablePointer<GL.Float>?, UnsafeMutablePointer<GL.Float>?, UnsafeMutablePointer<GL.Float>?, UnsafeMutablePointer<GL.Float>?) -> GL.Bool = load_glPointAlongPathNV
func load_glPointAlongPathNV(path:GL.UInt, startSegment:GL.Size, numSegments:GL.Size, distance:GL.Float, x:UnsafeMutablePointer<GL.Float>?, y:UnsafeMutablePointer<GL.Float>?, tangentX:UnsafeMutablePointer<GL.Float>?, tangentY:UnsafeMutablePointer<GL.Float>?) -> GL.Bool
{
    fp_glPointAlongPathNV = unsafeBitCast(get_fp("glPointAlongPathNV", support: [ss259]), to: Swift.type(of: fp_glPointAlongPathNV))
    return fp_glPointAlongPathNV(path, startSegment, numSegments, distance, x, y, tangentX, tangentY)
}
public
func glPointAlongPathNV(path:GL.UInt, startSegment:GL.Size, numSegments:GL.Size, distance:GL.Float, x:UnsafeMutablePointer<GL.Float>?, y:UnsafeMutablePointer<GL.Float>?, tangentX:UnsafeMutablePointer<GL.Float>?, tangentY:UnsafeMutablePointer<GL.Float>?) -> GL.Bool
{
    return fp_glPointAlongPathNV(path, startSegment, numSegments, distance, x, y, tangentX, tangentY)
}
public
func glPointAlongPathNV(_ path:GL.UInt, _ startSegment:GL.Size, _ numSegments:GL.Size, _ distance:GL.Float, _ x:UnsafeMutablePointer<GL.Float>?, _ y:UnsafeMutablePointer<GL.Float>?, _ tangentX:UnsafeMutablePointer<GL.Float>?, _ tangentY:UnsafeMutablePointer<GL.Float>?) -> GL.Bool
{
    return fp_glPointAlongPathNV(path, startSegment, numSegments, distance, x, y, tangentX, tangentY)
}

var fp_glPointParameterf:@convention(c) (GL.Enum, GL.Float) -> () = load_glPointParameterf
func load_glPointParameterf(pname:GL.Enum, param:GL.Float)
{
    fp_glPointParameterf = unsafeBitCast(get_fp("glPointParameterf", support: [ss350, ss364]), to: Swift.type(of: fp_glPointParameterf))
    fp_glPointParameterf(pname, param)
}
public
func glPointParameterf(pname:GL.Enum, param:GL.Float)
{
    fp_glPointParameterf(pname, param)
}
public
func glPointParameterf(_ pname:GL.Enum, _ param:GL.Float)
{
    fp_glPointParameterf(pname, param)
}

var fp_glPointParameterfARB:@convention(c) (GL.Enum, GL.Float) -> () = load_glPointParameterfARB
func load_glPointParameterfARB(pname:GL.Enum, param:GL.Float)
{
    fp_glPointParameterfARB = unsafeBitCast(get_fp("glPointParameterfARB", support: [ss73]), to: Swift.type(of: fp_glPointParameterfARB))
    fp_glPointParameterfARB(pname, param)
}
public
func glPointParameterfARB(pname:GL.Enum, param:GL.Float)
{
    fp_glPointParameterfARB(pname, param)
}
public
func glPointParameterfARB(_ pname:GL.Enum, _ param:GL.Float)
{
    fp_glPointParameterfARB(pname, param)
}

var fp_glPointParameterfEXT:@convention(c) (GL.Enum, GL.Float) -> () = load_glPointParameterfEXT
func load_glPointParameterfEXT(pname:GL.Enum, param:GL.Float)
{
    fp_glPointParameterfEXT = unsafeBitCast(get_fp("glPointParameterfEXT", support: [ss174]), to: Swift.type(of: fp_glPointParameterfEXT))
    fp_glPointParameterfEXT(pname, param)
}
public
func glPointParameterfEXT(pname:GL.Enum, param:GL.Float)
{
    fp_glPointParameterfEXT(pname, param)
}
public
func glPointParameterfEXT(_ pname:GL.Enum, _ param:GL.Float)
{
    fp_glPointParameterfEXT(pname, param)
}

var fp_glPointParameterfSGIS:@convention(c) (GL.Enum, GL.Float) -> () = load_glPointParameterfSGIS
func load_glPointParameterfSGIS(pname:GL.Enum, param:GL.Float)
{
    fp_glPointParameterfSGIS = unsafeBitCast(get_fp("glPointParameterfSGIS", support: [ss324]), to: Swift.type(of: fp_glPointParameterfSGIS))
    fp_glPointParameterfSGIS(pname, param)
}
public
func glPointParameterfSGIS(pname:GL.Enum, param:GL.Float)
{
    fp_glPointParameterfSGIS(pname, param)
}
public
func glPointParameterfSGIS(_ pname:GL.Enum, _ param:GL.Float)
{
    fp_glPointParameterfSGIS(pname, param)
}

var fp_glPointParameterfv:@convention(c) (GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glPointParameterfv
func load_glPointParameterfv(pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glPointParameterfv = unsafeBitCast(get_fp("glPointParameterfv", support: [ss350, ss364]), to: Swift.type(of: fp_glPointParameterfv))
    fp_glPointParameterfv(pname, params)
}
public
func glPointParameterfv(pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glPointParameterfv(pname, params)
}
public
func glPointParameterfv(_ pname:GL.Enum, _ params:UnsafePointer<GL.Float>?)
{
    fp_glPointParameterfv(pname, params)
}

var fp_glPointParameterfvARB:@convention(c) (GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glPointParameterfvARB
func load_glPointParameterfvARB(pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glPointParameterfvARB = unsafeBitCast(get_fp("glPointParameterfvARB", support: [ss73]), to: Swift.type(of: fp_glPointParameterfvARB))
    fp_glPointParameterfvARB(pname, params)
}
public
func glPointParameterfvARB(pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glPointParameterfvARB(pname, params)
}
public
func glPointParameterfvARB(_ pname:GL.Enum, _ params:UnsafePointer<GL.Float>?)
{
    fp_glPointParameterfvARB(pname, params)
}

var fp_glPointParameterfvEXT:@convention(c) (GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glPointParameterfvEXT
func load_glPointParameterfvEXT(pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glPointParameterfvEXT = unsafeBitCast(get_fp("glPointParameterfvEXT", support: [ss174]), to: Swift.type(of: fp_glPointParameterfvEXT))
    fp_glPointParameterfvEXT(pname, params)
}
public
func glPointParameterfvEXT(pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glPointParameterfvEXT(pname, params)
}
public
func glPointParameterfvEXT(_ pname:GL.Enum, _ params:UnsafePointer<GL.Float>?)
{
    fp_glPointParameterfvEXT(pname, params)
}

var fp_glPointParameterfvSGIS:@convention(c) (GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glPointParameterfvSGIS
func load_glPointParameterfvSGIS(pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glPointParameterfvSGIS = unsafeBitCast(get_fp("glPointParameterfvSGIS", support: [ss324]), to: Swift.type(of: fp_glPointParameterfvSGIS))
    fp_glPointParameterfvSGIS(pname, params)
}
public
func glPointParameterfvSGIS(pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glPointParameterfvSGIS(pname, params)
}
public
func glPointParameterfvSGIS(_ pname:GL.Enum, _ params:UnsafePointer<GL.Float>?)
{
    fp_glPointParameterfvSGIS(pname, params)
}

var fp_glPointParameteri:@convention(c) (GL.Enum, GL.Int) -> () = load_glPointParameteri
func load_glPointParameteri(pname:GL.Enum, param:GL.Int)
{
    fp_glPointParameteri = unsafeBitCast(get_fp("glPointParameteri", support: [ss350]), to: Swift.type(of: fp_glPointParameteri))
    fp_glPointParameteri(pname, param)
}
public
func glPointParameteri(pname:GL.Enum, param:GL.Int)
{
    fp_glPointParameteri(pname, param)
}
public
func glPointParameteri(_ pname:GL.Enum, _ param:GL.Int)
{
    fp_glPointParameteri(pname, param)
}

var fp_glPointParameteriNV:@convention(c) (GL.Enum, GL.Int) -> () = load_glPointParameteriNV
func load_glPointParameteriNV(pname:GL.Enum, param:GL.Int)
{
    fp_glPointParameteriNV = unsafeBitCast(get_fp("glPointParameteriNV", support: [ss261]), to: Swift.type(of: fp_glPointParameteriNV))
    fp_glPointParameteriNV(pname, param)
}
public
func glPointParameteriNV(pname:GL.Enum, param:GL.Int)
{
    fp_glPointParameteriNV(pname, param)
}
public
func glPointParameteriNV(_ pname:GL.Enum, _ param:GL.Int)
{
    fp_glPointParameteriNV(pname, param)
}

var fp_glPointParameteriv:@convention(c) (GL.Enum, UnsafePointer<GL.Int>?) -> () = load_glPointParameteriv
func load_glPointParameteriv(pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glPointParameteriv = unsafeBitCast(get_fp("glPointParameteriv", support: [ss350]), to: Swift.type(of: fp_glPointParameteriv))
    fp_glPointParameteriv(pname, params)
}
public
func glPointParameteriv(pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glPointParameteriv(pname, params)
}
public
func glPointParameteriv(_ pname:GL.Enum, _ params:UnsafePointer<GL.Int>?)
{
    fp_glPointParameteriv(pname, params)
}

var fp_glPointParameterivNV:@convention(c) (GL.Enum, UnsafePointer<GL.Int>?) -> () = load_glPointParameterivNV
func load_glPointParameterivNV(pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glPointParameterivNV = unsafeBitCast(get_fp("glPointParameterivNV", support: [ss261]), to: Swift.type(of: fp_glPointParameterivNV))
    fp_glPointParameterivNV(pname, params)
}
public
func glPointParameterivNV(pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glPointParameterivNV(pname, params)
}
public
func glPointParameterivNV(_ pname:GL.Enum, _ params:UnsafePointer<GL.Int>?)
{
    fp_glPointParameterivNV(pname, params)
}

var fp_glPointParameterx:@convention(c) (GL.Enum, GL.Fixed) -> () = load_glPointParameterx
func load_glPointParameterx(pname:GL.Enum, param:GL.Fixed)
{
    fp_glPointParameterx = unsafeBitCast(get_fp("glPointParameterx", support: [ss364]), to: Swift.type(of: fp_glPointParameterx))
    fp_glPointParameterx(pname, param)
}
public
func glPointParameterx(pname:GL.Enum, param:GL.Fixed)
{
    fp_glPointParameterx(pname, param)
}
public
func glPointParameterx(_ pname:GL.Enum, _ param:GL.Fixed)
{
    fp_glPointParameterx(pname, param)
}

var fp_glPointParameterxOES:@convention(c) (GL.Enum, GL.Fixed) -> () = load_glPointParameterxOES
func load_glPointParameterxOES(pname:GL.Enum, param:GL.Fixed)
{
    fp_glPointParameterxOES = unsafeBitCast(get_fp("glPointParameterxOES", support: [ss292]), to: Swift.type(of: fp_glPointParameterxOES))
    fp_glPointParameterxOES(pname, param)
}
public
func glPointParameterxOES(pname:GL.Enum, param:GL.Fixed)
{
    fp_glPointParameterxOES(pname, param)
}
public
func glPointParameterxOES(_ pname:GL.Enum, _ param:GL.Fixed)
{
    fp_glPointParameterxOES(pname, param)
}

var fp_glPointParameterxv:@convention(c) (GL.Enum, UnsafePointer<GL.Fixed>?) -> () = load_glPointParameterxv
func load_glPointParameterxv(pname:GL.Enum, params:UnsafePointer<GL.Fixed>?)
{
    fp_glPointParameterxv = unsafeBitCast(get_fp("glPointParameterxv", support: [ss364]), to: Swift.type(of: fp_glPointParameterxv))
    fp_glPointParameterxv(pname, params)
}
public
func glPointParameterxv(pname:GL.Enum, params:UnsafePointer<GL.Fixed>?)
{
    fp_glPointParameterxv(pname, params)
}
public
func glPointParameterxv(_ pname:GL.Enum, _ params:UnsafePointer<GL.Fixed>?)
{
    fp_glPointParameterxv(pname, params)
}

var fp_glPointParameterxvOES:@convention(c) (GL.Enum, UnsafePointer<GL.Fixed>?) -> () = load_glPointParameterxvOES
func load_glPointParameterxvOES(pname:GL.Enum, params:UnsafePointer<GL.Fixed>?)
{
    fp_glPointParameterxvOES = unsafeBitCast(get_fp("glPointParameterxvOES", support: [ss292]), to: Swift.type(of: fp_glPointParameterxvOES))
    fp_glPointParameterxvOES(pname, params)
}
public
func glPointParameterxvOES(pname:GL.Enum, params:UnsafePointer<GL.Fixed>?)
{
    fp_glPointParameterxvOES(pname, params)
}
public
func glPointParameterxvOES(_ pname:GL.Enum, _ params:UnsafePointer<GL.Fixed>?)
{
    fp_glPointParameterxvOES(pname, params)
}

var fp_glPointSize:@convention(c) (GL.Float) -> () = load_glPointSize
func load_glPointSize(size:GL.Float)
{
    fp_glPointSize = unsafeBitCast(get_fp("glPointSize", support: [ss346, ss364]), to: Swift.type(of: fp_glPointSize))
    fp_glPointSize(size)
}
public
func glPointSize(size:GL.Float)
{
    fp_glPointSize(size)
}
public
func glPointSize(_ size:GL.Float)
{
    fp_glPointSize(size)
}

var fp_glPointSizePointerOES:@convention(c) (GL.Enum, GL.Size, UnsafeRawPointer?) -> () = load_glPointSizePointerOES
func load_glPointSizePointerOES(type:GL.Enum, stride:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glPointSizePointerOES = unsafeBitCast(get_fp("glPointSizePointerOES", support: [ss298]), to: Swift.type(of: fp_glPointSizePointerOES))
    fp_glPointSizePointerOES(type, stride, pointer)
}
public
func glPointSizePointerOES(type:GL.Enum, stride:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glPointSizePointerOES(type, stride, pointer)
}
public
func glPointSizePointerOES(_ type:GL.Enum, _ stride:GL.Size, _ pointer:UnsafeRawPointer?)
{
    fp_glPointSizePointerOES(type, stride, pointer)
}

var fp_glPointSizex:@convention(c) (GL.Fixed) -> () = load_glPointSizex
func load_glPointSizex(size:GL.Fixed)
{
    fp_glPointSizex = unsafeBitCast(get_fp("glPointSizex", support: [ss364]), to: Swift.type(of: fp_glPointSizex))
    fp_glPointSizex(size)
}
public
func glPointSizex(size:GL.Fixed)
{
    fp_glPointSizex(size)
}
public
func glPointSizex(_ size:GL.Fixed)
{
    fp_glPointSizex(size)
}

var fp_glPointSizexOES:@convention(c) (GL.Fixed) -> () = load_glPointSizexOES
func load_glPointSizexOES(size:GL.Fixed)
{
    fp_glPointSizexOES = unsafeBitCast(get_fp("glPointSizexOES", support: [ss292]), to: Swift.type(of: fp_glPointSizexOES))
    fp_glPointSizexOES(size)
}
public
func glPointSizexOES(size:GL.Fixed)
{
    fp_glPointSizexOES(size)
}
public
func glPointSizexOES(_ size:GL.Fixed)
{
    fp_glPointSizexOES(size)
}

var fp_glPollAsyncSGIX:@convention(c) (UnsafeMutablePointer<GL.UInt>?) -> GL.Int = load_glPollAsyncSGIX
func load_glPollAsyncSGIX(markerp:UnsafeMutablePointer<GL.UInt>?) -> GL.Int
{
    fp_glPollAsyncSGIX = unsafeBitCast(get_fp("glPollAsyncSGIX", support: [ss329]), to: Swift.type(of: fp_glPollAsyncSGIX))
    return fp_glPollAsyncSGIX(markerp)
}
public
func glPollAsyncSGIX(markerp:UnsafeMutablePointer<GL.UInt>?) -> GL.Int
{
    return fp_glPollAsyncSGIX(markerp)
}
public
func glPollAsyncSGIX(_ markerp:UnsafeMutablePointer<GL.UInt>?) -> GL.Int
{
    return fp_glPollAsyncSGIX(markerp)
}

var fp_glPollInstrumentsSGIX:@convention(c) (UnsafeMutablePointer<GL.Int>?) -> GL.Int = load_glPollInstrumentsSGIX
func load_glPollInstrumentsSGIX(marker_p:UnsafeMutablePointer<GL.Int>?) -> GL.Int
{
    fp_glPollInstrumentsSGIX = unsafeBitCast(get_fp("glPollInstrumentsSGIX", support: [ss334]), to: Swift.type(of: fp_glPollInstrumentsSGIX))
    return fp_glPollInstrumentsSGIX(marker_p)
}
public
func glPollInstrumentsSGIX(marker_p:UnsafeMutablePointer<GL.Int>?) -> GL.Int
{
    return fp_glPollInstrumentsSGIX(marker_p)
}
public
func glPollInstrumentsSGIX(_ marker_p:UnsafeMutablePointer<GL.Int>?) -> GL.Int
{
    return fp_glPollInstrumentsSGIX(marker_p)
}

var fp_glPolygonMode:@convention(c) (GL.Enum, GL.Enum) -> () = load_glPolygonMode
func load_glPolygonMode(face:GL.Enum, mode:GL.Enum)
{
    fp_glPolygonMode = unsafeBitCast(get_fp("glPolygonMode", support: [ss346]), to: Swift.type(of: fp_glPolygonMode))
    fp_glPolygonMode(face, mode)
}
public
func glPolygonMode(face:GL.Enum, mode:GL.Enum)
{
    fp_glPolygonMode(face, mode)
}
public
func glPolygonMode(_ face:GL.Enum, _ mode:GL.Enum)
{
    fp_glPolygonMode(face, mode)
}

var fp_glPolygonModeNV:@convention(c) (GL.Enum, GL.Enum) -> () = load_glPolygonModeNV
func load_glPolygonModeNV(face:GL.Enum, mode:GL.Enum)
{
    fp_glPolygonModeNV = unsafeBitCast(get_fp("glPolygonModeNV", support: [ss262]), to: Swift.type(of: fp_glPolygonModeNV))
    fp_glPolygonModeNV(face, mode)
}
public
func glPolygonModeNV(face:GL.Enum, mode:GL.Enum)
{
    fp_glPolygonModeNV(face, mode)
}
public
func glPolygonModeNV(_ face:GL.Enum, _ mode:GL.Enum)
{
    fp_glPolygonModeNV(face, mode)
}

var fp_glPolygonOffset:@convention(c) (GL.Float, GL.Float) -> () = load_glPolygonOffset
func load_glPolygonOffset(factor:GL.Float, units:GL.Float)
{
    fp_glPolygonOffset = unsafeBitCast(get_fp("glPolygonOffset", support: [ss347, ss365]), to: Swift.type(of: fp_glPolygonOffset))
    fp_glPolygonOffset(factor, units)
}
public
func glPolygonOffset(factor:GL.Float, units:GL.Float)
{
    fp_glPolygonOffset(factor, units)
}
public
func glPolygonOffset(_ factor:GL.Float, _ units:GL.Float)
{
    fp_glPolygonOffset(factor, units)
}

var fp_glPolygonOffsetClampEXT:@convention(c) (GL.Float, GL.Float, GL.Float) -> () = load_glPolygonOffsetClampEXT
func load_glPolygonOffsetClampEXT(factor:GL.Float, units:GL.Float, clamp:GL.Float)
{
    fp_glPolygonOffsetClampEXT = unsafeBitCast(get_fp("glPolygonOffsetClampEXT", support: [ss175]), to: Swift.type(of: fp_glPolygonOffsetClampEXT))
    fp_glPolygonOffsetClampEXT(factor, units, clamp)
}
public
func glPolygonOffsetClampEXT(factor:GL.Float, units:GL.Float, clamp:GL.Float)
{
    fp_glPolygonOffsetClampEXT(factor, units, clamp)
}
public
func glPolygonOffsetClampEXT(_ factor:GL.Float, _ units:GL.Float, _ clamp:GL.Float)
{
    fp_glPolygonOffsetClampEXT(factor, units, clamp)
}

var fp_glPolygonOffsetEXT:@convention(c) (GL.Float, GL.Float) -> () = load_glPolygonOffsetEXT
func load_glPolygonOffsetEXT(factor:GL.Float, bias:GL.Float)
{
    fp_glPolygonOffsetEXT = unsafeBitCast(get_fp("glPolygonOffsetEXT", support: [ss176]), to: Swift.type(of: fp_glPolygonOffsetEXT))
    fp_glPolygonOffsetEXT(factor, bias)
}
public
func glPolygonOffsetEXT(factor:GL.Float, bias:GL.Float)
{
    fp_glPolygonOffsetEXT(factor, bias)
}
public
func glPolygonOffsetEXT(_ factor:GL.Float, _ bias:GL.Float)
{
    fp_glPolygonOffsetEXT(factor, bias)
}

var fp_glPolygonOffsetx:@convention(c) (GL.Fixed, GL.Fixed) -> () = load_glPolygonOffsetx
func load_glPolygonOffsetx(factor:GL.Fixed, units:GL.Fixed)
{
    fp_glPolygonOffsetx = unsafeBitCast(get_fp("glPolygonOffsetx", support: [ss364]), to: Swift.type(of: fp_glPolygonOffsetx))
    fp_glPolygonOffsetx(factor, units)
}
public
func glPolygonOffsetx(factor:GL.Fixed, units:GL.Fixed)
{
    fp_glPolygonOffsetx(factor, units)
}
public
func glPolygonOffsetx(_ factor:GL.Fixed, _ units:GL.Fixed)
{
    fp_glPolygonOffsetx(factor, units)
}

var fp_glPolygonOffsetxOES:@convention(c) (GL.Fixed, GL.Fixed) -> () = load_glPolygonOffsetxOES
func load_glPolygonOffsetxOES(factor:GL.Fixed, units:GL.Fixed)
{
    fp_glPolygonOffsetxOES = unsafeBitCast(get_fp("glPolygonOffsetxOES", support: [ss292]), to: Swift.type(of: fp_glPolygonOffsetxOES))
    fp_glPolygonOffsetxOES(factor, units)
}
public
func glPolygonOffsetxOES(factor:GL.Fixed, units:GL.Fixed)
{
    fp_glPolygonOffsetxOES(factor, units)
}
public
func glPolygonOffsetxOES(_ factor:GL.Fixed, _ units:GL.Fixed)
{
    fp_glPolygonOffsetxOES(factor, units)
}

var fp_glPolygonStipple:@convention(c) (UnsafePointer<GL.UByte>?) -> () = load_glPolygonStipple
func load_glPolygonStipple(mask:UnsafePointer<GL.UByte>?)
{
    fp_glPolygonStipple = unsafeBitCast(get_fp("glPolygonStipple", support: [ss346, ss369]), to: Swift.type(of: fp_glPolygonStipple))
    fp_glPolygonStipple(mask)
}
public
func glPolygonStipple(mask:UnsafePointer<GL.UByte>?)
{
    fp_glPolygonStipple(mask)
}
public
func glPolygonStipple(_ mask:UnsafePointer<GL.UByte>?)
{
    fp_glPolygonStipple(mask)
}

var fp_glPopAttrib:@convention(c) () -> () = load_glPopAttrib
func load_glPopAttrib()
{
    fp_glPopAttrib = unsafeBitCast(get_fp("glPopAttrib", support: [ss346, ss369]), to: Swift.type(of: fp_glPopAttrib))
    fp_glPopAttrib()
}
public
func glPopAttrib()
{
    fp_glPopAttrib()
}

var fp_glPopClientAttrib:@convention(c) () -> () = load_glPopClientAttrib
func load_glPopClientAttrib()
{
    fp_glPopClientAttrib = unsafeBitCast(get_fp("glPopClientAttrib", support: [ss347, ss369]), to: Swift.type(of: fp_glPopClientAttrib))
    fp_glPopClientAttrib()
}
public
func glPopClientAttrib()
{
    fp_glPopClientAttrib()
}

var fp_glPopDebugGroup:@convention(c) () -> () = load_glPopDebugGroup
func load_glPopDebugGroup()
{
    fp_glPopDebugGroup = unsafeBitCast(get_fp("glPopDebugGroup", support: [ss361, ss368, ss221]), to: Swift.type(of: fp_glPopDebugGroup))
    fp_glPopDebugGroup()
}
public
func glPopDebugGroup()
{
    fp_glPopDebugGroup()
}

var fp_glPopDebugGroupKHR:@convention(c) () -> () = load_glPopDebugGroupKHR
func load_glPopDebugGroupKHR()
{
    fp_glPopDebugGroupKHR = unsafeBitCast(get_fp("glPopDebugGroupKHR", support: [ss221]), to: Swift.type(of: fp_glPopDebugGroupKHR))
    fp_glPopDebugGroupKHR()
}
public
func glPopDebugGroupKHR()
{
    fp_glPopDebugGroupKHR()
}

var fp_glPopGroupMarkerEXT:@convention(c) () -> () = load_glPopGroupMarkerEXT
func load_glPopGroupMarkerEXT()
{
    fp_glPopGroupMarkerEXT = unsafeBitCast(get_fp("glPopGroupMarkerEXT", support: [ss141]), to: Swift.type(of: fp_glPopGroupMarkerEXT))
    fp_glPopGroupMarkerEXT()
}
public
func glPopGroupMarkerEXT()
{
    fp_glPopGroupMarkerEXT()
}

var fp_glPopMatrix:@convention(c) () -> () = load_glPopMatrix
func load_glPopMatrix()
{
    fp_glPopMatrix = unsafeBitCast(get_fp("glPopMatrix", support: [ss346, ss369, ss364]), to: Swift.type(of: fp_glPopMatrix))
    fp_glPopMatrix()
}
public
func glPopMatrix()
{
    fp_glPopMatrix()
}

var fp_glPopName:@convention(c) () -> () = load_glPopName
func load_glPopName()
{
    fp_glPopName = unsafeBitCast(get_fp("glPopName", support: [ss346, ss369]), to: Swift.type(of: fp_glPopName))
    fp_glPopName()
}
public
func glPopName()
{
    fp_glPopName()
}

var fp_glPresentFrameDualFillNV:@convention(c) (GL.UInt, GL.UInt64EXT, GL.UInt, GL.UInt, GL.Enum, GL.Enum, GL.UInt, GL.Enum, GL.UInt, GL.Enum, GL.UInt, GL.Enum, GL.UInt) -> () = load_glPresentFrameDualFillNV
func load_glPresentFrameDualFillNV(video_slot:GL.UInt, minPresentTime:GL.UInt64EXT, beginPresentTimeId:GL.UInt, presentDurationId:GL.UInt, type:GL.Enum, target0:GL.Enum, fill0:GL.UInt, target1:GL.Enum, fill1:GL.UInt, target2:GL.Enum, fill2:GL.UInt, target3:GL.Enum, fill3:GL.UInt)
{
    fp_glPresentFrameDualFillNV = unsafeBitCast(get_fp("glPresentFrameDualFillNV", support: [ss263]), to: Swift.type(of: fp_glPresentFrameDualFillNV))
    fp_glPresentFrameDualFillNV(video_slot, minPresentTime, beginPresentTimeId, presentDurationId, type, target0, fill0, target1, fill1, target2, fill2, target3, fill3)
}
public
func glPresentFrameDualFillNV(video_slot:GL.UInt, minPresentTime:GL.UInt64EXT, beginPresentTimeId:GL.UInt, presentDurationId:GL.UInt, type:GL.Enum, target0:GL.Enum, fill0:GL.UInt, target1:GL.Enum, fill1:GL.UInt, target2:GL.Enum, fill2:GL.UInt, target3:GL.Enum, fill3:GL.UInt)
{
    fp_glPresentFrameDualFillNV(video_slot, minPresentTime, beginPresentTimeId, presentDurationId, type, target0, fill0, target1, fill1, target2, fill2, target3, fill3)
}
public
func glPresentFrameDualFillNV(_ video_slot:GL.UInt, _ minPresentTime:GL.UInt64EXT, _ beginPresentTimeId:GL.UInt, _ presentDurationId:GL.UInt, _ type:GL.Enum, _ target0:GL.Enum, _ fill0:GL.UInt, _ target1:GL.Enum, _ fill1:GL.UInt, _ target2:GL.Enum, _ fill2:GL.UInt, _ target3:GL.Enum, _ fill3:GL.UInt)
{
    fp_glPresentFrameDualFillNV(video_slot, minPresentTime, beginPresentTimeId, presentDurationId, type, target0, fill0, target1, fill1, target2, fill2, target3, fill3)
}

var fp_glPresentFrameKeyedNV:@convention(c) (GL.UInt, GL.UInt64EXT, GL.UInt, GL.UInt, GL.Enum, GL.Enum, GL.UInt, GL.UInt, GL.Enum, GL.UInt, GL.UInt) -> () = load_glPresentFrameKeyedNV
func load_glPresentFrameKeyedNV(video_slot:GL.UInt, minPresentTime:GL.UInt64EXT, beginPresentTimeId:GL.UInt, presentDurationId:GL.UInt, type:GL.Enum, target0:GL.Enum, fill0:GL.UInt, key0:GL.UInt, target1:GL.Enum, fill1:GL.UInt, key1:GL.UInt)
{
    fp_glPresentFrameKeyedNV = unsafeBitCast(get_fp("glPresentFrameKeyedNV", support: [ss263]), to: Swift.type(of: fp_glPresentFrameKeyedNV))
    fp_glPresentFrameKeyedNV(video_slot, minPresentTime, beginPresentTimeId, presentDurationId, type, target0, fill0, key0, target1, fill1, key1)
}
public
func glPresentFrameKeyedNV(video_slot:GL.UInt, minPresentTime:GL.UInt64EXT, beginPresentTimeId:GL.UInt, presentDurationId:GL.UInt, type:GL.Enum, target0:GL.Enum, fill0:GL.UInt, key0:GL.UInt, target1:GL.Enum, fill1:GL.UInt, key1:GL.UInt)
{
    fp_glPresentFrameKeyedNV(video_slot, minPresentTime, beginPresentTimeId, presentDurationId, type, target0, fill0, key0, target1, fill1, key1)
}
public
func glPresentFrameKeyedNV(_ video_slot:GL.UInt, _ minPresentTime:GL.UInt64EXT, _ beginPresentTimeId:GL.UInt, _ presentDurationId:GL.UInt, _ type:GL.Enum, _ target0:GL.Enum, _ fill0:GL.UInt, _ key0:GL.UInt, _ target1:GL.Enum, _ fill1:GL.UInt, _ key1:GL.UInt)
{
    fp_glPresentFrameKeyedNV(video_slot, minPresentTime, beginPresentTimeId, presentDurationId, type, target0, fill0, key0, target1, fill1, key1)
}

var fp_glPrimitiveBoundingBox:@convention(c) (GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float) -> () = load_glPrimitiveBoundingBox
func load_glPrimitiveBoundingBox(minX:GL.Float, minY:GL.Float, minZ:GL.Float, minW:GL.Float, maxX:GL.Float, maxY:GL.Float, maxZ:GL.Float, maxW:GL.Float)
{
    fp_glPrimitiveBoundingBox = unsafeBitCast(get_fp("glPrimitiveBoundingBox", support: [ss368]), to: Swift.type(of: fp_glPrimitiveBoundingBox))
    fp_glPrimitiveBoundingBox(minX, minY, minZ, minW, maxX, maxY, maxZ, maxW)
}
public
func glPrimitiveBoundingBox(minX:GL.Float, minY:GL.Float, minZ:GL.Float, minW:GL.Float, maxX:GL.Float, maxY:GL.Float, maxZ:GL.Float, maxW:GL.Float)
{
    fp_glPrimitiveBoundingBox(minX, minY, minZ, minW, maxX, maxY, maxZ, maxW)
}
public
func glPrimitiveBoundingBox(_ minX:GL.Float, _ minY:GL.Float, _ minZ:GL.Float, _ minW:GL.Float, _ maxX:GL.Float, _ maxY:GL.Float, _ maxZ:GL.Float, _ maxW:GL.Float)
{
    fp_glPrimitiveBoundingBox(minX, minY, minZ, minW, maxX, maxY, maxZ, maxW)
}

var fp_glPrimitiveBoundingBoxARB:@convention(c) (GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float) -> () = load_glPrimitiveBoundingBoxARB
func load_glPrimitiveBoundingBoxARB(minX:GL.Float, minY:GL.Float, minZ:GL.Float, minW:GL.Float, maxX:GL.Float, maxY:GL.Float, maxZ:GL.Float, maxW:GL.Float)
{
    fp_glPrimitiveBoundingBoxARB = unsafeBitCast(get_fp("glPrimitiveBoundingBoxARB", support: [ss50]), to: Swift.type(of: fp_glPrimitiveBoundingBoxARB))
    fp_glPrimitiveBoundingBoxARB(minX, minY, minZ, minW, maxX, maxY, maxZ, maxW)
}
public
func glPrimitiveBoundingBoxARB(minX:GL.Float, minY:GL.Float, minZ:GL.Float, minW:GL.Float, maxX:GL.Float, maxY:GL.Float, maxZ:GL.Float, maxW:GL.Float)
{
    fp_glPrimitiveBoundingBoxARB(minX, minY, minZ, minW, maxX, maxY, maxZ, maxW)
}
public
func glPrimitiveBoundingBoxARB(_ minX:GL.Float, _ minY:GL.Float, _ minZ:GL.Float, _ minW:GL.Float, _ maxX:GL.Float, _ maxY:GL.Float, _ maxZ:GL.Float, _ maxW:GL.Float)
{
    fp_glPrimitiveBoundingBoxARB(minX, minY, minZ, minW, maxX, maxY, maxZ, maxW)
}

var fp_glPrimitiveBoundingBoxEXT:@convention(c) (GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float) -> () = load_glPrimitiveBoundingBoxEXT
func load_glPrimitiveBoundingBoxEXT(minX:GL.Float, minY:GL.Float, minZ:GL.Float, minW:GL.Float, maxX:GL.Float, maxY:GL.Float, maxZ:GL.Float, maxW:GL.Float)
{
    fp_glPrimitiveBoundingBoxEXT = unsafeBitCast(get_fp("glPrimitiveBoundingBoxEXT", support: [ss177]), to: Swift.type(of: fp_glPrimitiveBoundingBoxEXT))
    fp_glPrimitiveBoundingBoxEXT(minX, minY, minZ, minW, maxX, maxY, maxZ, maxW)
}
public
func glPrimitiveBoundingBoxEXT(minX:GL.Float, minY:GL.Float, minZ:GL.Float, minW:GL.Float, maxX:GL.Float, maxY:GL.Float, maxZ:GL.Float, maxW:GL.Float)
{
    fp_glPrimitiveBoundingBoxEXT(minX, minY, minZ, minW, maxX, maxY, maxZ, maxW)
}
public
func glPrimitiveBoundingBoxEXT(_ minX:GL.Float, _ minY:GL.Float, _ minZ:GL.Float, _ minW:GL.Float, _ maxX:GL.Float, _ maxY:GL.Float, _ maxZ:GL.Float, _ maxW:GL.Float)
{
    fp_glPrimitiveBoundingBoxEXT(minX, minY, minZ, minW, maxX, maxY, maxZ, maxW)
}

var fp_glPrimitiveBoundingBoxOES:@convention(c) (GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float) -> () = load_glPrimitiveBoundingBoxOES
func load_glPrimitiveBoundingBoxOES(minX:GL.Float, minY:GL.Float, minZ:GL.Float, minW:GL.Float, maxX:GL.Float, maxY:GL.Float, maxZ:GL.Float, maxW:GL.Float)
{
    fp_glPrimitiveBoundingBoxOES = unsafeBitCast(get_fp("glPrimitiveBoundingBoxOES", support: [ss299]), to: Swift.type(of: fp_glPrimitiveBoundingBoxOES))
    fp_glPrimitiveBoundingBoxOES(minX, minY, minZ, minW, maxX, maxY, maxZ, maxW)
}
public
func glPrimitiveBoundingBoxOES(minX:GL.Float, minY:GL.Float, minZ:GL.Float, minW:GL.Float, maxX:GL.Float, maxY:GL.Float, maxZ:GL.Float, maxW:GL.Float)
{
    fp_glPrimitiveBoundingBoxOES(minX, minY, minZ, minW, maxX, maxY, maxZ, maxW)
}
public
func glPrimitiveBoundingBoxOES(_ minX:GL.Float, _ minY:GL.Float, _ minZ:GL.Float, _ minW:GL.Float, _ maxX:GL.Float, _ maxY:GL.Float, _ maxZ:GL.Float, _ maxW:GL.Float)
{
    fp_glPrimitiveBoundingBoxOES(minX, minY, minZ, minW, maxX, maxY, maxZ, maxW)
}

var fp_glPrimitiveRestartIndex:@convention(c) (GL.UInt) -> () = load_glPrimitiveRestartIndex
func load_glPrimitiveRestartIndex(index:GL.UInt)
{
    fp_glPrimitiveRestartIndex = unsafeBitCast(get_fp("glPrimitiveRestartIndex", support: [ss355]), to: Swift.type(of: fp_glPrimitiveRestartIndex))
    fp_glPrimitiveRestartIndex(index)
}
public
func glPrimitiveRestartIndex(index:GL.UInt)
{
    fp_glPrimitiveRestartIndex(index)
}
public
func glPrimitiveRestartIndex(_ index:GL.UInt)
{
    fp_glPrimitiveRestartIndex(index)
}

var fp_glPrimitiveRestartIndexNV:@convention(c) (GL.UInt) -> () = load_glPrimitiveRestartIndexNV
func load_glPrimitiveRestartIndexNV(index:GL.UInt)
{
    fp_glPrimitiveRestartIndexNV = unsafeBitCast(get_fp("glPrimitiveRestartIndexNV", support: [ss264]), to: Swift.type(of: fp_glPrimitiveRestartIndexNV))
    fp_glPrimitiveRestartIndexNV(index)
}
public
func glPrimitiveRestartIndexNV(index:GL.UInt)
{
    fp_glPrimitiveRestartIndexNV(index)
}
public
func glPrimitiveRestartIndexNV(_ index:GL.UInt)
{
    fp_glPrimitiveRestartIndexNV(index)
}

var fp_glPrimitiveRestartNV:@convention(c) () -> () = load_glPrimitiveRestartNV
func load_glPrimitiveRestartNV()
{
    fp_glPrimitiveRestartNV = unsafeBitCast(get_fp("glPrimitiveRestartNV", support: [ss264]), to: Swift.type(of: fp_glPrimitiveRestartNV))
    fp_glPrimitiveRestartNV()
}
public
func glPrimitiveRestartNV()
{
    fp_glPrimitiveRestartNV()
}

var fp_glPrioritizeTextures:@convention(c) (GL.Size, UnsafePointer<GL.UInt>?, UnsafePointer<GL.Float>?) -> () = load_glPrioritizeTextures
func load_glPrioritizeTextures(n:GL.Size, textures:UnsafePointer<GL.UInt>?, priorities:UnsafePointer<GL.Float>?)
{
    fp_glPrioritizeTextures = unsafeBitCast(get_fp("glPrioritizeTextures", support: [ss347, ss369]), to: Swift.type(of: fp_glPrioritizeTextures))
    fp_glPrioritizeTextures(n, textures, priorities)
}
public
func glPrioritizeTextures(n:GL.Size, textures:UnsafePointer<GL.UInt>?, priorities:UnsafePointer<GL.Float>?)
{
    fp_glPrioritizeTextures(n, textures, priorities)
}
public
func glPrioritizeTextures(_ n:GL.Size, _ textures:UnsafePointer<GL.UInt>?, _ priorities:UnsafePointer<GL.Float>?)
{
    fp_glPrioritizeTextures(n, textures, priorities)
}

var fp_glPrioritizeTexturesEXT:@convention(c) (GL.Size, UnsafePointer<GL.UInt>?, UnsafePointer<GL.ClampFloat>?) -> () = load_glPrioritizeTexturesEXT
func load_glPrioritizeTexturesEXT(n:GL.Size, textures:UnsafePointer<GL.UInt>?, priorities:UnsafePointer<GL.ClampFloat>?)
{
    fp_glPrioritizeTexturesEXT = unsafeBitCast(get_fp("glPrioritizeTexturesEXT", support: [ss195]), to: Swift.type(of: fp_glPrioritizeTexturesEXT))
    fp_glPrioritizeTexturesEXT(n, textures, priorities)
}
public
func glPrioritizeTexturesEXT(n:GL.Size, textures:UnsafePointer<GL.UInt>?, priorities:UnsafePointer<GL.ClampFloat>?)
{
    fp_glPrioritizeTexturesEXT(n, textures, priorities)
}
public
func glPrioritizeTexturesEXT(_ n:GL.Size, _ textures:UnsafePointer<GL.UInt>?, _ priorities:UnsafePointer<GL.ClampFloat>?)
{
    fp_glPrioritizeTexturesEXT(n, textures, priorities)
}

var fp_glPrioritizeTexturesxOES:@convention(c) (GL.Size, UnsafePointer<GL.UInt>?, UnsafePointer<GL.Fixed>?) -> () = load_glPrioritizeTexturesxOES
func load_glPrioritizeTexturesxOES(n:GL.Size, textures:UnsafePointer<GL.UInt>?, priorities:UnsafePointer<GL.Fixed>?)
{
    fp_glPrioritizeTexturesxOES = unsafeBitCast(get_fp("glPrioritizeTexturesxOES", support: [ss292]), to: Swift.type(of: fp_glPrioritizeTexturesxOES))
    fp_glPrioritizeTexturesxOES(n, textures, priorities)
}
public
func glPrioritizeTexturesxOES(n:GL.Size, textures:UnsafePointer<GL.UInt>?, priorities:UnsafePointer<GL.Fixed>?)
{
    fp_glPrioritizeTexturesxOES(n, textures, priorities)
}
public
func glPrioritizeTexturesxOES(_ n:GL.Size, _ textures:UnsafePointer<GL.UInt>?, _ priorities:UnsafePointer<GL.Fixed>?)
{
    fp_glPrioritizeTexturesxOES(n, textures, priorities)
}

var fp_glProgramBinary:@convention(c) (GL.UInt, GL.Enum, UnsafeRawPointer?, GL.Size) -> () = load_glProgramBinary
func load_glProgramBinary(program:GL.UInt, binaryFormat:GL.Enum, binary:UnsafeRawPointer?, length:GL.Size)
{
    fp_glProgramBinary = unsafeBitCast(get_fp("glProgramBinary", support: [ss359, ss366, ss55]), to: Swift.type(of: fp_glProgramBinary))
    fp_glProgramBinary(program, binaryFormat, binary, length)
}
public
func glProgramBinary(program:GL.UInt, binaryFormat:GL.Enum, binary:UnsafeRawPointer?, length:GL.Size)
{
    fp_glProgramBinary(program, binaryFormat, binary, length)
}
public
func glProgramBinary(_ program:GL.UInt, _ binaryFormat:GL.Enum, _ binary:UnsafeRawPointer?, _ length:GL.Size)
{
    fp_glProgramBinary(program, binaryFormat, binary, length)
}

var fp_glProgramBinaryOES:@convention(c) (GL.UInt, GL.Enum, UnsafeRawPointer?, GL.Int) -> () = load_glProgramBinaryOES
func load_glProgramBinaryOES(program:GL.UInt, binaryFormat:GL.Enum, binary:UnsafeRawPointer?, length:GL.Int)
{
    fp_glProgramBinaryOES = unsafeBitCast(get_fp("glProgramBinaryOES", support: [ss295]), to: Swift.type(of: fp_glProgramBinaryOES))
    fp_glProgramBinaryOES(program, binaryFormat, binary, length)
}
public
func glProgramBinaryOES(program:GL.UInt, binaryFormat:GL.Enum, binary:UnsafeRawPointer?, length:GL.Int)
{
    fp_glProgramBinaryOES(program, binaryFormat, binary, length)
}
public
func glProgramBinaryOES(_ program:GL.UInt, _ binaryFormat:GL.Enum, _ binary:UnsafeRawPointer?, _ length:GL.Int)
{
    fp_glProgramBinaryOES(program, binaryFormat, binary, length)
}

var fp_glProgramBufferParametersIivNV:@convention(c) (GL.Enum, GL.UInt, GL.UInt, GL.Size, UnsafePointer<GL.Int>?) -> () = load_glProgramBufferParametersIivNV
func load_glProgramBufferParametersIivNV(target:GL.Enum, bindingIndex:GL.UInt, wordIndex:GL.UInt, count:GL.Size, params:UnsafePointer<GL.Int>?)
{
    fp_glProgramBufferParametersIivNV = unsafeBitCast(get_fp("glProgramBufferParametersIivNV", support: [ss258]), to: Swift.type(of: fp_glProgramBufferParametersIivNV))
    fp_glProgramBufferParametersIivNV(target, bindingIndex, wordIndex, count, params)
}
public
func glProgramBufferParametersIivNV(target:GL.Enum, bindingIndex:GL.UInt, wordIndex:GL.UInt, count:GL.Size, params:UnsafePointer<GL.Int>?)
{
    fp_glProgramBufferParametersIivNV(target, bindingIndex, wordIndex, count, params)
}
public
func glProgramBufferParametersIivNV(_ target:GL.Enum, _ bindingIndex:GL.UInt, _ wordIndex:GL.UInt, _ count:GL.Size, _ params:UnsafePointer<GL.Int>?)
{
    fp_glProgramBufferParametersIivNV(target, bindingIndex, wordIndex, count, params)
}

var fp_glProgramBufferParametersIuivNV:@convention(c) (GL.Enum, GL.UInt, GL.UInt, GL.Size, UnsafePointer<GL.UInt>?) -> () = load_glProgramBufferParametersIuivNV
func load_glProgramBufferParametersIuivNV(target:GL.Enum, bindingIndex:GL.UInt, wordIndex:GL.UInt, count:GL.Size, params:UnsafePointer<GL.UInt>?)
{
    fp_glProgramBufferParametersIuivNV = unsafeBitCast(get_fp("glProgramBufferParametersIuivNV", support: [ss258]), to: Swift.type(of: fp_glProgramBufferParametersIuivNV))
    fp_glProgramBufferParametersIuivNV(target, bindingIndex, wordIndex, count, params)
}
public
func glProgramBufferParametersIuivNV(target:GL.Enum, bindingIndex:GL.UInt, wordIndex:GL.UInt, count:GL.Size, params:UnsafePointer<GL.UInt>?)
{
    fp_glProgramBufferParametersIuivNV(target, bindingIndex, wordIndex, count, params)
}
public
func glProgramBufferParametersIuivNV(_ target:GL.Enum, _ bindingIndex:GL.UInt, _ wordIndex:GL.UInt, _ count:GL.Size, _ params:UnsafePointer<GL.UInt>?)
{
    fp_glProgramBufferParametersIuivNV(target, bindingIndex, wordIndex, count, params)
}

var fp_glProgramBufferParametersfvNV:@convention(c) (GL.Enum, GL.UInt, GL.UInt, GL.Size, UnsafePointer<GL.Float>?) -> () = load_glProgramBufferParametersfvNV
func load_glProgramBufferParametersfvNV(target:GL.Enum, bindingIndex:GL.UInt, wordIndex:GL.UInt, count:GL.Size, params:UnsafePointer<GL.Float>?)
{
    fp_glProgramBufferParametersfvNV = unsafeBitCast(get_fp("glProgramBufferParametersfvNV", support: [ss258]), to: Swift.type(of: fp_glProgramBufferParametersfvNV))
    fp_glProgramBufferParametersfvNV(target, bindingIndex, wordIndex, count, params)
}
public
func glProgramBufferParametersfvNV(target:GL.Enum, bindingIndex:GL.UInt, wordIndex:GL.UInt, count:GL.Size, params:UnsafePointer<GL.Float>?)
{
    fp_glProgramBufferParametersfvNV(target, bindingIndex, wordIndex, count, params)
}
public
func glProgramBufferParametersfvNV(_ target:GL.Enum, _ bindingIndex:GL.UInt, _ wordIndex:GL.UInt, _ count:GL.Size, _ params:UnsafePointer<GL.Float>?)
{
    fp_glProgramBufferParametersfvNV(target, bindingIndex, wordIndex, count, params)
}

var fp_glProgramEnvParameter4dARB:@convention(c) (GL.Enum, GL.UInt, GL.Double, GL.Double, GL.Double, GL.Double) -> () = load_glProgramEnvParameter4dARB
func load_glProgramEnvParameter4dARB(target:GL.Enum, index:GL.UInt, x:GL.Double, y:GL.Double, z:GL.Double, w:GL.Double)
{
    fp_glProgramEnvParameter4dARB = unsafeBitCast(get_fp("glProgramEnvParameter4dARB", support: [ss51, ss110]), to: Swift.type(of: fp_glProgramEnvParameter4dARB))
    fp_glProgramEnvParameter4dARB(target, index, x, y, z, w)
}
public
func glProgramEnvParameter4dARB(target:GL.Enum, index:GL.UInt, x:GL.Double, y:GL.Double, z:GL.Double, w:GL.Double)
{
    fp_glProgramEnvParameter4dARB(target, index, x, y, z, w)
}
public
func glProgramEnvParameter4dARB(_ target:GL.Enum, _ index:GL.UInt, _ x:GL.Double, _ y:GL.Double, _ z:GL.Double, _ w:GL.Double)
{
    fp_glProgramEnvParameter4dARB(target, index, x, y, z, w)
}

var fp_glProgramEnvParameter4dvARB:@convention(c) (GL.Enum, GL.UInt, UnsafePointer<GL.Double>?) -> () = load_glProgramEnvParameter4dvARB
func load_glProgramEnvParameter4dvARB(target:GL.Enum, index:GL.UInt, params:UnsafePointer<GL.Double>?)
{
    fp_glProgramEnvParameter4dvARB = unsafeBitCast(get_fp("glProgramEnvParameter4dvARB", support: [ss51, ss110]), to: Swift.type(of: fp_glProgramEnvParameter4dvARB))
    fp_glProgramEnvParameter4dvARB(target, index, params)
}
public
func glProgramEnvParameter4dvARB(target:GL.Enum, index:GL.UInt, params:UnsafePointer<GL.Double>?)
{
    fp_glProgramEnvParameter4dvARB(target, index, params)
}
public
func glProgramEnvParameter4dvARB(_ target:GL.Enum, _ index:GL.UInt, _ params:UnsafePointer<GL.Double>?)
{
    fp_glProgramEnvParameter4dvARB(target, index, params)
}

var fp_glProgramEnvParameter4fARB:@convention(c) (GL.Enum, GL.UInt, GL.Float, GL.Float, GL.Float, GL.Float) -> () = load_glProgramEnvParameter4fARB
func load_glProgramEnvParameter4fARB(target:GL.Enum, index:GL.UInt, x:GL.Float, y:GL.Float, z:GL.Float, w:GL.Float)
{
    fp_glProgramEnvParameter4fARB = unsafeBitCast(get_fp("glProgramEnvParameter4fARB", support: [ss51, ss110]), to: Swift.type(of: fp_glProgramEnvParameter4fARB))
    fp_glProgramEnvParameter4fARB(target, index, x, y, z, w)
}
public
func glProgramEnvParameter4fARB(target:GL.Enum, index:GL.UInt, x:GL.Float, y:GL.Float, z:GL.Float, w:GL.Float)
{
    fp_glProgramEnvParameter4fARB(target, index, x, y, z, w)
}
public
func glProgramEnvParameter4fARB(_ target:GL.Enum, _ index:GL.UInt, _ x:GL.Float, _ y:GL.Float, _ z:GL.Float, _ w:GL.Float)
{
    fp_glProgramEnvParameter4fARB(target, index, x, y, z, w)
}

var fp_glProgramEnvParameter4fvARB:@convention(c) (GL.Enum, GL.UInt, UnsafePointer<GL.Float>?) -> () = load_glProgramEnvParameter4fvARB
func load_glProgramEnvParameter4fvARB(target:GL.Enum, index:GL.UInt, params:UnsafePointer<GL.Float>?)
{
    fp_glProgramEnvParameter4fvARB = unsafeBitCast(get_fp("glProgramEnvParameter4fvARB", support: [ss51, ss110]), to: Swift.type(of: fp_glProgramEnvParameter4fvARB))
    fp_glProgramEnvParameter4fvARB(target, index, params)
}
public
func glProgramEnvParameter4fvARB(target:GL.Enum, index:GL.UInt, params:UnsafePointer<GL.Float>?)
{
    fp_glProgramEnvParameter4fvARB(target, index, params)
}
public
func glProgramEnvParameter4fvARB(_ target:GL.Enum, _ index:GL.UInt, _ params:UnsafePointer<GL.Float>?)
{
    fp_glProgramEnvParameter4fvARB(target, index, params)
}

var fp_glProgramEnvParameterI4iNV:@convention(c) (GL.Enum, GL.UInt, GL.Int, GL.Int, GL.Int, GL.Int) -> () = load_glProgramEnvParameterI4iNV
func load_glProgramEnvParameterI4iNV(target:GL.Enum, index:GL.UInt, x:GL.Int, y:GL.Int, z:GL.Int, w:GL.Int)
{
    fp_glProgramEnvParameterI4iNV = unsafeBitCast(get_fp("glProgramEnvParameterI4iNV", support: [ss250]), to: Swift.type(of: fp_glProgramEnvParameterI4iNV))
    fp_glProgramEnvParameterI4iNV(target, index, x, y, z, w)
}
public
func glProgramEnvParameterI4iNV(target:GL.Enum, index:GL.UInt, x:GL.Int, y:GL.Int, z:GL.Int, w:GL.Int)
{
    fp_glProgramEnvParameterI4iNV(target, index, x, y, z, w)
}
public
func glProgramEnvParameterI4iNV(_ target:GL.Enum, _ index:GL.UInt, _ x:GL.Int, _ y:GL.Int, _ z:GL.Int, _ w:GL.Int)
{
    fp_glProgramEnvParameterI4iNV(target, index, x, y, z, w)
}

var fp_glProgramEnvParameterI4ivNV:@convention(c) (GL.Enum, GL.UInt, UnsafePointer<GL.Int>?) -> () = load_glProgramEnvParameterI4ivNV
func load_glProgramEnvParameterI4ivNV(target:GL.Enum, index:GL.UInt, params:UnsafePointer<GL.Int>?)
{
    fp_glProgramEnvParameterI4ivNV = unsafeBitCast(get_fp("glProgramEnvParameterI4ivNV", support: [ss250]), to: Swift.type(of: fp_glProgramEnvParameterI4ivNV))
    fp_glProgramEnvParameterI4ivNV(target, index, params)
}
public
func glProgramEnvParameterI4ivNV(target:GL.Enum, index:GL.UInt, params:UnsafePointer<GL.Int>?)
{
    fp_glProgramEnvParameterI4ivNV(target, index, params)
}
public
func glProgramEnvParameterI4ivNV(_ target:GL.Enum, _ index:GL.UInt, _ params:UnsafePointer<GL.Int>?)
{
    fp_glProgramEnvParameterI4ivNV(target, index, params)
}

var fp_glProgramEnvParameterI4uiNV:@convention(c) (GL.Enum, GL.UInt, GL.UInt, GL.UInt, GL.UInt, GL.UInt) -> () = load_glProgramEnvParameterI4uiNV
func load_glProgramEnvParameterI4uiNV(target:GL.Enum, index:GL.UInt, x:GL.UInt, y:GL.UInt, z:GL.UInt, w:GL.UInt)
{
    fp_glProgramEnvParameterI4uiNV = unsafeBitCast(get_fp("glProgramEnvParameterI4uiNV", support: [ss250]), to: Swift.type(of: fp_glProgramEnvParameterI4uiNV))
    fp_glProgramEnvParameterI4uiNV(target, index, x, y, z, w)
}
public
func glProgramEnvParameterI4uiNV(target:GL.Enum, index:GL.UInt, x:GL.UInt, y:GL.UInt, z:GL.UInt, w:GL.UInt)
{
    fp_glProgramEnvParameterI4uiNV(target, index, x, y, z, w)
}
public
func glProgramEnvParameterI4uiNV(_ target:GL.Enum, _ index:GL.UInt, _ x:GL.UInt, _ y:GL.UInt, _ z:GL.UInt, _ w:GL.UInt)
{
    fp_glProgramEnvParameterI4uiNV(target, index, x, y, z, w)
}

var fp_glProgramEnvParameterI4uivNV:@convention(c) (GL.Enum, GL.UInt, UnsafePointer<GL.UInt>?) -> () = load_glProgramEnvParameterI4uivNV
func load_glProgramEnvParameterI4uivNV(target:GL.Enum, index:GL.UInt, params:UnsafePointer<GL.UInt>?)
{
    fp_glProgramEnvParameterI4uivNV = unsafeBitCast(get_fp("glProgramEnvParameterI4uivNV", support: [ss250]), to: Swift.type(of: fp_glProgramEnvParameterI4uivNV))
    fp_glProgramEnvParameterI4uivNV(target, index, params)
}
public
func glProgramEnvParameterI4uivNV(target:GL.Enum, index:GL.UInt, params:UnsafePointer<GL.UInt>?)
{
    fp_glProgramEnvParameterI4uivNV(target, index, params)
}
public
func glProgramEnvParameterI4uivNV(_ target:GL.Enum, _ index:GL.UInt, _ params:UnsafePointer<GL.UInt>?)
{
    fp_glProgramEnvParameterI4uivNV(target, index, params)
}

var fp_glProgramEnvParameters4fvEXT:@convention(c) (GL.Enum, GL.UInt, GL.Size, UnsafePointer<GL.Float>?) -> () = load_glProgramEnvParameters4fvEXT
func load_glProgramEnvParameters4fvEXT(target:GL.Enum, index:GL.UInt, count:GL.Size, params:UnsafePointer<GL.Float>?)
{
    fp_glProgramEnvParameters4fvEXT = unsafeBitCast(get_fp("glProgramEnvParameters4fvEXT", support: [ss158]), to: Swift.type(of: fp_glProgramEnvParameters4fvEXT))
    fp_glProgramEnvParameters4fvEXT(target, index, count, params)
}
public
func glProgramEnvParameters4fvEXT(target:GL.Enum, index:GL.UInt, count:GL.Size, params:UnsafePointer<GL.Float>?)
{
    fp_glProgramEnvParameters4fvEXT(target, index, count, params)
}
public
func glProgramEnvParameters4fvEXT(_ target:GL.Enum, _ index:GL.UInt, _ count:GL.Size, _ params:UnsafePointer<GL.Float>?)
{
    fp_glProgramEnvParameters4fvEXT(target, index, count, params)
}

var fp_glProgramEnvParametersI4ivNV:@convention(c) (GL.Enum, GL.UInt, GL.Size, UnsafePointer<GL.Int>?) -> () = load_glProgramEnvParametersI4ivNV
func load_glProgramEnvParametersI4ivNV(target:GL.Enum, index:GL.UInt, count:GL.Size, params:UnsafePointer<GL.Int>?)
{
    fp_glProgramEnvParametersI4ivNV = unsafeBitCast(get_fp("glProgramEnvParametersI4ivNV", support: [ss250]), to: Swift.type(of: fp_glProgramEnvParametersI4ivNV))
    fp_glProgramEnvParametersI4ivNV(target, index, count, params)
}
public
func glProgramEnvParametersI4ivNV(target:GL.Enum, index:GL.UInt, count:GL.Size, params:UnsafePointer<GL.Int>?)
{
    fp_glProgramEnvParametersI4ivNV(target, index, count, params)
}
public
func glProgramEnvParametersI4ivNV(_ target:GL.Enum, _ index:GL.UInt, _ count:GL.Size, _ params:UnsafePointer<GL.Int>?)
{
    fp_glProgramEnvParametersI4ivNV(target, index, count, params)
}

var fp_glProgramEnvParametersI4uivNV:@convention(c) (GL.Enum, GL.UInt, GL.Size, UnsafePointer<GL.UInt>?) -> () = load_glProgramEnvParametersI4uivNV
func load_glProgramEnvParametersI4uivNV(target:GL.Enum, index:GL.UInt, count:GL.Size, params:UnsafePointer<GL.UInt>?)
{
    fp_glProgramEnvParametersI4uivNV = unsafeBitCast(get_fp("glProgramEnvParametersI4uivNV", support: [ss250]), to: Swift.type(of: fp_glProgramEnvParametersI4uivNV))
    fp_glProgramEnvParametersI4uivNV(target, index, count, params)
}
public
func glProgramEnvParametersI4uivNV(target:GL.Enum, index:GL.UInt, count:GL.Size, params:UnsafePointer<GL.UInt>?)
{
    fp_glProgramEnvParametersI4uivNV(target, index, count, params)
}
public
func glProgramEnvParametersI4uivNV(_ target:GL.Enum, _ index:GL.UInt, _ count:GL.Size, _ params:UnsafePointer<GL.UInt>?)
{
    fp_glProgramEnvParametersI4uivNV(target, index, count, params)
}

var fp_glProgramLocalParameter4dARB:@convention(c) (GL.Enum, GL.UInt, GL.Double, GL.Double, GL.Double, GL.Double) -> () = load_glProgramLocalParameter4dARB
func load_glProgramLocalParameter4dARB(target:GL.Enum, index:GL.UInt, x:GL.Double, y:GL.Double, z:GL.Double, w:GL.Double)
{
    fp_glProgramLocalParameter4dARB = unsafeBitCast(get_fp("glProgramLocalParameter4dARB", support: [ss51, ss110]), to: Swift.type(of: fp_glProgramLocalParameter4dARB))
    fp_glProgramLocalParameter4dARB(target, index, x, y, z, w)
}
public
func glProgramLocalParameter4dARB(target:GL.Enum, index:GL.UInt, x:GL.Double, y:GL.Double, z:GL.Double, w:GL.Double)
{
    fp_glProgramLocalParameter4dARB(target, index, x, y, z, w)
}
public
func glProgramLocalParameter4dARB(_ target:GL.Enum, _ index:GL.UInt, _ x:GL.Double, _ y:GL.Double, _ z:GL.Double, _ w:GL.Double)
{
    fp_glProgramLocalParameter4dARB(target, index, x, y, z, w)
}

var fp_glProgramLocalParameter4dvARB:@convention(c) (GL.Enum, GL.UInt, UnsafePointer<GL.Double>?) -> () = load_glProgramLocalParameter4dvARB
func load_glProgramLocalParameter4dvARB(target:GL.Enum, index:GL.UInt, params:UnsafePointer<GL.Double>?)
{
    fp_glProgramLocalParameter4dvARB = unsafeBitCast(get_fp("glProgramLocalParameter4dvARB", support: [ss51, ss110]), to: Swift.type(of: fp_glProgramLocalParameter4dvARB))
    fp_glProgramLocalParameter4dvARB(target, index, params)
}
public
func glProgramLocalParameter4dvARB(target:GL.Enum, index:GL.UInt, params:UnsafePointer<GL.Double>?)
{
    fp_glProgramLocalParameter4dvARB(target, index, params)
}
public
func glProgramLocalParameter4dvARB(_ target:GL.Enum, _ index:GL.UInt, _ params:UnsafePointer<GL.Double>?)
{
    fp_glProgramLocalParameter4dvARB(target, index, params)
}

var fp_glProgramLocalParameter4fARB:@convention(c) (GL.Enum, GL.UInt, GL.Float, GL.Float, GL.Float, GL.Float) -> () = load_glProgramLocalParameter4fARB
func load_glProgramLocalParameter4fARB(target:GL.Enum, index:GL.UInt, x:GL.Float, y:GL.Float, z:GL.Float, w:GL.Float)
{
    fp_glProgramLocalParameter4fARB = unsafeBitCast(get_fp("glProgramLocalParameter4fARB", support: [ss51, ss110]), to: Swift.type(of: fp_glProgramLocalParameter4fARB))
    fp_glProgramLocalParameter4fARB(target, index, x, y, z, w)
}
public
func glProgramLocalParameter4fARB(target:GL.Enum, index:GL.UInt, x:GL.Float, y:GL.Float, z:GL.Float, w:GL.Float)
{
    fp_glProgramLocalParameter4fARB(target, index, x, y, z, w)
}
public
func glProgramLocalParameter4fARB(_ target:GL.Enum, _ index:GL.UInt, _ x:GL.Float, _ y:GL.Float, _ z:GL.Float, _ w:GL.Float)
{
    fp_glProgramLocalParameter4fARB(target, index, x, y, z, w)
}

var fp_glProgramLocalParameter4fvARB:@convention(c) (GL.Enum, GL.UInt, UnsafePointer<GL.Float>?) -> () = load_glProgramLocalParameter4fvARB
func load_glProgramLocalParameter4fvARB(target:GL.Enum, index:GL.UInt, params:UnsafePointer<GL.Float>?)
{
    fp_glProgramLocalParameter4fvARB = unsafeBitCast(get_fp("glProgramLocalParameter4fvARB", support: [ss51, ss110]), to: Swift.type(of: fp_glProgramLocalParameter4fvARB))
    fp_glProgramLocalParameter4fvARB(target, index, params)
}
public
func glProgramLocalParameter4fvARB(target:GL.Enum, index:GL.UInt, params:UnsafePointer<GL.Float>?)
{
    fp_glProgramLocalParameter4fvARB(target, index, params)
}
public
func glProgramLocalParameter4fvARB(_ target:GL.Enum, _ index:GL.UInt, _ params:UnsafePointer<GL.Float>?)
{
    fp_glProgramLocalParameter4fvARB(target, index, params)
}

var fp_glProgramLocalParameterI4iNV:@convention(c) (GL.Enum, GL.UInt, GL.Int, GL.Int, GL.Int, GL.Int) -> () = load_glProgramLocalParameterI4iNV
func load_glProgramLocalParameterI4iNV(target:GL.Enum, index:GL.UInt, x:GL.Int, y:GL.Int, z:GL.Int, w:GL.Int)
{
    fp_glProgramLocalParameterI4iNV = unsafeBitCast(get_fp("glProgramLocalParameterI4iNV", support: [ss250]), to: Swift.type(of: fp_glProgramLocalParameterI4iNV))
    fp_glProgramLocalParameterI4iNV(target, index, x, y, z, w)
}
public
func glProgramLocalParameterI4iNV(target:GL.Enum, index:GL.UInt, x:GL.Int, y:GL.Int, z:GL.Int, w:GL.Int)
{
    fp_glProgramLocalParameterI4iNV(target, index, x, y, z, w)
}
public
func glProgramLocalParameterI4iNV(_ target:GL.Enum, _ index:GL.UInt, _ x:GL.Int, _ y:GL.Int, _ z:GL.Int, _ w:GL.Int)
{
    fp_glProgramLocalParameterI4iNV(target, index, x, y, z, w)
}

var fp_glProgramLocalParameterI4ivNV:@convention(c) (GL.Enum, GL.UInt, UnsafePointer<GL.Int>?) -> () = load_glProgramLocalParameterI4ivNV
func load_glProgramLocalParameterI4ivNV(target:GL.Enum, index:GL.UInt, params:UnsafePointer<GL.Int>?)
{
    fp_glProgramLocalParameterI4ivNV = unsafeBitCast(get_fp("glProgramLocalParameterI4ivNV", support: [ss250]), to: Swift.type(of: fp_glProgramLocalParameterI4ivNV))
    fp_glProgramLocalParameterI4ivNV(target, index, params)
}
public
func glProgramLocalParameterI4ivNV(target:GL.Enum, index:GL.UInt, params:UnsafePointer<GL.Int>?)
{
    fp_glProgramLocalParameterI4ivNV(target, index, params)
}
public
func glProgramLocalParameterI4ivNV(_ target:GL.Enum, _ index:GL.UInt, _ params:UnsafePointer<GL.Int>?)
{
    fp_glProgramLocalParameterI4ivNV(target, index, params)
}

var fp_glProgramLocalParameterI4uiNV:@convention(c) (GL.Enum, GL.UInt, GL.UInt, GL.UInt, GL.UInt, GL.UInt) -> () = load_glProgramLocalParameterI4uiNV
func load_glProgramLocalParameterI4uiNV(target:GL.Enum, index:GL.UInt, x:GL.UInt, y:GL.UInt, z:GL.UInt, w:GL.UInt)
{
    fp_glProgramLocalParameterI4uiNV = unsafeBitCast(get_fp("glProgramLocalParameterI4uiNV", support: [ss250]), to: Swift.type(of: fp_glProgramLocalParameterI4uiNV))
    fp_glProgramLocalParameterI4uiNV(target, index, x, y, z, w)
}
public
func glProgramLocalParameterI4uiNV(target:GL.Enum, index:GL.UInt, x:GL.UInt, y:GL.UInt, z:GL.UInt, w:GL.UInt)
{
    fp_glProgramLocalParameterI4uiNV(target, index, x, y, z, w)
}
public
func glProgramLocalParameterI4uiNV(_ target:GL.Enum, _ index:GL.UInt, _ x:GL.UInt, _ y:GL.UInt, _ z:GL.UInt, _ w:GL.UInt)
{
    fp_glProgramLocalParameterI4uiNV(target, index, x, y, z, w)
}

var fp_glProgramLocalParameterI4uivNV:@convention(c) (GL.Enum, GL.UInt, UnsafePointer<GL.UInt>?) -> () = load_glProgramLocalParameterI4uivNV
func load_glProgramLocalParameterI4uivNV(target:GL.Enum, index:GL.UInt, params:UnsafePointer<GL.UInt>?)
{
    fp_glProgramLocalParameterI4uivNV = unsafeBitCast(get_fp("glProgramLocalParameterI4uivNV", support: [ss250]), to: Swift.type(of: fp_glProgramLocalParameterI4uivNV))
    fp_glProgramLocalParameterI4uivNV(target, index, params)
}
public
func glProgramLocalParameterI4uivNV(target:GL.Enum, index:GL.UInt, params:UnsafePointer<GL.UInt>?)
{
    fp_glProgramLocalParameterI4uivNV(target, index, params)
}
public
func glProgramLocalParameterI4uivNV(_ target:GL.Enum, _ index:GL.UInt, _ params:UnsafePointer<GL.UInt>?)
{
    fp_glProgramLocalParameterI4uivNV(target, index, params)
}

var fp_glProgramLocalParameters4fvEXT:@convention(c) (GL.Enum, GL.UInt, GL.Size, UnsafePointer<GL.Float>?) -> () = load_glProgramLocalParameters4fvEXT
func load_glProgramLocalParameters4fvEXT(target:GL.Enum, index:GL.UInt, count:GL.Size, params:UnsafePointer<GL.Float>?)
{
    fp_glProgramLocalParameters4fvEXT = unsafeBitCast(get_fp("glProgramLocalParameters4fvEXT", support: [ss158]), to: Swift.type(of: fp_glProgramLocalParameters4fvEXT))
    fp_glProgramLocalParameters4fvEXT(target, index, count, params)
}
public
func glProgramLocalParameters4fvEXT(target:GL.Enum, index:GL.UInt, count:GL.Size, params:UnsafePointer<GL.Float>?)
{
    fp_glProgramLocalParameters4fvEXT(target, index, count, params)
}
public
func glProgramLocalParameters4fvEXT(_ target:GL.Enum, _ index:GL.UInt, _ count:GL.Size, _ params:UnsafePointer<GL.Float>?)
{
    fp_glProgramLocalParameters4fvEXT(target, index, count, params)
}

var fp_glProgramLocalParametersI4ivNV:@convention(c) (GL.Enum, GL.UInt, GL.Size, UnsafePointer<GL.Int>?) -> () = load_glProgramLocalParametersI4ivNV
func load_glProgramLocalParametersI4ivNV(target:GL.Enum, index:GL.UInt, count:GL.Size, params:UnsafePointer<GL.Int>?)
{
    fp_glProgramLocalParametersI4ivNV = unsafeBitCast(get_fp("glProgramLocalParametersI4ivNV", support: [ss250]), to: Swift.type(of: fp_glProgramLocalParametersI4ivNV))
    fp_glProgramLocalParametersI4ivNV(target, index, count, params)
}
public
func glProgramLocalParametersI4ivNV(target:GL.Enum, index:GL.UInt, count:GL.Size, params:UnsafePointer<GL.Int>?)
{
    fp_glProgramLocalParametersI4ivNV(target, index, count, params)
}
public
func glProgramLocalParametersI4ivNV(_ target:GL.Enum, _ index:GL.UInt, _ count:GL.Size, _ params:UnsafePointer<GL.Int>?)
{
    fp_glProgramLocalParametersI4ivNV(target, index, count, params)
}

var fp_glProgramLocalParametersI4uivNV:@convention(c) (GL.Enum, GL.UInt, GL.Size, UnsafePointer<GL.UInt>?) -> () = load_glProgramLocalParametersI4uivNV
func load_glProgramLocalParametersI4uivNV(target:GL.Enum, index:GL.UInt, count:GL.Size, params:UnsafePointer<GL.UInt>?)
{
    fp_glProgramLocalParametersI4uivNV = unsafeBitCast(get_fp("glProgramLocalParametersI4uivNV", support: [ss250]), to: Swift.type(of: fp_glProgramLocalParametersI4uivNV))
    fp_glProgramLocalParametersI4uivNV(target, index, count, params)
}
public
func glProgramLocalParametersI4uivNV(target:GL.Enum, index:GL.UInt, count:GL.Size, params:UnsafePointer<GL.UInt>?)
{
    fp_glProgramLocalParametersI4uivNV(target, index, count, params)
}
public
func glProgramLocalParametersI4uivNV(_ target:GL.Enum, _ index:GL.UInt, _ count:GL.Size, _ params:UnsafePointer<GL.UInt>?)
{
    fp_glProgramLocalParametersI4uivNV(target, index, count, params)
}

var fp_glProgramNamedParameter4dNV:@convention(c) (GL.UInt, GL.Size, UnsafePointer<GL.UByte>?, GL.Double, GL.Double, GL.Double, GL.Double) -> () = load_glProgramNamedParameter4dNV
func load_glProgramNamedParameter4dNV(id:GL.UInt, len:GL.Size, name:UnsafePointer<GL.UByte>?, x:GL.Double, y:GL.Double, z:GL.Double, w:GL.Double)
{
    fp_glProgramNamedParameter4dNV = unsafeBitCast(get_fp("glProgramNamedParameter4dNV", support: [ss244]), to: Swift.type(of: fp_glProgramNamedParameter4dNV))
    fp_glProgramNamedParameter4dNV(id, len, name, x, y, z, w)
}
public
func glProgramNamedParameter4dNV(id:GL.UInt, len:GL.Size, name:UnsafePointer<GL.UByte>?, x:GL.Double, y:GL.Double, z:GL.Double, w:GL.Double)
{
    fp_glProgramNamedParameter4dNV(id, len, name, x, y, z, w)
}
public
func glProgramNamedParameter4dNV(_ id:GL.UInt, _ len:GL.Size, _ name:UnsafePointer<GL.UByte>?, _ x:GL.Double, _ y:GL.Double, _ z:GL.Double, _ w:GL.Double)
{
    fp_glProgramNamedParameter4dNV(id, len, name, x, y, z, w)
}

var fp_glProgramNamedParameter4dvNV:@convention(c) (GL.UInt, GL.Size, UnsafePointer<GL.UByte>?, UnsafePointer<GL.Double>?) -> () = load_glProgramNamedParameter4dvNV
func load_glProgramNamedParameter4dvNV(id:GL.UInt, len:GL.Size, name:UnsafePointer<GL.UByte>?, v:UnsafePointer<GL.Double>?)
{
    fp_glProgramNamedParameter4dvNV = unsafeBitCast(get_fp("glProgramNamedParameter4dvNV", support: [ss244]), to: Swift.type(of: fp_glProgramNamedParameter4dvNV))
    fp_glProgramNamedParameter4dvNV(id, len, name, v)
}
public
func glProgramNamedParameter4dvNV(id:GL.UInt, len:GL.Size, name:UnsafePointer<GL.UByte>?, v:UnsafePointer<GL.Double>?)
{
    fp_glProgramNamedParameter4dvNV(id, len, name, v)
}
public
func glProgramNamedParameter4dvNV(_ id:GL.UInt, _ len:GL.Size, _ name:UnsafePointer<GL.UByte>?, _ v:UnsafePointer<GL.Double>?)
{
    fp_glProgramNamedParameter4dvNV(id, len, name, v)
}

var fp_glProgramNamedParameter4fNV:@convention(c) (GL.UInt, GL.Size, UnsafePointer<GL.UByte>?, GL.Float, GL.Float, GL.Float, GL.Float) -> () = load_glProgramNamedParameter4fNV
func load_glProgramNamedParameter4fNV(id:GL.UInt, len:GL.Size, name:UnsafePointer<GL.UByte>?, x:GL.Float, y:GL.Float, z:GL.Float, w:GL.Float)
{
    fp_glProgramNamedParameter4fNV = unsafeBitCast(get_fp("glProgramNamedParameter4fNV", support: [ss244]), to: Swift.type(of: fp_glProgramNamedParameter4fNV))
    fp_glProgramNamedParameter4fNV(id, len, name, x, y, z, w)
}
public
func glProgramNamedParameter4fNV(id:GL.UInt, len:GL.Size, name:UnsafePointer<GL.UByte>?, x:GL.Float, y:GL.Float, z:GL.Float, w:GL.Float)
{
    fp_glProgramNamedParameter4fNV(id, len, name, x, y, z, w)
}
public
func glProgramNamedParameter4fNV(_ id:GL.UInt, _ len:GL.Size, _ name:UnsafePointer<GL.UByte>?, _ x:GL.Float, _ y:GL.Float, _ z:GL.Float, _ w:GL.Float)
{
    fp_glProgramNamedParameter4fNV(id, len, name, x, y, z, w)
}

var fp_glProgramNamedParameter4fvNV:@convention(c) (GL.UInt, GL.Size, UnsafePointer<GL.UByte>?, UnsafePointer<GL.Float>?) -> () = load_glProgramNamedParameter4fvNV
func load_glProgramNamedParameter4fvNV(id:GL.UInt, len:GL.Size, name:UnsafePointer<GL.UByte>?, v:UnsafePointer<GL.Float>?)
{
    fp_glProgramNamedParameter4fvNV = unsafeBitCast(get_fp("glProgramNamedParameter4fvNV", support: [ss244]), to: Swift.type(of: fp_glProgramNamedParameter4fvNV))
    fp_glProgramNamedParameter4fvNV(id, len, name, v)
}
public
func glProgramNamedParameter4fvNV(id:GL.UInt, len:GL.Size, name:UnsafePointer<GL.UByte>?, v:UnsafePointer<GL.Float>?)
{
    fp_glProgramNamedParameter4fvNV(id, len, name, v)
}
public
func glProgramNamedParameter4fvNV(_ id:GL.UInt, _ len:GL.Size, _ name:UnsafePointer<GL.UByte>?, _ v:UnsafePointer<GL.Float>?)
{
    fp_glProgramNamedParameter4fvNV(id, len, name, v)
}

var fp_glProgramParameter4dNV:@convention(c) (GL.Enum, GL.UInt, GL.Double, GL.Double, GL.Double, GL.Double) -> () = load_glProgramParameter4dNV
func load_glProgramParameter4dNV(target:GL.Enum, index:GL.UInt, x:GL.Double, y:GL.Double, z:GL.Double, w:GL.Double)
{
    fp_glProgramParameter4dNV = unsafeBitCast(get_fp("glProgramParameter4dNV", support: [ss278]), to: Swift.type(of: fp_glProgramParameter4dNV))
    fp_glProgramParameter4dNV(target, index, x, y, z, w)
}
public
func glProgramParameter4dNV(target:GL.Enum, index:GL.UInt, x:GL.Double, y:GL.Double, z:GL.Double, w:GL.Double)
{
    fp_glProgramParameter4dNV(target, index, x, y, z, w)
}
public
func glProgramParameter4dNV(_ target:GL.Enum, _ index:GL.UInt, _ x:GL.Double, _ y:GL.Double, _ z:GL.Double, _ w:GL.Double)
{
    fp_glProgramParameter4dNV(target, index, x, y, z, w)
}

var fp_glProgramParameter4dvNV:@convention(c) (GL.Enum, GL.UInt, UnsafePointer<GL.Double>?) -> () = load_glProgramParameter4dvNV
func load_glProgramParameter4dvNV(target:GL.Enum, index:GL.UInt, v:UnsafePointer<GL.Double>?)
{
    fp_glProgramParameter4dvNV = unsafeBitCast(get_fp("glProgramParameter4dvNV", support: [ss278]), to: Swift.type(of: fp_glProgramParameter4dvNV))
    fp_glProgramParameter4dvNV(target, index, v)
}
public
func glProgramParameter4dvNV(target:GL.Enum, index:GL.UInt, v:UnsafePointer<GL.Double>?)
{
    fp_glProgramParameter4dvNV(target, index, v)
}
public
func glProgramParameter4dvNV(_ target:GL.Enum, _ index:GL.UInt, _ v:UnsafePointer<GL.Double>?)
{
    fp_glProgramParameter4dvNV(target, index, v)
}

var fp_glProgramParameter4fNV:@convention(c) (GL.Enum, GL.UInt, GL.Float, GL.Float, GL.Float, GL.Float) -> () = load_glProgramParameter4fNV
func load_glProgramParameter4fNV(target:GL.Enum, index:GL.UInt, x:GL.Float, y:GL.Float, z:GL.Float, w:GL.Float)
{
    fp_glProgramParameter4fNV = unsafeBitCast(get_fp("glProgramParameter4fNV", support: [ss278]), to: Swift.type(of: fp_glProgramParameter4fNV))
    fp_glProgramParameter4fNV(target, index, x, y, z, w)
}
public
func glProgramParameter4fNV(target:GL.Enum, index:GL.UInt, x:GL.Float, y:GL.Float, z:GL.Float, w:GL.Float)
{
    fp_glProgramParameter4fNV(target, index, x, y, z, w)
}
public
func glProgramParameter4fNV(_ target:GL.Enum, _ index:GL.UInt, _ x:GL.Float, _ y:GL.Float, _ z:GL.Float, _ w:GL.Float)
{
    fp_glProgramParameter4fNV(target, index, x, y, z, w)
}

var fp_glProgramParameter4fvNV:@convention(c) (GL.Enum, GL.UInt, UnsafePointer<GL.Float>?) -> () = load_glProgramParameter4fvNV
func load_glProgramParameter4fvNV(target:GL.Enum, index:GL.UInt, v:UnsafePointer<GL.Float>?)
{
    fp_glProgramParameter4fvNV = unsafeBitCast(get_fp("glProgramParameter4fvNV", support: [ss278]), to: Swift.type(of: fp_glProgramParameter4fvNV))
    fp_glProgramParameter4fvNV(target, index, v)
}
public
func glProgramParameter4fvNV(target:GL.Enum, index:GL.UInt, v:UnsafePointer<GL.Float>?)
{
    fp_glProgramParameter4fvNV(target, index, v)
}
public
func glProgramParameter4fvNV(_ target:GL.Enum, _ index:GL.UInt, _ v:UnsafePointer<GL.Float>?)
{
    fp_glProgramParameter4fvNV(target, index, v)
}

var fp_glProgramParameteri:@convention(c) (GL.UInt, GL.Enum, GL.Int) -> () = load_glProgramParameteri
func load_glProgramParameteri(program:GL.UInt, pname:GL.Enum, value:GL.Int)
{
    fp_glProgramParameteri = unsafeBitCast(get_fp("glProgramParameteri", support: [ss359, ss366, ss55]), to: Swift.type(of: fp_glProgramParameteri))
    fp_glProgramParameteri(program, pname, value)
}
public
func glProgramParameteri(program:GL.UInt, pname:GL.Enum, value:GL.Int)
{
    fp_glProgramParameteri(program, pname, value)
}
public
func glProgramParameteri(_ program:GL.UInt, _ pname:GL.Enum, _ value:GL.Int)
{
    fp_glProgramParameteri(program, pname, value)
}

var fp_glProgramParameteriARB:@convention(c) (GL.UInt, GL.Enum, GL.Int) -> () = load_glProgramParameteriARB
func load_glProgramParameteriARB(program:GL.UInt, pname:GL.Enum, value:GL.Int)
{
    fp_glProgramParameteriARB = unsafeBitCast(get_fp("glProgramParameteriARB", support: [ss54]), to: Swift.type(of: fp_glProgramParameteriARB))
    fp_glProgramParameteriARB(program, pname, value)
}
public
func glProgramParameteriARB(program:GL.UInt, pname:GL.Enum, value:GL.Int)
{
    fp_glProgramParameteriARB(program, pname, value)
}
public
func glProgramParameteriARB(_ program:GL.UInt, _ pname:GL.Enum, _ value:GL.Int)
{
    fp_glProgramParameteriARB(program, pname, value)
}

var fp_glProgramParameteriEXT:@convention(c) (GL.UInt, GL.Enum, GL.Int) -> () = load_glProgramParameteriEXT
func load_glProgramParameteriEXT(program:GL.UInt, pname:GL.Enum, value:GL.Int)
{
    fp_glProgramParameteriEXT = unsafeBitCast(get_fp("glProgramParameteriEXT", support: [ss157, ss182]), to: Swift.type(of: fp_glProgramParameteriEXT))
    fp_glProgramParameteriEXT(program, pname, value)
}
public
func glProgramParameteriEXT(program:GL.UInt, pname:GL.Enum, value:GL.Int)
{
    fp_glProgramParameteriEXT(program, pname, value)
}
public
func glProgramParameteriEXT(_ program:GL.UInt, _ pname:GL.Enum, _ value:GL.Int)
{
    fp_glProgramParameteriEXT(program, pname, value)
}

var fp_glProgramParameters4dvNV:@convention(c) (GL.Enum, GL.UInt, GL.Size, UnsafePointer<GL.Double>?) -> () = load_glProgramParameters4dvNV
func load_glProgramParameters4dvNV(target:GL.Enum, index:GL.UInt, count:GL.Size, v:UnsafePointer<GL.Double>?)
{
    fp_glProgramParameters4dvNV = unsafeBitCast(get_fp("glProgramParameters4dvNV", support: [ss278]), to: Swift.type(of: fp_glProgramParameters4dvNV))
    fp_glProgramParameters4dvNV(target, index, count, v)
}
public
func glProgramParameters4dvNV(target:GL.Enum, index:GL.UInt, count:GL.Size, v:UnsafePointer<GL.Double>?)
{
    fp_glProgramParameters4dvNV(target, index, count, v)
}
public
func glProgramParameters4dvNV(_ target:GL.Enum, _ index:GL.UInt, _ count:GL.Size, _ v:UnsafePointer<GL.Double>?)
{
    fp_glProgramParameters4dvNV(target, index, count, v)
}

var fp_glProgramParameters4fvNV:@convention(c) (GL.Enum, GL.UInt, GL.Size, UnsafePointer<GL.Float>?) -> () = load_glProgramParameters4fvNV
func load_glProgramParameters4fvNV(target:GL.Enum, index:GL.UInt, count:GL.Size, v:UnsafePointer<GL.Float>?)
{
    fp_glProgramParameters4fvNV = unsafeBitCast(get_fp("glProgramParameters4fvNV", support: [ss278]), to: Swift.type(of: fp_glProgramParameters4fvNV))
    fp_glProgramParameters4fvNV(target, index, count, v)
}
public
func glProgramParameters4fvNV(target:GL.Enum, index:GL.UInt, count:GL.Size, v:UnsafePointer<GL.Float>?)
{
    fp_glProgramParameters4fvNV(target, index, count, v)
}
public
func glProgramParameters4fvNV(_ target:GL.Enum, _ index:GL.UInt, _ count:GL.Size, _ v:UnsafePointer<GL.Float>?)
{
    fp_glProgramParameters4fvNV(target, index, count, v)
}

var fp_glProgramPathFragmentInputGenNV:@convention(c) (GL.UInt, GL.Int, GL.Enum, GL.Int, UnsafePointer<GL.Float>?) -> () = load_glProgramPathFragmentInputGenNV
func load_glProgramPathFragmentInputGenNV(program:GL.UInt, location:GL.Int, genMode:GL.Enum, components:GL.Int, coeffs:UnsafePointer<GL.Float>?)
{
    fp_glProgramPathFragmentInputGenNV = unsafeBitCast(get_fp("glProgramPathFragmentInputGenNV", support: [ss259]), to: Swift.type(of: fp_glProgramPathFragmentInputGenNV))
    fp_glProgramPathFragmentInputGenNV(program, location, genMode, components, coeffs)
}
public
func glProgramPathFragmentInputGenNV(program:GL.UInt, location:GL.Int, genMode:GL.Enum, components:GL.Int, coeffs:UnsafePointer<GL.Float>?)
{
    fp_glProgramPathFragmentInputGenNV(program, location, genMode, components, coeffs)
}
public
func glProgramPathFragmentInputGenNV(_ program:GL.UInt, _ location:GL.Int, _ genMode:GL.Enum, _ components:GL.Int, _ coeffs:UnsafePointer<GL.Float>?)
{
    fp_glProgramPathFragmentInputGenNV(program, location, genMode, components, coeffs)
}

var fp_glProgramStringARB:@convention(c) (GL.Enum, GL.Enum, GL.Size, UnsafeRawPointer?) -> () = load_glProgramStringARB
func load_glProgramStringARB(target:GL.Enum, format:GL.Enum, len:GL.Size, string:UnsafeRawPointer?)
{
    fp_glProgramStringARB = unsafeBitCast(get_fp("glProgramStringARB", support: [ss51, ss110]), to: Swift.type(of: fp_glProgramStringARB))
    fp_glProgramStringARB(target, format, len, string)
}
public
func glProgramStringARB(target:GL.Enum, format:GL.Enum, len:GL.Size, string:UnsafeRawPointer?)
{
    fp_glProgramStringARB(target, format, len, string)
}
public
func glProgramStringARB(_ target:GL.Enum, _ format:GL.Enum, _ len:GL.Size, _ string:UnsafeRawPointer?)
{
    fp_glProgramStringARB(target, format, len, string)
}

var fp_glProgramSubroutineParametersuivNV:@convention(c) (GL.Enum, GL.Size, UnsafePointer<GL.UInt>?) -> () = load_glProgramSubroutineParametersuivNV
func load_glProgramSubroutineParametersuivNV(target:GL.Enum, count:GL.Size, params:UnsafePointer<GL.UInt>?)
{
    fp_glProgramSubroutineParametersuivNV = unsafeBitCast(get_fp("glProgramSubroutineParametersuivNV", support: [ss251]), to: Swift.type(of: fp_glProgramSubroutineParametersuivNV))
    fp_glProgramSubroutineParametersuivNV(target, count, params)
}
public
func glProgramSubroutineParametersuivNV(target:GL.Enum, count:GL.Size, params:UnsafePointer<GL.UInt>?)
{
    fp_glProgramSubroutineParametersuivNV(target, count, params)
}
public
func glProgramSubroutineParametersuivNV(_ target:GL.Enum, _ count:GL.Size, _ params:UnsafePointer<GL.UInt>?)
{
    fp_glProgramSubroutineParametersuivNV(target, count, params)
}

var fp_glProgramUniform1d:@convention(c) (GL.UInt, GL.Int, GL.Double) -> () = load_glProgramUniform1d
func load_glProgramUniform1d(program:GL.UInt, location:GL.Int, v0:GL.Double)
{
    fp_glProgramUniform1d = unsafeBitCast(get_fp("glProgramUniform1d", support: [ss359, ss80]), to: Swift.type(of: fp_glProgramUniform1d))
    fp_glProgramUniform1d(program, location, v0)
}
public
func glProgramUniform1d(program:GL.UInt, location:GL.Int, v0:GL.Double)
{
    fp_glProgramUniform1d(program, location, v0)
}
public
func glProgramUniform1d(_ program:GL.UInt, _ location:GL.Int, _ v0:GL.Double)
{
    fp_glProgramUniform1d(program, location, v0)
}

var fp_glProgramUniform1dEXT:@convention(c) (GL.UInt, GL.Int, GL.Double) -> () = load_glProgramUniform1dEXT
func load_glProgramUniform1dEXT(program:GL.UInt, location:GL.Int, x:GL.Double)
{
    fp_glProgramUniform1dEXT = unsafeBitCast(get_fp("glProgramUniform1dEXT", support: [ss143]), to: Swift.type(of: fp_glProgramUniform1dEXT))
    fp_glProgramUniform1dEXT(program, location, x)
}
public
func glProgramUniform1dEXT(program:GL.UInt, location:GL.Int, x:GL.Double)
{
    fp_glProgramUniform1dEXT(program, location, x)
}
public
func glProgramUniform1dEXT(_ program:GL.UInt, _ location:GL.Int, _ x:GL.Double)
{
    fp_glProgramUniform1dEXT(program, location, x)
}

var fp_glProgramUniform1dv:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafePointer<GL.Double>?) -> () = load_glProgramUniform1dv
func load_glProgramUniform1dv(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniform1dv = unsafeBitCast(get_fp("glProgramUniform1dv", support: [ss359, ss80]), to: Swift.type(of: fp_glProgramUniform1dv))
    fp_glProgramUniform1dv(program, location, count, value)
}
public
func glProgramUniform1dv(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniform1dv(program, location, count, value)
}
public
func glProgramUniform1dv(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniform1dv(program, location, count, value)
}

var fp_glProgramUniform1dvEXT:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafePointer<GL.Double>?) -> () = load_glProgramUniform1dvEXT
func load_glProgramUniform1dvEXT(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniform1dvEXT = unsafeBitCast(get_fp("glProgramUniform1dvEXT", support: [ss143]), to: Swift.type(of: fp_glProgramUniform1dvEXT))
    fp_glProgramUniform1dvEXT(program, location, count, value)
}
public
func glProgramUniform1dvEXT(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniform1dvEXT(program, location, count, value)
}
public
func glProgramUniform1dvEXT(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniform1dvEXT(program, location, count, value)
}

var fp_glProgramUniform1f:@convention(c) (GL.UInt, GL.Int, GL.Float) -> () = load_glProgramUniform1f
func load_glProgramUniform1f(program:GL.UInt, location:GL.Int, v0:GL.Float)
{
    fp_glProgramUniform1f = unsafeBitCast(get_fp("glProgramUniform1f", support: [ss359, ss367, ss80]), to: Swift.type(of: fp_glProgramUniform1f))
    fp_glProgramUniform1f(program, location, v0)
}
public
func glProgramUniform1f(program:GL.UInt, location:GL.Int, v0:GL.Float)
{
    fp_glProgramUniform1f(program, location, v0)
}
public
func glProgramUniform1f(_ program:GL.UInt, _ location:GL.Int, _ v0:GL.Float)
{
    fp_glProgramUniform1f(program, location, v0)
}

var fp_glProgramUniform1fEXT:@convention(c) (GL.UInt, GL.Int, GL.Float) -> () = load_glProgramUniform1fEXT
func load_glProgramUniform1fEXT(program:GL.UInt, location:GL.Int, v0:GL.Float)
{
    fp_glProgramUniform1fEXT = unsafeBitCast(get_fp("glProgramUniform1fEXT", support: [ss143, ss182]), to: Swift.type(of: fp_glProgramUniform1fEXT))
    fp_glProgramUniform1fEXT(program, location, v0)
}
public
func glProgramUniform1fEXT(program:GL.UInt, location:GL.Int, v0:GL.Float)
{
    fp_glProgramUniform1fEXT(program, location, v0)
}
public
func glProgramUniform1fEXT(_ program:GL.UInt, _ location:GL.Int, _ v0:GL.Float)
{
    fp_glProgramUniform1fEXT(program, location, v0)
}

var fp_glProgramUniform1fv:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafePointer<GL.Float>?) -> () = load_glProgramUniform1fv
func load_glProgramUniform1fv(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniform1fv = unsafeBitCast(get_fp("glProgramUniform1fv", support: [ss359, ss367, ss80]), to: Swift.type(of: fp_glProgramUniform1fv))
    fp_glProgramUniform1fv(program, location, count, value)
}
public
func glProgramUniform1fv(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniform1fv(program, location, count, value)
}
public
func glProgramUniform1fv(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniform1fv(program, location, count, value)
}

var fp_glProgramUniform1fvEXT:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafePointer<GL.Float>?) -> () = load_glProgramUniform1fvEXT
func load_glProgramUniform1fvEXT(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniform1fvEXT = unsafeBitCast(get_fp("glProgramUniform1fvEXT", support: [ss143, ss182]), to: Swift.type(of: fp_glProgramUniform1fvEXT))
    fp_glProgramUniform1fvEXT(program, location, count, value)
}
public
func glProgramUniform1fvEXT(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniform1fvEXT(program, location, count, value)
}
public
func glProgramUniform1fvEXT(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniform1fvEXT(program, location, count, value)
}

var fp_glProgramUniform1i:@convention(c) (GL.UInt, GL.Int, GL.Int) -> () = load_glProgramUniform1i
func load_glProgramUniform1i(program:GL.UInt, location:GL.Int, v0:GL.Int)
{
    fp_glProgramUniform1i = unsafeBitCast(get_fp("glProgramUniform1i", support: [ss359, ss367, ss80]), to: Swift.type(of: fp_glProgramUniform1i))
    fp_glProgramUniform1i(program, location, v0)
}
public
func glProgramUniform1i(program:GL.UInt, location:GL.Int, v0:GL.Int)
{
    fp_glProgramUniform1i(program, location, v0)
}
public
func glProgramUniform1i(_ program:GL.UInt, _ location:GL.Int, _ v0:GL.Int)
{
    fp_glProgramUniform1i(program, location, v0)
}

var fp_glProgramUniform1i64ARB:@convention(c) (GL.UInt, GL.Int, GL.Int64) -> () = load_glProgramUniform1i64ARB
func load_glProgramUniform1i64ARB(program:GL.UInt, location:GL.Int, x:GL.Int64)
{
    fp_glProgramUniform1i64ARB = unsafeBitCast(get_fp("glProgramUniform1i64ARB", support: [ss58]), to: Swift.type(of: fp_glProgramUniform1i64ARB))
    fp_glProgramUniform1i64ARB(program, location, x)
}
public
func glProgramUniform1i64ARB(program:GL.UInt, location:GL.Int, x:GL.Int64)
{
    fp_glProgramUniform1i64ARB(program, location, x)
}
public
func glProgramUniform1i64ARB(_ program:GL.UInt, _ location:GL.Int, _ x:GL.Int64)
{
    fp_glProgramUniform1i64ARB(program, location, x)
}

var fp_glProgramUniform1i64NV:@convention(c) (GL.UInt, GL.Int, GL.Int64EXT) -> () = load_glProgramUniform1i64NV
func load_glProgramUniform1i64NV(program:GL.UInt, location:GL.Int, x:GL.Int64EXT)
{
    fp_glProgramUniform1i64NV = unsafeBitCast(get_fp("glProgramUniform1i64NV", support: [ss3, ss252]), to: Swift.type(of: fp_glProgramUniform1i64NV))
    fp_glProgramUniform1i64NV(program, location, x)
}
public
func glProgramUniform1i64NV(program:GL.UInt, location:GL.Int, x:GL.Int64EXT)
{
    fp_glProgramUniform1i64NV(program, location, x)
}
public
func glProgramUniform1i64NV(_ program:GL.UInt, _ location:GL.Int, _ x:GL.Int64EXT)
{
    fp_glProgramUniform1i64NV(program, location, x)
}

var fp_glProgramUniform1i64vARB:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafePointer<GL.Int64>?) -> () = load_glProgramUniform1i64vARB
func load_glProgramUniform1i64vARB(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int64>?)
{
    fp_glProgramUniform1i64vARB = unsafeBitCast(get_fp("glProgramUniform1i64vARB", support: [ss58]), to: Swift.type(of: fp_glProgramUniform1i64vARB))
    fp_glProgramUniform1i64vARB(program, location, count, value)
}
public
func glProgramUniform1i64vARB(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int64>?)
{
    fp_glProgramUniform1i64vARB(program, location, count, value)
}
public
func glProgramUniform1i64vARB(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Int64>?)
{
    fp_glProgramUniform1i64vARB(program, location, count, value)
}

var fp_glProgramUniform1i64vNV:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafePointer<GL.Int64EXT>?) -> () = load_glProgramUniform1i64vNV
func load_glProgramUniform1i64vNV(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int64EXT>?)
{
    fp_glProgramUniform1i64vNV = unsafeBitCast(get_fp("glProgramUniform1i64vNV", support: [ss3, ss252]), to: Swift.type(of: fp_glProgramUniform1i64vNV))
    fp_glProgramUniform1i64vNV(program, location, count, value)
}
public
func glProgramUniform1i64vNV(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int64EXT>?)
{
    fp_glProgramUniform1i64vNV(program, location, count, value)
}
public
func glProgramUniform1i64vNV(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Int64EXT>?)
{
    fp_glProgramUniform1i64vNV(program, location, count, value)
}

var fp_glProgramUniform1iEXT:@convention(c) (GL.UInt, GL.Int, GL.Int) -> () = load_glProgramUniform1iEXT
func load_glProgramUniform1iEXT(program:GL.UInt, location:GL.Int, v0:GL.Int)
{
    fp_glProgramUniform1iEXT = unsafeBitCast(get_fp("glProgramUniform1iEXT", support: [ss143, ss182]), to: Swift.type(of: fp_glProgramUniform1iEXT))
    fp_glProgramUniform1iEXT(program, location, v0)
}
public
func glProgramUniform1iEXT(program:GL.UInt, location:GL.Int, v0:GL.Int)
{
    fp_glProgramUniform1iEXT(program, location, v0)
}
public
func glProgramUniform1iEXT(_ program:GL.UInt, _ location:GL.Int, _ v0:GL.Int)
{
    fp_glProgramUniform1iEXT(program, location, v0)
}

var fp_glProgramUniform1iv:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafePointer<GL.Int>?) -> () = load_glProgramUniform1iv
func load_glProgramUniform1iv(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int>?)
{
    fp_glProgramUniform1iv = unsafeBitCast(get_fp("glProgramUniform1iv", support: [ss359, ss367, ss80]), to: Swift.type(of: fp_glProgramUniform1iv))
    fp_glProgramUniform1iv(program, location, count, value)
}
public
func glProgramUniform1iv(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int>?)
{
    fp_glProgramUniform1iv(program, location, count, value)
}
public
func glProgramUniform1iv(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Int>?)
{
    fp_glProgramUniform1iv(program, location, count, value)
}

var fp_glProgramUniform1ivEXT:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafePointer<GL.Int>?) -> () = load_glProgramUniform1ivEXT
func load_glProgramUniform1ivEXT(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int>?)
{
    fp_glProgramUniform1ivEXT = unsafeBitCast(get_fp("glProgramUniform1ivEXT", support: [ss143, ss182]), to: Swift.type(of: fp_glProgramUniform1ivEXT))
    fp_glProgramUniform1ivEXT(program, location, count, value)
}
public
func glProgramUniform1ivEXT(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int>?)
{
    fp_glProgramUniform1ivEXT(program, location, count, value)
}
public
func glProgramUniform1ivEXT(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Int>?)
{
    fp_glProgramUniform1ivEXT(program, location, count, value)
}

var fp_glProgramUniform1ui:@convention(c) (GL.UInt, GL.Int, GL.UInt) -> () = load_glProgramUniform1ui
func load_glProgramUniform1ui(program:GL.UInt, location:GL.Int, v0:GL.UInt)
{
    fp_glProgramUniform1ui = unsafeBitCast(get_fp("glProgramUniform1ui", support: [ss359, ss367, ss80]), to: Swift.type(of: fp_glProgramUniform1ui))
    fp_glProgramUniform1ui(program, location, v0)
}
public
func glProgramUniform1ui(program:GL.UInt, location:GL.Int, v0:GL.UInt)
{
    fp_glProgramUniform1ui(program, location, v0)
}
public
func glProgramUniform1ui(_ program:GL.UInt, _ location:GL.Int, _ v0:GL.UInt)
{
    fp_glProgramUniform1ui(program, location, v0)
}

var fp_glProgramUniform1ui64ARB:@convention(c) (GL.UInt, GL.Int, GL.UInt64) -> () = load_glProgramUniform1ui64ARB
func load_glProgramUniform1ui64ARB(program:GL.UInt, location:GL.Int, x:GL.UInt64)
{
    fp_glProgramUniform1ui64ARB = unsafeBitCast(get_fp("glProgramUniform1ui64ARB", support: [ss58]), to: Swift.type(of: fp_glProgramUniform1ui64ARB))
    fp_glProgramUniform1ui64ARB(program, location, x)
}
public
func glProgramUniform1ui64ARB(program:GL.UInt, location:GL.Int, x:GL.UInt64)
{
    fp_glProgramUniform1ui64ARB(program, location, x)
}
public
func glProgramUniform1ui64ARB(_ program:GL.UInt, _ location:GL.Int, _ x:GL.UInt64)
{
    fp_glProgramUniform1ui64ARB(program, location, x)
}

var fp_glProgramUniform1ui64NV:@convention(c) (GL.UInt, GL.Int, GL.UInt64EXT) -> () = load_glProgramUniform1ui64NV
func load_glProgramUniform1ui64NV(program:GL.UInt, location:GL.Int, x:GL.UInt64EXT)
{
    fp_glProgramUniform1ui64NV = unsafeBitCast(get_fp("glProgramUniform1ui64NV", support: [ss3, ss252]), to: Swift.type(of: fp_glProgramUniform1ui64NV))
    fp_glProgramUniform1ui64NV(program, location, x)
}
public
func glProgramUniform1ui64NV(program:GL.UInt, location:GL.Int, x:GL.UInt64EXT)
{
    fp_glProgramUniform1ui64NV(program, location, x)
}
public
func glProgramUniform1ui64NV(_ program:GL.UInt, _ location:GL.Int, _ x:GL.UInt64EXT)
{
    fp_glProgramUniform1ui64NV(program, location, x)
}

var fp_glProgramUniform1ui64vARB:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafePointer<GL.UInt64>?) -> () = load_glProgramUniform1ui64vARB
func load_glProgramUniform1ui64vARB(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt64>?)
{
    fp_glProgramUniform1ui64vARB = unsafeBitCast(get_fp("glProgramUniform1ui64vARB", support: [ss58]), to: Swift.type(of: fp_glProgramUniform1ui64vARB))
    fp_glProgramUniform1ui64vARB(program, location, count, value)
}
public
func glProgramUniform1ui64vARB(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt64>?)
{
    fp_glProgramUniform1ui64vARB(program, location, count, value)
}
public
func glProgramUniform1ui64vARB(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.UInt64>?)
{
    fp_glProgramUniform1ui64vARB(program, location, count, value)
}

var fp_glProgramUniform1ui64vNV:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafePointer<GL.UInt64EXT>?) -> () = load_glProgramUniform1ui64vNV
func load_glProgramUniform1ui64vNV(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt64EXT>?)
{
    fp_glProgramUniform1ui64vNV = unsafeBitCast(get_fp("glProgramUniform1ui64vNV", support: [ss3, ss252]), to: Swift.type(of: fp_glProgramUniform1ui64vNV))
    fp_glProgramUniform1ui64vNV(program, location, count, value)
}
public
func glProgramUniform1ui64vNV(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt64EXT>?)
{
    fp_glProgramUniform1ui64vNV(program, location, count, value)
}
public
func glProgramUniform1ui64vNV(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.UInt64EXT>?)
{
    fp_glProgramUniform1ui64vNV(program, location, count, value)
}

var fp_glProgramUniform1uiEXT:@convention(c) (GL.UInt, GL.Int, GL.UInt) -> () = load_glProgramUniform1uiEXT
func load_glProgramUniform1uiEXT(program:GL.UInt, location:GL.Int, v0:GL.UInt)
{
    fp_glProgramUniform1uiEXT = unsafeBitCast(get_fp("glProgramUniform1uiEXT", support: [ss143, ss182]), to: Swift.type(of: fp_glProgramUniform1uiEXT))
    fp_glProgramUniform1uiEXT(program, location, v0)
}
public
func glProgramUniform1uiEXT(program:GL.UInt, location:GL.Int, v0:GL.UInt)
{
    fp_glProgramUniform1uiEXT(program, location, v0)
}
public
func glProgramUniform1uiEXT(_ program:GL.UInt, _ location:GL.Int, _ v0:GL.UInt)
{
    fp_glProgramUniform1uiEXT(program, location, v0)
}

var fp_glProgramUniform1uiv:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafePointer<GL.UInt>?) -> () = load_glProgramUniform1uiv
func load_glProgramUniform1uiv(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt>?)
{
    fp_glProgramUniform1uiv = unsafeBitCast(get_fp("glProgramUniform1uiv", support: [ss359, ss367, ss80]), to: Swift.type(of: fp_glProgramUniform1uiv))
    fp_glProgramUniform1uiv(program, location, count, value)
}
public
func glProgramUniform1uiv(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt>?)
{
    fp_glProgramUniform1uiv(program, location, count, value)
}
public
func glProgramUniform1uiv(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.UInt>?)
{
    fp_glProgramUniform1uiv(program, location, count, value)
}

var fp_glProgramUniform1uivEXT:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafePointer<GL.UInt>?) -> () = load_glProgramUniform1uivEXT
func load_glProgramUniform1uivEXT(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt>?)
{
    fp_glProgramUniform1uivEXT = unsafeBitCast(get_fp("glProgramUniform1uivEXT", support: [ss143, ss182]), to: Swift.type(of: fp_glProgramUniform1uivEXT))
    fp_glProgramUniform1uivEXT(program, location, count, value)
}
public
func glProgramUniform1uivEXT(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt>?)
{
    fp_glProgramUniform1uivEXT(program, location, count, value)
}
public
func glProgramUniform1uivEXT(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.UInt>?)
{
    fp_glProgramUniform1uivEXT(program, location, count, value)
}

var fp_glProgramUniform2d:@convention(c) (GL.UInt, GL.Int, GL.Double, GL.Double) -> () = load_glProgramUniform2d
func load_glProgramUniform2d(program:GL.UInt, location:GL.Int, v0:GL.Double, v1:GL.Double)
{
    fp_glProgramUniform2d = unsafeBitCast(get_fp("glProgramUniform2d", support: [ss359, ss80]), to: Swift.type(of: fp_glProgramUniform2d))
    fp_glProgramUniform2d(program, location, v0, v1)
}
public
func glProgramUniform2d(program:GL.UInt, location:GL.Int, v0:GL.Double, v1:GL.Double)
{
    fp_glProgramUniform2d(program, location, v0, v1)
}
public
func glProgramUniform2d(_ program:GL.UInt, _ location:GL.Int, _ v0:GL.Double, _ v1:GL.Double)
{
    fp_glProgramUniform2d(program, location, v0, v1)
}

var fp_glProgramUniform2dEXT:@convention(c) (GL.UInt, GL.Int, GL.Double, GL.Double) -> () = load_glProgramUniform2dEXT
func load_glProgramUniform2dEXT(program:GL.UInt, location:GL.Int, x:GL.Double, y:GL.Double)
{
    fp_glProgramUniform2dEXT = unsafeBitCast(get_fp("glProgramUniform2dEXT", support: [ss143]), to: Swift.type(of: fp_glProgramUniform2dEXT))
    fp_glProgramUniform2dEXT(program, location, x, y)
}
public
func glProgramUniform2dEXT(program:GL.UInt, location:GL.Int, x:GL.Double, y:GL.Double)
{
    fp_glProgramUniform2dEXT(program, location, x, y)
}
public
func glProgramUniform2dEXT(_ program:GL.UInt, _ location:GL.Int, _ x:GL.Double, _ y:GL.Double)
{
    fp_glProgramUniform2dEXT(program, location, x, y)
}

var fp_glProgramUniform2dv:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafePointer<GL.Double>?) -> () = load_glProgramUniform2dv
func load_glProgramUniform2dv(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniform2dv = unsafeBitCast(get_fp("glProgramUniform2dv", support: [ss359, ss80]), to: Swift.type(of: fp_glProgramUniform2dv))
    fp_glProgramUniform2dv(program, location, count, value)
}
public
func glProgramUniform2dv(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniform2dv(program, location, count, value)
}
public
func glProgramUniform2dv(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniform2dv(program, location, count, value)
}

var fp_glProgramUniform2dvEXT:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafePointer<GL.Double>?) -> () = load_glProgramUniform2dvEXT
func load_glProgramUniform2dvEXT(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniform2dvEXT = unsafeBitCast(get_fp("glProgramUniform2dvEXT", support: [ss143]), to: Swift.type(of: fp_glProgramUniform2dvEXT))
    fp_glProgramUniform2dvEXT(program, location, count, value)
}
public
func glProgramUniform2dvEXT(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniform2dvEXT(program, location, count, value)
}
public
func glProgramUniform2dvEXT(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniform2dvEXT(program, location, count, value)
}

var fp_glProgramUniform2f:@convention(c) (GL.UInt, GL.Int, GL.Float, GL.Float) -> () = load_glProgramUniform2f
func load_glProgramUniform2f(program:GL.UInt, location:GL.Int, v0:GL.Float, v1:GL.Float)
{
    fp_glProgramUniform2f = unsafeBitCast(get_fp("glProgramUniform2f", support: [ss359, ss367, ss80]), to: Swift.type(of: fp_glProgramUniform2f))
    fp_glProgramUniform2f(program, location, v0, v1)
}
public
func glProgramUniform2f(program:GL.UInt, location:GL.Int, v0:GL.Float, v1:GL.Float)
{
    fp_glProgramUniform2f(program, location, v0, v1)
}
public
func glProgramUniform2f(_ program:GL.UInt, _ location:GL.Int, _ v0:GL.Float, _ v1:GL.Float)
{
    fp_glProgramUniform2f(program, location, v0, v1)
}

var fp_glProgramUniform2fEXT:@convention(c) (GL.UInt, GL.Int, GL.Float, GL.Float) -> () = load_glProgramUniform2fEXT
func load_glProgramUniform2fEXT(program:GL.UInt, location:GL.Int, v0:GL.Float, v1:GL.Float)
{
    fp_glProgramUniform2fEXT = unsafeBitCast(get_fp("glProgramUniform2fEXT", support: [ss143, ss182]), to: Swift.type(of: fp_glProgramUniform2fEXT))
    fp_glProgramUniform2fEXT(program, location, v0, v1)
}
public
func glProgramUniform2fEXT(program:GL.UInt, location:GL.Int, v0:GL.Float, v1:GL.Float)
{
    fp_glProgramUniform2fEXT(program, location, v0, v1)
}
public
func glProgramUniform2fEXT(_ program:GL.UInt, _ location:GL.Int, _ v0:GL.Float, _ v1:GL.Float)
{
    fp_glProgramUniform2fEXT(program, location, v0, v1)
}

var fp_glProgramUniform2fv:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafePointer<GL.Float>?) -> () = load_glProgramUniform2fv
func load_glProgramUniform2fv(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniform2fv = unsafeBitCast(get_fp("glProgramUniform2fv", support: [ss359, ss367, ss80]), to: Swift.type(of: fp_glProgramUniform2fv))
    fp_glProgramUniform2fv(program, location, count, value)
}
public
func glProgramUniform2fv(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniform2fv(program, location, count, value)
}
public
func glProgramUniform2fv(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniform2fv(program, location, count, value)
}

var fp_glProgramUniform2fvEXT:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafePointer<GL.Float>?) -> () = load_glProgramUniform2fvEXT
func load_glProgramUniform2fvEXT(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniform2fvEXT = unsafeBitCast(get_fp("glProgramUniform2fvEXT", support: [ss143, ss182]), to: Swift.type(of: fp_glProgramUniform2fvEXT))
    fp_glProgramUniform2fvEXT(program, location, count, value)
}
public
func glProgramUniform2fvEXT(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniform2fvEXT(program, location, count, value)
}
public
func glProgramUniform2fvEXT(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniform2fvEXT(program, location, count, value)
}

var fp_glProgramUniform2i:@convention(c) (GL.UInt, GL.Int, GL.Int, GL.Int) -> () = load_glProgramUniform2i
func load_glProgramUniform2i(program:GL.UInt, location:GL.Int, v0:GL.Int, v1:GL.Int)
{
    fp_glProgramUniform2i = unsafeBitCast(get_fp("glProgramUniform2i", support: [ss359, ss367, ss80]), to: Swift.type(of: fp_glProgramUniform2i))
    fp_glProgramUniform2i(program, location, v0, v1)
}
public
func glProgramUniform2i(program:GL.UInt, location:GL.Int, v0:GL.Int, v1:GL.Int)
{
    fp_glProgramUniform2i(program, location, v0, v1)
}
public
func glProgramUniform2i(_ program:GL.UInt, _ location:GL.Int, _ v0:GL.Int, _ v1:GL.Int)
{
    fp_glProgramUniform2i(program, location, v0, v1)
}

var fp_glProgramUniform2i64ARB:@convention(c) (GL.UInt, GL.Int, GL.Int64, GL.Int64) -> () = load_glProgramUniform2i64ARB
func load_glProgramUniform2i64ARB(program:GL.UInt, location:GL.Int, x:GL.Int64, y:GL.Int64)
{
    fp_glProgramUniform2i64ARB = unsafeBitCast(get_fp("glProgramUniform2i64ARB", support: [ss58]), to: Swift.type(of: fp_glProgramUniform2i64ARB))
    fp_glProgramUniform2i64ARB(program, location, x, y)
}
public
func glProgramUniform2i64ARB(program:GL.UInt, location:GL.Int, x:GL.Int64, y:GL.Int64)
{
    fp_glProgramUniform2i64ARB(program, location, x, y)
}
public
func glProgramUniform2i64ARB(_ program:GL.UInt, _ location:GL.Int, _ x:GL.Int64, _ y:GL.Int64)
{
    fp_glProgramUniform2i64ARB(program, location, x, y)
}

var fp_glProgramUniform2i64NV:@convention(c) (GL.UInt, GL.Int, GL.Int64EXT, GL.Int64EXT) -> () = load_glProgramUniform2i64NV
func load_glProgramUniform2i64NV(program:GL.UInt, location:GL.Int, x:GL.Int64EXT, y:GL.Int64EXT)
{
    fp_glProgramUniform2i64NV = unsafeBitCast(get_fp("glProgramUniform2i64NV", support: [ss3, ss252]), to: Swift.type(of: fp_glProgramUniform2i64NV))
    fp_glProgramUniform2i64NV(program, location, x, y)
}
public
func glProgramUniform2i64NV(program:GL.UInt, location:GL.Int, x:GL.Int64EXT, y:GL.Int64EXT)
{
    fp_glProgramUniform2i64NV(program, location, x, y)
}
public
func glProgramUniform2i64NV(_ program:GL.UInt, _ location:GL.Int, _ x:GL.Int64EXT, _ y:GL.Int64EXT)
{
    fp_glProgramUniform2i64NV(program, location, x, y)
}

var fp_glProgramUniform2i64vARB:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafePointer<GL.Int64>?) -> () = load_glProgramUniform2i64vARB
func load_glProgramUniform2i64vARB(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int64>?)
{
    fp_glProgramUniform2i64vARB = unsafeBitCast(get_fp("glProgramUniform2i64vARB", support: [ss58]), to: Swift.type(of: fp_glProgramUniform2i64vARB))
    fp_glProgramUniform2i64vARB(program, location, count, value)
}
public
func glProgramUniform2i64vARB(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int64>?)
{
    fp_glProgramUniform2i64vARB(program, location, count, value)
}
public
func glProgramUniform2i64vARB(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Int64>?)
{
    fp_glProgramUniform2i64vARB(program, location, count, value)
}

var fp_glProgramUniform2i64vNV:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafePointer<GL.Int64EXT>?) -> () = load_glProgramUniform2i64vNV
func load_glProgramUniform2i64vNV(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int64EXT>?)
{
    fp_glProgramUniform2i64vNV = unsafeBitCast(get_fp("glProgramUniform2i64vNV", support: [ss3, ss252]), to: Swift.type(of: fp_glProgramUniform2i64vNV))
    fp_glProgramUniform2i64vNV(program, location, count, value)
}
public
func glProgramUniform2i64vNV(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int64EXT>?)
{
    fp_glProgramUniform2i64vNV(program, location, count, value)
}
public
func glProgramUniform2i64vNV(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Int64EXT>?)
{
    fp_glProgramUniform2i64vNV(program, location, count, value)
}

var fp_glProgramUniform2iEXT:@convention(c) (GL.UInt, GL.Int, GL.Int, GL.Int) -> () = load_glProgramUniform2iEXT
func load_glProgramUniform2iEXT(program:GL.UInt, location:GL.Int, v0:GL.Int, v1:GL.Int)
{
    fp_glProgramUniform2iEXT = unsafeBitCast(get_fp("glProgramUniform2iEXT", support: [ss143, ss182]), to: Swift.type(of: fp_glProgramUniform2iEXT))
    fp_glProgramUniform2iEXT(program, location, v0, v1)
}
public
func glProgramUniform2iEXT(program:GL.UInt, location:GL.Int, v0:GL.Int, v1:GL.Int)
{
    fp_glProgramUniform2iEXT(program, location, v0, v1)
}
public
func glProgramUniform2iEXT(_ program:GL.UInt, _ location:GL.Int, _ v0:GL.Int, _ v1:GL.Int)
{
    fp_glProgramUniform2iEXT(program, location, v0, v1)
}

var fp_glProgramUniform2iv:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafePointer<GL.Int>?) -> () = load_glProgramUniform2iv
func load_glProgramUniform2iv(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int>?)
{
    fp_glProgramUniform2iv = unsafeBitCast(get_fp("glProgramUniform2iv", support: [ss359, ss367, ss80]), to: Swift.type(of: fp_glProgramUniform2iv))
    fp_glProgramUniform2iv(program, location, count, value)
}
public
func glProgramUniform2iv(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int>?)
{
    fp_glProgramUniform2iv(program, location, count, value)
}
public
func glProgramUniform2iv(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Int>?)
{
    fp_glProgramUniform2iv(program, location, count, value)
}

var fp_glProgramUniform2ivEXT:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafePointer<GL.Int>?) -> () = load_glProgramUniform2ivEXT
func load_glProgramUniform2ivEXT(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int>?)
{
    fp_glProgramUniform2ivEXT = unsafeBitCast(get_fp("glProgramUniform2ivEXT", support: [ss143, ss182]), to: Swift.type(of: fp_glProgramUniform2ivEXT))
    fp_glProgramUniform2ivEXT(program, location, count, value)
}
public
func glProgramUniform2ivEXT(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int>?)
{
    fp_glProgramUniform2ivEXT(program, location, count, value)
}
public
func glProgramUniform2ivEXT(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Int>?)
{
    fp_glProgramUniform2ivEXT(program, location, count, value)
}

var fp_glProgramUniform2ui:@convention(c) (GL.UInt, GL.Int, GL.UInt, GL.UInt) -> () = load_glProgramUniform2ui
func load_glProgramUniform2ui(program:GL.UInt, location:GL.Int, v0:GL.UInt, v1:GL.UInt)
{
    fp_glProgramUniform2ui = unsafeBitCast(get_fp("glProgramUniform2ui", support: [ss359, ss367, ss80]), to: Swift.type(of: fp_glProgramUniform2ui))
    fp_glProgramUniform2ui(program, location, v0, v1)
}
public
func glProgramUniform2ui(program:GL.UInt, location:GL.Int, v0:GL.UInt, v1:GL.UInt)
{
    fp_glProgramUniform2ui(program, location, v0, v1)
}
public
func glProgramUniform2ui(_ program:GL.UInt, _ location:GL.Int, _ v0:GL.UInt, _ v1:GL.UInt)
{
    fp_glProgramUniform2ui(program, location, v0, v1)
}

var fp_glProgramUniform2ui64ARB:@convention(c) (GL.UInt, GL.Int, GL.UInt64, GL.UInt64) -> () = load_glProgramUniform2ui64ARB
func load_glProgramUniform2ui64ARB(program:GL.UInt, location:GL.Int, x:GL.UInt64, y:GL.UInt64)
{
    fp_glProgramUniform2ui64ARB = unsafeBitCast(get_fp("glProgramUniform2ui64ARB", support: [ss58]), to: Swift.type(of: fp_glProgramUniform2ui64ARB))
    fp_glProgramUniform2ui64ARB(program, location, x, y)
}
public
func glProgramUniform2ui64ARB(program:GL.UInt, location:GL.Int, x:GL.UInt64, y:GL.UInt64)
{
    fp_glProgramUniform2ui64ARB(program, location, x, y)
}
public
func glProgramUniform2ui64ARB(_ program:GL.UInt, _ location:GL.Int, _ x:GL.UInt64, _ y:GL.UInt64)
{
    fp_glProgramUniform2ui64ARB(program, location, x, y)
}

var fp_glProgramUniform2ui64NV:@convention(c) (GL.UInt, GL.Int, GL.UInt64EXT, GL.UInt64EXT) -> () = load_glProgramUniform2ui64NV
func load_glProgramUniform2ui64NV(program:GL.UInt, location:GL.Int, x:GL.UInt64EXT, y:GL.UInt64EXT)
{
    fp_glProgramUniform2ui64NV = unsafeBitCast(get_fp("glProgramUniform2ui64NV", support: [ss3, ss252]), to: Swift.type(of: fp_glProgramUniform2ui64NV))
    fp_glProgramUniform2ui64NV(program, location, x, y)
}
public
func glProgramUniform2ui64NV(program:GL.UInt, location:GL.Int, x:GL.UInt64EXT, y:GL.UInt64EXT)
{
    fp_glProgramUniform2ui64NV(program, location, x, y)
}
public
func glProgramUniform2ui64NV(_ program:GL.UInt, _ location:GL.Int, _ x:GL.UInt64EXT, _ y:GL.UInt64EXT)
{
    fp_glProgramUniform2ui64NV(program, location, x, y)
}

var fp_glProgramUniform2ui64vARB:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafePointer<GL.UInt64>?) -> () = load_glProgramUniform2ui64vARB
func load_glProgramUniform2ui64vARB(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt64>?)
{
    fp_glProgramUniform2ui64vARB = unsafeBitCast(get_fp("glProgramUniform2ui64vARB", support: [ss58]), to: Swift.type(of: fp_glProgramUniform2ui64vARB))
    fp_glProgramUniform2ui64vARB(program, location, count, value)
}
public
func glProgramUniform2ui64vARB(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt64>?)
{
    fp_glProgramUniform2ui64vARB(program, location, count, value)
}
public
func glProgramUniform2ui64vARB(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.UInt64>?)
{
    fp_glProgramUniform2ui64vARB(program, location, count, value)
}

var fp_glProgramUniform2ui64vNV:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafePointer<GL.UInt64EXT>?) -> () = load_glProgramUniform2ui64vNV
func load_glProgramUniform2ui64vNV(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt64EXT>?)
{
    fp_glProgramUniform2ui64vNV = unsafeBitCast(get_fp("glProgramUniform2ui64vNV", support: [ss3, ss252]), to: Swift.type(of: fp_glProgramUniform2ui64vNV))
    fp_glProgramUniform2ui64vNV(program, location, count, value)
}
public
func glProgramUniform2ui64vNV(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt64EXT>?)
{
    fp_glProgramUniform2ui64vNV(program, location, count, value)
}
public
func glProgramUniform2ui64vNV(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.UInt64EXT>?)
{
    fp_glProgramUniform2ui64vNV(program, location, count, value)
}

var fp_glProgramUniform2uiEXT:@convention(c) (GL.UInt, GL.Int, GL.UInt, GL.UInt) -> () = load_glProgramUniform2uiEXT
func load_glProgramUniform2uiEXT(program:GL.UInt, location:GL.Int, v0:GL.UInt, v1:GL.UInt)
{
    fp_glProgramUniform2uiEXT = unsafeBitCast(get_fp("glProgramUniform2uiEXT", support: [ss143, ss182]), to: Swift.type(of: fp_glProgramUniform2uiEXT))
    fp_glProgramUniform2uiEXT(program, location, v0, v1)
}
public
func glProgramUniform2uiEXT(program:GL.UInt, location:GL.Int, v0:GL.UInt, v1:GL.UInt)
{
    fp_glProgramUniform2uiEXT(program, location, v0, v1)
}
public
func glProgramUniform2uiEXT(_ program:GL.UInt, _ location:GL.Int, _ v0:GL.UInt, _ v1:GL.UInt)
{
    fp_glProgramUniform2uiEXT(program, location, v0, v1)
}

var fp_glProgramUniform2uiv:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafePointer<GL.UInt>?) -> () = load_glProgramUniform2uiv
func load_glProgramUniform2uiv(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt>?)
{
    fp_glProgramUniform2uiv = unsafeBitCast(get_fp("glProgramUniform2uiv", support: [ss359, ss367, ss80]), to: Swift.type(of: fp_glProgramUniform2uiv))
    fp_glProgramUniform2uiv(program, location, count, value)
}
public
func glProgramUniform2uiv(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt>?)
{
    fp_glProgramUniform2uiv(program, location, count, value)
}
public
func glProgramUniform2uiv(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.UInt>?)
{
    fp_glProgramUniform2uiv(program, location, count, value)
}

var fp_glProgramUniform2uivEXT:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafePointer<GL.UInt>?) -> () = load_glProgramUniform2uivEXT
func load_glProgramUniform2uivEXT(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt>?)
{
    fp_glProgramUniform2uivEXT = unsafeBitCast(get_fp("glProgramUniform2uivEXT", support: [ss143, ss182]), to: Swift.type(of: fp_glProgramUniform2uivEXT))
    fp_glProgramUniform2uivEXT(program, location, count, value)
}
public
func glProgramUniform2uivEXT(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt>?)
{
    fp_glProgramUniform2uivEXT(program, location, count, value)
}
public
func glProgramUniform2uivEXT(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.UInt>?)
{
    fp_glProgramUniform2uivEXT(program, location, count, value)
}

var fp_glProgramUniform3d:@convention(c) (GL.UInt, GL.Int, GL.Double, GL.Double, GL.Double) -> () = load_glProgramUniform3d
func load_glProgramUniform3d(program:GL.UInt, location:GL.Int, v0:GL.Double, v1:GL.Double, v2:GL.Double)
{
    fp_glProgramUniform3d = unsafeBitCast(get_fp("glProgramUniform3d", support: [ss359, ss80]), to: Swift.type(of: fp_glProgramUniform3d))
    fp_glProgramUniform3d(program, location, v0, v1, v2)
}
public
func glProgramUniform3d(program:GL.UInt, location:GL.Int, v0:GL.Double, v1:GL.Double, v2:GL.Double)
{
    fp_glProgramUniform3d(program, location, v0, v1, v2)
}
public
func glProgramUniform3d(_ program:GL.UInt, _ location:GL.Int, _ v0:GL.Double, _ v1:GL.Double, _ v2:GL.Double)
{
    fp_glProgramUniform3d(program, location, v0, v1, v2)
}

var fp_glProgramUniform3dEXT:@convention(c) (GL.UInt, GL.Int, GL.Double, GL.Double, GL.Double) -> () = load_glProgramUniform3dEXT
func load_glProgramUniform3dEXT(program:GL.UInt, location:GL.Int, x:GL.Double, y:GL.Double, z:GL.Double)
{
    fp_glProgramUniform3dEXT = unsafeBitCast(get_fp("glProgramUniform3dEXT", support: [ss143]), to: Swift.type(of: fp_glProgramUniform3dEXT))
    fp_glProgramUniform3dEXT(program, location, x, y, z)
}
public
func glProgramUniform3dEXT(program:GL.UInt, location:GL.Int, x:GL.Double, y:GL.Double, z:GL.Double)
{
    fp_glProgramUniform3dEXT(program, location, x, y, z)
}
public
func glProgramUniform3dEXT(_ program:GL.UInt, _ location:GL.Int, _ x:GL.Double, _ y:GL.Double, _ z:GL.Double)
{
    fp_glProgramUniform3dEXT(program, location, x, y, z)
}

var fp_glProgramUniform3dv:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafePointer<GL.Double>?) -> () = load_glProgramUniform3dv
func load_glProgramUniform3dv(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniform3dv = unsafeBitCast(get_fp("glProgramUniform3dv", support: [ss359, ss80]), to: Swift.type(of: fp_glProgramUniform3dv))
    fp_glProgramUniform3dv(program, location, count, value)
}
public
func glProgramUniform3dv(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniform3dv(program, location, count, value)
}
public
func glProgramUniform3dv(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniform3dv(program, location, count, value)
}

var fp_glProgramUniform3dvEXT:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafePointer<GL.Double>?) -> () = load_glProgramUniform3dvEXT
func load_glProgramUniform3dvEXT(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniform3dvEXT = unsafeBitCast(get_fp("glProgramUniform3dvEXT", support: [ss143]), to: Swift.type(of: fp_glProgramUniform3dvEXT))
    fp_glProgramUniform3dvEXT(program, location, count, value)
}
public
func glProgramUniform3dvEXT(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniform3dvEXT(program, location, count, value)
}
public
func glProgramUniform3dvEXT(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniform3dvEXT(program, location, count, value)
}

var fp_glProgramUniform3f:@convention(c) (GL.UInt, GL.Int, GL.Float, GL.Float, GL.Float) -> () = load_glProgramUniform3f
func load_glProgramUniform3f(program:GL.UInt, location:GL.Int, v0:GL.Float, v1:GL.Float, v2:GL.Float)
{
    fp_glProgramUniform3f = unsafeBitCast(get_fp("glProgramUniform3f", support: [ss359, ss367, ss80]), to: Swift.type(of: fp_glProgramUniform3f))
    fp_glProgramUniform3f(program, location, v0, v1, v2)
}
public
func glProgramUniform3f(program:GL.UInt, location:GL.Int, v0:GL.Float, v1:GL.Float, v2:GL.Float)
{
    fp_glProgramUniform3f(program, location, v0, v1, v2)
}
public
func glProgramUniform3f(_ program:GL.UInt, _ location:GL.Int, _ v0:GL.Float, _ v1:GL.Float, _ v2:GL.Float)
{
    fp_glProgramUniform3f(program, location, v0, v1, v2)
}

var fp_glProgramUniform3fEXT:@convention(c) (GL.UInt, GL.Int, GL.Float, GL.Float, GL.Float) -> () = load_glProgramUniform3fEXT
func load_glProgramUniform3fEXT(program:GL.UInt, location:GL.Int, v0:GL.Float, v1:GL.Float, v2:GL.Float)
{
    fp_glProgramUniform3fEXT = unsafeBitCast(get_fp("glProgramUniform3fEXT", support: [ss143, ss182]), to: Swift.type(of: fp_glProgramUniform3fEXT))
    fp_glProgramUniform3fEXT(program, location, v0, v1, v2)
}
public
func glProgramUniform3fEXT(program:GL.UInt, location:GL.Int, v0:GL.Float, v1:GL.Float, v2:GL.Float)
{
    fp_glProgramUniform3fEXT(program, location, v0, v1, v2)
}
public
func glProgramUniform3fEXT(_ program:GL.UInt, _ location:GL.Int, _ v0:GL.Float, _ v1:GL.Float, _ v2:GL.Float)
{
    fp_glProgramUniform3fEXT(program, location, v0, v1, v2)
}

var fp_glProgramUniform3fv:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafePointer<GL.Float>?) -> () = load_glProgramUniform3fv
func load_glProgramUniform3fv(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniform3fv = unsafeBitCast(get_fp("glProgramUniform3fv", support: [ss359, ss367, ss80]), to: Swift.type(of: fp_glProgramUniform3fv))
    fp_glProgramUniform3fv(program, location, count, value)
}
public
func glProgramUniform3fv(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniform3fv(program, location, count, value)
}
public
func glProgramUniform3fv(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniform3fv(program, location, count, value)
}

var fp_glProgramUniform3fvEXT:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafePointer<GL.Float>?) -> () = load_glProgramUniform3fvEXT
func load_glProgramUniform3fvEXT(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniform3fvEXT = unsafeBitCast(get_fp("glProgramUniform3fvEXT", support: [ss143, ss182]), to: Swift.type(of: fp_glProgramUniform3fvEXT))
    fp_glProgramUniform3fvEXT(program, location, count, value)
}
public
func glProgramUniform3fvEXT(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniform3fvEXT(program, location, count, value)
}
public
func glProgramUniform3fvEXT(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniform3fvEXT(program, location, count, value)
}

var fp_glProgramUniform3i:@convention(c) (GL.UInt, GL.Int, GL.Int, GL.Int, GL.Int) -> () = load_glProgramUniform3i
func load_glProgramUniform3i(program:GL.UInt, location:GL.Int, v0:GL.Int, v1:GL.Int, v2:GL.Int)
{
    fp_glProgramUniform3i = unsafeBitCast(get_fp("glProgramUniform3i", support: [ss359, ss367, ss80]), to: Swift.type(of: fp_glProgramUniform3i))
    fp_glProgramUniform3i(program, location, v0, v1, v2)
}
public
func glProgramUniform3i(program:GL.UInt, location:GL.Int, v0:GL.Int, v1:GL.Int, v2:GL.Int)
{
    fp_glProgramUniform3i(program, location, v0, v1, v2)
}
public
func glProgramUniform3i(_ program:GL.UInt, _ location:GL.Int, _ v0:GL.Int, _ v1:GL.Int, _ v2:GL.Int)
{
    fp_glProgramUniform3i(program, location, v0, v1, v2)
}

var fp_glProgramUniform3i64ARB:@convention(c) (GL.UInt, GL.Int, GL.Int64, GL.Int64, GL.Int64) -> () = load_glProgramUniform3i64ARB
func load_glProgramUniform3i64ARB(program:GL.UInt, location:GL.Int, x:GL.Int64, y:GL.Int64, z:GL.Int64)
{
    fp_glProgramUniform3i64ARB = unsafeBitCast(get_fp("glProgramUniform3i64ARB", support: [ss58]), to: Swift.type(of: fp_glProgramUniform3i64ARB))
    fp_glProgramUniform3i64ARB(program, location, x, y, z)
}
public
func glProgramUniform3i64ARB(program:GL.UInt, location:GL.Int, x:GL.Int64, y:GL.Int64, z:GL.Int64)
{
    fp_glProgramUniform3i64ARB(program, location, x, y, z)
}
public
func glProgramUniform3i64ARB(_ program:GL.UInt, _ location:GL.Int, _ x:GL.Int64, _ y:GL.Int64, _ z:GL.Int64)
{
    fp_glProgramUniform3i64ARB(program, location, x, y, z)
}

var fp_glProgramUniform3i64NV:@convention(c) (GL.UInt, GL.Int, GL.Int64EXT, GL.Int64EXT, GL.Int64EXT) -> () = load_glProgramUniform3i64NV
func load_glProgramUniform3i64NV(program:GL.UInt, location:GL.Int, x:GL.Int64EXT, y:GL.Int64EXT, z:GL.Int64EXT)
{
    fp_glProgramUniform3i64NV = unsafeBitCast(get_fp("glProgramUniform3i64NV", support: [ss3, ss252]), to: Swift.type(of: fp_glProgramUniform3i64NV))
    fp_glProgramUniform3i64NV(program, location, x, y, z)
}
public
func glProgramUniform3i64NV(program:GL.UInt, location:GL.Int, x:GL.Int64EXT, y:GL.Int64EXT, z:GL.Int64EXT)
{
    fp_glProgramUniform3i64NV(program, location, x, y, z)
}
public
func glProgramUniform3i64NV(_ program:GL.UInt, _ location:GL.Int, _ x:GL.Int64EXT, _ y:GL.Int64EXT, _ z:GL.Int64EXT)
{
    fp_glProgramUniform3i64NV(program, location, x, y, z)
}

var fp_glProgramUniform3i64vARB:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafePointer<GL.Int64>?) -> () = load_glProgramUniform3i64vARB
func load_glProgramUniform3i64vARB(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int64>?)
{
    fp_glProgramUniform3i64vARB = unsafeBitCast(get_fp("glProgramUniform3i64vARB", support: [ss58]), to: Swift.type(of: fp_glProgramUniform3i64vARB))
    fp_glProgramUniform3i64vARB(program, location, count, value)
}
public
func glProgramUniform3i64vARB(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int64>?)
{
    fp_glProgramUniform3i64vARB(program, location, count, value)
}
public
func glProgramUniform3i64vARB(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Int64>?)
{
    fp_glProgramUniform3i64vARB(program, location, count, value)
}

var fp_glProgramUniform3i64vNV:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafePointer<GL.Int64EXT>?) -> () = load_glProgramUniform3i64vNV
func load_glProgramUniform3i64vNV(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int64EXT>?)
{
    fp_glProgramUniform3i64vNV = unsafeBitCast(get_fp("glProgramUniform3i64vNV", support: [ss3, ss252]), to: Swift.type(of: fp_glProgramUniform3i64vNV))
    fp_glProgramUniform3i64vNV(program, location, count, value)
}
public
func glProgramUniform3i64vNV(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int64EXT>?)
{
    fp_glProgramUniform3i64vNV(program, location, count, value)
}
public
func glProgramUniform3i64vNV(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Int64EXT>?)
{
    fp_glProgramUniform3i64vNV(program, location, count, value)
}

var fp_glProgramUniform3iEXT:@convention(c) (GL.UInt, GL.Int, GL.Int, GL.Int, GL.Int) -> () = load_glProgramUniform3iEXT
func load_glProgramUniform3iEXT(program:GL.UInt, location:GL.Int, v0:GL.Int, v1:GL.Int, v2:GL.Int)
{
    fp_glProgramUniform3iEXT = unsafeBitCast(get_fp("glProgramUniform3iEXT", support: [ss143, ss182]), to: Swift.type(of: fp_glProgramUniform3iEXT))
    fp_glProgramUniform3iEXT(program, location, v0, v1, v2)
}
public
func glProgramUniform3iEXT(program:GL.UInt, location:GL.Int, v0:GL.Int, v1:GL.Int, v2:GL.Int)
{
    fp_glProgramUniform3iEXT(program, location, v0, v1, v2)
}
public
func glProgramUniform3iEXT(_ program:GL.UInt, _ location:GL.Int, _ v0:GL.Int, _ v1:GL.Int, _ v2:GL.Int)
{
    fp_glProgramUniform3iEXT(program, location, v0, v1, v2)
}

var fp_glProgramUniform3iv:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafePointer<GL.Int>?) -> () = load_glProgramUniform3iv
func load_glProgramUniform3iv(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int>?)
{
    fp_glProgramUniform3iv = unsafeBitCast(get_fp("glProgramUniform3iv", support: [ss359, ss367, ss80]), to: Swift.type(of: fp_glProgramUniform3iv))
    fp_glProgramUniform3iv(program, location, count, value)
}
public
func glProgramUniform3iv(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int>?)
{
    fp_glProgramUniform3iv(program, location, count, value)
}
public
func glProgramUniform3iv(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Int>?)
{
    fp_glProgramUniform3iv(program, location, count, value)
}

var fp_glProgramUniform3ivEXT:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafePointer<GL.Int>?) -> () = load_glProgramUniform3ivEXT
func load_glProgramUniform3ivEXT(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int>?)
{
    fp_glProgramUniform3ivEXT = unsafeBitCast(get_fp("glProgramUniform3ivEXT", support: [ss143, ss182]), to: Swift.type(of: fp_glProgramUniform3ivEXT))
    fp_glProgramUniform3ivEXT(program, location, count, value)
}
public
func glProgramUniform3ivEXT(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int>?)
{
    fp_glProgramUniform3ivEXT(program, location, count, value)
}
public
func glProgramUniform3ivEXT(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Int>?)
{
    fp_glProgramUniform3ivEXT(program, location, count, value)
}

var fp_glProgramUniform3ui:@convention(c) (GL.UInt, GL.Int, GL.UInt, GL.UInt, GL.UInt) -> () = load_glProgramUniform3ui
func load_glProgramUniform3ui(program:GL.UInt, location:GL.Int, v0:GL.UInt, v1:GL.UInt, v2:GL.UInt)
{
    fp_glProgramUniform3ui = unsafeBitCast(get_fp("glProgramUniform3ui", support: [ss359, ss367, ss80]), to: Swift.type(of: fp_glProgramUniform3ui))
    fp_glProgramUniform3ui(program, location, v0, v1, v2)
}
public
func glProgramUniform3ui(program:GL.UInt, location:GL.Int, v0:GL.UInt, v1:GL.UInt, v2:GL.UInt)
{
    fp_glProgramUniform3ui(program, location, v0, v1, v2)
}
public
func glProgramUniform3ui(_ program:GL.UInt, _ location:GL.Int, _ v0:GL.UInt, _ v1:GL.UInt, _ v2:GL.UInt)
{
    fp_glProgramUniform3ui(program, location, v0, v1, v2)
}

var fp_glProgramUniform3ui64ARB:@convention(c) (GL.UInt, GL.Int, GL.UInt64, GL.UInt64, GL.UInt64) -> () = load_glProgramUniform3ui64ARB
func load_glProgramUniform3ui64ARB(program:GL.UInt, location:GL.Int, x:GL.UInt64, y:GL.UInt64, z:GL.UInt64)
{
    fp_glProgramUniform3ui64ARB = unsafeBitCast(get_fp("glProgramUniform3ui64ARB", support: [ss58]), to: Swift.type(of: fp_glProgramUniform3ui64ARB))
    fp_glProgramUniform3ui64ARB(program, location, x, y, z)
}
public
func glProgramUniform3ui64ARB(program:GL.UInt, location:GL.Int, x:GL.UInt64, y:GL.UInt64, z:GL.UInt64)
{
    fp_glProgramUniform3ui64ARB(program, location, x, y, z)
}
public
func glProgramUniform3ui64ARB(_ program:GL.UInt, _ location:GL.Int, _ x:GL.UInt64, _ y:GL.UInt64, _ z:GL.UInt64)
{
    fp_glProgramUniform3ui64ARB(program, location, x, y, z)
}

var fp_glProgramUniform3ui64NV:@convention(c) (GL.UInt, GL.Int, GL.UInt64EXT, GL.UInt64EXT, GL.UInt64EXT) -> () = load_glProgramUniform3ui64NV
func load_glProgramUniform3ui64NV(program:GL.UInt, location:GL.Int, x:GL.UInt64EXT, y:GL.UInt64EXT, z:GL.UInt64EXT)
{
    fp_glProgramUniform3ui64NV = unsafeBitCast(get_fp("glProgramUniform3ui64NV", support: [ss3, ss252]), to: Swift.type(of: fp_glProgramUniform3ui64NV))
    fp_glProgramUniform3ui64NV(program, location, x, y, z)
}
public
func glProgramUniform3ui64NV(program:GL.UInt, location:GL.Int, x:GL.UInt64EXT, y:GL.UInt64EXT, z:GL.UInt64EXT)
{
    fp_glProgramUniform3ui64NV(program, location, x, y, z)
}
public
func glProgramUniform3ui64NV(_ program:GL.UInt, _ location:GL.Int, _ x:GL.UInt64EXT, _ y:GL.UInt64EXT, _ z:GL.UInt64EXT)
{
    fp_glProgramUniform3ui64NV(program, location, x, y, z)
}

var fp_glProgramUniform3ui64vARB:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafePointer<GL.UInt64>?) -> () = load_glProgramUniform3ui64vARB
func load_glProgramUniform3ui64vARB(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt64>?)
{
    fp_glProgramUniform3ui64vARB = unsafeBitCast(get_fp("glProgramUniform3ui64vARB", support: [ss58]), to: Swift.type(of: fp_glProgramUniform3ui64vARB))
    fp_glProgramUniform3ui64vARB(program, location, count, value)
}
public
func glProgramUniform3ui64vARB(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt64>?)
{
    fp_glProgramUniform3ui64vARB(program, location, count, value)
}
public
func glProgramUniform3ui64vARB(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.UInt64>?)
{
    fp_glProgramUniform3ui64vARB(program, location, count, value)
}

var fp_glProgramUniform3ui64vNV:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafePointer<GL.UInt64EXT>?) -> () = load_glProgramUniform3ui64vNV
func load_glProgramUniform3ui64vNV(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt64EXT>?)
{
    fp_glProgramUniform3ui64vNV = unsafeBitCast(get_fp("glProgramUniform3ui64vNV", support: [ss3, ss252]), to: Swift.type(of: fp_glProgramUniform3ui64vNV))
    fp_glProgramUniform3ui64vNV(program, location, count, value)
}
public
func glProgramUniform3ui64vNV(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt64EXT>?)
{
    fp_glProgramUniform3ui64vNV(program, location, count, value)
}
public
func glProgramUniform3ui64vNV(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.UInt64EXT>?)
{
    fp_glProgramUniform3ui64vNV(program, location, count, value)
}

var fp_glProgramUniform3uiEXT:@convention(c) (GL.UInt, GL.Int, GL.UInt, GL.UInt, GL.UInt) -> () = load_glProgramUniform3uiEXT
func load_glProgramUniform3uiEXT(program:GL.UInt, location:GL.Int, v0:GL.UInt, v1:GL.UInt, v2:GL.UInt)
{
    fp_glProgramUniform3uiEXT = unsafeBitCast(get_fp("glProgramUniform3uiEXT", support: [ss143, ss182]), to: Swift.type(of: fp_glProgramUniform3uiEXT))
    fp_glProgramUniform3uiEXT(program, location, v0, v1, v2)
}
public
func glProgramUniform3uiEXT(program:GL.UInt, location:GL.Int, v0:GL.UInt, v1:GL.UInt, v2:GL.UInt)
{
    fp_glProgramUniform3uiEXT(program, location, v0, v1, v2)
}
public
func glProgramUniform3uiEXT(_ program:GL.UInt, _ location:GL.Int, _ v0:GL.UInt, _ v1:GL.UInt, _ v2:GL.UInt)
{
    fp_glProgramUniform3uiEXT(program, location, v0, v1, v2)
}

var fp_glProgramUniform3uiv:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafePointer<GL.UInt>?) -> () = load_glProgramUniform3uiv
func load_glProgramUniform3uiv(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt>?)
{
    fp_glProgramUniform3uiv = unsafeBitCast(get_fp("glProgramUniform3uiv", support: [ss359, ss367, ss80]), to: Swift.type(of: fp_glProgramUniform3uiv))
    fp_glProgramUniform3uiv(program, location, count, value)
}
public
func glProgramUniform3uiv(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt>?)
{
    fp_glProgramUniform3uiv(program, location, count, value)
}
public
func glProgramUniform3uiv(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.UInt>?)
{
    fp_glProgramUniform3uiv(program, location, count, value)
}

var fp_glProgramUniform3uivEXT:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafePointer<GL.UInt>?) -> () = load_glProgramUniform3uivEXT
func load_glProgramUniform3uivEXT(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt>?)
{
    fp_glProgramUniform3uivEXT = unsafeBitCast(get_fp("glProgramUniform3uivEXT", support: [ss143, ss182]), to: Swift.type(of: fp_glProgramUniform3uivEXT))
    fp_glProgramUniform3uivEXT(program, location, count, value)
}
public
func glProgramUniform3uivEXT(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt>?)
{
    fp_glProgramUniform3uivEXT(program, location, count, value)
}
public
func glProgramUniform3uivEXT(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.UInt>?)
{
    fp_glProgramUniform3uivEXT(program, location, count, value)
}

var fp_glProgramUniform4d:@convention(c) (GL.UInt, GL.Int, GL.Double, GL.Double, GL.Double, GL.Double) -> () = load_glProgramUniform4d
func load_glProgramUniform4d(program:GL.UInt, location:GL.Int, v0:GL.Double, v1:GL.Double, v2:GL.Double, v3:GL.Double)
{
    fp_glProgramUniform4d = unsafeBitCast(get_fp("glProgramUniform4d", support: [ss359, ss80]), to: Swift.type(of: fp_glProgramUniform4d))
    fp_glProgramUniform4d(program, location, v0, v1, v2, v3)
}
public
func glProgramUniform4d(program:GL.UInt, location:GL.Int, v0:GL.Double, v1:GL.Double, v2:GL.Double, v3:GL.Double)
{
    fp_glProgramUniform4d(program, location, v0, v1, v2, v3)
}
public
func glProgramUniform4d(_ program:GL.UInt, _ location:GL.Int, _ v0:GL.Double, _ v1:GL.Double, _ v2:GL.Double, _ v3:GL.Double)
{
    fp_glProgramUniform4d(program, location, v0, v1, v2, v3)
}

var fp_glProgramUniform4dEXT:@convention(c) (GL.UInt, GL.Int, GL.Double, GL.Double, GL.Double, GL.Double) -> () = load_glProgramUniform4dEXT
func load_glProgramUniform4dEXT(program:GL.UInt, location:GL.Int, x:GL.Double, y:GL.Double, z:GL.Double, w:GL.Double)
{
    fp_glProgramUniform4dEXT = unsafeBitCast(get_fp("glProgramUniform4dEXT", support: [ss143]), to: Swift.type(of: fp_glProgramUniform4dEXT))
    fp_glProgramUniform4dEXT(program, location, x, y, z, w)
}
public
func glProgramUniform4dEXT(program:GL.UInt, location:GL.Int, x:GL.Double, y:GL.Double, z:GL.Double, w:GL.Double)
{
    fp_glProgramUniform4dEXT(program, location, x, y, z, w)
}
public
func glProgramUniform4dEXT(_ program:GL.UInt, _ location:GL.Int, _ x:GL.Double, _ y:GL.Double, _ z:GL.Double, _ w:GL.Double)
{
    fp_glProgramUniform4dEXT(program, location, x, y, z, w)
}

var fp_glProgramUniform4dv:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafePointer<GL.Double>?) -> () = load_glProgramUniform4dv
func load_glProgramUniform4dv(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniform4dv = unsafeBitCast(get_fp("glProgramUniform4dv", support: [ss359, ss80]), to: Swift.type(of: fp_glProgramUniform4dv))
    fp_glProgramUniform4dv(program, location, count, value)
}
public
func glProgramUniform4dv(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniform4dv(program, location, count, value)
}
public
func glProgramUniform4dv(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniform4dv(program, location, count, value)
}

var fp_glProgramUniform4dvEXT:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafePointer<GL.Double>?) -> () = load_glProgramUniform4dvEXT
func load_glProgramUniform4dvEXT(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniform4dvEXT = unsafeBitCast(get_fp("glProgramUniform4dvEXT", support: [ss143]), to: Swift.type(of: fp_glProgramUniform4dvEXT))
    fp_glProgramUniform4dvEXT(program, location, count, value)
}
public
func glProgramUniform4dvEXT(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniform4dvEXT(program, location, count, value)
}
public
func glProgramUniform4dvEXT(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniform4dvEXT(program, location, count, value)
}

var fp_glProgramUniform4f:@convention(c) (GL.UInt, GL.Int, GL.Float, GL.Float, GL.Float, GL.Float) -> () = load_glProgramUniform4f
func load_glProgramUniform4f(program:GL.UInt, location:GL.Int, v0:GL.Float, v1:GL.Float, v2:GL.Float, v3:GL.Float)
{
    fp_glProgramUniform4f = unsafeBitCast(get_fp("glProgramUniform4f", support: [ss359, ss367, ss80]), to: Swift.type(of: fp_glProgramUniform4f))
    fp_glProgramUniform4f(program, location, v0, v1, v2, v3)
}
public
func glProgramUniform4f(program:GL.UInt, location:GL.Int, v0:GL.Float, v1:GL.Float, v2:GL.Float, v3:GL.Float)
{
    fp_glProgramUniform4f(program, location, v0, v1, v2, v3)
}
public
func glProgramUniform4f(_ program:GL.UInt, _ location:GL.Int, _ v0:GL.Float, _ v1:GL.Float, _ v2:GL.Float, _ v3:GL.Float)
{
    fp_glProgramUniform4f(program, location, v0, v1, v2, v3)
}

var fp_glProgramUniform4fEXT:@convention(c) (GL.UInt, GL.Int, GL.Float, GL.Float, GL.Float, GL.Float) -> () = load_glProgramUniform4fEXT
func load_glProgramUniform4fEXT(program:GL.UInt, location:GL.Int, v0:GL.Float, v1:GL.Float, v2:GL.Float, v3:GL.Float)
{
    fp_glProgramUniform4fEXT = unsafeBitCast(get_fp("glProgramUniform4fEXT", support: [ss143, ss182]), to: Swift.type(of: fp_glProgramUniform4fEXT))
    fp_glProgramUniform4fEXT(program, location, v0, v1, v2, v3)
}
public
func glProgramUniform4fEXT(program:GL.UInt, location:GL.Int, v0:GL.Float, v1:GL.Float, v2:GL.Float, v3:GL.Float)
{
    fp_glProgramUniform4fEXT(program, location, v0, v1, v2, v3)
}
public
func glProgramUniform4fEXT(_ program:GL.UInt, _ location:GL.Int, _ v0:GL.Float, _ v1:GL.Float, _ v2:GL.Float, _ v3:GL.Float)
{
    fp_glProgramUniform4fEXT(program, location, v0, v1, v2, v3)
}

var fp_glProgramUniform4fv:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafePointer<GL.Float>?) -> () = load_glProgramUniform4fv
func load_glProgramUniform4fv(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniform4fv = unsafeBitCast(get_fp("glProgramUniform4fv", support: [ss359, ss367, ss80]), to: Swift.type(of: fp_glProgramUniform4fv))
    fp_glProgramUniform4fv(program, location, count, value)
}
public
func glProgramUniform4fv(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniform4fv(program, location, count, value)
}
public
func glProgramUniform4fv(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniform4fv(program, location, count, value)
}

var fp_glProgramUniform4fvEXT:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafePointer<GL.Float>?) -> () = load_glProgramUniform4fvEXT
func load_glProgramUniform4fvEXT(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniform4fvEXT = unsafeBitCast(get_fp("glProgramUniform4fvEXT", support: [ss143, ss182]), to: Swift.type(of: fp_glProgramUniform4fvEXT))
    fp_glProgramUniform4fvEXT(program, location, count, value)
}
public
func glProgramUniform4fvEXT(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniform4fvEXT(program, location, count, value)
}
public
func glProgramUniform4fvEXT(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniform4fvEXT(program, location, count, value)
}

var fp_glProgramUniform4i:@convention(c) (GL.UInt, GL.Int, GL.Int, GL.Int, GL.Int, GL.Int) -> () = load_glProgramUniform4i
func load_glProgramUniform4i(program:GL.UInt, location:GL.Int, v0:GL.Int, v1:GL.Int, v2:GL.Int, v3:GL.Int)
{
    fp_glProgramUniform4i = unsafeBitCast(get_fp("glProgramUniform4i", support: [ss359, ss367, ss80]), to: Swift.type(of: fp_glProgramUniform4i))
    fp_glProgramUniform4i(program, location, v0, v1, v2, v3)
}
public
func glProgramUniform4i(program:GL.UInt, location:GL.Int, v0:GL.Int, v1:GL.Int, v2:GL.Int, v3:GL.Int)
{
    fp_glProgramUniform4i(program, location, v0, v1, v2, v3)
}
public
func glProgramUniform4i(_ program:GL.UInt, _ location:GL.Int, _ v0:GL.Int, _ v1:GL.Int, _ v2:GL.Int, _ v3:GL.Int)
{
    fp_glProgramUniform4i(program, location, v0, v1, v2, v3)
}

var fp_glProgramUniform4i64ARB:@convention(c) (GL.UInt, GL.Int, GL.Int64, GL.Int64, GL.Int64, GL.Int64) -> () = load_glProgramUniform4i64ARB
func load_glProgramUniform4i64ARB(program:GL.UInt, location:GL.Int, x:GL.Int64, y:GL.Int64, z:GL.Int64, w:GL.Int64)
{
    fp_glProgramUniform4i64ARB = unsafeBitCast(get_fp("glProgramUniform4i64ARB", support: [ss58]), to: Swift.type(of: fp_glProgramUniform4i64ARB))
    fp_glProgramUniform4i64ARB(program, location, x, y, z, w)
}
public
func glProgramUniform4i64ARB(program:GL.UInt, location:GL.Int, x:GL.Int64, y:GL.Int64, z:GL.Int64, w:GL.Int64)
{
    fp_glProgramUniform4i64ARB(program, location, x, y, z, w)
}
public
func glProgramUniform4i64ARB(_ program:GL.UInt, _ location:GL.Int, _ x:GL.Int64, _ y:GL.Int64, _ z:GL.Int64, _ w:GL.Int64)
{
    fp_glProgramUniform4i64ARB(program, location, x, y, z, w)
}

var fp_glProgramUniform4i64NV:@convention(c) (GL.UInt, GL.Int, GL.Int64EXT, GL.Int64EXT, GL.Int64EXT, GL.Int64EXT) -> () = load_glProgramUniform4i64NV
func load_glProgramUniform4i64NV(program:GL.UInt, location:GL.Int, x:GL.Int64EXT, y:GL.Int64EXT, z:GL.Int64EXT, w:GL.Int64EXT)
{
    fp_glProgramUniform4i64NV = unsafeBitCast(get_fp("glProgramUniform4i64NV", support: [ss3, ss252]), to: Swift.type(of: fp_glProgramUniform4i64NV))
    fp_glProgramUniform4i64NV(program, location, x, y, z, w)
}
public
func glProgramUniform4i64NV(program:GL.UInt, location:GL.Int, x:GL.Int64EXT, y:GL.Int64EXT, z:GL.Int64EXT, w:GL.Int64EXT)
{
    fp_glProgramUniform4i64NV(program, location, x, y, z, w)
}
public
func glProgramUniform4i64NV(_ program:GL.UInt, _ location:GL.Int, _ x:GL.Int64EXT, _ y:GL.Int64EXT, _ z:GL.Int64EXT, _ w:GL.Int64EXT)
{
    fp_glProgramUniform4i64NV(program, location, x, y, z, w)
}

var fp_glProgramUniform4i64vARB:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafePointer<GL.Int64>?) -> () = load_glProgramUniform4i64vARB
func load_glProgramUniform4i64vARB(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int64>?)
{
    fp_glProgramUniform4i64vARB = unsafeBitCast(get_fp("glProgramUniform4i64vARB", support: [ss58]), to: Swift.type(of: fp_glProgramUniform4i64vARB))
    fp_glProgramUniform4i64vARB(program, location, count, value)
}
public
func glProgramUniform4i64vARB(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int64>?)
{
    fp_glProgramUniform4i64vARB(program, location, count, value)
}
public
func glProgramUniform4i64vARB(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Int64>?)
{
    fp_glProgramUniform4i64vARB(program, location, count, value)
}

var fp_glProgramUniform4i64vNV:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafePointer<GL.Int64EXT>?) -> () = load_glProgramUniform4i64vNV
func load_glProgramUniform4i64vNV(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int64EXT>?)
{
    fp_glProgramUniform4i64vNV = unsafeBitCast(get_fp("glProgramUniform4i64vNV", support: [ss3, ss252]), to: Swift.type(of: fp_glProgramUniform4i64vNV))
    fp_glProgramUniform4i64vNV(program, location, count, value)
}
public
func glProgramUniform4i64vNV(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int64EXT>?)
{
    fp_glProgramUniform4i64vNV(program, location, count, value)
}
public
func glProgramUniform4i64vNV(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Int64EXT>?)
{
    fp_glProgramUniform4i64vNV(program, location, count, value)
}

var fp_glProgramUniform4iEXT:@convention(c) (GL.UInt, GL.Int, GL.Int, GL.Int, GL.Int, GL.Int) -> () = load_glProgramUniform4iEXT
func load_glProgramUniform4iEXT(program:GL.UInt, location:GL.Int, v0:GL.Int, v1:GL.Int, v2:GL.Int, v3:GL.Int)
{
    fp_glProgramUniform4iEXT = unsafeBitCast(get_fp("glProgramUniform4iEXT", support: [ss143, ss182]), to: Swift.type(of: fp_glProgramUniform4iEXT))
    fp_glProgramUniform4iEXT(program, location, v0, v1, v2, v3)
}
public
func glProgramUniform4iEXT(program:GL.UInt, location:GL.Int, v0:GL.Int, v1:GL.Int, v2:GL.Int, v3:GL.Int)
{
    fp_glProgramUniform4iEXT(program, location, v0, v1, v2, v3)
}
public
func glProgramUniform4iEXT(_ program:GL.UInt, _ location:GL.Int, _ v0:GL.Int, _ v1:GL.Int, _ v2:GL.Int, _ v3:GL.Int)
{
    fp_glProgramUniform4iEXT(program, location, v0, v1, v2, v3)
}

var fp_glProgramUniform4iv:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafePointer<GL.Int>?) -> () = load_glProgramUniform4iv
func load_glProgramUniform4iv(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int>?)
{
    fp_glProgramUniform4iv = unsafeBitCast(get_fp("glProgramUniform4iv", support: [ss359, ss367, ss80]), to: Swift.type(of: fp_glProgramUniform4iv))
    fp_glProgramUniform4iv(program, location, count, value)
}
public
func glProgramUniform4iv(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int>?)
{
    fp_glProgramUniform4iv(program, location, count, value)
}
public
func glProgramUniform4iv(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Int>?)
{
    fp_glProgramUniform4iv(program, location, count, value)
}

var fp_glProgramUniform4ivEXT:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafePointer<GL.Int>?) -> () = load_glProgramUniform4ivEXT
func load_glProgramUniform4ivEXT(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int>?)
{
    fp_glProgramUniform4ivEXT = unsafeBitCast(get_fp("glProgramUniform4ivEXT", support: [ss143, ss182]), to: Swift.type(of: fp_glProgramUniform4ivEXT))
    fp_glProgramUniform4ivEXT(program, location, count, value)
}
public
func glProgramUniform4ivEXT(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int>?)
{
    fp_glProgramUniform4ivEXT(program, location, count, value)
}
public
func glProgramUniform4ivEXT(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Int>?)
{
    fp_glProgramUniform4ivEXT(program, location, count, value)
}

var fp_glProgramUniform4ui:@convention(c) (GL.UInt, GL.Int, GL.UInt, GL.UInt, GL.UInt, GL.UInt) -> () = load_glProgramUniform4ui
func load_glProgramUniform4ui(program:GL.UInt, location:GL.Int, v0:GL.UInt, v1:GL.UInt, v2:GL.UInt, v3:GL.UInt)
{
    fp_glProgramUniform4ui = unsafeBitCast(get_fp("glProgramUniform4ui", support: [ss359, ss367, ss80]), to: Swift.type(of: fp_glProgramUniform4ui))
    fp_glProgramUniform4ui(program, location, v0, v1, v2, v3)
}
public
func glProgramUniform4ui(program:GL.UInt, location:GL.Int, v0:GL.UInt, v1:GL.UInt, v2:GL.UInt, v3:GL.UInt)
{
    fp_glProgramUniform4ui(program, location, v0, v1, v2, v3)
}
public
func glProgramUniform4ui(_ program:GL.UInt, _ location:GL.Int, _ v0:GL.UInt, _ v1:GL.UInt, _ v2:GL.UInt, _ v3:GL.UInt)
{
    fp_glProgramUniform4ui(program, location, v0, v1, v2, v3)
}

var fp_glProgramUniform4ui64ARB:@convention(c) (GL.UInt, GL.Int, GL.UInt64, GL.UInt64, GL.UInt64, GL.UInt64) -> () = load_glProgramUniform4ui64ARB
func load_glProgramUniform4ui64ARB(program:GL.UInt, location:GL.Int, x:GL.UInt64, y:GL.UInt64, z:GL.UInt64, w:GL.UInt64)
{
    fp_glProgramUniform4ui64ARB = unsafeBitCast(get_fp("glProgramUniform4ui64ARB", support: [ss58]), to: Swift.type(of: fp_glProgramUniform4ui64ARB))
    fp_glProgramUniform4ui64ARB(program, location, x, y, z, w)
}
public
func glProgramUniform4ui64ARB(program:GL.UInt, location:GL.Int, x:GL.UInt64, y:GL.UInt64, z:GL.UInt64, w:GL.UInt64)
{
    fp_glProgramUniform4ui64ARB(program, location, x, y, z, w)
}
public
func glProgramUniform4ui64ARB(_ program:GL.UInt, _ location:GL.Int, _ x:GL.UInt64, _ y:GL.UInt64, _ z:GL.UInt64, _ w:GL.UInt64)
{
    fp_glProgramUniform4ui64ARB(program, location, x, y, z, w)
}

var fp_glProgramUniform4ui64NV:@convention(c) (GL.UInt, GL.Int, GL.UInt64EXT, GL.UInt64EXT, GL.UInt64EXT, GL.UInt64EXT) -> () = load_glProgramUniform4ui64NV
func load_glProgramUniform4ui64NV(program:GL.UInt, location:GL.Int, x:GL.UInt64EXT, y:GL.UInt64EXT, z:GL.UInt64EXT, w:GL.UInt64EXT)
{
    fp_glProgramUniform4ui64NV = unsafeBitCast(get_fp("glProgramUniform4ui64NV", support: [ss3, ss252]), to: Swift.type(of: fp_glProgramUniform4ui64NV))
    fp_glProgramUniform4ui64NV(program, location, x, y, z, w)
}
public
func glProgramUniform4ui64NV(program:GL.UInt, location:GL.Int, x:GL.UInt64EXT, y:GL.UInt64EXT, z:GL.UInt64EXT, w:GL.UInt64EXT)
{
    fp_glProgramUniform4ui64NV(program, location, x, y, z, w)
}
public
func glProgramUniform4ui64NV(_ program:GL.UInt, _ location:GL.Int, _ x:GL.UInt64EXT, _ y:GL.UInt64EXT, _ z:GL.UInt64EXT, _ w:GL.UInt64EXT)
{
    fp_glProgramUniform4ui64NV(program, location, x, y, z, w)
}

var fp_glProgramUniform4ui64vARB:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafePointer<GL.UInt64>?) -> () = load_glProgramUniform4ui64vARB
func load_glProgramUniform4ui64vARB(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt64>?)
{
    fp_glProgramUniform4ui64vARB = unsafeBitCast(get_fp("glProgramUniform4ui64vARB", support: [ss58]), to: Swift.type(of: fp_glProgramUniform4ui64vARB))
    fp_glProgramUniform4ui64vARB(program, location, count, value)
}
public
func glProgramUniform4ui64vARB(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt64>?)
{
    fp_glProgramUniform4ui64vARB(program, location, count, value)
}
public
func glProgramUniform4ui64vARB(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.UInt64>?)
{
    fp_glProgramUniform4ui64vARB(program, location, count, value)
}

var fp_glProgramUniform4ui64vNV:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafePointer<GL.UInt64EXT>?) -> () = load_glProgramUniform4ui64vNV
func load_glProgramUniform4ui64vNV(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt64EXT>?)
{
    fp_glProgramUniform4ui64vNV = unsafeBitCast(get_fp("glProgramUniform4ui64vNV", support: [ss3, ss252]), to: Swift.type(of: fp_glProgramUniform4ui64vNV))
    fp_glProgramUniform4ui64vNV(program, location, count, value)
}
public
func glProgramUniform4ui64vNV(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt64EXT>?)
{
    fp_glProgramUniform4ui64vNV(program, location, count, value)
}
public
func glProgramUniform4ui64vNV(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.UInt64EXT>?)
{
    fp_glProgramUniform4ui64vNV(program, location, count, value)
}

var fp_glProgramUniform4uiEXT:@convention(c) (GL.UInt, GL.Int, GL.UInt, GL.UInt, GL.UInt, GL.UInt) -> () = load_glProgramUniform4uiEXT
func load_glProgramUniform4uiEXT(program:GL.UInt, location:GL.Int, v0:GL.UInt, v1:GL.UInt, v2:GL.UInt, v3:GL.UInt)
{
    fp_glProgramUniform4uiEXT = unsafeBitCast(get_fp("glProgramUniform4uiEXT", support: [ss143, ss182]), to: Swift.type(of: fp_glProgramUniform4uiEXT))
    fp_glProgramUniform4uiEXT(program, location, v0, v1, v2, v3)
}
public
func glProgramUniform4uiEXT(program:GL.UInt, location:GL.Int, v0:GL.UInt, v1:GL.UInt, v2:GL.UInt, v3:GL.UInt)
{
    fp_glProgramUniform4uiEXT(program, location, v0, v1, v2, v3)
}
public
func glProgramUniform4uiEXT(_ program:GL.UInt, _ location:GL.Int, _ v0:GL.UInt, _ v1:GL.UInt, _ v2:GL.UInt, _ v3:GL.UInt)
{
    fp_glProgramUniform4uiEXT(program, location, v0, v1, v2, v3)
}

var fp_glProgramUniform4uiv:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafePointer<GL.UInt>?) -> () = load_glProgramUniform4uiv
func load_glProgramUniform4uiv(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt>?)
{
    fp_glProgramUniform4uiv = unsafeBitCast(get_fp("glProgramUniform4uiv", support: [ss359, ss367, ss80]), to: Swift.type(of: fp_glProgramUniform4uiv))
    fp_glProgramUniform4uiv(program, location, count, value)
}
public
func glProgramUniform4uiv(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt>?)
{
    fp_glProgramUniform4uiv(program, location, count, value)
}
public
func glProgramUniform4uiv(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.UInt>?)
{
    fp_glProgramUniform4uiv(program, location, count, value)
}

var fp_glProgramUniform4uivEXT:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafePointer<GL.UInt>?) -> () = load_glProgramUniform4uivEXT
func load_glProgramUniform4uivEXT(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt>?)
{
    fp_glProgramUniform4uivEXT = unsafeBitCast(get_fp("glProgramUniform4uivEXT", support: [ss143, ss182]), to: Swift.type(of: fp_glProgramUniform4uivEXT))
    fp_glProgramUniform4uivEXT(program, location, count, value)
}
public
func glProgramUniform4uivEXT(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt>?)
{
    fp_glProgramUniform4uivEXT(program, location, count, value)
}
public
func glProgramUniform4uivEXT(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.UInt>?)
{
    fp_glProgramUniform4uivEXT(program, location, count, value)
}

var fp_glProgramUniformHandleui64ARB:@convention(c) (GL.UInt, GL.Int, GL.UInt64) -> () = load_glProgramUniformHandleui64ARB
func load_glProgramUniformHandleui64ARB(program:GL.UInt, location:GL.Int, value:GL.UInt64)
{
    fp_glProgramUniformHandleui64ARB = unsafeBitCast(get_fp("glProgramUniformHandleui64ARB", support: [ss29]), to: Swift.type(of: fp_glProgramUniformHandleui64ARB))
    fp_glProgramUniformHandleui64ARB(program, location, value)
}
public
func glProgramUniformHandleui64ARB(program:GL.UInt, location:GL.Int, value:GL.UInt64)
{
    fp_glProgramUniformHandleui64ARB(program, location, value)
}
public
func glProgramUniformHandleui64ARB(_ program:GL.UInt, _ location:GL.Int, _ value:GL.UInt64)
{
    fp_glProgramUniformHandleui64ARB(program, location, value)
}

var fp_glProgramUniformHandleui64NV:@convention(c) (GL.UInt, GL.Int, GL.UInt64) -> () = load_glProgramUniformHandleui64NV
func load_glProgramUniformHandleui64NV(program:GL.UInt, location:GL.Int, value:GL.UInt64)
{
    fp_glProgramUniformHandleui64NV = unsafeBitCast(get_fp("glProgramUniformHandleui64NV", support: [ss227]), to: Swift.type(of: fp_glProgramUniformHandleui64NV))
    fp_glProgramUniformHandleui64NV(program, location, value)
}
public
func glProgramUniformHandleui64NV(program:GL.UInt, location:GL.Int, value:GL.UInt64)
{
    fp_glProgramUniformHandleui64NV(program, location, value)
}
public
func glProgramUniformHandleui64NV(_ program:GL.UInt, _ location:GL.Int, _ value:GL.UInt64)
{
    fp_glProgramUniformHandleui64NV(program, location, value)
}

var fp_glProgramUniformHandleui64vARB:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafePointer<GL.UInt64>?) -> () = load_glProgramUniformHandleui64vARB
func load_glProgramUniformHandleui64vARB(program:GL.UInt, location:GL.Int, count:GL.Size, values:UnsafePointer<GL.UInt64>?)
{
    fp_glProgramUniformHandleui64vARB = unsafeBitCast(get_fp("glProgramUniformHandleui64vARB", support: [ss29]), to: Swift.type(of: fp_glProgramUniformHandleui64vARB))
    fp_glProgramUniformHandleui64vARB(program, location, count, values)
}
public
func glProgramUniformHandleui64vARB(program:GL.UInt, location:GL.Int, count:GL.Size, values:UnsafePointer<GL.UInt64>?)
{
    fp_glProgramUniformHandleui64vARB(program, location, count, values)
}
public
func glProgramUniformHandleui64vARB(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ values:UnsafePointer<GL.UInt64>?)
{
    fp_glProgramUniformHandleui64vARB(program, location, count, values)
}

var fp_glProgramUniformHandleui64vNV:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafePointer<GL.UInt64>?) -> () = load_glProgramUniformHandleui64vNV
func load_glProgramUniformHandleui64vNV(program:GL.UInt, location:GL.Int, count:GL.Size, values:UnsafePointer<GL.UInt64>?)
{
    fp_glProgramUniformHandleui64vNV = unsafeBitCast(get_fp("glProgramUniformHandleui64vNV", support: [ss227]), to: Swift.type(of: fp_glProgramUniformHandleui64vNV))
    fp_glProgramUniformHandleui64vNV(program, location, count, values)
}
public
func glProgramUniformHandleui64vNV(program:GL.UInt, location:GL.Int, count:GL.Size, values:UnsafePointer<GL.UInt64>?)
{
    fp_glProgramUniformHandleui64vNV(program, location, count, values)
}
public
func glProgramUniformHandleui64vNV(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ values:UnsafePointer<GL.UInt64>?)
{
    fp_glProgramUniformHandleui64vNV(program, location, count, values)
}

var fp_glProgramUniformMatrix2dv:@convention(c) (GL.UInt, GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Double>?) -> () = load_glProgramUniformMatrix2dv
func load_glProgramUniformMatrix2dv(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniformMatrix2dv = unsafeBitCast(get_fp("glProgramUniformMatrix2dv", support: [ss359, ss80]), to: Swift.type(of: fp_glProgramUniformMatrix2dv))
    fp_glProgramUniformMatrix2dv(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix2dv(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniformMatrix2dv(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix2dv(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniformMatrix2dv(program, location, count, transpose, value)
}

var fp_glProgramUniformMatrix2dvEXT:@convention(c) (GL.UInt, GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Double>?) -> () = load_glProgramUniformMatrix2dvEXT
func load_glProgramUniformMatrix2dvEXT(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniformMatrix2dvEXT = unsafeBitCast(get_fp("glProgramUniformMatrix2dvEXT", support: [ss143]), to: Swift.type(of: fp_glProgramUniformMatrix2dvEXT))
    fp_glProgramUniformMatrix2dvEXT(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix2dvEXT(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniformMatrix2dvEXT(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix2dvEXT(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniformMatrix2dvEXT(program, location, count, transpose, value)
}

var fp_glProgramUniformMatrix2fv:@convention(c) (GL.UInt, GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Float>?) -> () = load_glProgramUniformMatrix2fv
func load_glProgramUniformMatrix2fv(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniformMatrix2fv = unsafeBitCast(get_fp("glProgramUniformMatrix2fv", support: [ss359, ss367, ss80]), to: Swift.type(of: fp_glProgramUniformMatrix2fv))
    fp_glProgramUniformMatrix2fv(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix2fv(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniformMatrix2fv(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix2fv(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniformMatrix2fv(program, location, count, transpose, value)
}

var fp_glProgramUniformMatrix2fvEXT:@convention(c) (GL.UInt, GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Float>?) -> () = load_glProgramUniformMatrix2fvEXT
func load_glProgramUniformMatrix2fvEXT(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniformMatrix2fvEXT = unsafeBitCast(get_fp("glProgramUniformMatrix2fvEXT", support: [ss143, ss182]), to: Swift.type(of: fp_glProgramUniformMatrix2fvEXT))
    fp_glProgramUniformMatrix2fvEXT(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix2fvEXT(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniformMatrix2fvEXT(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix2fvEXT(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniformMatrix2fvEXT(program, location, count, transpose, value)
}

var fp_glProgramUniformMatrix2x3dv:@convention(c) (GL.UInt, GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Double>?) -> () = load_glProgramUniformMatrix2x3dv
func load_glProgramUniformMatrix2x3dv(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniformMatrix2x3dv = unsafeBitCast(get_fp("glProgramUniformMatrix2x3dv", support: [ss359, ss80]), to: Swift.type(of: fp_glProgramUniformMatrix2x3dv))
    fp_glProgramUniformMatrix2x3dv(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix2x3dv(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniformMatrix2x3dv(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix2x3dv(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniformMatrix2x3dv(program, location, count, transpose, value)
}

var fp_glProgramUniformMatrix2x3dvEXT:@convention(c) (GL.UInt, GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Double>?) -> () = load_glProgramUniformMatrix2x3dvEXT
func load_glProgramUniformMatrix2x3dvEXT(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniformMatrix2x3dvEXT = unsafeBitCast(get_fp("glProgramUniformMatrix2x3dvEXT", support: [ss143]), to: Swift.type(of: fp_glProgramUniformMatrix2x3dvEXT))
    fp_glProgramUniformMatrix2x3dvEXT(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix2x3dvEXT(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniformMatrix2x3dvEXT(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix2x3dvEXT(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniformMatrix2x3dvEXT(program, location, count, transpose, value)
}

var fp_glProgramUniformMatrix2x3fv:@convention(c) (GL.UInt, GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Float>?) -> () = load_glProgramUniformMatrix2x3fv
func load_glProgramUniformMatrix2x3fv(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniformMatrix2x3fv = unsafeBitCast(get_fp("glProgramUniformMatrix2x3fv", support: [ss359, ss367, ss80]), to: Swift.type(of: fp_glProgramUniformMatrix2x3fv))
    fp_glProgramUniformMatrix2x3fv(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix2x3fv(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniformMatrix2x3fv(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix2x3fv(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniformMatrix2x3fv(program, location, count, transpose, value)
}

var fp_glProgramUniformMatrix2x3fvEXT:@convention(c) (GL.UInt, GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Float>?) -> () = load_glProgramUniformMatrix2x3fvEXT
func load_glProgramUniformMatrix2x3fvEXT(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniformMatrix2x3fvEXT = unsafeBitCast(get_fp("glProgramUniformMatrix2x3fvEXT", support: [ss143, ss182]), to: Swift.type(of: fp_glProgramUniformMatrix2x3fvEXT))
    fp_glProgramUniformMatrix2x3fvEXT(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix2x3fvEXT(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniformMatrix2x3fvEXT(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix2x3fvEXT(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniformMatrix2x3fvEXT(program, location, count, transpose, value)
}

var fp_glProgramUniformMatrix2x4dv:@convention(c) (GL.UInt, GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Double>?) -> () = load_glProgramUniformMatrix2x4dv
func load_glProgramUniformMatrix2x4dv(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniformMatrix2x4dv = unsafeBitCast(get_fp("glProgramUniformMatrix2x4dv", support: [ss359, ss80]), to: Swift.type(of: fp_glProgramUniformMatrix2x4dv))
    fp_glProgramUniformMatrix2x4dv(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix2x4dv(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniformMatrix2x4dv(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix2x4dv(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniformMatrix2x4dv(program, location, count, transpose, value)
}

var fp_glProgramUniformMatrix2x4dvEXT:@convention(c) (GL.UInt, GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Double>?) -> () = load_glProgramUniformMatrix2x4dvEXT
func load_glProgramUniformMatrix2x4dvEXT(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniformMatrix2x4dvEXT = unsafeBitCast(get_fp("glProgramUniformMatrix2x4dvEXT", support: [ss143]), to: Swift.type(of: fp_glProgramUniformMatrix2x4dvEXT))
    fp_glProgramUniformMatrix2x4dvEXT(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix2x4dvEXT(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniformMatrix2x4dvEXT(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix2x4dvEXT(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniformMatrix2x4dvEXT(program, location, count, transpose, value)
}

var fp_glProgramUniformMatrix2x4fv:@convention(c) (GL.UInt, GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Float>?) -> () = load_glProgramUniformMatrix2x4fv
func load_glProgramUniformMatrix2x4fv(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniformMatrix2x4fv = unsafeBitCast(get_fp("glProgramUniformMatrix2x4fv", support: [ss359, ss367, ss80]), to: Swift.type(of: fp_glProgramUniformMatrix2x4fv))
    fp_glProgramUniformMatrix2x4fv(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix2x4fv(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniformMatrix2x4fv(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix2x4fv(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniformMatrix2x4fv(program, location, count, transpose, value)
}

var fp_glProgramUniformMatrix2x4fvEXT:@convention(c) (GL.UInt, GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Float>?) -> () = load_glProgramUniformMatrix2x4fvEXT
func load_glProgramUniformMatrix2x4fvEXT(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniformMatrix2x4fvEXT = unsafeBitCast(get_fp("glProgramUniformMatrix2x4fvEXT", support: [ss143, ss182]), to: Swift.type(of: fp_glProgramUniformMatrix2x4fvEXT))
    fp_glProgramUniformMatrix2x4fvEXT(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix2x4fvEXT(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniformMatrix2x4fvEXT(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix2x4fvEXT(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniformMatrix2x4fvEXT(program, location, count, transpose, value)
}

var fp_glProgramUniformMatrix3dv:@convention(c) (GL.UInt, GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Double>?) -> () = load_glProgramUniformMatrix3dv
func load_glProgramUniformMatrix3dv(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniformMatrix3dv = unsafeBitCast(get_fp("glProgramUniformMatrix3dv", support: [ss359, ss80]), to: Swift.type(of: fp_glProgramUniformMatrix3dv))
    fp_glProgramUniformMatrix3dv(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix3dv(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniformMatrix3dv(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix3dv(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniformMatrix3dv(program, location, count, transpose, value)
}

var fp_glProgramUniformMatrix3dvEXT:@convention(c) (GL.UInt, GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Double>?) -> () = load_glProgramUniformMatrix3dvEXT
func load_glProgramUniformMatrix3dvEXT(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniformMatrix3dvEXT = unsafeBitCast(get_fp("glProgramUniformMatrix3dvEXT", support: [ss143]), to: Swift.type(of: fp_glProgramUniformMatrix3dvEXT))
    fp_glProgramUniformMatrix3dvEXT(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix3dvEXT(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniformMatrix3dvEXT(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix3dvEXT(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniformMatrix3dvEXT(program, location, count, transpose, value)
}

var fp_glProgramUniformMatrix3fv:@convention(c) (GL.UInt, GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Float>?) -> () = load_glProgramUniformMatrix3fv
func load_glProgramUniformMatrix3fv(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniformMatrix3fv = unsafeBitCast(get_fp("glProgramUniformMatrix3fv", support: [ss359, ss367, ss80]), to: Swift.type(of: fp_glProgramUniformMatrix3fv))
    fp_glProgramUniformMatrix3fv(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix3fv(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniformMatrix3fv(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix3fv(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniformMatrix3fv(program, location, count, transpose, value)
}

var fp_glProgramUniformMatrix3fvEXT:@convention(c) (GL.UInt, GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Float>?) -> () = load_glProgramUniformMatrix3fvEXT
func load_glProgramUniformMatrix3fvEXT(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniformMatrix3fvEXT = unsafeBitCast(get_fp("glProgramUniformMatrix3fvEXT", support: [ss143, ss182]), to: Swift.type(of: fp_glProgramUniformMatrix3fvEXT))
    fp_glProgramUniformMatrix3fvEXT(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix3fvEXT(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniformMatrix3fvEXT(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix3fvEXT(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniformMatrix3fvEXT(program, location, count, transpose, value)
}

var fp_glProgramUniformMatrix3x2dv:@convention(c) (GL.UInt, GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Double>?) -> () = load_glProgramUniformMatrix3x2dv
func load_glProgramUniformMatrix3x2dv(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniformMatrix3x2dv = unsafeBitCast(get_fp("glProgramUniformMatrix3x2dv", support: [ss359, ss80]), to: Swift.type(of: fp_glProgramUniformMatrix3x2dv))
    fp_glProgramUniformMatrix3x2dv(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix3x2dv(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniformMatrix3x2dv(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix3x2dv(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniformMatrix3x2dv(program, location, count, transpose, value)
}

var fp_glProgramUniformMatrix3x2dvEXT:@convention(c) (GL.UInt, GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Double>?) -> () = load_glProgramUniformMatrix3x2dvEXT
func load_glProgramUniformMatrix3x2dvEXT(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniformMatrix3x2dvEXT = unsafeBitCast(get_fp("glProgramUniformMatrix3x2dvEXT", support: [ss143]), to: Swift.type(of: fp_glProgramUniformMatrix3x2dvEXT))
    fp_glProgramUniformMatrix3x2dvEXT(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix3x2dvEXT(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniformMatrix3x2dvEXT(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix3x2dvEXT(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniformMatrix3x2dvEXT(program, location, count, transpose, value)
}

var fp_glProgramUniformMatrix3x2fv:@convention(c) (GL.UInt, GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Float>?) -> () = load_glProgramUniformMatrix3x2fv
func load_glProgramUniformMatrix3x2fv(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniformMatrix3x2fv = unsafeBitCast(get_fp("glProgramUniformMatrix3x2fv", support: [ss359, ss367, ss80]), to: Swift.type(of: fp_glProgramUniformMatrix3x2fv))
    fp_glProgramUniformMatrix3x2fv(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix3x2fv(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniformMatrix3x2fv(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix3x2fv(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniformMatrix3x2fv(program, location, count, transpose, value)
}

var fp_glProgramUniformMatrix3x2fvEXT:@convention(c) (GL.UInt, GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Float>?) -> () = load_glProgramUniformMatrix3x2fvEXT
func load_glProgramUniformMatrix3x2fvEXT(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniformMatrix3x2fvEXT = unsafeBitCast(get_fp("glProgramUniformMatrix3x2fvEXT", support: [ss143, ss182]), to: Swift.type(of: fp_glProgramUniformMatrix3x2fvEXT))
    fp_glProgramUniformMatrix3x2fvEXT(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix3x2fvEXT(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniformMatrix3x2fvEXT(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix3x2fvEXT(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniformMatrix3x2fvEXT(program, location, count, transpose, value)
}

var fp_glProgramUniformMatrix3x4dv:@convention(c) (GL.UInt, GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Double>?) -> () = load_glProgramUniformMatrix3x4dv
func load_glProgramUniformMatrix3x4dv(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniformMatrix3x4dv = unsafeBitCast(get_fp("glProgramUniformMatrix3x4dv", support: [ss359, ss80]), to: Swift.type(of: fp_glProgramUniformMatrix3x4dv))
    fp_glProgramUniformMatrix3x4dv(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix3x4dv(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniformMatrix3x4dv(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix3x4dv(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniformMatrix3x4dv(program, location, count, transpose, value)
}

var fp_glProgramUniformMatrix3x4dvEXT:@convention(c) (GL.UInt, GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Double>?) -> () = load_glProgramUniformMatrix3x4dvEXT
func load_glProgramUniformMatrix3x4dvEXT(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniformMatrix3x4dvEXT = unsafeBitCast(get_fp("glProgramUniformMatrix3x4dvEXT", support: [ss143]), to: Swift.type(of: fp_glProgramUniformMatrix3x4dvEXT))
    fp_glProgramUniformMatrix3x4dvEXT(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix3x4dvEXT(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniformMatrix3x4dvEXT(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix3x4dvEXT(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniformMatrix3x4dvEXT(program, location, count, transpose, value)
}

var fp_glProgramUniformMatrix3x4fv:@convention(c) (GL.UInt, GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Float>?) -> () = load_glProgramUniformMatrix3x4fv
func load_glProgramUniformMatrix3x4fv(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniformMatrix3x4fv = unsafeBitCast(get_fp("glProgramUniformMatrix3x4fv", support: [ss359, ss367, ss80]), to: Swift.type(of: fp_glProgramUniformMatrix3x4fv))
    fp_glProgramUniformMatrix3x4fv(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix3x4fv(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniformMatrix3x4fv(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix3x4fv(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniformMatrix3x4fv(program, location, count, transpose, value)
}

var fp_glProgramUniformMatrix3x4fvEXT:@convention(c) (GL.UInt, GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Float>?) -> () = load_glProgramUniformMatrix3x4fvEXT
func load_glProgramUniformMatrix3x4fvEXT(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniformMatrix3x4fvEXT = unsafeBitCast(get_fp("glProgramUniformMatrix3x4fvEXT", support: [ss143, ss182]), to: Swift.type(of: fp_glProgramUniformMatrix3x4fvEXT))
    fp_glProgramUniformMatrix3x4fvEXT(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix3x4fvEXT(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniformMatrix3x4fvEXT(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix3x4fvEXT(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniformMatrix3x4fvEXT(program, location, count, transpose, value)
}

var fp_glProgramUniformMatrix4dv:@convention(c) (GL.UInt, GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Double>?) -> () = load_glProgramUniformMatrix4dv
func load_glProgramUniformMatrix4dv(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniformMatrix4dv = unsafeBitCast(get_fp("glProgramUniformMatrix4dv", support: [ss359, ss80]), to: Swift.type(of: fp_glProgramUniformMatrix4dv))
    fp_glProgramUniformMatrix4dv(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix4dv(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniformMatrix4dv(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix4dv(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniformMatrix4dv(program, location, count, transpose, value)
}

var fp_glProgramUniformMatrix4dvEXT:@convention(c) (GL.UInt, GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Double>?) -> () = load_glProgramUniformMatrix4dvEXT
func load_glProgramUniformMatrix4dvEXT(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniformMatrix4dvEXT = unsafeBitCast(get_fp("glProgramUniformMatrix4dvEXT", support: [ss143]), to: Swift.type(of: fp_glProgramUniformMatrix4dvEXT))
    fp_glProgramUniformMatrix4dvEXT(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix4dvEXT(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniformMatrix4dvEXT(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix4dvEXT(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniformMatrix4dvEXT(program, location, count, transpose, value)
}

var fp_glProgramUniformMatrix4fv:@convention(c) (GL.UInt, GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Float>?) -> () = load_glProgramUniformMatrix4fv
func load_glProgramUniformMatrix4fv(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniformMatrix4fv = unsafeBitCast(get_fp("glProgramUniformMatrix4fv", support: [ss359, ss367, ss80]), to: Swift.type(of: fp_glProgramUniformMatrix4fv))
    fp_glProgramUniformMatrix4fv(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix4fv(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniformMatrix4fv(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix4fv(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniformMatrix4fv(program, location, count, transpose, value)
}

var fp_glProgramUniformMatrix4fvEXT:@convention(c) (GL.UInt, GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Float>?) -> () = load_glProgramUniformMatrix4fvEXT
func load_glProgramUniformMatrix4fvEXT(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniformMatrix4fvEXT = unsafeBitCast(get_fp("glProgramUniformMatrix4fvEXT", support: [ss143, ss182, ss182]), to: Swift.type(of: fp_glProgramUniformMatrix4fvEXT))
    fp_glProgramUniformMatrix4fvEXT(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix4fvEXT(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniformMatrix4fvEXT(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix4fvEXT(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniformMatrix4fvEXT(program, location, count, transpose, value)
}

var fp_glProgramUniformMatrix4x2dv:@convention(c) (GL.UInt, GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Double>?) -> () = load_glProgramUniformMatrix4x2dv
func load_glProgramUniformMatrix4x2dv(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniformMatrix4x2dv = unsafeBitCast(get_fp("glProgramUniformMatrix4x2dv", support: [ss359, ss80]), to: Swift.type(of: fp_glProgramUniformMatrix4x2dv))
    fp_glProgramUniformMatrix4x2dv(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix4x2dv(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniformMatrix4x2dv(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix4x2dv(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniformMatrix4x2dv(program, location, count, transpose, value)
}

var fp_glProgramUniformMatrix4x2dvEXT:@convention(c) (GL.UInt, GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Double>?) -> () = load_glProgramUniformMatrix4x2dvEXT
func load_glProgramUniformMatrix4x2dvEXT(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniformMatrix4x2dvEXT = unsafeBitCast(get_fp("glProgramUniformMatrix4x2dvEXT", support: [ss143]), to: Swift.type(of: fp_glProgramUniformMatrix4x2dvEXT))
    fp_glProgramUniformMatrix4x2dvEXT(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix4x2dvEXT(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniformMatrix4x2dvEXT(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix4x2dvEXT(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniformMatrix4x2dvEXT(program, location, count, transpose, value)
}

var fp_glProgramUniformMatrix4x2fv:@convention(c) (GL.UInt, GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Float>?) -> () = load_glProgramUniformMatrix4x2fv
func load_glProgramUniformMatrix4x2fv(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniformMatrix4x2fv = unsafeBitCast(get_fp("glProgramUniformMatrix4x2fv", support: [ss359, ss367, ss80]), to: Swift.type(of: fp_glProgramUniformMatrix4x2fv))
    fp_glProgramUniformMatrix4x2fv(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix4x2fv(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniformMatrix4x2fv(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix4x2fv(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniformMatrix4x2fv(program, location, count, transpose, value)
}

var fp_glProgramUniformMatrix4x2fvEXT:@convention(c) (GL.UInt, GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Float>?) -> () = load_glProgramUniformMatrix4x2fvEXT
func load_glProgramUniformMatrix4x2fvEXT(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniformMatrix4x2fvEXT = unsafeBitCast(get_fp("glProgramUniformMatrix4x2fvEXT", support: [ss143, ss182]), to: Swift.type(of: fp_glProgramUniformMatrix4x2fvEXT))
    fp_glProgramUniformMatrix4x2fvEXT(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix4x2fvEXT(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniformMatrix4x2fvEXT(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix4x2fvEXT(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniformMatrix4x2fvEXT(program, location, count, transpose, value)
}

var fp_glProgramUniformMatrix4x3dv:@convention(c) (GL.UInt, GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Double>?) -> () = load_glProgramUniformMatrix4x3dv
func load_glProgramUniformMatrix4x3dv(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniformMatrix4x3dv = unsafeBitCast(get_fp("glProgramUniformMatrix4x3dv", support: [ss359, ss80]), to: Swift.type(of: fp_glProgramUniformMatrix4x3dv))
    fp_glProgramUniformMatrix4x3dv(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix4x3dv(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniformMatrix4x3dv(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix4x3dv(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniformMatrix4x3dv(program, location, count, transpose, value)
}

var fp_glProgramUniformMatrix4x3dvEXT:@convention(c) (GL.UInt, GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Double>?) -> () = load_glProgramUniformMatrix4x3dvEXT
func load_glProgramUniformMatrix4x3dvEXT(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniformMatrix4x3dvEXT = unsafeBitCast(get_fp("glProgramUniformMatrix4x3dvEXT", support: [ss143]), to: Swift.type(of: fp_glProgramUniformMatrix4x3dvEXT))
    fp_glProgramUniformMatrix4x3dvEXT(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix4x3dvEXT(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniformMatrix4x3dvEXT(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix4x3dvEXT(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Double>?)
{
    fp_glProgramUniformMatrix4x3dvEXT(program, location, count, transpose, value)
}

var fp_glProgramUniformMatrix4x3fv:@convention(c) (GL.UInt, GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Float>?) -> () = load_glProgramUniformMatrix4x3fv
func load_glProgramUniformMatrix4x3fv(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniformMatrix4x3fv = unsafeBitCast(get_fp("glProgramUniformMatrix4x3fv", support: [ss359, ss367, ss80]), to: Swift.type(of: fp_glProgramUniformMatrix4x3fv))
    fp_glProgramUniformMatrix4x3fv(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix4x3fv(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniformMatrix4x3fv(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix4x3fv(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniformMatrix4x3fv(program, location, count, transpose, value)
}

var fp_glProgramUniformMatrix4x3fvEXT:@convention(c) (GL.UInt, GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Float>?) -> () = load_glProgramUniformMatrix4x3fvEXT
func load_glProgramUniformMatrix4x3fvEXT(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniformMatrix4x3fvEXT = unsafeBitCast(get_fp("glProgramUniformMatrix4x3fvEXT", support: [ss143, ss182]), to: Swift.type(of: fp_glProgramUniformMatrix4x3fvEXT))
    fp_glProgramUniformMatrix4x3fvEXT(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix4x3fvEXT(program:GL.UInt, location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniformMatrix4x3fvEXT(program, location, count, transpose, value)
}
public
func glProgramUniformMatrix4x3fvEXT(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Float>?)
{
    fp_glProgramUniformMatrix4x3fvEXT(program, location, count, transpose, value)
}

var fp_glProgramUniformui64NV:@convention(c) (GL.UInt, GL.Int, GL.UInt64EXT) -> () = load_glProgramUniformui64NV
func load_glProgramUniformui64NV(program:GL.UInt, location:GL.Int, value:GL.UInt64EXT)
{
    fp_glProgramUniformui64NV = unsafeBitCast(get_fp("glProgramUniformui64NV", support: [ss269]), to: Swift.type(of: fp_glProgramUniformui64NV))
    fp_glProgramUniformui64NV(program, location, value)
}
public
func glProgramUniformui64NV(program:GL.UInt, location:GL.Int, value:GL.UInt64EXT)
{
    fp_glProgramUniformui64NV(program, location, value)
}
public
func glProgramUniformui64NV(_ program:GL.UInt, _ location:GL.Int, _ value:GL.UInt64EXT)
{
    fp_glProgramUniformui64NV(program, location, value)
}

var fp_glProgramUniformui64vNV:@convention(c) (GL.UInt, GL.Int, GL.Size, UnsafePointer<GL.UInt64EXT>?) -> () = load_glProgramUniformui64vNV
func load_glProgramUniformui64vNV(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt64EXT>?)
{
    fp_glProgramUniformui64vNV = unsafeBitCast(get_fp("glProgramUniformui64vNV", support: [ss269]), to: Swift.type(of: fp_glProgramUniformui64vNV))
    fp_glProgramUniformui64vNV(program, location, count, value)
}
public
func glProgramUniformui64vNV(program:GL.UInt, location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt64EXT>?)
{
    fp_glProgramUniformui64vNV(program, location, count, value)
}
public
func glProgramUniformui64vNV(_ program:GL.UInt, _ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.UInt64EXT>?)
{
    fp_glProgramUniformui64vNV(program, location, count, value)
}

var fp_glProgramVertexLimitNV:@convention(c) (GL.Enum, GL.Int) -> () = load_glProgramVertexLimitNV
func load_glProgramVertexLimitNV(target:GL.Enum, limit:GL.Int)
{
    fp_glProgramVertexLimitNV = unsafeBitCast(get_fp("glProgramVertexLimitNV", support: [ss249]), to: Swift.type(of: fp_glProgramVertexLimitNV))
    fp_glProgramVertexLimitNV(target, limit)
}
public
func glProgramVertexLimitNV(target:GL.Enum, limit:GL.Int)
{
    fp_glProgramVertexLimitNV(target, limit)
}
public
func glProgramVertexLimitNV(_ target:GL.Enum, _ limit:GL.Int)
{
    fp_glProgramVertexLimitNV(target, limit)
}

var fp_glProvokingVertex:@convention(c) (GL.Enum) -> () = load_glProvokingVertex
func load_glProvokingVertex(mode:GL.Enum)
{
    fp_glProvokingVertex = unsafeBitCast(get_fp("glProvokingVertex", support: [ss356, ss75]), to: Swift.type(of: fp_glProvokingVertex))
    fp_glProvokingVertex(mode)
}
public
func glProvokingVertex(mode:GL.Enum)
{
    fp_glProvokingVertex(mode)
}
public
func glProvokingVertex(_ mode:GL.Enum)
{
    fp_glProvokingVertex(mode)
}

var fp_glProvokingVertexEXT:@convention(c) (GL.Enum) -> () = load_glProvokingVertexEXT
func load_glProvokingVertexEXT(mode:GL.Enum)
{
    fp_glProvokingVertexEXT = unsafeBitCast(get_fp("glProvokingVertexEXT", support: [ss178]), to: Swift.type(of: fp_glProvokingVertexEXT))
    fp_glProvokingVertexEXT(mode)
}
public
func glProvokingVertexEXT(mode:GL.Enum)
{
    fp_glProvokingVertexEXT(mode)
}
public
func glProvokingVertexEXT(_ mode:GL.Enum)
{
    fp_glProvokingVertexEXT(mode)
}

var fp_glPushAttrib:@convention(c) (GL.Bitfield) -> () = load_glPushAttrib
func load_glPushAttrib(mask:GL.Bitfield)
{
    fp_glPushAttrib = unsafeBitCast(get_fp("glPushAttrib", support: [ss346, ss369]), to: Swift.type(of: fp_glPushAttrib))
    fp_glPushAttrib(mask)
}
public
func glPushAttrib(mask:GL.Bitfield)
{
    fp_glPushAttrib(mask)
}
public
func glPushAttrib(_ mask:GL.Bitfield)
{
    fp_glPushAttrib(mask)
}

var fp_glPushClientAttrib:@convention(c) (GL.Bitfield) -> () = load_glPushClientAttrib
func load_glPushClientAttrib(mask:GL.Bitfield)
{
    fp_glPushClientAttrib = unsafeBitCast(get_fp("glPushClientAttrib", support: [ss347, ss369]), to: Swift.type(of: fp_glPushClientAttrib))
    fp_glPushClientAttrib(mask)
}
public
func glPushClientAttrib(mask:GL.Bitfield)
{
    fp_glPushClientAttrib(mask)
}
public
func glPushClientAttrib(_ mask:GL.Bitfield)
{
    fp_glPushClientAttrib(mask)
}

var fp_glPushClientAttribDefaultEXT:@convention(c) (GL.Bitfield) -> () = load_glPushClientAttribDefaultEXT
func load_glPushClientAttribDefaultEXT(mask:GL.Bitfield)
{
    fp_glPushClientAttribDefaultEXT = unsafeBitCast(get_fp("glPushClientAttribDefaultEXT", support: [ss143]), to: Swift.type(of: fp_glPushClientAttribDefaultEXT))
    fp_glPushClientAttribDefaultEXT(mask)
}
public
func glPushClientAttribDefaultEXT(mask:GL.Bitfield)
{
    fp_glPushClientAttribDefaultEXT(mask)
}
public
func glPushClientAttribDefaultEXT(_ mask:GL.Bitfield)
{
    fp_glPushClientAttribDefaultEXT(mask)
}

var fp_glPushDebugGroup:@convention(c) (GL.Enum, GL.UInt, GL.Size, UnsafePointer<GL.Char>?) -> () = load_glPushDebugGroup
func load_glPushDebugGroup(source:GL.Enum, id:GL.UInt, length:GL.Size, message:UnsafePointer<GL.Char>?)
{
    fp_glPushDebugGroup = unsafeBitCast(get_fp("glPushDebugGroup", support: [ss361, ss368, ss221]), to: Swift.type(of: fp_glPushDebugGroup))
    fp_glPushDebugGroup(source, id, length, message)
}
public
func glPushDebugGroup(source:GL.Enum, id:GL.UInt, length:GL.Size, message:UnsafePointer<GL.Char>?)
{
    fp_glPushDebugGroup(source, id, length, message)
}
public
func glPushDebugGroup(_ source:GL.Enum, _ id:GL.UInt, _ length:GL.Size, _ message:UnsafePointer<GL.Char>?)
{
    fp_glPushDebugGroup(source, id, length, message)
}

var fp_glPushDebugGroupKHR:@convention(c) (GL.Enum, GL.UInt, GL.Size, UnsafePointer<GL.Char>?) -> () = load_glPushDebugGroupKHR
func load_glPushDebugGroupKHR(source:GL.Enum, id:GL.UInt, length:GL.Size, message:UnsafePointer<GL.Char>?)
{
    fp_glPushDebugGroupKHR = unsafeBitCast(get_fp("glPushDebugGroupKHR", support: [ss221]), to: Swift.type(of: fp_glPushDebugGroupKHR))
    fp_glPushDebugGroupKHR(source, id, length, message)
}
public
func glPushDebugGroupKHR(source:GL.Enum, id:GL.UInt, length:GL.Size, message:UnsafePointer<GL.Char>?)
{
    fp_glPushDebugGroupKHR(source, id, length, message)
}
public
func glPushDebugGroupKHR(_ source:GL.Enum, _ id:GL.UInt, _ length:GL.Size, _ message:UnsafePointer<GL.Char>?)
{
    fp_glPushDebugGroupKHR(source, id, length, message)
}

var fp_glPushGroupMarkerEXT:@convention(c) (GL.Size, UnsafePointer<GL.Char>?) -> () = load_glPushGroupMarkerEXT
func load_glPushGroupMarkerEXT(length:GL.Size, marker:UnsafePointer<GL.Char>?)
{
    fp_glPushGroupMarkerEXT = unsafeBitCast(get_fp("glPushGroupMarkerEXT", support: [ss141]), to: Swift.type(of: fp_glPushGroupMarkerEXT))
    fp_glPushGroupMarkerEXT(length, marker)
}
public
func glPushGroupMarkerEXT(length:GL.Size, marker:UnsafePointer<GL.Char>?)
{
    fp_glPushGroupMarkerEXT(length, marker)
}
public
func glPushGroupMarkerEXT(_ length:GL.Size, _ marker:UnsafePointer<GL.Char>?)
{
    fp_glPushGroupMarkerEXT(length, marker)
}

var fp_glPushMatrix:@convention(c) () -> () = load_glPushMatrix
func load_glPushMatrix()
{
    fp_glPushMatrix = unsafeBitCast(get_fp("glPushMatrix", support: [ss346, ss369, ss364]), to: Swift.type(of: fp_glPushMatrix))
    fp_glPushMatrix()
}
public
func glPushMatrix()
{
    fp_glPushMatrix()
}

var fp_glPushName:@convention(c) (GL.UInt) -> () = load_glPushName
func load_glPushName(name:GL.UInt)
{
    fp_glPushName = unsafeBitCast(get_fp("glPushName", support: [ss346, ss369]), to: Swift.type(of: fp_glPushName))
    fp_glPushName(name)
}
public
func glPushName(name:GL.UInt)
{
    fp_glPushName(name)
}
public
func glPushName(_ name:GL.UInt)
{
    fp_glPushName(name)
}

var fp_glQueryCounter:@convention(c) (GL.UInt, GL.Enum) -> () = load_glQueryCounter
func load_glQueryCounter(id:GL.UInt, target:GL.Enum)
{
    fp_glQueryCounter = unsafeBitCast(get_fp("glQueryCounter", support: [ss357, ss99]), to: Swift.type(of: fp_glQueryCounter))
    fp_glQueryCounter(id, target)
}
public
func glQueryCounter(id:GL.UInt, target:GL.Enum)
{
    fp_glQueryCounter(id, target)
}
public
func glQueryCounter(_ id:GL.UInt, _ target:GL.Enum)
{
    fp_glQueryCounter(id, target)
}

var fp_glQueryCounterEXT:@convention(c) (GL.UInt, GL.Enum) -> () = load_glQueryCounterEXT
func load_glQueryCounterEXT(id:GL.UInt, target:GL.Enum)
{
    fp_glQueryCounterEXT = unsafeBitCast(get_fp("glQueryCounterEXT", support: [ss145]), to: Swift.type(of: fp_glQueryCounterEXT))
    fp_glQueryCounterEXT(id, target)
}
public
func glQueryCounterEXT(id:GL.UInt, target:GL.Enum)
{
    fp_glQueryCounterEXT(id, target)
}
public
func glQueryCounterEXT(_ id:GL.UInt, _ target:GL.Enum)
{
    fp_glQueryCounterEXT(id, target)
}

var fp_glQueryMatrixxOES:@convention(c) (UnsafeMutablePointer<GL.Fixed>?, UnsafeMutablePointer<GL.Int>?) -> GL.Bitfield = load_glQueryMatrixxOES
func load_glQueryMatrixxOES(mantissa:UnsafeMutablePointer<GL.Fixed>?, exponent:UnsafeMutablePointer<GL.Int>?) -> GL.Bitfield
{
    fp_glQueryMatrixxOES = unsafeBitCast(get_fp("glQueryMatrixxOES", support: [ss300]), to: Swift.type(of: fp_glQueryMatrixxOES))
    return fp_glQueryMatrixxOES(mantissa, exponent)
}
public
func glQueryMatrixxOES(mantissa:UnsafeMutablePointer<GL.Fixed>?, exponent:UnsafeMutablePointer<GL.Int>?) -> GL.Bitfield
{
    return fp_glQueryMatrixxOES(mantissa, exponent)
}
public
func glQueryMatrixxOES(_ mantissa:UnsafeMutablePointer<GL.Fixed>?, _ exponent:UnsafeMutablePointer<GL.Int>?) -> GL.Bitfield
{
    return fp_glQueryMatrixxOES(mantissa, exponent)
}

var fp_glQueryObjectParameteruiAMD:@convention(c) (GL.Enum, GL.UInt, GL.Enum, GL.UInt) -> () = load_glQueryObjectParameteruiAMD
func load_glQueryObjectParameteruiAMD(target:GL.Enum, id:GL.UInt, pname:GL.Enum, param:GL.UInt)
{
    fp_glQueryObjectParameteruiAMD = unsafeBitCast(get_fp("glQueryObjectParameteruiAMD", support: [ss7]), to: Swift.type(of: fp_glQueryObjectParameteruiAMD))
    fp_glQueryObjectParameteruiAMD(target, id, pname, param)
}
public
func glQueryObjectParameteruiAMD(target:GL.Enum, id:GL.UInt, pname:GL.Enum, param:GL.UInt)
{
    fp_glQueryObjectParameteruiAMD(target, id, pname, param)
}
public
func glQueryObjectParameteruiAMD(_ target:GL.Enum, _ id:GL.UInt, _ pname:GL.Enum, _ param:GL.UInt)
{
    fp_glQueryObjectParameteruiAMD(target, id, pname, param)
}

var fp_glRasterPos2d:@convention(c) (GL.Double, GL.Double) -> () = load_glRasterPos2d
func load_glRasterPos2d(x:GL.Double, y:GL.Double)
{
    fp_glRasterPos2d = unsafeBitCast(get_fp("glRasterPos2d", support: [ss346, ss369]), to: Swift.type(of: fp_glRasterPos2d))
    fp_glRasterPos2d(x, y)
}
public
func glRasterPos2d(x:GL.Double, y:GL.Double)
{
    fp_glRasterPos2d(x, y)
}
public
func glRasterPos2d(_ x:GL.Double, _ y:GL.Double)
{
    fp_glRasterPos2d(x, y)
}

var fp_glRasterPos2dv:@convention(c) (UnsafePointer<GL.Double>?) -> () = load_glRasterPos2dv
func load_glRasterPos2dv(v:UnsafePointer<GL.Double>?)
{
    fp_glRasterPos2dv = unsafeBitCast(get_fp("glRasterPos2dv", support: [ss346, ss369]), to: Swift.type(of: fp_glRasterPos2dv))
    fp_glRasterPos2dv(v)
}
public
func glRasterPos2dv(v:UnsafePointer<GL.Double>?)
{
    fp_glRasterPos2dv(v)
}
public
func glRasterPos2dv(_ v:UnsafePointer<GL.Double>?)
{
    fp_glRasterPos2dv(v)
}

var fp_glRasterPos2f:@convention(c) (GL.Float, GL.Float) -> () = load_glRasterPos2f
func load_glRasterPos2f(x:GL.Float, y:GL.Float)
{
    fp_glRasterPos2f = unsafeBitCast(get_fp("glRasterPos2f", support: [ss346, ss369]), to: Swift.type(of: fp_glRasterPos2f))
    fp_glRasterPos2f(x, y)
}
public
func glRasterPos2f(x:GL.Float, y:GL.Float)
{
    fp_glRasterPos2f(x, y)
}
public
func glRasterPos2f(_ x:GL.Float, _ y:GL.Float)
{
    fp_glRasterPos2f(x, y)
}

var fp_glRasterPos2fv:@convention(c) (UnsafePointer<GL.Float>?) -> () = load_glRasterPos2fv
func load_glRasterPos2fv(v:UnsafePointer<GL.Float>?)
{
    fp_glRasterPos2fv = unsafeBitCast(get_fp("glRasterPos2fv", support: [ss346, ss369]), to: Swift.type(of: fp_glRasterPos2fv))
    fp_glRasterPos2fv(v)
}
public
func glRasterPos2fv(v:UnsafePointer<GL.Float>?)
{
    fp_glRasterPos2fv(v)
}
public
func glRasterPos2fv(_ v:UnsafePointer<GL.Float>?)
{
    fp_glRasterPos2fv(v)
}

var fp_glRasterPos2i:@convention(c) (GL.Int, GL.Int) -> () = load_glRasterPos2i
func load_glRasterPos2i(x:GL.Int, y:GL.Int)
{
    fp_glRasterPos2i = unsafeBitCast(get_fp("glRasterPos2i", support: [ss346, ss369]), to: Swift.type(of: fp_glRasterPos2i))
    fp_glRasterPos2i(x, y)
}
public
func glRasterPos2i(x:GL.Int, y:GL.Int)
{
    fp_glRasterPos2i(x, y)
}
public
func glRasterPos2i(_ x:GL.Int, _ y:GL.Int)
{
    fp_glRasterPos2i(x, y)
}

var fp_glRasterPos2iv:@convention(c) (UnsafePointer<GL.Int>?) -> () = load_glRasterPos2iv
func load_glRasterPos2iv(v:UnsafePointer<GL.Int>?)
{
    fp_glRasterPos2iv = unsafeBitCast(get_fp("glRasterPos2iv", support: [ss346, ss369]), to: Swift.type(of: fp_glRasterPos2iv))
    fp_glRasterPos2iv(v)
}
public
func glRasterPos2iv(v:UnsafePointer<GL.Int>?)
{
    fp_glRasterPos2iv(v)
}
public
func glRasterPos2iv(_ v:UnsafePointer<GL.Int>?)
{
    fp_glRasterPos2iv(v)
}

var fp_glRasterPos2s:@convention(c) (GL.Short, GL.Short) -> () = load_glRasterPos2s
func load_glRasterPos2s(x:GL.Short, y:GL.Short)
{
    fp_glRasterPos2s = unsafeBitCast(get_fp("glRasterPos2s", support: [ss346, ss369]), to: Swift.type(of: fp_glRasterPos2s))
    fp_glRasterPos2s(x, y)
}
public
func glRasterPos2s(x:GL.Short, y:GL.Short)
{
    fp_glRasterPos2s(x, y)
}
public
func glRasterPos2s(_ x:GL.Short, _ y:GL.Short)
{
    fp_glRasterPos2s(x, y)
}

var fp_glRasterPos2sv:@convention(c) (UnsafePointer<GL.Short>?) -> () = load_glRasterPos2sv
func load_glRasterPos2sv(v:UnsafePointer<GL.Short>?)
{
    fp_glRasterPos2sv = unsafeBitCast(get_fp("glRasterPos2sv", support: [ss346, ss369]), to: Swift.type(of: fp_glRasterPos2sv))
    fp_glRasterPos2sv(v)
}
public
func glRasterPos2sv(v:UnsafePointer<GL.Short>?)
{
    fp_glRasterPos2sv(v)
}
public
func glRasterPos2sv(_ v:UnsafePointer<GL.Short>?)
{
    fp_glRasterPos2sv(v)
}

var fp_glRasterPos2xOES:@convention(c) (GL.Fixed, GL.Fixed) -> () = load_glRasterPos2xOES
func load_glRasterPos2xOES(x:GL.Fixed, y:GL.Fixed)
{
    fp_glRasterPos2xOES = unsafeBitCast(get_fp("glRasterPos2xOES", support: [ss292]), to: Swift.type(of: fp_glRasterPos2xOES))
    fp_glRasterPos2xOES(x, y)
}
public
func glRasterPos2xOES(x:GL.Fixed, y:GL.Fixed)
{
    fp_glRasterPos2xOES(x, y)
}
public
func glRasterPos2xOES(_ x:GL.Fixed, _ y:GL.Fixed)
{
    fp_glRasterPos2xOES(x, y)
}

var fp_glRasterPos2xvOES:@convention(c) (UnsafePointer<GL.Fixed>?) -> () = load_glRasterPos2xvOES
func load_glRasterPos2xvOES(coords:UnsafePointer<GL.Fixed>?)
{
    fp_glRasterPos2xvOES = unsafeBitCast(get_fp("glRasterPos2xvOES", support: [ss292]), to: Swift.type(of: fp_glRasterPos2xvOES))
    fp_glRasterPos2xvOES(coords)
}
public
func glRasterPos2xvOES(coords:UnsafePointer<GL.Fixed>?)
{
    fp_glRasterPos2xvOES(coords)
}
public
func glRasterPos2xvOES(_ coords:UnsafePointer<GL.Fixed>?)
{
    fp_glRasterPos2xvOES(coords)
}

var fp_glRasterPos3d:@convention(c) (GL.Double, GL.Double, GL.Double) -> () = load_glRasterPos3d
func load_glRasterPos3d(x:GL.Double, y:GL.Double, z:GL.Double)
{
    fp_glRasterPos3d = unsafeBitCast(get_fp("glRasterPos3d", support: [ss346, ss369]), to: Swift.type(of: fp_glRasterPos3d))
    fp_glRasterPos3d(x, y, z)
}
public
func glRasterPos3d(x:GL.Double, y:GL.Double, z:GL.Double)
{
    fp_glRasterPos3d(x, y, z)
}
public
func glRasterPos3d(_ x:GL.Double, _ y:GL.Double, _ z:GL.Double)
{
    fp_glRasterPos3d(x, y, z)
}

var fp_glRasterPos3dv:@convention(c) (UnsafePointer<GL.Double>?) -> () = load_glRasterPos3dv
func load_glRasterPos3dv(v:UnsafePointer<GL.Double>?)
{
    fp_glRasterPos3dv = unsafeBitCast(get_fp("glRasterPos3dv", support: [ss346, ss369]), to: Swift.type(of: fp_glRasterPos3dv))
    fp_glRasterPos3dv(v)
}
public
func glRasterPos3dv(v:UnsafePointer<GL.Double>?)
{
    fp_glRasterPos3dv(v)
}
public
func glRasterPos3dv(_ v:UnsafePointer<GL.Double>?)
{
    fp_glRasterPos3dv(v)
}

var fp_glRasterPos3f:@convention(c) (GL.Float, GL.Float, GL.Float) -> () = load_glRasterPos3f
func load_glRasterPos3f(x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glRasterPos3f = unsafeBitCast(get_fp("glRasterPos3f", support: [ss346, ss369]), to: Swift.type(of: fp_glRasterPos3f))
    fp_glRasterPos3f(x, y, z)
}
public
func glRasterPos3f(x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glRasterPos3f(x, y, z)
}
public
func glRasterPos3f(_ x:GL.Float, _ y:GL.Float, _ z:GL.Float)
{
    fp_glRasterPos3f(x, y, z)
}

var fp_glRasterPos3fv:@convention(c) (UnsafePointer<GL.Float>?) -> () = load_glRasterPos3fv
func load_glRasterPos3fv(v:UnsafePointer<GL.Float>?)
{
    fp_glRasterPos3fv = unsafeBitCast(get_fp("glRasterPos3fv", support: [ss346, ss369]), to: Swift.type(of: fp_glRasterPos3fv))
    fp_glRasterPos3fv(v)
}
public
func glRasterPos3fv(v:UnsafePointer<GL.Float>?)
{
    fp_glRasterPos3fv(v)
}
public
func glRasterPos3fv(_ v:UnsafePointer<GL.Float>?)
{
    fp_glRasterPos3fv(v)
}

var fp_glRasterPos3i:@convention(c) (GL.Int, GL.Int, GL.Int) -> () = load_glRasterPos3i
func load_glRasterPos3i(x:GL.Int, y:GL.Int, z:GL.Int)
{
    fp_glRasterPos3i = unsafeBitCast(get_fp("glRasterPos3i", support: [ss346, ss369]), to: Swift.type(of: fp_glRasterPos3i))
    fp_glRasterPos3i(x, y, z)
}
public
func glRasterPos3i(x:GL.Int, y:GL.Int, z:GL.Int)
{
    fp_glRasterPos3i(x, y, z)
}
public
func glRasterPos3i(_ x:GL.Int, _ y:GL.Int, _ z:GL.Int)
{
    fp_glRasterPos3i(x, y, z)
}

var fp_glRasterPos3iv:@convention(c) (UnsafePointer<GL.Int>?) -> () = load_glRasterPos3iv
func load_glRasterPos3iv(v:UnsafePointer<GL.Int>?)
{
    fp_glRasterPos3iv = unsafeBitCast(get_fp("glRasterPos3iv", support: [ss346, ss369]), to: Swift.type(of: fp_glRasterPos3iv))
    fp_glRasterPos3iv(v)
}
public
func glRasterPos3iv(v:UnsafePointer<GL.Int>?)
{
    fp_glRasterPos3iv(v)
}
public
func glRasterPos3iv(_ v:UnsafePointer<GL.Int>?)
{
    fp_glRasterPos3iv(v)
}

var fp_glRasterPos3s:@convention(c) (GL.Short, GL.Short, GL.Short) -> () = load_glRasterPos3s
func load_glRasterPos3s(x:GL.Short, y:GL.Short, z:GL.Short)
{
    fp_glRasterPos3s = unsafeBitCast(get_fp("glRasterPos3s", support: [ss346, ss369]), to: Swift.type(of: fp_glRasterPos3s))
    fp_glRasterPos3s(x, y, z)
}
public
func glRasterPos3s(x:GL.Short, y:GL.Short, z:GL.Short)
{
    fp_glRasterPos3s(x, y, z)
}
public
func glRasterPos3s(_ x:GL.Short, _ y:GL.Short, _ z:GL.Short)
{
    fp_glRasterPos3s(x, y, z)
}

var fp_glRasterPos3sv:@convention(c) (UnsafePointer<GL.Short>?) -> () = load_glRasterPos3sv
func load_glRasterPos3sv(v:UnsafePointer<GL.Short>?)
{
    fp_glRasterPos3sv = unsafeBitCast(get_fp("glRasterPos3sv", support: [ss346, ss369]), to: Swift.type(of: fp_glRasterPos3sv))
    fp_glRasterPos3sv(v)
}
public
func glRasterPos3sv(v:UnsafePointer<GL.Short>?)
{
    fp_glRasterPos3sv(v)
}
public
func glRasterPos3sv(_ v:UnsafePointer<GL.Short>?)
{
    fp_glRasterPos3sv(v)
}

var fp_glRasterPos3xOES:@convention(c) (GL.Fixed, GL.Fixed, GL.Fixed) -> () = load_glRasterPos3xOES
func load_glRasterPos3xOES(x:GL.Fixed, y:GL.Fixed, z:GL.Fixed)
{
    fp_glRasterPos3xOES = unsafeBitCast(get_fp("glRasterPos3xOES", support: [ss292]), to: Swift.type(of: fp_glRasterPos3xOES))
    fp_glRasterPos3xOES(x, y, z)
}
public
func glRasterPos3xOES(x:GL.Fixed, y:GL.Fixed, z:GL.Fixed)
{
    fp_glRasterPos3xOES(x, y, z)
}
public
func glRasterPos3xOES(_ x:GL.Fixed, _ y:GL.Fixed, _ z:GL.Fixed)
{
    fp_glRasterPos3xOES(x, y, z)
}

var fp_glRasterPos3xvOES:@convention(c) (UnsafePointer<GL.Fixed>?) -> () = load_glRasterPos3xvOES
func load_glRasterPos3xvOES(coords:UnsafePointer<GL.Fixed>?)
{
    fp_glRasterPos3xvOES = unsafeBitCast(get_fp("glRasterPos3xvOES", support: [ss292]), to: Swift.type(of: fp_glRasterPos3xvOES))
    fp_glRasterPos3xvOES(coords)
}
public
func glRasterPos3xvOES(coords:UnsafePointer<GL.Fixed>?)
{
    fp_glRasterPos3xvOES(coords)
}
public
func glRasterPos3xvOES(_ coords:UnsafePointer<GL.Fixed>?)
{
    fp_glRasterPos3xvOES(coords)
}

var fp_glRasterPos4d:@convention(c) (GL.Double, GL.Double, GL.Double, GL.Double) -> () = load_glRasterPos4d
func load_glRasterPos4d(x:GL.Double, y:GL.Double, z:GL.Double, w:GL.Double)
{
    fp_glRasterPos4d = unsafeBitCast(get_fp("glRasterPos4d", support: [ss346, ss369]), to: Swift.type(of: fp_glRasterPos4d))
    fp_glRasterPos4d(x, y, z, w)
}
public
func glRasterPos4d(x:GL.Double, y:GL.Double, z:GL.Double, w:GL.Double)
{
    fp_glRasterPos4d(x, y, z, w)
}
public
func glRasterPos4d(_ x:GL.Double, _ y:GL.Double, _ z:GL.Double, _ w:GL.Double)
{
    fp_glRasterPos4d(x, y, z, w)
}

var fp_glRasterPos4dv:@convention(c) (UnsafePointer<GL.Double>?) -> () = load_glRasterPos4dv
func load_glRasterPos4dv(v:UnsafePointer<GL.Double>?)
{
    fp_glRasterPos4dv = unsafeBitCast(get_fp("glRasterPos4dv", support: [ss346, ss369]), to: Swift.type(of: fp_glRasterPos4dv))
    fp_glRasterPos4dv(v)
}
public
func glRasterPos4dv(v:UnsafePointer<GL.Double>?)
{
    fp_glRasterPos4dv(v)
}
public
func glRasterPos4dv(_ v:UnsafePointer<GL.Double>?)
{
    fp_glRasterPos4dv(v)
}

var fp_glRasterPos4f:@convention(c) (GL.Float, GL.Float, GL.Float, GL.Float) -> () = load_glRasterPos4f
func load_glRasterPos4f(x:GL.Float, y:GL.Float, z:GL.Float, w:GL.Float)
{
    fp_glRasterPos4f = unsafeBitCast(get_fp("glRasterPos4f", support: [ss346, ss369]), to: Swift.type(of: fp_glRasterPos4f))
    fp_glRasterPos4f(x, y, z, w)
}
public
func glRasterPos4f(x:GL.Float, y:GL.Float, z:GL.Float, w:GL.Float)
{
    fp_glRasterPos4f(x, y, z, w)
}
public
func glRasterPos4f(_ x:GL.Float, _ y:GL.Float, _ z:GL.Float, _ w:GL.Float)
{
    fp_glRasterPos4f(x, y, z, w)
}

var fp_glRasterPos4fv:@convention(c) (UnsafePointer<GL.Float>?) -> () = load_glRasterPos4fv
func load_glRasterPos4fv(v:UnsafePointer<GL.Float>?)
{
    fp_glRasterPos4fv = unsafeBitCast(get_fp("glRasterPos4fv", support: [ss346, ss369]), to: Swift.type(of: fp_glRasterPos4fv))
    fp_glRasterPos4fv(v)
}
public
func glRasterPos4fv(v:UnsafePointer<GL.Float>?)
{
    fp_glRasterPos4fv(v)
}
public
func glRasterPos4fv(_ v:UnsafePointer<GL.Float>?)
{
    fp_glRasterPos4fv(v)
}

var fp_glRasterPos4i:@convention(c) (GL.Int, GL.Int, GL.Int, GL.Int) -> () = load_glRasterPos4i
func load_glRasterPos4i(x:GL.Int, y:GL.Int, z:GL.Int, w:GL.Int)
{
    fp_glRasterPos4i = unsafeBitCast(get_fp("glRasterPos4i", support: [ss346, ss369]), to: Swift.type(of: fp_glRasterPos4i))
    fp_glRasterPos4i(x, y, z, w)
}
public
func glRasterPos4i(x:GL.Int, y:GL.Int, z:GL.Int, w:GL.Int)
{
    fp_glRasterPos4i(x, y, z, w)
}
public
func glRasterPos4i(_ x:GL.Int, _ y:GL.Int, _ z:GL.Int, _ w:GL.Int)
{
    fp_glRasterPos4i(x, y, z, w)
}

var fp_glRasterPos4iv:@convention(c) (UnsafePointer<GL.Int>?) -> () = load_glRasterPos4iv
func load_glRasterPos4iv(v:UnsafePointer<GL.Int>?)
{
    fp_glRasterPos4iv = unsafeBitCast(get_fp("glRasterPos4iv", support: [ss346, ss369]), to: Swift.type(of: fp_glRasterPos4iv))
    fp_glRasterPos4iv(v)
}
public
func glRasterPos4iv(v:UnsafePointer<GL.Int>?)
{
    fp_glRasterPos4iv(v)
}
public
func glRasterPos4iv(_ v:UnsafePointer<GL.Int>?)
{
    fp_glRasterPos4iv(v)
}

var fp_glRasterPos4s:@convention(c) (GL.Short, GL.Short, GL.Short, GL.Short) -> () = load_glRasterPos4s
func load_glRasterPos4s(x:GL.Short, y:GL.Short, z:GL.Short, w:GL.Short)
{
    fp_glRasterPos4s = unsafeBitCast(get_fp("glRasterPos4s", support: [ss346, ss369]), to: Swift.type(of: fp_glRasterPos4s))
    fp_glRasterPos4s(x, y, z, w)
}
public
func glRasterPos4s(x:GL.Short, y:GL.Short, z:GL.Short, w:GL.Short)
{
    fp_glRasterPos4s(x, y, z, w)
}
public
func glRasterPos4s(_ x:GL.Short, _ y:GL.Short, _ z:GL.Short, _ w:GL.Short)
{
    fp_glRasterPos4s(x, y, z, w)
}

var fp_glRasterPos4sv:@convention(c) (UnsafePointer<GL.Short>?) -> () = load_glRasterPos4sv
func load_glRasterPos4sv(v:UnsafePointer<GL.Short>?)
{
    fp_glRasterPos4sv = unsafeBitCast(get_fp("glRasterPos4sv", support: [ss346, ss369]), to: Swift.type(of: fp_glRasterPos4sv))
    fp_glRasterPos4sv(v)
}
public
func glRasterPos4sv(v:UnsafePointer<GL.Short>?)
{
    fp_glRasterPos4sv(v)
}
public
func glRasterPos4sv(_ v:UnsafePointer<GL.Short>?)
{
    fp_glRasterPos4sv(v)
}

var fp_glRasterPos4xOES:@convention(c) (GL.Fixed, GL.Fixed, GL.Fixed, GL.Fixed) -> () = load_glRasterPos4xOES
func load_glRasterPos4xOES(x:GL.Fixed, y:GL.Fixed, z:GL.Fixed, w:GL.Fixed)
{
    fp_glRasterPos4xOES = unsafeBitCast(get_fp("glRasterPos4xOES", support: [ss292]), to: Swift.type(of: fp_glRasterPos4xOES))
    fp_glRasterPos4xOES(x, y, z, w)
}
public
func glRasterPos4xOES(x:GL.Fixed, y:GL.Fixed, z:GL.Fixed, w:GL.Fixed)
{
    fp_glRasterPos4xOES(x, y, z, w)
}
public
func glRasterPos4xOES(_ x:GL.Fixed, _ y:GL.Fixed, _ z:GL.Fixed, _ w:GL.Fixed)
{
    fp_glRasterPos4xOES(x, y, z, w)
}

var fp_glRasterPos4xvOES:@convention(c) (UnsafePointer<GL.Fixed>?) -> () = load_glRasterPos4xvOES
func load_glRasterPos4xvOES(coords:UnsafePointer<GL.Fixed>?)
{
    fp_glRasterPos4xvOES = unsafeBitCast(get_fp("glRasterPos4xvOES", support: [ss292]), to: Swift.type(of: fp_glRasterPos4xvOES))
    fp_glRasterPos4xvOES(coords)
}
public
func glRasterPos4xvOES(coords:UnsafePointer<GL.Fixed>?)
{
    fp_glRasterPos4xvOES(coords)
}
public
func glRasterPos4xvOES(_ coords:UnsafePointer<GL.Fixed>?)
{
    fp_glRasterPos4xvOES(coords)
}

var fp_glRasterSamplesEXT:@convention(c) (GL.UInt, GL.Bool) -> () = load_glRasterSamplesEXT
func load_glRasterSamplesEXT(samples:GL.UInt, fixedsamplelocations:GL.Bool)
{
    fp_glRasterSamplesEXT = unsafeBitCast(get_fp("glRasterSamplesEXT", support: [ss179, ss193, ss246]), to: Swift.type(of: fp_glRasterSamplesEXT))
    fp_glRasterSamplesEXT(samples, fixedsamplelocations)
}
public
func glRasterSamplesEXT(samples:GL.UInt, fixedsamplelocations:GL.Bool)
{
    fp_glRasterSamplesEXT(samples, fixedsamplelocations)
}
public
func glRasterSamplesEXT(_ samples:GL.UInt, _ fixedsamplelocations:GL.Bool)
{
    fp_glRasterSamplesEXT(samples, fixedsamplelocations)
}

var fp_glReadBuffer:@convention(c) (GL.Enum) -> () = load_glReadBuffer
func load_glReadBuffer(src:GL.Enum)
{
    fp_glReadBuffer = unsafeBitCast(get_fp("glReadBuffer", support: [ss346, ss366]), to: Swift.type(of: fp_glReadBuffer))
    fp_glReadBuffer(src)
}
public
func glReadBuffer(src:GL.Enum)
{
    fp_glReadBuffer(src)
}
public
func glReadBuffer(_ src:GL.Enum)
{
    fp_glReadBuffer(src)
}

var fp_glReadBufferIndexedEXT:@convention(c) (GL.Enum, GL.Int) -> () = load_glReadBufferIndexedEXT
func load_glReadBufferIndexedEXT(src:GL.Enum, index:GL.Int)
{
    fp_glReadBufferIndexedEXT = unsafeBitCast(get_fp("glReadBufferIndexedEXT", support: [ss170]), to: Swift.type(of: fp_glReadBufferIndexedEXT))
    fp_glReadBufferIndexedEXT(src, index)
}
public
func glReadBufferIndexedEXT(src:GL.Enum, index:GL.Int)
{
    fp_glReadBufferIndexedEXT(src, index)
}
public
func glReadBufferIndexedEXT(_ src:GL.Enum, _ index:GL.Int)
{
    fp_glReadBufferIndexedEXT(src, index)
}

var fp_glReadBufferNV:@convention(c) (GL.Enum) -> () = load_glReadBufferNV
func load_glReadBufferNV(mode:GL.Enum)
{
    fp_glReadBufferNV = unsafeBitCast(get_fp("glReadBufferNV", support: [ss265]), to: Swift.type(of: fp_glReadBufferNV))
    fp_glReadBufferNV(mode)
}
public
func glReadBufferNV(mode:GL.Enum)
{
    fp_glReadBufferNV(mode)
}
public
func glReadBufferNV(_ mode:GL.Enum)
{
    fp_glReadBufferNV(mode)
}

var fp_glReadInstrumentsSGIX:@convention(c) (GL.Int) -> () = load_glReadInstrumentsSGIX
func load_glReadInstrumentsSGIX(marker:GL.Int)
{
    fp_glReadInstrumentsSGIX = unsafeBitCast(get_fp("glReadInstrumentsSGIX", support: [ss334]), to: Swift.type(of: fp_glReadInstrumentsSGIX))
    fp_glReadInstrumentsSGIX(marker)
}
public
func glReadInstrumentsSGIX(marker:GL.Int)
{
    fp_glReadInstrumentsSGIX(marker)
}
public
func glReadInstrumentsSGIX(_ marker:GL.Int)
{
    fp_glReadInstrumentsSGIX(marker)
}

var fp_glReadPixels:@convention(c) (GL.Int, GL.Int, GL.Size, GL.Size, GL.Enum, GL.Enum, UnsafeMutableRawPointer?) -> () = load_glReadPixels
func load_glReadPixels(x:GL.Int, y:GL.Int, width:GL.Size, height:GL.Size, format:GL.Enum, type:GL.Enum, pixels:UnsafeMutableRawPointer?)
{
    fp_glReadPixels = unsafeBitCast(get_fp("glReadPixels", support: [ss346, ss365]), to: Swift.type(of: fp_glReadPixels))
    fp_glReadPixels(x, y, width, height, format, type, pixels)
}
public
func glReadPixels(x:GL.Int, y:GL.Int, width:GL.Size, height:GL.Size, format:GL.Enum, type:GL.Enum, pixels:UnsafeMutableRawPointer?)
{
    fp_glReadPixels(x, y, width, height, format, type, pixels)
}
public
func glReadPixels(_ x:GL.Int, _ y:GL.Int, _ width:GL.Size, _ height:GL.Size, _ format:GL.Enum, _ type:GL.Enum, _ pixels:UnsafeMutableRawPointer?)
{
    fp_glReadPixels(x, y, width, height, format, type, pixels)
}

var fp_glReadnPixels:@convention(c) (GL.Int, GL.Int, GL.Size, GL.Size, GL.Enum, GL.Enum, GL.Size, UnsafeMutableRawPointer?) -> () = load_glReadnPixels
func load_glReadnPixels(x:GL.Int, y:GL.Int, width:GL.Size, height:GL.Size, format:GL.Enum, type:GL.Enum, bufSize:GL.Size, data:UnsafeMutableRawPointer?)
{
    fp_glReadnPixels = unsafeBitCast(get_fp("glReadnPixels", support: [ss363, ss368, ss222]), to: Swift.type(of: fp_glReadnPixels))
    fp_glReadnPixels(x, y, width, height, format, type, bufSize, data)
}
public
func glReadnPixels(x:GL.Int, y:GL.Int, width:GL.Size, height:GL.Size, format:GL.Enum, type:GL.Enum, bufSize:GL.Size, data:UnsafeMutableRawPointer?)
{
    fp_glReadnPixels(x, y, width, height, format, type, bufSize, data)
}
public
func glReadnPixels(_ x:GL.Int, _ y:GL.Int, _ width:GL.Size, _ height:GL.Size, _ format:GL.Enum, _ type:GL.Enum, _ bufSize:GL.Size, _ data:UnsafeMutableRawPointer?)
{
    fp_glReadnPixels(x, y, width, height, format, type, bufSize, data)
}

var fp_glReadnPixelsARB:@convention(c) (GL.Int, GL.Int, GL.Size, GL.Size, GL.Enum, GL.Enum, GL.Size, UnsafeMutableRawPointer?) -> () = load_glReadnPixelsARB
func load_glReadnPixelsARB(x:GL.Int, y:GL.Int, width:GL.Size, height:GL.Size, format:GL.Enum, type:GL.Enum, bufSize:GL.Size, data:UnsafeMutableRawPointer?)
{
    fp_glReadnPixelsARB = unsafeBitCast(get_fp("glReadnPixelsARB", support: [ss76]), to: Swift.type(of: fp_glReadnPixelsARB))
    fp_glReadnPixelsARB(x, y, width, height, format, type, bufSize, data)
}
public
func glReadnPixelsARB(x:GL.Int, y:GL.Int, width:GL.Size, height:GL.Size, format:GL.Enum, type:GL.Enum, bufSize:GL.Size, data:UnsafeMutableRawPointer?)
{
    fp_glReadnPixelsARB(x, y, width, height, format, type, bufSize, data)
}
public
func glReadnPixelsARB(_ x:GL.Int, _ y:GL.Int, _ width:GL.Size, _ height:GL.Size, _ format:GL.Enum, _ type:GL.Enum, _ bufSize:GL.Size, _ data:UnsafeMutableRawPointer?)
{
    fp_glReadnPixelsARB(x, y, width, height, format, type, bufSize, data)
}

var fp_glReadnPixelsEXT:@convention(c) (GL.Int, GL.Int, GL.Size, GL.Size, GL.Enum, GL.Enum, GL.Size, UnsafeMutableRawPointer?) -> () = load_glReadnPixelsEXT
func load_glReadnPixelsEXT(x:GL.Int, y:GL.Int, width:GL.Size, height:GL.Size, format:GL.Enum, type:GL.Enum, bufSize:GL.Size, data:UnsafeMutableRawPointer?)
{
    fp_glReadnPixelsEXT = unsafeBitCast(get_fp("glReadnPixelsEXT", support: [ss180]), to: Swift.type(of: fp_glReadnPixelsEXT))
    fp_glReadnPixelsEXT(x, y, width, height, format, type, bufSize, data)
}
public
func glReadnPixelsEXT(x:GL.Int, y:GL.Int, width:GL.Size, height:GL.Size, format:GL.Enum, type:GL.Enum, bufSize:GL.Size, data:UnsafeMutableRawPointer?)
{
    fp_glReadnPixelsEXT(x, y, width, height, format, type, bufSize, data)
}
public
func glReadnPixelsEXT(_ x:GL.Int, _ y:GL.Int, _ width:GL.Size, _ height:GL.Size, _ format:GL.Enum, _ type:GL.Enum, _ bufSize:GL.Size, _ data:UnsafeMutableRawPointer?)
{
    fp_glReadnPixelsEXT(x, y, width, height, format, type, bufSize, data)
}

var fp_glReadnPixelsKHR:@convention(c) (GL.Int, GL.Int, GL.Size, GL.Size, GL.Enum, GL.Enum, GL.Size, UnsafeMutableRawPointer?) -> () = load_glReadnPixelsKHR
func load_glReadnPixelsKHR(x:GL.Int, y:GL.Int, width:GL.Size, height:GL.Size, format:GL.Enum, type:GL.Enum, bufSize:GL.Size, data:UnsafeMutableRawPointer?)
{
    fp_glReadnPixelsKHR = unsafeBitCast(get_fp("glReadnPixelsKHR", support: [ss222]), to: Swift.type(of: fp_glReadnPixelsKHR))
    fp_glReadnPixelsKHR(x, y, width, height, format, type, bufSize, data)
}
public
func glReadnPixelsKHR(x:GL.Int, y:GL.Int, width:GL.Size, height:GL.Size, format:GL.Enum, type:GL.Enum, bufSize:GL.Size, data:UnsafeMutableRawPointer?)
{
    fp_glReadnPixelsKHR(x, y, width, height, format, type, bufSize, data)
}
public
func glReadnPixelsKHR(_ x:GL.Int, _ y:GL.Int, _ width:GL.Size, _ height:GL.Size, _ format:GL.Enum, _ type:GL.Enum, _ bufSize:GL.Size, _ data:UnsafeMutableRawPointer?)
{
    fp_glReadnPixelsKHR(x, y, width, height, format, type, bufSize, data)
}

var fp_glRectd:@convention(c) (GL.Double, GL.Double, GL.Double, GL.Double) -> () = load_glRectd
func load_glRectd(x1:GL.Double, y1:GL.Double, x2:GL.Double, y2:GL.Double)
{
    fp_glRectd = unsafeBitCast(get_fp("glRectd", support: [ss346, ss369]), to: Swift.type(of: fp_glRectd))
    fp_glRectd(x1, y1, x2, y2)
}
public
func glRectd(x1:GL.Double, y1:GL.Double, x2:GL.Double, y2:GL.Double)
{
    fp_glRectd(x1, y1, x2, y2)
}
public
func glRectd(_ x1:GL.Double, _ y1:GL.Double, _ x2:GL.Double, _ y2:GL.Double)
{
    fp_glRectd(x1, y1, x2, y2)
}

var fp_glRectdv:@convention(c) (UnsafePointer<GL.Double>?, UnsafePointer<GL.Double>?) -> () = load_glRectdv
func load_glRectdv(v1:UnsafePointer<GL.Double>?, v2:UnsafePointer<GL.Double>?)
{
    fp_glRectdv = unsafeBitCast(get_fp("glRectdv", support: [ss346, ss369]), to: Swift.type(of: fp_glRectdv))
    fp_glRectdv(v1, v2)
}
public
func glRectdv(v1:UnsafePointer<GL.Double>?, v2:UnsafePointer<GL.Double>?)
{
    fp_glRectdv(v1, v2)
}
public
func glRectdv(_ v1:UnsafePointer<GL.Double>?, _ v2:UnsafePointer<GL.Double>?)
{
    fp_glRectdv(v1, v2)
}

var fp_glRectf:@convention(c) (GL.Float, GL.Float, GL.Float, GL.Float) -> () = load_glRectf
func load_glRectf(x1:GL.Float, y1:GL.Float, x2:GL.Float, y2:GL.Float)
{
    fp_glRectf = unsafeBitCast(get_fp("glRectf", support: [ss346, ss369]), to: Swift.type(of: fp_glRectf))
    fp_glRectf(x1, y1, x2, y2)
}
public
func glRectf(x1:GL.Float, y1:GL.Float, x2:GL.Float, y2:GL.Float)
{
    fp_glRectf(x1, y1, x2, y2)
}
public
func glRectf(_ x1:GL.Float, _ y1:GL.Float, _ x2:GL.Float, _ y2:GL.Float)
{
    fp_glRectf(x1, y1, x2, y2)
}

var fp_glRectfv:@convention(c) (UnsafePointer<GL.Float>?, UnsafePointer<GL.Float>?) -> () = load_glRectfv
func load_glRectfv(v1:UnsafePointer<GL.Float>?, v2:UnsafePointer<GL.Float>?)
{
    fp_glRectfv = unsafeBitCast(get_fp("glRectfv", support: [ss346, ss369]), to: Swift.type(of: fp_glRectfv))
    fp_glRectfv(v1, v2)
}
public
func glRectfv(v1:UnsafePointer<GL.Float>?, v2:UnsafePointer<GL.Float>?)
{
    fp_glRectfv(v1, v2)
}
public
func glRectfv(_ v1:UnsafePointer<GL.Float>?, _ v2:UnsafePointer<GL.Float>?)
{
    fp_glRectfv(v1, v2)
}

var fp_glRecti:@convention(c) (GL.Int, GL.Int, GL.Int, GL.Int) -> () = load_glRecti
func load_glRecti(x1:GL.Int, y1:GL.Int, x2:GL.Int, y2:GL.Int)
{
    fp_glRecti = unsafeBitCast(get_fp("glRecti", support: [ss346, ss369]), to: Swift.type(of: fp_glRecti))
    fp_glRecti(x1, y1, x2, y2)
}
public
func glRecti(x1:GL.Int, y1:GL.Int, x2:GL.Int, y2:GL.Int)
{
    fp_glRecti(x1, y1, x2, y2)
}
public
func glRecti(_ x1:GL.Int, _ y1:GL.Int, _ x2:GL.Int, _ y2:GL.Int)
{
    fp_glRecti(x1, y1, x2, y2)
}

var fp_glRectiv:@convention(c) (UnsafePointer<GL.Int>?, UnsafePointer<GL.Int>?) -> () = load_glRectiv
func load_glRectiv(v1:UnsafePointer<GL.Int>?, v2:UnsafePointer<GL.Int>?)
{
    fp_glRectiv = unsafeBitCast(get_fp("glRectiv", support: [ss346, ss369]), to: Swift.type(of: fp_glRectiv))
    fp_glRectiv(v1, v2)
}
public
func glRectiv(v1:UnsafePointer<GL.Int>?, v2:UnsafePointer<GL.Int>?)
{
    fp_glRectiv(v1, v2)
}
public
func glRectiv(_ v1:UnsafePointer<GL.Int>?, _ v2:UnsafePointer<GL.Int>?)
{
    fp_glRectiv(v1, v2)
}

var fp_glRects:@convention(c) (GL.Short, GL.Short, GL.Short, GL.Short) -> () = load_glRects
func load_glRects(x1:GL.Short, y1:GL.Short, x2:GL.Short, y2:GL.Short)
{
    fp_glRects = unsafeBitCast(get_fp("glRects", support: [ss346, ss369]), to: Swift.type(of: fp_glRects))
    fp_glRects(x1, y1, x2, y2)
}
public
func glRects(x1:GL.Short, y1:GL.Short, x2:GL.Short, y2:GL.Short)
{
    fp_glRects(x1, y1, x2, y2)
}
public
func glRects(_ x1:GL.Short, _ y1:GL.Short, _ x2:GL.Short, _ y2:GL.Short)
{
    fp_glRects(x1, y1, x2, y2)
}

var fp_glRectsv:@convention(c) (UnsafePointer<GL.Short>?, UnsafePointer<GL.Short>?) -> () = load_glRectsv
func load_glRectsv(v1:UnsafePointer<GL.Short>?, v2:UnsafePointer<GL.Short>?)
{
    fp_glRectsv = unsafeBitCast(get_fp("glRectsv", support: [ss346, ss369]), to: Swift.type(of: fp_glRectsv))
    fp_glRectsv(v1, v2)
}
public
func glRectsv(v1:UnsafePointer<GL.Short>?, v2:UnsafePointer<GL.Short>?)
{
    fp_glRectsv(v1, v2)
}
public
func glRectsv(_ v1:UnsafePointer<GL.Short>?, _ v2:UnsafePointer<GL.Short>?)
{
    fp_glRectsv(v1, v2)
}

var fp_glRectxOES:@convention(c) (GL.Fixed, GL.Fixed, GL.Fixed, GL.Fixed) -> () = load_glRectxOES
func load_glRectxOES(x1:GL.Fixed, y1:GL.Fixed, x2:GL.Fixed, y2:GL.Fixed)
{
    fp_glRectxOES = unsafeBitCast(get_fp("glRectxOES", support: [ss292]), to: Swift.type(of: fp_glRectxOES))
    fp_glRectxOES(x1, y1, x2, y2)
}
public
func glRectxOES(x1:GL.Fixed, y1:GL.Fixed, x2:GL.Fixed, y2:GL.Fixed)
{
    fp_glRectxOES(x1, y1, x2, y2)
}
public
func glRectxOES(_ x1:GL.Fixed, _ y1:GL.Fixed, _ x2:GL.Fixed, _ y2:GL.Fixed)
{
    fp_glRectxOES(x1, y1, x2, y2)
}

var fp_glRectxvOES:@convention(c) (UnsafePointer<GL.Fixed>?, UnsafePointer<GL.Fixed>?) -> () = load_glRectxvOES
func load_glRectxvOES(v1:UnsafePointer<GL.Fixed>?, v2:UnsafePointer<GL.Fixed>?)
{
    fp_glRectxvOES = unsafeBitCast(get_fp("glRectxvOES", support: [ss292]), to: Swift.type(of: fp_glRectxvOES))
    fp_glRectxvOES(v1, v2)
}
public
func glRectxvOES(v1:UnsafePointer<GL.Fixed>?, v2:UnsafePointer<GL.Fixed>?)
{
    fp_glRectxvOES(v1, v2)
}
public
func glRectxvOES(_ v1:UnsafePointer<GL.Fixed>?, _ v2:UnsafePointer<GL.Fixed>?)
{
    fp_glRectxvOES(v1, v2)
}

var fp_glReferencePlaneSGIX:@convention(c) (UnsafePointer<GL.Double>?) -> () = load_glReferencePlaneSGIX
func load_glReferencePlaneSGIX(equation:UnsafePointer<GL.Double>?)
{
    fp_glReferencePlaneSGIX = unsafeBitCast(get_fp("glReferencePlaneSGIX", support: [ss338]), to: Swift.type(of: fp_glReferencePlaneSGIX))
    fp_glReferencePlaneSGIX(equation)
}
public
func glReferencePlaneSGIX(equation:UnsafePointer<GL.Double>?)
{
    fp_glReferencePlaneSGIX(equation)
}
public
func glReferencePlaneSGIX(_ equation:UnsafePointer<GL.Double>?)
{
    fp_glReferencePlaneSGIX(equation)
}

var fp_glReleaseShaderCompiler:@convention(c) () -> () = load_glReleaseShaderCompiler
func load_glReleaseShaderCompiler()
{
    fp_glReleaseShaderCompiler = unsafeBitCast(get_fp("glReleaseShaderCompiler", support: [ss359, ss365, ss48]), to: Swift.type(of: fp_glReleaseShaderCompiler))
    fp_glReleaseShaderCompiler()
}
public
func glReleaseShaderCompiler()
{
    fp_glReleaseShaderCompiler()
}

var fp_glRenderMode:@convention(c) (GL.Enum) -> GL.Int = load_glRenderMode
func load_glRenderMode(mode:GL.Enum) -> GL.Int
{
    fp_glRenderMode = unsafeBitCast(get_fp("glRenderMode", support: [ss346, ss369]), to: Swift.type(of: fp_glRenderMode))
    return fp_glRenderMode(mode)
}
public
func glRenderMode(mode:GL.Enum) -> GL.Int
{
    return fp_glRenderMode(mode)
}
public
func glRenderMode(_ mode:GL.Enum) -> GL.Int
{
    return fp_glRenderMode(mode)
}

var fp_glRenderbufferStorage:@convention(c) (GL.Enum, GL.Enum, GL.Size, GL.Size) -> () = load_glRenderbufferStorage
func load_glRenderbufferStorage(target:GL.Enum, internalformat:GL.Enum, width:GL.Size, height:GL.Size)
{
    fp_glRenderbufferStorage = unsafeBitCast(get_fp("glRenderbufferStorage", support: [ss354, ss365, ss53]), to: Swift.type(of: fp_glRenderbufferStorage))
    fp_glRenderbufferStorage(target, internalformat, width, height)
}
public
func glRenderbufferStorage(target:GL.Enum, internalformat:GL.Enum, width:GL.Size, height:GL.Size)
{
    fp_glRenderbufferStorage(target, internalformat, width, height)
}
public
func glRenderbufferStorage(_ target:GL.Enum, _ internalformat:GL.Enum, _ width:GL.Size, _ height:GL.Size)
{
    fp_glRenderbufferStorage(target, internalformat, width, height)
}

var fp_glRenderbufferStorageEXT:@convention(c) (GL.Enum, GL.Enum, GL.Size, GL.Size) -> () = load_glRenderbufferStorageEXT
func load_glRenderbufferStorageEXT(target:GL.Enum, internalformat:GL.Enum, width:GL.Size, height:GL.Size)
{
    fp_glRenderbufferStorageEXT = unsafeBitCast(get_fp("glRenderbufferStorageEXT", support: [ss155]), to: Swift.type(of: fp_glRenderbufferStorageEXT))
    fp_glRenderbufferStorageEXT(target, internalformat, width, height)
}
public
func glRenderbufferStorageEXT(target:GL.Enum, internalformat:GL.Enum, width:GL.Size, height:GL.Size)
{
    fp_glRenderbufferStorageEXT(target, internalformat, width, height)
}
public
func glRenderbufferStorageEXT(_ target:GL.Enum, _ internalformat:GL.Enum, _ width:GL.Size, _ height:GL.Size)
{
    fp_glRenderbufferStorageEXT(target, internalformat, width, height)
}

var fp_glRenderbufferStorageMultisample:@convention(c) (GL.Enum, GL.Size, GL.Enum, GL.Size, GL.Size) -> () = load_glRenderbufferStorageMultisample
func load_glRenderbufferStorageMultisample(target:GL.Enum, samples:GL.Size, internalformat:GL.Enum, width:GL.Size, height:GL.Size)
{
    fp_glRenderbufferStorageMultisample = unsafeBitCast(get_fp("glRenderbufferStorageMultisample", support: [ss354, ss366, ss53]), to: Swift.type(of: fp_glRenderbufferStorageMultisample))
    fp_glRenderbufferStorageMultisample(target, samples, internalformat, width, height)
}
public
func glRenderbufferStorageMultisample(target:GL.Enum, samples:GL.Size, internalformat:GL.Enum, width:GL.Size, height:GL.Size)
{
    fp_glRenderbufferStorageMultisample(target, samples, internalformat, width, height)
}
public
func glRenderbufferStorageMultisample(_ target:GL.Enum, _ samples:GL.Size, _ internalformat:GL.Enum, _ width:GL.Size, _ height:GL.Size)
{
    fp_glRenderbufferStorageMultisample(target, samples, internalformat, width, height)
}

var fp_glRenderbufferStorageMultisampleANGLE:@convention(c) (GL.Enum, GL.Size, GL.Enum, GL.Size, GL.Size) -> () = load_glRenderbufferStorageMultisampleANGLE
func load_glRenderbufferStorageMultisampleANGLE(target:GL.Enum, samples:GL.Size, internalformat:GL.Enum, width:GL.Size, height:GL.Size)
{
    fp_glRenderbufferStorageMultisampleANGLE = unsafeBitCast(get_fp("glRenderbufferStorageMultisampleANGLE", support: [ss14]), to: Swift.type(of: fp_glRenderbufferStorageMultisampleANGLE))
    fp_glRenderbufferStorageMultisampleANGLE(target, samples, internalformat, width, height)
}
public
func glRenderbufferStorageMultisampleANGLE(target:GL.Enum, samples:GL.Size, internalformat:GL.Enum, width:GL.Size, height:GL.Size)
{
    fp_glRenderbufferStorageMultisampleANGLE(target, samples, internalformat, width, height)
}
public
func glRenderbufferStorageMultisampleANGLE(_ target:GL.Enum, _ samples:GL.Size, _ internalformat:GL.Enum, _ width:GL.Size, _ height:GL.Size)
{
    fp_glRenderbufferStorageMultisampleANGLE(target, samples, internalformat, width, height)
}

var fp_glRenderbufferStorageMultisampleAPPLE:@convention(c) (GL.Enum, GL.Size, GL.Enum, GL.Size, GL.Size) -> () = load_glRenderbufferStorageMultisampleAPPLE
func load_glRenderbufferStorageMultisampleAPPLE(target:GL.Enum, samples:GL.Size, internalformat:GL.Enum, width:GL.Size, height:GL.Size)
{
    fp_glRenderbufferStorageMultisampleAPPLE = unsafeBitCast(get_fp("glRenderbufferStorageMultisampleAPPLE", support: [ss21]), to: Swift.type(of: fp_glRenderbufferStorageMultisampleAPPLE))
    fp_glRenderbufferStorageMultisampleAPPLE(target, samples, internalformat, width, height)
}
public
func glRenderbufferStorageMultisampleAPPLE(target:GL.Enum, samples:GL.Size, internalformat:GL.Enum, width:GL.Size, height:GL.Size)
{
    fp_glRenderbufferStorageMultisampleAPPLE(target, samples, internalformat, width, height)
}
public
func glRenderbufferStorageMultisampleAPPLE(_ target:GL.Enum, _ samples:GL.Size, _ internalformat:GL.Enum, _ width:GL.Size, _ height:GL.Size)
{
    fp_glRenderbufferStorageMultisampleAPPLE(target, samples, internalformat, width, height)
}

var fp_glRenderbufferStorageMultisampleCoverageNV:@convention(c) (GL.Enum, GL.Size, GL.Size, GL.Enum, GL.Size, GL.Size) -> () = load_glRenderbufferStorageMultisampleCoverageNV
func load_glRenderbufferStorageMultisampleCoverageNV(target:GL.Enum, coverageSamples:GL.Size, colorSamples:GL.Size, internalformat:GL.Enum, width:GL.Size, height:GL.Size)
{
    fp_glRenderbufferStorageMultisampleCoverageNV = unsafeBitCast(get_fp("glRenderbufferStorageMultisampleCoverageNV", support: [ss247]), to: Swift.type(of: fp_glRenderbufferStorageMultisampleCoverageNV))
    fp_glRenderbufferStorageMultisampleCoverageNV(target, coverageSamples, colorSamples, internalformat, width, height)
}
public
func glRenderbufferStorageMultisampleCoverageNV(target:GL.Enum, coverageSamples:GL.Size, colorSamples:GL.Size, internalformat:GL.Enum, width:GL.Size, height:GL.Size)
{
    fp_glRenderbufferStorageMultisampleCoverageNV(target, coverageSamples, colorSamples, internalformat, width, height)
}
public
func glRenderbufferStorageMultisampleCoverageNV(_ target:GL.Enum, _ coverageSamples:GL.Size, _ colorSamples:GL.Size, _ internalformat:GL.Enum, _ width:GL.Size, _ height:GL.Size)
{
    fp_glRenderbufferStorageMultisampleCoverageNV(target, coverageSamples, colorSamples, internalformat, width, height)
}

var fp_glRenderbufferStorageMultisampleEXT:@convention(c) (GL.Enum, GL.Size, GL.Enum, GL.Size, GL.Size) -> () = load_glRenderbufferStorageMultisampleEXT
func load_glRenderbufferStorageMultisampleEXT(target:GL.Enum, samples:GL.Size, internalformat:GL.Enum, width:GL.Size, height:GL.Size)
{
    fp_glRenderbufferStorageMultisampleEXT = unsafeBitCast(get_fp("glRenderbufferStorageMultisampleEXT", support: [ss154, ss169]), to: Swift.type(of: fp_glRenderbufferStorageMultisampleEXT))
    fp_glRenderbufferStorageMultisampleEXT(target, samples, internalformat, width, height)
}
public
func glRenderbufferStorageMultisampleEXT(target:GL.Enum, samples:GL.Size, internalformat:GL.Enum, width:GL.Size, height:GL.Size)
{
    fp_glRenderbufferStorageMultisampleEXT(target, samples, internalformat, width, height)
}
public
func glRenderbufferStorageMultisampleEXT(_ target:GL.Enum, _ samples:GL.Size, _ internalformat:GL.Enum, _ width:GL.Size, _ height:GL.Size)
{
    fp_glRenderbufferStorageMultisampleEXT(target, samples, internalformat, width, height)
}

var fp_glRenderbufferStorageMultisampleIMG:@convention(c) (GL.Enum, GL.Size, GL.Enum, GL.Size, GL.Size) -> () = load_glRenderbufferStorageMultisampleIMG
func load_glRenderbufferStorageMultisampleIMG(target:GL.Enum, samples:GL.Size, internalformat:GL.Enum, width:GL.Size, height:GL.Size)
{
    fp_glRenderbufferStorageMultisampleIMG = unsafeBitCast(get_fp("glRenderbufferStorageMultisampleIMG", support: [ss213]), to: Swift.type(of: fp_glRenderbufferStorageMultisampleIMG))
    fp_glRenderbufferStorageMultisampleIMG(target, samples, internalformat, width, height)
}
public
func glRenderbufferStorageMultisampleIMG(target:GL.Enum, samples:GL.Size, internalformat:GL.Enum, width:GL.Size, height:GL.Size)
{
    fp_glRenderbufferStorageMultisampleIMG(target, samples, internalformat, width, height)
}
public
func glRenderbufferStorageMultisampleIMG(_ target:GL.Enum, _ samples:GL.Size, _ internalformat:GL.Enum, _ width:GL.Size, _ height:GL.Size)
{
    fp_glRenderbufferStorageMultisampleIMG(target, samples, internalformat, width, height)
}

var fp_glRenderbufferStorageMultisampleNV:@convention(c) (GL.Enum, GL.Size, GL.Enum, GL.Size, GL.Size) -> () = load_glRenderbufferStorageMultisampleNV
func load_glRenderbufferStorageMultisampleNV(target:GL.Enum, samples:GL.Size, internalformat:GL.Enum, width:GL.Size, height:GL.Size)
{
    fp_glRenderbufferStorageMultisampleNV = unsafeBitCast(get_fp("glRenderbufferStorageMultisampleNV", support: [ss248]), to: Swift.type(of: fp_glRenderbufferStorageMultisampleNV))
    fp_glRenderbufferStorageMultisampleNV(target, samples, internalformat, width, height)
}
public
func glRenderbufferStorageMultisampleNV(target:GL.Enum, samples:GL.Size, internalformat:GL.Enum, width:GL.Size, height:GL.Size)
{
    fp_glRenderbufferStorageMultisampleNV(target, samples, internalformat, width, height)
}
public
func glRenderbufferStorageMultisampleNV(_ target:GL.Enum, _ samples:GL.Size, _ internalformat:GL.Enum, _ width:GL.Size, _ height:GL.Size)
{
    fp_glRenderbufferStorageMultisampleNV(target, samples, internalformat, width, height)
}

var fp_glRenderbufferStorageOES:@convention(c) (GL.Enum, GL.Enum, GL.Size, GL.Size) -> () = load_glRenderbufferStorageOES
func load_glRenderbufferStorageOES(target:GL.Enum, internalformat:GL.Enum, width:GL.Size, height:GL.Size)
{
    fp_glRenderbufferStorageOES = unsafeBitCast(get_fp("glRenderbufferStorageOES", support: [ss293]), to: Swift.type(of: fp_glRenderbufferStorageOES))
    fp_glRenderbufferStorageOES(target, internalformat, width, height)
}
public
func glRenderbufferStorageOES(target:GL.Enum, internalformat:GL.Enum, width:GL.Size, height:GL.Size)
{
    fp_glRenderbufferStorageOES(target, internalformat, width, height)
}
public
func glRenderbufferStorageOES(_ target:GL.Enum, _ internalformat:GL.Enum, _ width:GL.Size, _ height:GL.Size)
{
    fp_glRenderbufferStorageOES(target, internalformat, width, height)
}

var fp_glReplacementCodePointerSUN:@convention(c) (GL.Enum, GL.Size, UnsafeMutablePointer<UnsafeRawPointer?>?) -> () = load_glReplacementCodePointerSUN
func load_glReplacementCodePointerSUN(type:GL.Enum, stride:GL.Size, pointer:UnsafeMutablePointer<UnsafeRawPointer?>?)
{
    fp_glReplacementCodePointerSUN = unsafeBitCast(get_fp("glReplacementCodePointerSUN", support: [ss343]), to: Swift.type(of: fp_glReplacementCodePointerSUN))
    fp_glReplacementCodePointerSUN(type, stride, pointer)
}
public
func glReplacementCodePointerSUN(type:GL.Enum, stride:GL.Size, pointer:UnsafeMutablePointer<UnsafeRawPointer?>?)
{
    fp_glReplacementCodePointerSUN(type, stride, pointer)
}
public
func glReplacementCodePointerSUN(_ type:GL.Enum, _ stride:GL.Size, _ pointer:UnsafeMutablePointer<UnsafeRawPointer?>?)
{
    fp_glReplacementCodePointerSUN(type, stride, pointer)
}

var fp_glReplacementCodeubSUN:@convention(c) (GL.UByte) -> () = load_glReplacementCodeubSUN
func load_glReplacementCodeubSUN(code:GL.UByte)
{
    fp_glReplacementCodeubSUN = unsafeBitCast(get_fp("glReplacementCodeubSUN", support: [ss343]), to: Swift.type(of: fp_glReplacementCodeubSUN))
    fp_glReplacementCodeubSUN(code)
}
public
func glReplacementCodeubSUN(code:GL.UByte)
{
    fp_glReplacementCodeubSUN(code)
}
public
func glReplacementCodeubSUN(_ code:GL.UByte)
{
    fp_glReplacementCodeubSUN(code)
}

var fp_glReplacementCodeubvSUN:@convention(c) (UnsafePointer<GL.UByte>?) -> () = load_glReplacementCodeubvSUN
func load_glReplacementCodeubvSUN(code:UnsafePointer<GL.UByte>?)
{
    fp_glReplacementCodeubvSUN = unsafeBitCast(get_fp("glReplacementCodeubvSUN", support: [ss343]), to: Swift.type(of: fp_glReplacementCodeubvSUN))
    fp_glReplacementCodeubvSUN(code)
}
public
func glReplacementCodeubvSUN(code:UnsafePointer<GL.UByte>?)
{
    fp_glReplacementCodeubvSUN(code)
}
public
func glReplacementCodeubvSUN(_ code:UnsafePointer<GL.UByte>?)
{
    fp_glReplacementCodeubvSUN(code)
}

var fp_glReplacementCodeuiColor3fVertex3fSUN:@convention(c) (GL.UInt, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float) -> () = load_glReplacementCodeuiColor3fVertex3fSUN
func load_glReplacementCodeuiColor3fVertex3fSUN(rc:GL.UInt, r:GL.Float, g:GL.Float, b:GL.Float, x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glReplacementCodeuiColor3fVertex3fSUN = unsafeBitCast(get_fp("glReplacementCodeuiColor3fVertex3fSUN", support: [ss344]), to: Swift.type(of: fp_glReplacementCodeuiColor3fVertex3fSUN))
    fp_glReplacementCodeuiColor3fVertex3fSUN(rc, r, g, b, x, y, z)
}
public
func glReplacementCodeuiColor3fVertex3fSUN(rc:GL.UInt, r:GL.Float, g:GL.Float, b:GL.Float, x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glReplacementCodeuiColor3fVertex3fSUN(rc, r, g, b, x, y, z)
}
public
func glReplacementCodeuiColor3fVertex3fSUN(_ rc:GL.UInt, _ r:GL.Float, _ g:GL.Float, _ b:GL.Float, _ x:GL.Float, _ y:GL.Float, _ z:GL.Float)
{
    fp_glReplacementCodeuiColor3fVertex3fSUN(rc, r, g, b, x, y, z)
}

var fp_glReplacementCodeuiColor3fVertex3fvSUN:@convention(c) (UnsafePointer<GL.UInt>?, UnsafePointer<GL.Float>?, UnsafePointer<GL.Float>?) -> () = load_glReplacementCodeuiColor3fVertex3fvSUN
func load_glReplacementCodeuiColor3fVertex3fvSUN(rc:UnsafePointer<GL.UInt>?, c:UnsafePointer<GL.Float>?, v:UnsafePointer<GL.Float>?)
{
    fp_glReplacementCodeuiColor3fVertex3fvSUN = unsafeBitCast(get_fp("glReplacementCodeuiColor3fVertex3fvSUN", support: [ss344]), to: Swift.type(of: fp_glReplacementCodeuiColor3fVertex3fvSUN))
    fp_glReplacementCodeuiColor3fVertex3fvSUN(rc, c, v)
}
public
func glReplacementCodeuiColor3fVertex3fvSUN(rc:UnsafePointer<GL.UInt>?, c:UnsafePointer<GL.Float>?, v:UnsafePointer<GL.Float>?)
{
    fp_glReplacementCodeuiColor3fVertex3fvSUN(rc, c, v)
}
public
func glReplacementCodeuiColor3fVertex3fvSUN(_ rc:UnsafePointer<GL.UInt>?, _ c:UnsafePointer<GL.Float>?, _ v:UnsafePointer<GL.Float>?)
{
    fp_glReplacementCodeuiColor3fVertex3fvSUN(rc, c, v)
}

var fp_glReplacementCodeuiColor4fNormal3fVertex3fSUN:@convention(c) (GL.UInt, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float) -> () = load_glReplacementCodeuiColor4fNormal3fVertex3fSUN
func load_glReplacementCodeuiColor4fNormal3fVertex3fSUN(rc:GL.UInt, r:GL.Float, g:GL.Float, b:GL.Float, a:GL.Float, nx:GL.Float, ny:GL.Float, nz:GL.Float, x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glReplacementCodeuiColor4fNormal3fVertex3fSUN = unsafeBitCast(get_fp("glReplacementCodeuiColor4fNormal3fVertex3fSUN", support: [ss344]), to: Swift.type(of: fp_glReplacementCodeuiColor4fNormal3fVertex3fSUN))
    fp_glReplacementCodeuiColor4fNormal3fVertex3fSUN(rc, r, g, b, a, nx, ny, nz, x, y, z)
}
public
func glReplacementCodeuiColor4fNormal3fVertex3fSUN(rc:GL.UInt, r:GL.Float, g:GL.Float, b:GL.Float, a:GL.Float, nx:GL.Float, ny:GL.Float, nz:GL.Float, x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glReplacementCodeuiColor4fNormal3fVertex3fSUN(rc, r, g, b, a, nx, ny, nz, x, y, z)
}
public
func glReplacementCodeuiColor4fNormal3fVertex3fSUN(_ rc:GL.UInt, _ r:GL.Float, _ g:GL.Float, _ b:GL.Float, _ a:GL.Float, _ nx:GL.Float, _ ny:GL.Float, _ nz:GL.Float, _ x:GL.Float, _ y:GL.Float, _ z:GL.Float)
{
    fp_glReplacementCodeuiColor4fNormal3fVertex3fSUN(rc, r, g, b, a, nx, ny, nz, x, y, z)
}

var fp_glReplacementCodeuiColor4fNormal3fVertex3fvSUN:@convention(c) (UnsafePointer<GL.UInt>?, UnsafePointer<GL.Float>?, UnsafePointer<GL.Float>?, UnsafePointer<GL.Float>?) -> () = load_glReplacementCodeuiColor4fNormal3fVertex3fvSUN
func load_glReplacementCodeuiColor4fNormal3fVertex3fvSUN(rc:UnsafePointer<GL.UInt>?, c:UnsafePointer<GL.Float>?, n:UnsafePointer<GL.Float>?, v:UnsafePointer<GL.Float>?)
{
    fp_glReplacementCodeuiColor4fNormal3fVertex3fvSUN = unsafeBitCast(get_fp("glReplacementCodeuiColor4fNormal3fVertex3fvSUN", support: [ss344]), to: Swift.type(of: fp_glReplacementCodeuiColor4fNormal3fVertex3fvSUN))
    fp_glReplacementCodeuiColor4fNormal3fVertex3fvSUN(rc, c, n, v)
}
public
func glReplacementCodeuiColor4fNormal3fVertex3fvSUN(rc:UnsafePointer<GL.UInt>?, c:UnsafePointer<GL.Float>?, n:UnsafePointer<GL.Float>?, v:UnsafePointer<GL.Float>?)
{
    fp_glReplacementCodeuiColor4fNormal3fVertex3fvSUN(rc, c, n, v)
}
public
func glReplacementCodeuiColor4fNormal3fVertex3fvSUN(_ rc:UnsafePointer<GL.UInt>?, _ c:UnsafePointer<GL.Float>?, _ n:UnsafePointer<GL.Float>?, _ v:UnsafePointer<GL.Float>?)
{
    fp_glReplacementCodeuiColor4fNormal3fVertex3fvSUN(rc, c, n, v)
}

var fp_glReplacementCodeuiColor4ubVertex3fSUN:@convention(c) (GL.UInt, GL.UByte, GL.UByte, GL.UByte, GL.UByte, GL.Float, GL.Float, GL.Float) -> () = load_glReplacementCodeuiColor4ubVertex3fSUN
func load_glReplacementCodeuiColor4ubVertex3fSUN(rc:GL.UInt, r:GL.UByte, g:GL.UByte, b:GL.UByte, a:GL.UByte, x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glReplacementCodeuiColor4ubVertex3fSUN = unsafeBitCast(get_fp("glReplacementCodeuiColor4ubVertex3fSUN", support: [ss344]), to: Swift.type(of: fp_glReplacementCodeuiColor4ubVertex3fSUN))
    fp_glReplacementCodeuiColor4ubVertex3fSUN(rc, r, g, b, a, x, y, z)
}
public
func glReplacementCodeuiColor4ubVertex3fSUN(rc:GL.UInt, r:GL.UByte, g:GL.UByte, b:GL.UByte, a:GL.UByte, x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glReplacementCodeuiColor4ubVertex3fSUN(rc, r, g, b, a, x, y, z)
}
public
func glReplacementCodeuiColor4ubVertex3fSUN(_ rc:GL.UInt, _ r:GL.UByte, _ g:GL.UByte, _ b:GL.UByte, _ a:GL.UByte, _ x:GL.Float, _ y:GL.Float, _ z:GL.Float)
{
    fp_glReplacementCodeuiColor4ubVertex3fSUN(rc, r, g, b, a, x, y, z)
}

var fp_glReplacementCodeuiColor4ubVertex3fvSUN:@convention(c) (UnsafePointer<GL.UInt>?, UnsafePointer<GL.UByte>?, UnsafePointer<GL.Float>?) -> () = load_glReplacementCodeuiColor4ubVertex3fvSUN
func load_glReplacementCodeuiColor4ubVertex3fvSUN(rc:UnsafePointer<GL.UInt>?, c:UnsafePointer<GL.UByte>?, v:UnsafePointer<GL.Float>?)
{
    fp_glReplacementCodeuiColor4ubVertex3fvSUN = unsafeBitCast(get_fp("glReplacementCodeuiColor4ubVertex3fvSUN", support: [ss344]), to: Swift.type(of: fp_glReplacementCodeuiColor4ubVertex3fvSUN))
    fp_glReplacementCodeuiColor4ubVertex3fvSUN(rc, c, v)
}
public
func glReplacementCodeuiColor4ubVertex3fvSUN(rc:UnsafePointer<GL.UInt>?, c:UnsafePointer<GL.UByte>?, v:UnsafePointer<GL.Float>?)
{
    fp_glReplacementCodeuiColor4ubVertex3fvSUN(rc, c, v)
}
public
func glReplacementCodeuiColor4ubVertex3fvSUN(_ rc:UnsafePointer<GL.UInt>?, _ c:UnsafePointer<GL.UByte>?, _ v:UnsafePointer<GL.Float>?)
{
    fp_glReplacementCodeuiColor4ubVertex3fvSUN(rc, c, v)
}

var fp_glReplacementCodeuiNormal3fVertex3fSUN:@convention(c) (GL.UInt, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float) -> () = load_glReplacementCodeuiNormal3fVertex3fSUN
func load_glReplacementCodeuiNormal3fVertex3fSUN(rc:GL.UInt, nx:GL.Float, ny:GL.Float, nz:GL.Float, x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glReplacementCodeuiNormal3fVertex3fSUN = unsafeBitCast(get_fp("glReplacementCodeuiNormal3fVertex3fSUN", support: [ss344]), to: Swift.type(of: fp_glReplacementCodeuiNormal3fVertex3fSUN))
    fp_glReplacementCodeuiNormal3fVertex3fSUN(rc, nx, ny, nz, x, y, z)
}
public
func glReplacementCodeuiNormal3fVertex3fSUN(rc:GL.UInt, nx:GL.Float, ny:GL.Float, nz:GL.Float, x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glReplacementCodeuiNormal3fVertex3fSUN(rc, nx, ny, nz, x, y, z)
}
public
func glReplacementCodeuiNormal3fVertex3fSUN(_ rc:GL.UInt, _ nx:GL.Float, _ ny:GL.Float, _ nz:GL.Float, _ x:GL.Float, _ y:GL.Float, _ z:GL.Float)
{
    fp_glReplacementCodeuiNormal3fVertex3fSUN(rc, nx, ny, nz, x, y, z)
}

var fp_glReplacementCodeuiNormal3fVertex3fvSUN:@convention(c) (UnsafePointer<GL.UInt>?, UnsafePointer<GL.Float>?, UnsafePointer<GL.Float>?) -> () = load_glReplacementCodeuiNormal3fVertex3fvSUN
func load_glReplacementCodeuiNormal3fVertex3fvSUN(rc:UnsafePointer<GL.UInt>?, n:UnsafePointer<GL.Float>?, v:UnsafePointer<GL.Float>?)
{
    fp_glReplacementCodeuiNormal3fVertex3fvSUN = unsafeBitCast(get_fp("glReplacementCodeuiNormal3fVertex3fvSUN", support: [ss344]), to: Swift.type(of: fp_glReplacementCodeuiNormal3fVertex3fvSUN))
    fp_glReplacementCodeuiNormal3fVertex3fvSUN(rc, n, v)
}
public
func glReplacementCodeuiNormal3fVertex3fvSUN(rc:UnsafePointer<GL.UInt>?, n:UnsafePointer<GL.Float>?, v:UnsafePointer<GL.Float>?)
{
    fp_glReplacementCodeuiNormal3fVertex3fvSUN(rc, n, v)
}
public
func glReplacementCodeuiNormal3fVertex3fvSUN(_ rc:UnsafePointer<GL.UInt>?, _ n:UnsafePointer<GL.Float>?, _ v:UnsafePointer<GL.Float>?)
{
    fp_glReplacementCodeuiNormal3fVertex3fvSUN(rc, n, v)
}

var fp_glReplacementCodeuiSUN:@convention(c) (GL.UInt) -> () = load_glReplacementCodeuiSUN
func load_glReplacementCodeuiSUN(code:GL.UInt)
{
    fp_glReplacementCodeuiSUN = unsafeBitCast(get_fp("glReplacementCodeuiSUN", support: [ss343]), to: Swift.type(of: fp_glReplacementCodeuiSUN))
    fp_glReplacementCodeuiSUN(code)
}
public
func glReplacementCodeuiSUN(code:GL.UInt)
{
    fp_glReplacementCodeuiSUN(code)
}
public
func glReplacementCodeuiSUN(_ code:GL.UInt)
{
    fp_glReplacementCodeuiSUN(code)
}

var fp_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN:@convention(c) (GL.UInt, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float) -> () = load_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN
func load_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN(rc:GL.UInt, s:GL.Float, t:GL.Float, r:GL.Float, g:GL.Float, b:GL.Float, a:GL.Float, nx:GL.Float, ny:GL.Float, nz:GL.Float, x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN = unsafeBitCast(get_fp("glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN", support: [ss344]), to: Swift.type(of: fp_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN))
    fp_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN(rc, s, t, r, g, b, a, nx, ny, nz, x, y, z)
}
public
func glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN(rc:GL.UInt, s:GL.Float, t:GL.Float, r:GL.Float, g:GL.Float, b:GL.Float, a:GL.Float, nx:GL.Float, ny:GL.Float, nz:GL.Float, x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN(rc, s, t, r, g, b, a, nx, ny, nz, x, y, z)
}
public
func glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN(_ rc:GL.UInt, _ s:GL.Float, _ t:GL.Float, _ r:GL.Float, _ g:GL.Float, _ b:GL.Float, _ a:GL.Float, _ nx:GL.Float, _ ny:GL.Float, _ nz:GL.Float, _ x:GL.Float, _ y:GL.Float, _ z:GL.Float)
{
    fp_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN(rc, s, t, r, g, b, a, nx, ny, nz, x, y, z)
}

var fp_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN:@convention(c) (UnsafePointer<GL.UInt>?, UnsafePointer<GL.Float>?, UnsafePointer<GL.Float>?, UnsafePointer<GL.Float>?, UnsafePointer<GL.Float>?) -> () = load_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN
func load_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN(rc:UnsafePointer<GL.UInt>?, tc:UnsafePointer<GL.Float>?, c:UnsafePointer<GL.Float>?, n:UnsafePointer<GL.Float>?, v:UnsafePointer<GL.Float>?)
{
    fp_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN = unsafeBitCast(get_fp("glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN", support: [ss344]), to: Swift.type(of: fp_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN))
    fp_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN(rc, tc, c, n, v)
}
public
func glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN(rc:UnsafePointer<GL.UInt>?, tc:UnsafePointer<GL.Float>?, c:UnsafePointer<GL.Float>?, n:UnsafePointer<GL.Float>?, v:UnsafePointer<GL.Float>?)
{
    fp_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN(rc, tc, c, n, v)
}
public
func glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN(_ rc:UnsafePointer<GL.UInt>?, _ tc:UnsafePointer<GL.Float>?, _ c:UnsafePointer<GL.Float>?, _ n:UnsafePointer<GL.Float>?, _ v:UnsafePointer<GL.Float>?)
{
    fp_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN(rc, tc, c, n, v)
}

var fp_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN:@convention(c) (GL.UInt, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float) -> () = load_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN
func load_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN(rc:GL.UInt, s:GL.Float, t:GL.Float, nx:GL.Float, ny:GL.Float, nz:GL.Float, x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN = unsafeBitCast(get_fp("glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN", support: [ss344]), to: Swift.type(of: fp_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN))
    fp_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN(rc, s, t, nx, ny, nz, x, y, z)
}
public
func glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN(rc:GL.UInt, s:GL.Float, t:GL.Float, nx:GL.Float, ny:GL.Float, nz:GL.Float, x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN(rc, s, t, nx, ny, nz, x, y, z)
}
public
func glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN(_ rc:GL.UInt, _ s:GL.Float, _ t:GL.Float, _ nx:GL.Float, _ ny:GL.Float, _ nz:GL.Float, _ x:GL.Float, _ y:GL.Float, _ z:GL.Float)
{
    fp_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN(rc, s, t, nx, ny, nz, x, y, z)
}

var fp_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN:@convention(c) (UnsafePointer<GL.UInt>?, UnsafePointer<GL.Float>?, UnsafePointer<GL.Float>?, UnsafePointer<GL.Float>?) -> () = load_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN
func load_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN(rc:UnsafePointer<GL.UInt>?, tc:UnsafePointer<GL.Float>?, n:UnsafePointer<GL.Float>?, v:UnsafePointer<GL.Float>?)
{
    fp_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN = unsafeBitCast(get_fp("glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN", support: [ss344]), to: Swift.type(of: fp_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN))
    fp_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN(rc, tc, n, v)
}
public
func glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN(rc:UnsafePointer<GL.UInt>?, tc:UnsafePointer<GL.Float>?, n:UnsafePointer<GL.Float>?, v:UnsafePointer<GL.Float>?)
{
    fp_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN(rc, tc, n, v)
}
public
func glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN(_ rc:UnsafePointer<GL.UInt>?, _ tc:UnsafePointer<GL.Float>?, _ n:UnsafePointer<GL.Float>?, _ v:UnsafePointer<GL.Float>?)
{
    fp_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN(rc, tc, n, v)
}

var fp_glReplacementCodeuiTexCoord2fVertex3fSUN:@convention(c) (GL.UInt, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float) -> () = load_glReplacementCodeuiTexCoord2fVertex3fSUN
func load_glReplacementCodeuiTexCoord2fVertex3fSUN(rc:GL.UInt, s:GL.Float, t:GL.Float, x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glReplacementCodeuiTexCoord2fVertex3fSUN = unsafeBitCast(get_fp("glReplacementCodeuiTexCoord2fVertex3fSUN", support: [ss344]), to: Swift.type(of: fp_glReplacementCodeuiTexCoord2fVertex3fSUN))
    fp_glReplacementCodeuiTexCoord2fVertex3fSUN(rc, s, t, x, y, z)
}
public
func glReplacementCodeuiTexCoord2fVertex3fSUN(rc:GL.UInt, s:GL.Float, t:GL.Float, x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glReplacementCodeuiTexCoord2fVertex3fSUN(rc, s, t, x, y, z)
}
public
func glReplacementCodeuiTexCoord2fVertex3fSUN(_ rc:GL.UInt, _ s:GL.Float, _ t:GL.Float, _ x:GL.Float, _ y:GL.Float, _ z:GL.Float)
{
    fp_glReplacementCodeuiTexCoord2fVertex3fSUN(rc, s, t, x, y, z)
}

var fp_glReplacementCodeuiTexCoord2fVertex3fvSUN:@convention(c) (UnsafePointer<GL.UInt>?, UnsafePointer<GL.Float>?, UnsafePointer<GL.Float>?) -> () = load_glReplacementCodeuiTexCoord2fVertex3fvSUN
func load_glReplacementCodeuiTexCoord2fVertex3fvSUN(rc:UnsafePointer<GL.UInt>?, tc:UnsafePointer<GL.Float>?, v:UnsafePointer<GL.Float>?)
{
    fp_glReplacementCodeuiTexCoord2fVertex3fvSUN = unsafeBitCast(get_fp("glReplacementCodeuiTexCoord2fVertex3fvSUN", support: [ss344]), to: Swift.type(of: fp_glReplacementCodeuiTexCoord2fVertex3fvSUN))
    fp_glReplacementCodeuiTexCoord2fVertex3fvSUN(rc, tc, v)
}
public
func glReplacementCodeuiTexCoord2fVertex3fvSUN(rc:UnsafePointer<GL.UInt>?, tc:UnsafePointer<GL.Float>?, v:UnsafePointer<GL.Float>?)
{
    fp_glReplacementCodeuiTexCoord2fVertex3fvSUN(rc, tc, v)
}
public
func glReplacementCodeuiTexCoord2fVertex3fvSUN(_ rc:UnsafePointer<GL.UInt>?, _ tc:UnsafePointer<GL.Float>?, _ v:UnsafePointer<GL.Float>?)
{
    fp_glReplacementCodeuiTexCoord2fVertex3fvSUN(rc, tc, v)
}

var fp_glReplacementCodeuiVertex3fSUN:@convention(c) (GL.UInt, GL.Float, GL.Float, GL.Float) -> () = load_glReplacementCodeuiVertex3fSUN
func load_glReplacementCodeuiVertex3fSUN(rc:GL.UInt, x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glReplacementCodeuiVertex3fSUN = unsafeBitCast(get_fp("glReplacementCodeuiVertex3fSUN", support: [ss344]), to: Swift.type(of: fp_glReplacementCodeuiVertex3fSUN))
    fp_glReplacementCodeuiVertex3fSUN(rc, x, y, z)
}
public
func glReplacementCodeuiVertex3fSUN(rc:GL.UInt, x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glReplacementCodeuiVertex3fSUN(rc, x, y, z)
}
public
func glReplacementCodeuiVertex3fSUN(_ rc:GL.UInt, _ x:GL.Float, _ y:GL.Float, _ z:GL.Float)
{
    fp_glReplacementCodeuiVertex3fSUN(rc, x, y, z)
}

var fp_glReplacementCodeuiVertex3fvSUN:@convention(c) (UnsafePointer<GL.UInt>?, UnsafePointer<GL.Float>?) -> () = load_glReplacementCodeuiVertex3fvSUN
func load_glReplacementCodeuiVertex3fvSUN(rc:UnsafePointer<GL.UInt>?, v:UnsafePointer<GL.Float>?)
{
    fp_glReplacementCodeuiVertex3fvSUN = unsafeBitCast(get_fp("glReplacementCodeuiVertex3fvSUN", support: [ss344]), to: Swift.type(of: fp_glReplacementCodeuiVertex3fvSUN))
    fp_glReplacementCodeuiVertex3fvSUN(rc, v)
}
public
func glReplacementCodeuiVertex3fvSUN(rc:UnsafePointer<GL.UInt>?, v:UnsafePointer<GL.Float>?)
{
    fp_glReplacementCodeuiVertex3fvSUN(rc, v)
}
public
func glReplacementCodeuiVertex3fvSUN(_ rc:UnsafePointer<GL.UInt>?, _ v:UnsafePointer<GL.Float>?)
{
    fp_glReplacementCodeuiVertex3fvSUN(rc, v)
}

var fp_glReplacementCodeuivSUN:@convention(c) (UnsafePointer<GL.UInt>?) -> () = load_glReplacementCodeuivSUN
func load_glReplacementCodeuivSUN(code:UnsafePointer<GL.UInt>?)
{
    fp_glReplacementCodeuivSUN = unsafeBitCast(get_fp("glReplacementCodeuivSUN", support: [ss343]), to: Swift.type(of: fp_glReplacementCodeuivSUN))
    fp_glReplacementCodeuivSUN(code)
}
public
func glReplacementCodeuivSUN(code:UnsafePointer<GL.UInt>?)
{
    fp_glReplacementCodeuivSUN(code)
}
public
func glReplacementCodeuivSUN(_ code:UnsafePointer<GL.UInt>?)
{
    fp_glReplacementCodeuivSUN(code)
}

var fp_glReplacementCodeusSUN:@convention(c) (GL.UShort) -> () = load_glReplacementCodeusSUN
func load_glReplacementCodeusSUN(code:GL.UShort)
{
    fp_glReplacementCodeusSUN = unsafeBitCast(get_fp("glReplacementCodeusSUN", support: [ss343]), to: Swift.type(of: fp_glReplacementCodeusSUN))
    fp_glReplacementCodeusSUN(code)
}
public
func glReplacementCodeusSUN(code:GL.UShort)
{
    fp_glReplacementCodeusSUN(code)
}
public
func glReplacementCodeusSUN(_ code:GL.UShort)
{
    fp_glReplacementCodeusSUN(code)
}

var fp_glReplacementCodeusvSUN:@convention(c) (UnsafePointer<GL.UShort>?) -> () = load_glReplacementCodeusvSUN
func load_glReplacementCodeusvSUN(code:UnsafePointer<GL.UShort>?)
{
    fp_glReplacementCodeusvSUN = unsafeBitCast(get_fp("glReplacementCodeusvSUN", support: [ss343]), to: Swift.type(of: fp_glReplacementCodeusvSUN))
    fp_glReplacementCodeusvSUN(code)
}
public
func glReplacementCodeusvSUN(code:UnsafePointer<GL.UShort>?)
{
    fp_glReplacementCodeusvSUN(code)
}
public
func glReplacementCodeusvSUN(_ code:UnsafePointer<GL.UShort>?)
{
    fp_glReplacementCodeusvSUN(code)
}

var fp_glRequestResidentProgramsNV:@convention(c) (GL.Size, UnsafePointer<GL.UInt>?) -> () = load_glRequestResidentProgramsNV
func load_glRequestResidentProgramsNV(n:GL.Size, programs:UnsafePointer<GL.UInt>?)
{
    fp_glRequestResidentProgramsNV = unsafeBitCast(get_fp("glRequestResidentProgramsNV", support: [ss278]), to: Swift.type(of: fp_glRequestResidentProgramsNV))
    fp_glRequestResidentProgramsNV(n, programs)
}
public
func glRequestResidentProgramsNV(n:GL.Size, programs:UnsafePointer<GL.UInt>?)
{
    fp_glRequestResidentProgramsNV(n, programs)
}
public
func glRequestResidentProgramsNV(_ n:GL.Size, _ programs:UnsafePointer<GL.UInt>?)
{
    fp_glRequestResidentProgramsNV(n, programs)
}

var fp_glResetHistogram:@convention(c) (GL.Enum) -> () = load_glResetHistogram
func load_glResetHistogram(target:GL.Enum)
{
    fp_glResetHistogram = unsafeBitCast(get_fp("glResetHistogram", support: [ss59]), to: Swift.type(of: fp_glResetHistogram))
    fp_glResetHistogram(target)
}
public
func glResetHistogram(target:GL.Enum)
{
    fp_glResetHistogram(target)
}
public
func glResetHistogram(_ target:GL.Enum)
{
    fp_glResetHistogram(target)
}

var fp_glResetHistogramEXT:@convention(c) (GL.Enum) -> () = load_glResetHistogramEXT
func load_glResetHistogramEXT(target:GL.Enum)
{
    fp_glResetHistogramEXT = unsafeBitCast(get_fp("glResetHistogramEXT", support: [ss160]), to: Swift.type(of: fp_glResetHistogramEXT))
    fp_glResetHistogramEXT(target)
}
public
func glResetHistogramEXT(target:GL.Enum)
{
    fp_glResetHistogramEXT(target)
}
public
func glResetHistogramEXT(_ target:GL.Enum)
{
    fp_glResetHistogramEXT(target)
}

var fp_glResetMinmax:@convention(c) (GL.Enum) -> () = load_glResetMinmax
func load_glResetMinmax(target:GL.Enum)
{
    fp_glResetMinmax = unsafeBitCast(get_fp("glResetMinmax", support: [ss59]), to: Swift.type(of: fp_glResetMinmax))
    fp_glResetMinmax(target)
}
public
func glResetMinmax(target:GL.Enum)
{
    fp_glResetMinmax(target)
}
public
func glResetMinmax(_ target:GL.Enum)
{
    fp_glResetMinmax(target)
}

var fp_glResetMinmaxEXT:@convention(c) (GL.Enum) -> () = load_glResetMinmaxEXT
func load_glResetMinmaxEXT(target:GL.Enum)
{
    fp_glResetMinmaxEXT = unsafeBitCast(get_fp("glResetMinmaxEXT", support: [ss160]), to: Swift.type(of: fp_glResetMinmaxEXT))
    fp_glResetMinmaxEXT(target)
}
public
func glResetMinmaxEXT(target:GL.Enum)
{
    fp_glResetMinmaxEXT(target)
}
public
func glResetMinmaxEXT(_ target:GL.Enum)
{
    fp_glResetMinmaxEXT(target)
}

var fp_glResizeBuffersMESA:@convention(c) () -> () = load_glResizeBuffersMESA
func load_glResizeBuffersMESA()
{
    fp_glResizeBuffersMESA = unsafeBitCast(get_fp("glResizeBuffersMESA", support: [ss223]), to: Swift.type(of: fp_glResizeBuffersMESA))
    fp_glResizeBuffersMESA()
}
public
func glResizeBuffersMESA()
{
    fp_glResizeBuffersMESA()
}

var fp_glResolveDepthValuesNV:@convention(c) () -> () = load_glResolveDepthValuesNV
func load_glResolveDepthValuesNV()
{
    fp_glResolveDepthValuesNV = unsafeBitCast(get_fp("glResolveDepthValuesNV", support: [ss268]), to: Swift.type(of: fp_glResolveDepthValuesNV))
    fp_glResolveDepthValuesNV()
}
public
func glResolveDepthValuesNV()
{
    fp_glResolveDepthValuesNV()
}

var fp_glResolveMultisampleFramebufferAPPLE:@convention(c) () -> () = load_glResolveMultisampleFramebufferAPPLE
func load_glResolveMultisampleFramebufferAPPLE()
{
    fp_glResolveMultisampleFramebufferAPPLE = unsafeBitCast(get_fp("glResolveMultisampleFramebufferAPPLE", support: [ss21]), to: Swift.type(of: fp_glResolveMultisampleFramebufferAPPLE))
    fp_glResolveMultisampleFramebufferAPPLE()
}
public
func glResolveMultisampleFramebufferAPPLE()
{
    fp_glResolveMultisampleFramebufferAPPLE()
}

var fp_glResumeTransformFeedback:@convention(c) () -> () = load_glResumeTransformFeedback
func load_glResumeTransformFeedback()
{
    fp_glResumeTransformFeedback = unsafeBitCast(get_fp("glResumeTransformFeedback", support: [ss358, ss366, ss101]), to: Swift.type(of: fp_glResumeTransformFeedback))
    fp_glResumeTransformFeedback()
}
public
func glResumeTransformFeedback()
{
    fp_glResumeTransformFeedback()
}

var fp_glResumeTransformFeedbackNV:@convention(c) () -> () = load_glResumeTransformFeedbackNV
func load_glResumeTransformFeedbackNV()
{
    fp_glResumeTransformFeedbackNV = unsafeBitCast(get_fp("glResumeTransformFeedbackNV", support: [ss273]), to: Swift.type(of: fp_glResumeTransformFeedbackNV))
    fp_glResumeTransformFeedbackNV()
}
public
func glResumeTransformFeedbackNV()
{
    fp_glResumeTransformFeedbackNV()
}

var fp_glRotated:@convention(c) (GL.Double, GL.Double, GL.Double, GL.Double) -> () = load_glRotated
func load_glRotated(angle:GL.Double, x:GL.Double, y:GL.Double, z:GL.Double)
{
    fp_glRotated = unsafeBitCast(get_fp("glRotated", support: [ss346, ss369]), to: Swift.type(of: fp_glRotated))
    fp_glRotated(angle, x, y, z)
}
public
func glRotated(angle:GL.Double, x:GL.Double, y:GL.Double, z:GL.Double)
{
    fp_glRotated(angle, x, y, z)
}
public
func glRotated(_ angle:GL.Double, _ x:GL.Double, _ y:GL.Double, _ z:GL.Double)
{
    fp_glRotated(angle, x, y, z)
}

var fp_glRotatef:@convention(c) (GL.Float, GL.Float, GL.Float, GL.Float) -> () = load_glRotatef
func load_glRotatef(angle:GL.Float, x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glRotatef = unsafeBitCast(get_fp("glRotatef", support: [ss346, ss369, ss364]), to: Swift.type(of: fp_glRotatef))
    fp_glRotatef(angle, x, y, z)
}
public
func glRotatef(angle:GL.Float, x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glRotatef(angle, x, y, z)
}
public
func glRotatef(_ angle:GL.Float, _ x:GL.Float, _ y:GL.Float, _ z:GL.Float)
{
    fp_glRotatef(angle, x, y, z)
}

var fp_glRotatex:@convention(c) (GL.Fixed, GL.Fixed, GL.Fixed, GL.Fixed) -> () = load_glRotatex
func load_glRotatex(angle:GL.Fixed, x:GL.Fixed, y:GL.Fixed, z:GL.Fixed)
{
    fp_glRotatex = unsafeBitCast(get_fp("glRotatex", support: [ss364]), to: Swift.type(of: fp_glRotatex))
    fp_glRotatex(angle, x, y, z)
}
public
func glRotatex(angle:GL.Fixed, x:GL.Fixed, y:GL.Fixed, z:GL.Fixed)
{
    fp_glRotatex(angle, x, y, z)
}
public
func glRotatex(_ angle:GL.Fixed, _ x:GL.Fixed, _ y:GL.Fixed, _ z:GL.Fixed)
{
    fp_glRotatex(angle, x, y, z)
}

var fp_glRotatexOES:@convention(c) (GL.Fixed, GL.Fixed, GL.Fixed, GL.Fixed) -> () = load_glRotatexOES
func load_glRotatexOES(angle:GL.Fixed, x:GL.Fixed, y:GL.Fixed, z:GL.Fixed)
{
    fp_glRotatexOES = unsafeBitCast(get_fp("glRotatexOES", support: [ss292]), to: Swift.type(of: fp_glRotatexOES))
    fp_glRotatexOES(angle, x, y, z)
}
public
func glRotatexOES(angle:GL.Fixed, x:GL.Fixed, y:GL.Fixed, z:GL.Fixed)
{
    fp_glRotatexOES(angle, x, y, z)
}
public
func glRotatexOES(_ angle:GL.Fixed, _ x:GL.Fixed, _ y:GL.Fixed, _ z:GL.Fixed)
{
    fp_glRotatexOES(angle, x, y, z)
}

var fp_glSampleCoverage:@convention(c) (GL.Float, GL.Bool) -> () = load_glSampleCoverage
func load_glSampleCoverage(value:GL.Float, invert:GL.Bool)
{
    fp_glSampleCoverage = unsafeBitCast(get_fp("glSampleCoverage", support: [ss349, ss365]), to: Swift.type(of: fp_glSampleCoverage))
    fp_glSampleCoverage(value, invert)
}
public
func glSampleCoverage(value:GL.Float, invert:GL.Bool)
{
    fp_glSampleCoverage(value, invert)
}
public
func glSampleCoverage(_ value:GL.Float, _ invert:GL.Bool)
{
    fp_glSampleCoverage(value, invert)
}

var fp_glSampleCoverageARB:@convention(c) (GL.Float, GL.Bool) -> () = load_glSampleCoverageARB
func load_glSampleCoverageARB(value:GL.Float, invert:GL.Bool)
{
    fp_glSampleCoverageARB = unsafeBitCast(get_fp("glSampleCoverageARB", support: [ss69]), to: Swift.type(of: fp_glSampleCoverageARB))
    fp_glSampleCoverageARB(value, invert)
}
public
func glSampleCoverageARB(value:GL.Float, invert:GL.Bool)
{
    fp_glSampleCoverageARB(value, invert)
}
public
func glSampleCoverageARB(_ value:GL.Float, _ invert:GL.Bool)
{
    fp_glSampleCoverageARB(value, invert)
}

var fp_glSampleCoveragex:@convention(c) (GL.ClampX, GL.Bool) -> () = load_glSampleCoveragex
func load_glSampleCoveragex(value:GL.ClampX, invert:GL.Bool)
{
    fp_glSampleCoveragex = unsafeBitCast(get_fp("glSampleCoveragex", support: [ss364]), to: Swift.type(of: fp_glSampleCoveragex))
    fp_glSampleCoveragex(value, invert)
}
public
func glSampleCoveragex(value:GL.ClampX, invert:GL.Bool)
{
    fp_glSampleCoveragex(value, invert)
}
public
func glSampleCoveragex(_ value:GL.ClampX, _ invert:GL.Bool)
{
    fp_glSampleCoveragex(value, invert)
}

var fp_glSampleCoveragexOES:@convention(c) (GL.ClampX, GL.Bool) -> () = load_glSampleCoveragexOES
func load_glSampleCoveragexOES(value:GL.ClampX, invert:GL.Bool)
{
    fp_glSampleCoveragexOES = unsafeBitCast(get_fp("glSampleCoveragexOES", support: [ss292]), to: Swift.type(of: fp_glSampleCoveragexOES))
    fp_glSampleCoveragexOES(value, invert)
}
public
func glSampleCoveragexOES(value:GL.ClampX, invert:GL.Bool)
{
    fp_glSampleCoveragexOES(value, invert)
}
public
func glSampleCoveragexOES(_ value:GL.ClampX, _ invert:GL.Bool)
{
    fp_glSampleCoveragexOES(value, invert)
}

var fp_glSampleMapATI:@convention(c) (GL.UInt, GL.UInt, GL.Enum) -> () = load_glSampleMapATI
func load_glSampleMapATI(dst:GL.UInt, interp:GL.UInt, swizzle:GL.Enum)
{
    fp_glSampleMapATI = unsafeBitCast(get_fp("glSampleMapATI", support: [ss118]), to: Swift.type(of: fp_glSampleMapATI))
    fp_glSampleMapATI(dst, interp, swizzle)
}
public
func glSampleMapATI(dst:GL.UInt, interp:GL.UInt, swizzle:GL.Enum)
{
    fp_glSampleMapATI(dst, interp, swizzle)
}
public
func glSampleMapATI(_ dst:GL.UInt, _ interp:GL.UInt, _ swizzle:GL.Enum)
{
    fp_glSampleMapATI(dst, interp, swizzle)
}

var fp_glSampleMaskEXT:@convention(c) (GL.ClampFloat, GL.Bool) -> () = load_glSampleMaskEXT
func load_glSampleMaskEXT(value:GL.ClampFloat, invert:GL.Bool)
{
    fp_glSampleMaskEXT = unsafeBitCast(get_fp("glSampleMaskEXT", support: [ss168]), to: Swift.type(of: fp_glSampleMaskEXT))
    fp_glSampleMaskEXT(value, invert)
}
public
func glSampleMaskEXT(value:GL.ClampFloat, invert:GL.Bool)
{
    fp_glSampleMaskEXT(value, invert)
}
public
func glSampleMaskEXT(_ value:GL.ClampFloat, _ invert:GL.Bool)
{
    fp_glSampleMaskEXT(value, invert)
}

var fp_glSampleMaskIndexedNV:@convention(c) (GL.UInt, GL.Bitfield) -> () = load_glSampleMaskIndexedNV
func load_glSampleMaskIndexedNV(index:GL.UInt, mask:GL.Bitfield)
{
    fp_glSampleMaskIndexedNV = unsafeBitCast(get_fp("glSampleMaskIndexedNV", support: [ss241]), to: Swift.type(of: fp_glSampleMaskIndexedNV))
    fp_glSampleMaskIndexedNV(index, mask)
}
public
func glSampleMaskIndexedNV(index:GL.UInt, mask:GL.Bitfield)
{
    fp_glSampleMaskIndexedNV(index, mask)
}
public
func glSampleMaskIndexedNV(_ index:GL.UInt, _ mask:GL.Bitfield)
{
    fp_glSampleMaskIndexedNV(index, mask)
}

var fp_glSampleMaskSGIS:@convention(c) (GL.ClampFloat, GL.Bool) -> () = load_glSampleMaskSGIS
func load_glSampleMaskSGIS(value:GL.ClampFloat, invert:GL.Bool)
{
    fp_glSampleMaskSGIS = unsafeBitCast(get_fp("glSampleMaskSGIS", support: [ss322]), to: Swift.type(of: fp_glSampleMaskSGIS))
    fp_glSampleMaskSGIS(value, invert)
}
public
func glSampleMaskSGIS(value:GL.ClampFloat, invert:GL.Bool)
{
    fp_glSampleMaskSGIS(value, invert)
}
public
func glSampleMaskSGIS(_ value:GL.ClampFloat, _ invert:GL.Bool)
{
    fp_glSampleMaskSGIS(value, invert)
}

var fp_glSampleMaski:@convention(c) (GL.UInt, GL.Bitfield) -> () = load_glSampleMaski
func load_glSampleMaski(maskNumber:GL.UInt, mask:GL.Bitfield)
{
    fp_glSampleMaski = unsafeBitCast(get_fp("glSampleMaski", support: [ss356, ss367, ss95]), to: Swift.type(of: fp_glSampleMaski))
    fp_glSampleMaski(maskNumber, mask)
}
public
func glSampleMaski(maskNumber:GL.UInt, mask:GL.Bitfield)
{
    fp_glSampleMaski(maskNumber, mask)
}
public
func glSampleMaski(_ maskNumber:GL.UInt, _ mask:GL.Bitfield)
{
    fp_glSampleMaski(maskNumber, mask)
}

var fp_glSamplePatternEXT:@convention(c) (GL.Enum) -> () = load_glSamplePatternEXT
func load_glSamplePatternEXT(pattern:GL.Enum)
{
    fp_glSamplePatternEXT = unsafeBitCast(get_fp("glSamplePatternEXT", support: [ss168]), to: Swift.type(of: fp_glSamplePatternEXT))
    fp_glSamplePatternEXT(pattern)
}
public
func glSamplePatternEXT(pattern:GL.Enum)
{
    fp_glSamplePatternEXT(pattern)
}
public
func glSamplePatternEXT(_ pattern:GL.Enum)
{
    fp_glSamplePatternEXT(pattern)
}

var fp_glSamplePatternSGIS:@convention(c) (GL.Enum) -> () = load_glSamplePatternSGIS
func load_glSamplePatternSGIS(pattern:GL.Enum)
{
    fp_glSamplePatternSGIS = unsafeBitCast(get_fp("glSamplePatternSGIS", support: [ss322]), to: Swift.type(of: fp_glSamplePatternSGIS))
    fp_glSamplePatternSGIS(pattern)
}
public
func glSamplePatternSGIS(pattern:GL.Enum)
{
    fp_glSamplePatternSGIS(pattern)
}
public
func glSamplePatternSGIS(_ pattern:GL.Enum)
{
    fp_glSamplePatternSGIS(pattern)
}

var fp_glSamplerParameterIiv:@convention(c) (GL.UInt, GL.Enum, UnsafePointer<GL.Int>?) -> () = load_glSamplerParameterIiv
func load_glSamplerParameterIiv(sampler:GL.UInt, pname:GL.Enum, param:UnsafePointer<GL.Int>?)
{
    fp_glSamplerParameterIiv = unsafeBitCast(get_fp("glSamplerParameterIiv", support: [ss357, ss368, ss79]), to: Swift.type(of: fp_glSamplerParameterIiv))
    fp_glSamplerParameterIiv(sampler, pname, param)
}
public
func glSamplerParameterIiv(sampler:GL.UInt, pname:GL.Enum, param:UnsafePointer<GL.Int>?)
{
    fp_glSamplerParameterIiv(sampler, pname, param)
}
public
func glSamplerParameterIiv(_ sampler:GL.UInt, _ pname:GL.Enum, _ param:UnsafePointer<GL.Int>?)
{
    fp_glSamplerParameterIiv(sampler, pname, param)
}

var fp_glSamplerParameterIivEXT:@convention(c) (GL.UInt, GL.Enum, UnsafePointer<GL.Int>?) -> () = load_glSamplerParameterIivEXT
func load_glSamplerParameterIivEXT(sampler:GL.UInt, pname:GL.Enum, param:UnsafePointer<GL.Int>?)
{
    fp_glSamplerParameterIivEXT = unsafeBitCast(get_fp("glSamplerParameterIivEXT", support: [ss190]), to: Swift.type(of: fp_glSamplerParameterIivEXT))
    fp_glSamplerParameterIivEXT(sampler, pname, param)
}
public
func glSamplerParameterIivEXT(sampler:GL.UInt, pname:GL.Enum, param:UnsafePointer<GL.Int>?)
{
    fp_glSamplerParameterIivEXT(sampler, pname, param)
}
public
func glSamplerParameterIivEXT(_ sampler:GL.UInt, _ pname:GL.Enum, _ param:UnsafePointer<GL.Int>?)
{
    fp_glSamplerParameterIivEXT(sampler, pname, param)
}

var fp_glSamplerParameterIivOES:@convention(c) (GL.UInt, GL.Enum, UnsafePointer<GL.Int>?) -> () = load_glSamplerParameterIivOES
func load_glSamplerParameterIivOES(sampler:GL.UInt, pname:GL.Enum, param:UnsafePointer<GL.Int>?)
{
    fp_glSamplerParameterIivOES = unsafeBitCast(get_fp("glSamplerParameterIivOES", support: [ss305]), to: Swift.type(of: fp_glSamplerParameterIivOES))
    fp_glSamplerParameterIivOES(sampler, pname, param)
}
public
func glSamplerParameterIivOES(sampler:GL.UInt, pname:GL.Enum, param:UnsafePointer<GL.Int>?)
{
    fp_glSamplerParameterIivOES(sampler, pname, param)
}
public
func glSamplerParameterIivOES(_ sampler:GL.UInt, _ pname:GL.Enum, _ param:UnsafePointer<GL.Int>?)
{
    fp_glSamplerParameterIivOES(sampler, pname, param)
}

var fp_glSamplerParameterIuiv:@convention(c) (GL.UInt, GL.Enum, UnsafePointer<GL.UInt>?) -> () = load_glSamplerParameterIuiv
func load_glSamplerParameterIuiv(sampler:GL.UInt, pname:GL.Enum, param:UnsafePointer<GL.UInt>?)
{
    fp_glSamplerParameterIuiv = unsafeBitCast(get_fp("glSamplerParameterIuiv", support: [ss357, ss368, ss79]), to: Swift.type(of: fp_glSamplerParameterIuiv))
    fp_glSamplerParameterIuiv(sampler, pname, param)
}
public
func glSamplerParameterIuiv(sampler:GL.UInt, pname:GL.Enum, param:UnsafePointer<GL.UInt>?)
{
    fp_glSamplerParameterIuiv(sampler, pname, param)
}
public
func glSamplerParameterIuiv(_ sampler:GL.UInt, _ pname:GL.Enum, _ param:UnsafePointer<GL.UInt>?)
{
    fp_glSamplerParameterIuiv(sampler, pname, param)
}

var fp_glSamplerParameterIuivEXT:@convention(c) (GL.UInt, GL.Enum, UnsafePointer<GL.UInt>?) -> () = load_glSamplerParameterIuivEXT
func load_glSamplerParameterIuivEXT(sampler:GL.UInt, pname:GL.Enum, param:UnsafePointer<GL.UInt>?)
{
    fp_glSamplerParameterIuivEXT = unsafeBitCast(get_fp("glSamplerParameterIuivEXT", support: [ss190]), to: Swift.type(of: fp_glSamplerParameterIuivEXT))
    fp_glSamplerParameterIuivEXT(sampler, pname, param)
}
public
func glSamplerParameterIuivEXT(sampler:GL.UInt, pname:GL.Enum, param:UnsafePointer<GL.UInt>?)
{
    fp_glSamplerParameterIuivEXT(sampler, pname, param)
}
public
func glSamplerParameterIuivEXT(_ sampler:GL.UInt, _ pname:GL.Enum, _ param:UnsafePointer<GL.UInt>?)
{
    fp_glSamplerParameterIuivEXT(sampler, pname, param)
}

var fp_glSamplerParameterIuivOES:@convention(c) (GL.UInt, GL.Enum, UnsafePointer<GL.UInt>?) -> () = load_glSamplerParameterIuivOES
func load_glSamplerParameterIuivOES(sampler:GL.UInt, pname:GL.Enum, param:UnsafePointer<GL.UInt>?)
{
    fp_glSamplerParameterIuivOES = unsafeBitCast(get_fp("glSamplerParameterIuivOES", support: [ss305]), to: Swift.type(of: fp_glSamplerParameterIuivOES))
    fp_glSamplerParameterIuivOES(sampler, pname, param)
}
public
func glSamplerParameterIuivOES(sampler:GL.UInt, pname:GL.Enum, param:UnsafePointer<GL.UInt>?)
{
    fp_glSamplerParameterIuivOES(sampler, pname, param)
}
public
func glSamplerParameterIuivOES(_ sampler:GL.UInt, _ pname:GL.Enum, _ param:UnsafePointer<GL.UInt>?)
{
    fp_glSamplerParameterIuivOES(sampler, pname, param)
}

var fp_glSamplerParameterf:@convention(c) (GL.UInt, GL.Enum, GL.Float) -> () = load_glSamplerParameterf
func load_glSamplerParameterf(sampler:GL.UInt, pname:GL.Enum, param:GL.Float)
{
    fp_glSamplerParameterf = unsafeBitCast(get_fp("glSamplerParameterf", support: [ss357, ss366, ss79]), to: Swift.type(of: fp_glSamplerParameterf))
    fp_glSamplerParameterf(sampler, pname, param)
}
public
func glSamplerParameterf(sampler:GL.UInt, pname:GL.Enum, param:GL.Float)
{
    fp_glSamplerParameterf(sampler, pname, param)
}
public
func glSamplerParameterf(_ sampler:GL.UInt, _ pname:GL.Enum, _ param:GL.Float)
{
    fp_glSamplerParameterf(sampler, pname, param)
}

var fp_glSamplerParameterfv:@convention(c) (GL.UInt, GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glSamplerParameterfv
func load_glSamplerParameterfv(sampler:GL.UInt, pname:GL.Enum, param:UnsafePointer<GL.Float>?)
{
    fp_glSamplerParameterfv = unsafeBitCast(get_fp("glSamplerParameterfv", support: [ss357, ss366, ss79]), to: Swift.type(of: fp_glSamplerParameterfv))
    fp_glSamplerParameterfv(sampler, pname, param)
}
public
func glSamplerParameterfv(sampler:GL.UInt, pname:GL.Enum, param:UnsafePointer<GL.Float>?)
{
    fp_glSamplerParameterfv(sampler, pname, param)
}
public
func glSamplerParameterfv(_ sampler:GL.UInt, _ pname:GL.Enum, _ param:UnsafePointer<GL.Float>?)
{
    fp_glSamplerParameterfv(sampler, pname, param)
}

var fp_glSamplerParameteri:@convention(c) (GL.UInt, GL.Enum, GL.Int) -> () = load_glSamplerParameteri
func load_glSamplerParameteri(sampler:GL.UInt, pname:GL.Enum, param:GL.Int)
{
    fp_glSamplerParameteri = unsafeBitCast(get_fp("glSamplerParameteri", support: [ss357, ss366, ss79]), to: Swift.type(of: fp_glSamplerParameteri))
    fp_glSamplerParameteri(sampler, pname, param)
}
public
func glSamplerParameteri(sampler:GL.UInt, pname:GL.Enum, param:GL.Int)
{
    fp_glSamplerParameteri(sampler, pname, param)
}
public
func glSamplerParameteri(_ sampler:GL.UInt, _ pname:GL.Enum, _ param:GL.Int)
{
    fp_glSamplerParameteri(sampler, pname, param)
}

var fp_glSamplerParameteriv:@convention(c) (GL.UInt, GL.Enum, UnsafePointer<GL.Int>?) -> () = load_glSamplerParameteriv
func load_glSamplerParameteriv(sampler:GL.UInt, pname:GL.Enum, param:UnsafePointer<GL.Int>?)
{
    fp_glSamplerParameteriv = unsafeBitCast(get_fp("glSamplerParameteriv", support: [ss357, ss366, ss79]), to: Swift.type(of: fp_glSamplerParameteriv))
    fp_glSamplerParameteriv(sampler, pname, param)
}
public
func glSamplerParameteriv(sampler:GL.UInt, pname:GL.Enum, param:UnsafePointer<GL.Int>?)
{
    fp_glSamplerParameteriv(sampler, pname, param)
}
public
func glSamplerParameteriv(_ sampler:GL.UInt, _ pname:GL.Enum, _ param:UnsafePointer<GL.Int>?)
{
    fp_glSamplerParameteriv(sampler, pname, param)
}

var fp_glScaled:@convention(c) (GL.Double, GL.Double, GL.Double) -> () = load_glScaled
func load_glScaled(x:GL.Double, y:GL.Double, z:GL.Double)
{
    fp_glScaled = unsafeBitCast(get_fp("glScaled", support: [ss346, ss369]), to: Swift.type(of: fp_glScaled))
    fp_glScaled(x, y, z)
}
public
func glScaled(x:GL.Double, y:GL.Double, z:GL.Double)
{
    fp_glScaled(x, y, z)
}
public
func glScaled(_ x:GL.Double, _ y:GL.Double, _ z:GL.Double)
{
    fp_glScaled(x, y, z)
}

var fp_glScalef:@convention(c) (GL.Float, GL.Float, GL.Float) -> () = load_glScalef
func load_glScalef(x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glScalef = unsafeBitCast(get_fp("glScalef", support: [ss346, ss369, ss364]), to: Swift.type(of: fp_glScalef))
    fp_glScalef(x, y, z)
}
public
func glScalef(x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glScalef(x, y, z)
}
public
func glScalef(_ x:GL.Float, _ y:GL.Float, _ z:GL.Float)
{
    fp_glScalef(x, y, z)
}

var fp_glScalex:@convention(c) (GL.Fixed, GL.Fixed, GL.Fixed) -> () = load_glScalex
func load_glScalex(x:GL.Fixed, y:GL.Fixed, z:GL.Fixed)
{
    fp_glScalex = unsafeBitCast(get_fp("glScalex", support: [ss364]), to: Swift.type(of: fp_glScalex))
    fp_glScalex(x, y, z)
}
public
func glScalex(x:GL.Fixed, y:GL.Fixed, z:GL.Fixed)
{
    fp_glScalex(x, y, z)
}
public
func glScalex(_ x:GL.Fixed, _ y:GL.Fixed, _ z:GL.Fixed)
{
    fp_glScalex(x, y, z)
}

var fp_glScalexOES:@convention(c) (GL.Fixed, GL.Fixed, GL.Fixed) -> () = load_glScalexOES
func load_glScalexOES(x:GL.Fixed, y:GL.Fixed, z:GL.Fixed)
{
    fp_glScalexOES = unsafeBitCast(get_fp("glScalexOES", support: [ss292]), to: Swift.type(of: fp_glScalexOES))
    fp_glScalexOES(x, y, z)
}
public
func glScalexOES(x:GL.Fixed, y:GL.Fixed, z:GL.Fixed)
{
    fp_glScalexOES(x, y, z)
}
public
func glScalexOES(_ x:GL.Fixed, _ y:GL.Fixed, _ z:GL.Fixed)
{
    fp_glScalexOES(x, y, z)
}

var fp_glScissor:@convention(c) (GL.Int, GL.Int, GL.Size, GL.Size) -> () = load_glScissor
func load_glScissor(x:GL.Int, y:GL.Int, width:GL.Size, height:GL.Size)
{
    fp_glScissor = unsafeBitCast(get_fp("glScissor", support: [ss346, ss365]), to: Swift.type(of: fp_glScissor))
    fp_glScissor(x, y, width, height)
}
public
func glScissor(x:GL.Int, y:GL.Int, width:GL.Size, height:GL.Size)
{
    fp_glScissor(x, y, width, height)
}
public
func glScissor(_ x:GL.Int, _ y:GL.Int, _ width:GL.Size, _ height:GL.Size)
{
    fp_glScissor(x, y, width, height)
}

var fp_glScissorArrayv:@convention(c) (GL.UInt, GL.Size, UnsafePointer<GL.Int>?) -> () = load_glScissorArrayv
func load_glScissorArrayv(first:GL.UInt, count:GL.Size, v:UnsafePointer<GL.Int>?)
{
    fp_glScissorArrayv = unsafeBitCast(get_fp("glScissorArrayv", support: [ss359, ss113]), to: Swift.type(of: fp_glScissorArrayv))
    fp_glScissorArrayv(first, count, v)
}
public
func glScissorArrayv(first:GL.UInt, count:GL.Size, v:UnsafePointer<GL.Int>?)
{
    fp_glScissorArrayv(first, count, v)
}
public
func glScissorArrayv(_ first:GL.UInt, _ count:GL.Size, _ v:UnsafePointer<GL.Int>?)
{
    fp_glScissorArrayv(first, count, v)
}

var fp_glScissorArrayvNV:@convention(c) (GL.UInt, GL.Size, UnsafePointer<GL.Int>?) -> () = load_glScissorArrayvNV
func load_glScissorArrayvNV(first:GL.UInt, count:GL.Size, v:UnsafePointer<GL.Int>?)
{
    fp_glScissorArrayvNV = unsafeBitCast(get_fp("glScissorArrayvNV", support: [ss281]), to: Swift.type(of: fp_glScissorArrayvNV))
    fp_glScissorArrayvNV(first, count, v)
}
public
func glScissorArrayvNV(first:GL.UInt, count:GL.Size, v:UnsafePointer<GL.Int>?)
{
    fp_glScissorArrayvNV(first, count, v)
}
public
func glScissorArrayvNV(_ first:GL.UInt, _ count:GL.Size, _ v:UnsafePointer<GL.Int>?)
{
    fp_glScissorArrayvNV(first, count, v)
}

var fp_glScissorIndexed:@convention(c) (GL.UInt, GL.Int, GL.Int, GL.Size, GL.Size) -> () = load_glScissorIndexed
func load_glScissorIndexed(index:GL.UInt, left:GL.Int, bottom:GL.Int, width:GL.Size, height:GL.Size)
{
    fp_glScissorIndexed = unsafeBitCast(get_fp("glScissorIndexed", support: [ss359, ss113]), to: Swift.type(of: fp_glScissorIndexed))
    fp_glScissorIndexed(index, left, bottom, width, height)
}
public
func glScissorIndexed(index:GL.UInt, left:GL.Int, bottom:GL.Int, width:GL.Size, height:GL.Size)
{
    fp_glScissorIndexed(index, left, bottom, width, height)
}
public
func glScissorIndexed(_ index:GL.UInt, _ left:GL.Int, _ bottom:GL.Int, _ width:GL.Size, _ height:GL.Size)
{
    fp_glScissorIndexed(index, left, bottom, width, height)
}

var fp_glScissorIndexedNV:@convention(c) (GL.UInt, GL.Int, GL.Int, GL.Size, GL.Size) -> () = load_glScissorIndexedNV
func load_glScissorIndexedNV(index:GL.UInt, left:GL.Int, bottom:GL.Int, width:GL.Size, height:GL.Size)
{
    fp_glScissorIndexedNV = unsafeBitCast(get_fp("glScissorIndexedNV", support: [ss281]), to: Swift.type(of: fp_glScissorIndexedNV))
    fp_glScissorIndexedNV(index, left, bottom, width, height)
}
public
func glScissorIndexedNV(index:GL.UInt, left:GL.Int, bottom:GL.Int, width:GL.Size, height:GL.Size)
{
    fp_glScissorIndexedNV(index, left, bottom, width, height)
}
public
func glScissorIndexedNV(_ index:GL.UInt, _ left:GL.Int, _ bottom:GL.Int, _ width:GL.Size, _ height:GL.Size)
{
    fp_glScissorIndexedNV(index, left, bottom, width, height)
}

var fp_glScissorIndexedv:@convention(c) (GL.UInt, UnsafePointer<GL.Int>?) -> () = load_glScissorIndexedv
func load_glScissorIndexedv(index:GL.UInt, v:UnsafePointer<GL.Int>?)
{
    fp_glScissorIndexedv = unsafeBitCast(get_fp("glScissorIndexedv", support: [ss359, ss113]), to: Swift.type(of: fp_glScissorIndexedv))
    fp_glScissorIndexedv(index, v)
}
public
func glScissorIndexedv(index:GL.UInt, v:UnsafePointer<GL.Int>?)
{
    fp_glScissorIndexedv(index, v)
}
public
func glScissorIndexedv(_ index:GL.UInt, _ v:UnsafePointer<GL.Int>?)
{
    fp_glScissorIndexedv(index, v)
}

var fp_glScissorIndexedvNV:@convention(c) (GL.UInt, UnsafePointer<GL.Int>?) -> () = load_glScissorIndexedvNV
func load_glScissorIndexedvNV(index:GL.UInt, v:UnsafePointer<GL.Int>?)
{
    fp_glScissorIndexedvNV = unsafeBitCast(get_fp("glScissorIndexedvNV", support: [ss281]), to: Swift.type(of: fp_glScissorIndexedvNV))
    fp_glScissorIndexedvNV(index, v)
}
public
func glScissorIndexedvNV(index:GL.UInt, v:UnsafePointer<GL.Int>?)
{
    fp_glScissorIndexedvNV(index, v)
}
public
func glScissorIndexedvNV(_ index:GL.UInt, _ v:UnsafePointer<GL.Int>?)
{
    fp_glScissorIndexedvNV(index, v)
}

var fp_glSecondaryColor3b:@convention(c) (GL.Byte, GL.Byte, GL.Byte) -> () = load_glSecondaryColor3b
func load_glSecondaryColor3b(red:GL.Byte, green:GL.Byte, blue:GL.Byte)
{
    fp_glSecondaryColor3b = unsafeBitCast(get_fp("glSecondaryColor3b", support: [ss350, ss369]), to: Swift.type(of: fp_glSecondaryColor3b))
    fp_glSecondaryColor3b(red, green, blue)
}
public
func glSecondaryColor3b(red:GL.Byte, green:GL.Byte, blue:GL.Byte)
{
    fp_glSecondaryColor3b(red, green, blue)
}
public
func glSecondaryColor3b(_ red:GL.Byte, _ green:GL.Byte, _ blue:GL.Byte)
{
    fp_glSecondaryColor3b(red, green, blue)
}

var fp_glSecondaryColor3bEXT:@convention(c) (GL.Byte, GL.Byte, GL.Byte) -> () = load_glSecondaryColor3bEXT
func load_glSecondaryColor3bEXT(red:GL.Byte, green:GL.Byte, blue:GL.Byte)
{
    fp_glSecondaryColor3bEXT = unsafeBitCast(get_fp("glSecondaryColor3bEXT", support: [ss181]), to: Swift.type(of: fp_glSecondaryColor3bEXT))
    fp_glSecondaryColor3bEXT(red, green, blue)
}
public
func glSecondaryColor3bEXT(red:GL.Byte, green:GL.Byte, blue:GL.Byte)
{
    fp_glSecondaryColor3bEXT(red, green, blue)
}
public
func glSecondaryColor3bEXT(_ red:GL.Byte, _ green:GL.Byte, _ blue:GL.Byte)
{
    fp_glSecondaryColor3bEXT(red, green, blue)
}

var fp_glSecondaryColor3bv:@convention(c) (UnsafePointer<GL.Byte>?) -> () = load_glSecondaryColor3bv
func load_glSecondaryColor3bv(v:UnsafePointer<GL.Byte>?)
{
    fp_glSecondaryColor3bv = unsafeBitCast(get_fp("glSecondaryColor3bv", support: [ss350, ss369]), to: Swift.type(of: fp_glSecondaryColor3bv))
    fp_glSecondaryColor3bv(v)
}
public
func glSecondaryColor3bv(v:UnsafePointer<GL.Byte>?)
{
    fp_glSecondaryColor3bv(v)
}
public
func glSecondaryColor3bv(_ v:UnsafePointer<GL.Byte>?)
{
    fp_glSecondaryColor3bv(v)
}

var fp_glSecondaryColor3bvEXT:@convention(c) (UnsafePointer<GL.Byte>?) -> () = load_glSecondaryColor3bvEXT
func load_glSecondaryColor3bvEXT(v:UnsafePointer<GL.Byte>?)
{
    fp_glSecondaryColor3bvEXT = unsafeBitCast(get_fp("glSecondaryColor3bvEXT", support: [ss181]), to: Swift.type(of: fp_glSecondaryColor3bvEXT))
    fp_glSecondaryColor3bvEXT(v)
}
public
func glSecondaryColor3bvEXT(v:UnsafePointer<GL.Byte>?)
{
    fp_glSecondaryColor3bvEXT(v)
}
public
func glSecondaryColor3bvEXT(_ v:UnsafePointer<GL.Byte>?)
{
    fp_glSecondaryColor3bvEXT(v)
}

var fp_glSecondaryColor3d:@convention(c) (GL.Double, GL.Double, GL.Double) -> () = load_glSecondaryColor3d
func load_glSecondaryColor3d(red:GL.Double, green:GL.Double, blue:GL.Double)
{
    fp_glSecondaryColor3d = unsafeBitCast(get_fp("glSecondaryColor3d", support: [ss350, ss369]), to: Swift.type(of: fp_glSecondaryColor3d))
    fp_glSecondaryColor3d(red, green, blue)
}
public
func glSecondaryColor3d(red:GL.Double, green:GL.Double, blue:GL.Double)
{
    fp_glSecondaryColor3d(red, green, blue)
}
public
func glSecondaryColor3d(_ red:GL.Double, _ green:GL.Double, _ blue:GL.Double)
{
    fp_glSecondaryColor3d(red, green, blue)
}

var fp_glSecondaryColor3dEXT:@convention(c) (GL.Double, GL.Double, GL.Double) -> () = load_glSecondaryColor3dEXT
func load_glSecondaryColor3dEXT(red:GL.Double, green:GL.Double, blue:GL.Double)
{
    fp_glSecondaryColor3dEXT = unsafeBitCast(get_fp("glSecondaryColor3dEXT", support: [ss181]), to: Swift.type(of: fp_glSecondaryColor3dEXT))
    fp_glSecondaryColor3dEXT(red, green, blue)
}
public
func glSecondaryColor3dEXT(red:GL.Double, green:GL.Double, blue:GL.Double)
{
    fp_glSecondaryColor3dEXT(red, green, blue)
}
public
func glSecondaryColor3dEXT(_ red:GL.Double, _ green:GL.Double, _ blue:GL.Double)
{
    fp_glSecondaryColor3dEXT(red, green, blue)
}

var fp_glSecondaryColor3dv:@convention(c) (UnsafePointer<GL.Double>?) -> () = load_glSecondaryColor3dv
func load_glSecondaryColor3dv(v:UnsafePointer<GL.Double>?)
{
    fp_glSecondaryColor3dv = unsafeBitCast(get_fp("glSecondaryColor3dv", support: [ss350, ss369]), to: Swift.type(of: fp_glSecondaryColor3dv))
    fp_glSecondaryColor3dv(v)
}
public
func glSecondaryColor3dv(v:UnsafePointer<GL.Double>?)
{
    fp_glSecondaryColor3dv(v)
}
public
func glSecondaryColor3dv(_ v:UnsafePointer<GL.Double>?)
{
    fp_glSecondaryColor3dv(v)
}

var fp_glSecondaryColor3dvEXT:@convention(c) (UnsafePointer<GL.Double>?) -> () = load_glSecondaryColor3dvEXT
func load_glSecondaryColor3dvEXT(v:UnsafePointer<GL.Double>?)
{
    fp_glSecondaryColor3dvEXT = unsafeBitCast(get_fp("glSecondaryColor3dvEXT", support: [ss181]), to: Swift.type(of: fp_glSecondaryColor3dvEXT))
    fp_glSecondaryColor3dvEXT(v)
}
public
func glSecondaryColor3dvEXT(v:UnsafePointer<GL.Double>?)
{
    fp_glSecondaryColor3dvEXT(v)
}
public
func glSecondaryColor3dvEXT(_ v:UnsafePointer<GL.Double>?)
{
    fp_glSecondaryColor3dvEXT(v)
}

var fp_glSecondaryColor3f:@convention(c) (GL.Float, GL.Float, GL.Float) -> () = load_glSecondaryColor3f
func load_glSecondaryColor3f(red:GL.Float, green:GL.Float, blue:GL.Float)
{
    fp_glSecondaryColor3f = unsafeBitCast(get_fp("glSecondaryColor3f", support: [ss350, ss369]), to: Swift.type(of: fp_glSecondaryColor3f))
    fp_glSecondaryColor3f(red, green, blue)
}
public
func glSecondaryColor3f(red:GL.Float, green:GL.Float, blue:GL.Float)
{
    fp_glSecondaryColor3f(red, green, blue)
}
public
func glSecondaryColor3f(_ red:GL.Float, _ green:GL.Float, _ blue:GL.Float)
{
    fp_glSecondaryColor3f(red, green, blue)
}

var fp_glSecondaryColor3fEXT:@convention(c) (GL.Float, GL.Float, GL.Float) -> () = load_glSecondaryColor3fEXT
func load_glSecondaryColor3fEXT(red:GL.Float, green:GL.Float, blue:GL.Float)
{
    fp_glSecondaryColor3fEXT = unsafeBitCast(get_fp("glSecondaryColor3fEXT", support: [ss181]), to: Swift.type(of: fp_glSecondaryColor3fEXT))
    fp_glSecondaryColor3fEXT(red, green, blue)
}
public
func glSecondaryColor3fEXT(red:GL.Float, green:GL.Float, blue:GL.Float)
{
    fp_glSecondaryColor3fEXT(red, green, blue)
}
public
func glSecondaryColor3fEXT(_ red:GL.Float, _ green:GL.Float, _ blue:GL.Float)
{
    fp_glSecondaryColor3fEXT(red, green, blue)
}

var fp_glSecondaryColor3fv:@convention(c) (UnsafePointer<GL.Float>?) -> () = load_glSecondaryColor3fv
func load_glSecondaryColor3fv(v:UnsafePointer<GL.Float>?)
{
    fp_glSecondaryColor3fv = unsafeBitCast(get_fp("glSecondaryColor3fv", support: [ss350, ss369]), to: Swift.type(of: fp_glSecondaryColor3fv))
    fp_glSecondaryColor3fv(v)
}
public
func glSecondaryColor3fv(v:UnsafePointer<GL.Float>?)
{
    fp_glSecondaryColor3fv(v)
}
public
func glSecondaryColor3fv(_ v:UnsafePointer<GL.Float>?)
{
    fp_glSecondaryColor3fv(v)
}

var fp_glSecondaryColor3fvEXT:@convention(c) (UnsafePointer<GL.Float>?) -> () = load_glSecondaryColor3fvEXT
func load_glSecondaryColor3fvEXT(v:UnsafePointer<GL.Float>?)
{
    fp_glSecondaryColor3fvEXT = unsafeBitCast(get_fp("glSecondaryColor3fvEXT", support: [ss181]), to: Swift.type(of: fp_glSecondaryColor3fvEXT))
    fp_glSecondaryColor3fvEXT(v)
}
public
func glSecondaryColor3fvEXT(v:UnsafePointer<GL.Float>?)
{
    fp_glSecondaryColor3fvEXT(v)
}
public
func glSecondaryColor3fvEXT(_ v:UnsafePointer<GL.Float>?)
{
    fp_glSecondaryColor3fvEXT(v)
}

var fp_glSecondaryColor3hNV:@convention(c) (GL.HalfNV, GL.HalfNV, GL.HalfNV) -> () = load_glSecondaryColor3hNV
func load_glSecondaryColor3hNV(red:GL.HalfNV, green:GL.HalfNV, blue:GL.HalfNV)
{
    fp_glSecondaryColor3hNV = unsafeBitCast(get_fp("glSecondaryColor3hNV", support: [ss253]), to: Swift.type(of: fp_glSecondaryColor3hNV))
    fp_glSecondaryColor3hNV(red, green, blue)
}
public
func glSecondaryColor3hNV(red:GL.HalfNV, green:GL.HalfNV, blue:GL.HalfNV)
{
    fp_glSecondaryColor3hNV(red, green, blue)
}
public
func glSecondaryColor3hNV(_ red:GL.HalfNV, _ green:GL.HalfNV, _ blue:GL.HalfNV)
{
    fp_glSecondaryColor3hNV(red, green, blue)
}

var fp_glSecondaryColor3hvNV:@convention(c) (UnsafePointer<GL.HalfNV>?) -> () = load_glSecondaryColor3hvNV
func load_glSecondaryColor3hvNV(v:UnsafePointer<GL.HalfNV>?)
{
    fp_glSecondaryColor3hvNV = unsafeBitCast(get_fp("glSecondaryColor3hvNV", support: [ss253]), to: Swift.type(of: fp_glSecondaryColor3hvNV))
    fp_glSecondaryColor3hvNV(v)
}
public
func glSecondaryColor3hvNV(v:UnsafePointer<GL.HalfNV>?)
{
    fp_glSecondaryColor3hvNV(v)
}
public
func glSecondaryColor3hvNV(_ v:UnsafePointer<GL.HalfNV>?)
{
    fp_glSecondaryColor3hvNV(v)
}

var fp_glSecondaryColor3i:@convention(c) (GL.Int, GL.Int, GL.Int) -> () = load_glSecondaryColor3i
func load_glSecondaryColor3i(red:GL.Int, green:GL.Int, blue:GL.Int)
{
    fp_glSecondaryColor3i = unsafeBitCast(get_fp("glSecondaryColor3i", support: [ss350, ss369]), to: Swift.type(of: fp_glSecondaryColor3i))
    fp_glSecondaryColor3i(red, green, blue)
}
public
func glSecondaryColor3i(red:GL.Int, green:GL.Int, blue:GL.Int)
{
    fp_glSecondaryColor3i(red, green, blue)
}
public
func glSecondaryColor3i(_ red:GL.Int, _ green:GL.Int, _ blue:GL.Int)
{
    fp_glSecondaryColor3i(red, green, blue)
}

var fp_glSecondaryColor3iEXT:@convention(c) (GL.Int, GL.Int, GL.Int) -> () = load_glSecondaryColor3iEXT
func load_glSecondaryColor3iEXT(red:GL.Int, green:GL.Int, blue:GL.Int)
{
    fp_glSecondaryColor3iEXT = unsafeBitCast(get_fp("glSecondaryColor3iEXT", support: [ss181]), to: Swift.type(of: fp_glSecondaryColor3iEXT))
    fp_glSecondaryColor3iEXT(red, green, blue)
}
public
func glSecondaryColor3iEXT(red:GL.Int, green:GL.Int, blue:GL.Int)
{
    fp_glSecondaryColor3iEXT(red, green, blue)
}
public
func glSecondaryColor3iEXT(_ red:GL.Int, _ green:GL.Int, _ blue:GL.Int)
{
    fp_glSecondaryColor3iEXT(red, green, blue)
}

var fp_glSecondaryColor3iv:@convention(c) (UnsafePointer<GL.Int>?) -> () = load_glSecondaryColor3iv
func load_glSecondaryColor3iv(v:UnsafePointer<GL.Int>?)
{
    fp_glSecondaryColor3iv = unsafeBitCast(get_fp("glSecondaryColor3iv", support: [ss350, ss369]), to: Swift.type(of: fp_glSecondaryColor3iv))
    fp_glSecondaryColor3iv(v)
}
public
func glSecondaryColor3iv(v:UnsafePointer<GL.Int>?)
{
    fp_glSecondaryColor3iv(v)
}
public
func glSecondaryColor3iv(_ v:UnsafePointer<GL.Int>?)
{
    fp_glSecondaryColor3iv(v)
}

var fp_glSecondaryColor3ivEXT:@convention(c) (UnsafePointer<GL.Int>?) -> () = load_glSecondaryColor3ivEXT
func load_glSecondaryColor3ivEXT(v:UnsafePointer<GL.Int>?)
{
    fp_glSecondaryColor3ivEXT = unsafeBitCast(get_fp("glSecondaryColor3ivEXT", support: [ss181]), to: Swift.type(of: fp_glSecondaryColor3ivEXT))
    fp_glSecondaryColor3ivEXT(v)
}
public
func glSecondaryColor3ivEXT(v:UnsafePointer<GL.Int>?)
{
    fp_glSecondaryColor3ivEXT(v)
}
public
func glSecondaryColor3ivEXT(_ v:UnsafePointer<GL.Int>?)
{
    fp_glSecondaryColor3ivEXT(v)
}

var fp_glSecondaryColor3s:@convention(c) (GL.Short, GL.Short, GL.Short) -> () = load_glSecondaryColor3s
func load_glSecondaryColor3s(red:GL.Short, green:GL.Short, blue:GL.Short)
{
    fp_glSecondaryColor3s = unsafeBitCast(get_fp("glSecondaryColor3s", support: [ss350, ss369]), to: Swift.type(of: fp_glSecondaryColor3s))
    fp_glSecondaryColor3s(red, green, blue)
}
public
func glSecondaryColor3s(red:GL.Short, green:GL.Short, blue:GL.Short)
{
    fp_glSecondaryColor3s(red, green, blue)
}
public
func glSecondaryColor3s(_ red:GL.Short, _ green:GL.Short, _ blue:GL.Short)
{
    fp_glSecondaryColor3s(red, green, blue)
}

var fp_glSecondaryColor3sEXT:@convention(c) (GL.Short, GL.Short, GL.Short) -> () = load_glSecondaryColor3sEXT
func load_glSecondaryColor3sEXT(red:GL.Short, green:GL.Short, blue:GL.Short)
{
    fp_glSecondaryColor3sEXT = unsafeBitCast(get_fp("glSecondaryColor3sEXT", support: [ss181]), to: Swift.type(of: fp_glSecondaryColor3sEXT))
    fp_glSecondaryColor3sEXT(red, green, blue)
}
public
func glSecondaryColor3sEXT(red:GL.Short, green:GL.Short, blue:GL.Short)
{
    fp_glSecondaryColor3sEXT(red, green, blue)
}
public
func glSecondaryColor3sEXT(_ red:GL.Short, _ green:GL.Short, _ blue:GL.Short)
{
    fp_glSecondaryColor3sEXT(red, green, blue)
}

var fp_glSecondaryColor3sv:@convention(c) (UnsafePointer<GL.Short>?) -> () = load_glSecondaryColor3sv
func load_glSecondaryColor3sv(v:UnsafePointer<GL.Short>?)
{
    fp_glSecondaryColor3sv = unsafeBitCast(get_fp("glSecondaryColor3sv", support: [ss350, ss369]), to: Swift.type(of: fp_glSecondaryColor3sv))
    fp_glSecondaryColor3sv(v)
}
public
func glSecondaryColor3sv(v:UnsafePointer<GL.Short>?)
{
    fp_glSecondaryColor3sv(v)
}
public
func glSecondaryColor3sv(_ v:UnsafePointer<GL.Short>?)
{
    fp_glSecondaryColor3sv(v)
}

var fp_glSecondaryColor3svEXT:@convention(c) (UnsafePointer<GL.Short>?) -> () = load_glSecondaryColor3svEXT
func load_glSecondaryColor3svEXT(v:UnsafePointer<GL.Short>?)
{
    fp_glSecondaryColor3svEXT = unsafeBitCast(get_fp("glSecondaryColor3svEXT", support: [ss181]), to: Swift.type(of: fp_glSecondaryColor3svEXT))
    fp_glSecondaryColor3svEXT(v)
}
public
func glSecondaryColor3svEXT(v:UnsafePointer<GL.Short>?)
{
    fp_glSecondaryColor3svEXT(v)
}
public
func glSecondaryColor3svEXT(_ v:UnsafePointer<GL.Short>?)
{
    fp_glSecondaryColor3svEXT(v)
}

var fp_glSecondaryColor3ub:@convention(c) (GL.UByte, GL.UByte, GL.UByte) -> () = load_glSecondaryColor3ub
func load_glSecondaryColor3ub(red:GL.UByte, green:GL.UByte, blue:GL.UByte)
{
    fp_glSecondaryColor3ub = unsafeBitCast(get_fp("glSecondaryColor3ub", support: [ss350, ss369]), to: Swift.type(of: fp_glSecondaryColor3ub))
    fp_glSecondaryColor3ub(red, green, blue)
}
public
func glSecondaryColor3ub(red:GL.UByte, green:GL.UByte, blue:GL.UByte)
{
    fp_glSecondaryColor3ub(red, green, blue)
}
public
func glSecondaryColor3ub(_ red:GL.UByte, _ green:GL.UByte, _ blue:GL.UByte)
{
    fp_glSecondaryColor3ub(red, green, blue)
}

var fp_glSecondaryColor3ubEXT:@convention(c) (GL.UByte, GL.UByte, GL.UByte) -> () = load_glSecondaryColor3ubEXT
func load_glSecondaryColor3ubEXT(red:GL.UByte, green:GL.UByte, blue:GL.UByte)
{
    fp_glSecondaryColor3ubEXT = unsafeBitCast(get_fp("glSecondaryColor3ubEXT", support: [ss181]), to: Swift.type(of: fp_glSecondaryColor3ubEXT))
    fp_glSecondaryColor3ubEXT(red, green, blue)
}
public
func glSecondaryColor3ubEXT(red:GL.UByte, green:GL.UByte, blue:GL.UByte)
{
    fp_glSecondaryColor3ubEXT(red, green, blue)
}
public
func glSecondaryColor3ubEXT(_ red:GL.UByte, _ green:GL.UByte, _ blue:GL.UByte)
{
    fp_glSecondaryColor3ubEXT(red, green, blue)
}

var fp_glSecondaryColor3ubv:@convention(c) (UnsafePointer<GL.UByte>?) -> () = load_glSecondaryColor3ubv
func load_glSecondaryColor3ubv(v:UnsafePointer<GL.UByte>?)
{
    fp_glSecondaryColor3ubv = unsafeBitCast(get_fp("glSecondaryColor3ubv", support: [ss350, ss369]), to: Swift.type(of: fp_glSecondaryColor3ubv))
    fp_glSecondaryColor3ubv(v)
}
public
func glSecondaryColor3ubv(v:UnsafePointer<GL.UByte>?)
{
    fp_glSecondaryColor3ubv(v)
}
public
func glSecondaryColor3ubv(_ v:UnsafePointer<GL.UByte>?)
{
    fp_glSecondaryColor3ubv(v)
}

var fp_glSecondaryColor3ubvEXT:@convention(c) (UnsafePointer<GL.UByte>?) -> () = load_glSecondaryColor3ubvEXT
func load_glSecondaryColor3ubvEXT(v:UnsafePointer<GL.UByte>?)
{
    fp_glSecondaryColor3ubvEXT = unsafeBitCast(get_fp("glSecondaryColor3ubvEXT", support: [ss181]), to: Swift.type(of: fp_glSecondaryColor3ubvEXT))
    fp_glSecondaryColor3ubvEXT(v)
}
public
func glSecondaryColor3ubvEXT(v:UnsafePointer<GL.UByte>?)
{
    fp_glSecondaryColor3ubvEXT(v)
}
public
func glSecondaryColor3ubvEXT(_ v:UnsafePointer<GL.UByte>?)
{
    fp_glSecondaryColor3ubvEXT(v)
}

var fp_glSecondaryColor3ui:@convention(c) (GL.UInt, GL.UInt, GL.UInt) -> () = load_glSecondaryColor3ui
func load_glSecondaryColor3ui(red:GL.UInt, green:GL.UInt, blue:GL.UInt)
{
    fp_glSecondaryColor3ui = unsafeBitCast(get_fp("glSecondaryColor3ui", support: [ss350, ss369]), to: Swift.type(of: fp_glSecondaryColor3ui))
    fp_glSecondaryColor3ui(red, green, blue)
}
public
func glSecondaryColor3ui(red:GL.UInt, green:GL.UInt, blue:GL.UInt)
{
    fp_glSecondaryColor3ui(red, green, blue)
}
public
func glSecondaryColor3ui(_ red:GL.UInt, _ green:GL.UInt, _ blue:GL.UInt)
{
    fp_glSecondaryColor3ui(red, green, blue)
}

var fp_glSecondaryColor3uiEXT:@convention(c) (GL.UInt, GL.UInt, GL.UInt) -> () = load_glSecondaryColor3uiEXT
func load_glSecondaryColor3uiEXT(red:GL.UInt, green:GL.UInt, blue:GL.UInt)
{
    fp_glSecondaryColor3uiEXT = unsafeBitCast(get_fp("glSecondaryColor3uiEXT", support: [ss181]), to: Swift.type(of: fp_glSecondaryColor3uiEXT))
    fp_glSecondaryColor3uiEXT(red, green, blue)
}
public
func glSecondaryColor3uiEXT(red:GL.UInt, green:GL.UInt, blue:GL.UInt)
{
    fp_glSecondaryColor3uiEXT(red, green, blue)
}
public
func glSecondaryColor3uiEXT(_ red:GL.UInt, _ green:GL.UInt, _ blue:GL.UInt)
{
    fp_glSecondaryColor3uiEXT(red, green, blue)
}

var fp_glSecondaryColor3uiv:@convention(c) (UnsafePointer<GL.UInt>?) -> () = load_glSecondaryColor3uiv
func load_glSecondaryColor3uiv(v:UnsafePointer<GL.UInt>?)
{
    fp_glSecondaryColor3uiv = unsafeBitCast(get_fp("glSecondaryColor3uiv", support: [ss350, ss369]), to: Swift.type(of: fp_glSecondaryColor3uiv))
    fp_glSecondaryColor3uiv(v)
}
public
func glSecondaryColor3uiv(v:UnsafePointer<GL.UInt>?)
{
    fp_glSecondaryColor3uiv(v)
}
public
func glSecondaryColor3uiv(_ v:UnsafePointer<GL.UInt>?)
{
    fp_glSecondaryColor3uiv(v)
}

var fp_glSecondaryColor3uivEXT:@convention(c) (UnsafePointer<GL.UInt>?) -> () = load_glSecondaryColor3uivEXT
func load_glSecondaryColor3uivEXT(v:UnsafePointer<GL.UInt>?)
{
    fp_glSecondaryColor3uivEXT = unsafeBitCast(get_fp("glSecondaryColor3uivEXT", support: [ss181]), to: Swift.type(of: fp_glSecondaryColor3uivEXT))
    fp_glSecondaryColor3uivEXT(v)
}
public
func glSecondaryColor3uivEXT(v:UnsafePointer<GL.UInt>?)
{
    fp_glSecondaryColor3uivEXT(v)
}
public
func glSecondaryColor3uivEXT(_ v:UnsafePointer<GL.UInt>?)
{
    fp_glSecondaryColor3uivEXT(v)
}

var fp_glSecondaryColor3us:@convention(c) (GL.UShort, GL.UShort, GL.UShort) -> () = load_glSecondaryColor3us
func load_glSecondaryColor3us(red:GL.UShort, green:GL.UShort, blue:GL.UShort)
{
    fp_glSecondaryColor3us = unsafeBitCast(get_fp("glSecondaryColor3us", support: [ss350, ss369]), to: Swift.type(of: fp_glSecondaryColor3us))
    fp_glSecondaryColor3us(red, green, blue)
}
public
func glSecondaryColor3us(red:GL.UShort, green:GL.UShort, blue:GL.UShort)
{
    fp_glSecondaryColor3us(red, green, blue)
}
public
func glSecondaryColor3us(_ red:GL.UShort, _ green:GL.UShort, _ blue:GL.UShort)
{
    fp_glSecondaryColor3us(red, green, blue)
}

var fp_glSecondaryColor3usEXT:@convention(c) (GL.UShort, GL.UShort, GL.UShort) -> () = load_glSecondaryColor3usEXT
func load_glSecondaryColor3usEXT(red:GL.UShort, green:GL.UShort, blue:GL.UShort)
{
    fp_glSecondaryColor3usEXT = unsafeBitCast(get_fp("glSecondaryColor3usEXT", support: [ss181]), to: Swift.type(of: fp_glSecondaryColor3usEXT))
    fp_glSecondaryColor3usEXT(red, green, blue)
}
public
func glSecondaryColor3usEXT(red:GL.UShort, green:GL.UShort, blue:GL.UShort)
{
    fp_glSecondaryColor3usEXT(red, green, blue)
}
public
func glSecondaryColor3usEXT(_ red:GL.UShort, _ green:GL.UShort, _ blue:GL.UShort)
{
    fp_glSecondaryColor3usEXT(red, green, blue)
}

var fp_glSecondaryColor3usv:@convention(c) (UnsafePointer<GL.UShort>?) -> () = load_glSecondaryColor3usv
func load_glSecondaryColor3usv(v:UnsafePointer<GL.UShort>?)
{
    fp_glSecondaryColor3usv = unsafeBitCast(get_fp("glSecondaryColor3usv", support: [ss350, ss369]), to: Swift.type(of: fp_glSecondaryColor3usv))
    fp_glSecondaryColor3usv(v)
}
public
func glSecondaryColor3usv(v:UnsafePointer<GL.UShort>?)
{
    fp_glSecondaryColor3usv(v)
}
public
func glSecondaryColor3usv(_ v:UnsafePointer<GL.UShort>?)
{
    fp_glSecondaryColor3usv(v)
}

var fp_glSecondaryColor3usvEXT:@convention(c) (UnsafePointer<GL.UShort>?) -> () = load_glSecondaryColor3usvEXT
func load_glSecondaryColor3usvEXT(v:UnsafePointer<GL.UShort>?)
{
    fp_glSecondaryColor3usvEXT = unsafeBitCast(get_fp("glSecondaryColor3usvEXT", support: [ss181]), to: Swift.type(of: fp_glSecondaryColor3usvEXT))
    fp_glSecondaryColor3usvEXT(v)
}
public
func glSecondaryColor3usvEXT(v:UnsafePointer<GL.UShort>?)
{
    fp_glSecondaryColor3usvEXT(v)
}
public
func glSecondaryColor3usvEXT(_ v:UnsafePointer<GL.UShort>?)
{
    fp_glSecondaryColor3usvEXT(v)
}

var fp_glSecondaryColorFormatNV:@convention(c) (GL.Int, GL.Enum, GL.Size) -> () = load_glSecondaryColorFormatNV
func load_glSecondaryColorFormatNV(size:GL.Int, type:GL.Enum, stride:GL.Size)
{
    fp_glSecondaryColorFormatNV = unsafeBitCast(get_fp("glSecondaryColorFormatNV", support: [ss277]), to: Swift.type(of: fp_glSecondaryColorFormatNV))
    fp_glSecondaryColorFormatNV(size, type, stride)
}
public
func glSecondaryColorFormatNV(size:GL.Int, type:GL.Enum, stride:GL.Size)
{
    fp_glSecondaryColorFormatNV(size, type, stride)
}
public
func glSecondaryColorFormatNV(_ size:GL.Int, _ type:GL.Enum, _ stride:GL.Size)
{
    fp_glSecondaryColorFormatNV(size, type, stride)
}

var fp_glSecondaryColorP3ui:@convention(c) (GL.Enum, GL.UInt) -> () = load_glSecondaryColorP3ui
func load_glSecondaryColorP3ui(type:GL.Enum, color:GL.UInt)
{
    fp_glSecondaryColorP3ui = unsafeBitCast(get_fp("glSecondaryColorP3ui", support: [ss357, ss112]), to: Swift.type(of: fp_glSecondaryColorP3ui))
    fp_glSecondaryColorP3ui(type, color)
}
public
func glSecondaryColorP3ui(type:GL.Enum, color:GL.UInt)
{
    fp_glSecondaryColorP3ui(type, color)
}
public
func glSecondaryColorP3ui(_ type:GL.Enum, _ color:GL.UInt)
{
    fp_glSecondaryColorP3ui(type, color)
}

var fp_glSecondaryColorP3uiv:@convention(c) (GL.Enum, UnsafePointer<GL.UInt>?) -> () = load_glSecondaryColorP3uiv
func load_glSecondaryColorP3uiv(type:GL.Enum, color:UnsafePointer<GL.UInt>?)
{
    fp_glSecondaryColorP3uiv = unsafeBitCast(get_fp("glSecondaryColorP3uiv", support: [ss357, ss112]), to: Swift.type(of: fp_glSecondaryColorP3uiv))
    fp_glSecondaryColorP3uiv(type, color)
}
public
func glSecondaryColorP3uiv(type:GL.Enum, color:UnsafePointer<GL.UInt>?)
{
    fp_glSecondaryColorP3uiv(type, color)
}
public
func glSecondaryColorP3uiv(_ type:GL.Enum, _ color:UnsafePointer<GL.UInt>?)
{
    fp_glSecondaryColorP3uiv(type, color)
}

var fp_glSecondaryColorPointer:@convention(c) (GL.Int, GL.Enum, GL.Size, UnsafeRawPointer?) -> () = load_glSecondaryColorPointer
func load_glSecondaryColorPointer(size:GL.Int, type:GL.Enum, stride:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glSecondaryColorPointer = unsafeBitCast(get_fp("glSecondaryColorPointer", support: [ss350, ss369]), to: Swift.type(of: fp_glSecondaryColorPointer))
    fp_glSecondaryColorPointer(size, type, stride, pointer)
}
public
func glSecondaryColorPointer(size:GL.Int, type:GL.Enum, stride:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glSecondaryColorPointer(size, type, stride, pointer)
}
public
func glSecondaryColorPointer(_ size:GL.Int, _ type:GL.Enum, _ stride:GL.Size, _ pointer:UnsafeRawPointer?)
{
    fp_glSecondaryColorPointer(size, type, stride, pointer)
}

var fp_glSecondaryColorPointerEXT:@convention(c) (GL.Int, GL.Enum, GL.Size, UnsafeRawPointer?) -> () = load_glSecondaryColorPointerEXT
func load_glSecondaryColorPointerEXT(size:GL.Int, type:GL.Enum, stride:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glSecondaryColorPointerEXT = unsafeBitCast(get_fp("glSecondaryColorPointerEXT", support: [ss181]), to: Swift.type(of: fp_glSecondaryColorPointerEXT))
    fp_glSecondaryColorPointerEXT(size, type, stride, pointer)
}
public
func glSecondaryColorPointerEXT(size:GL.Int, type:GL.Enum, stride:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glSecondaryColorPointerEXT(size, type, stride, pointer)
}
public
func glSecondaryColorPointerEXT(_ size:GL.Int, _ type:GL.Enum, _ stride:GL.Size, _ pointer:UnsafeRawPointer?)
{
    fp_glSecondaryColorPointerEXT(size, type, stride, pointer)
}

var fp_glSecondaryColorPointerListIBM:@convention(c) (GL.Int, GL.Enum, GL.Int, UnsafeMutablePointer<UnsafeRawPointer?>?, GL.Int) -> () = load_glSecondaryColorPointerListIBM
func load_glSecondaryColorPointerListIBM(size:GL.Int, type:GL.Enum, stride:GL.Int, pointer:UnsafeMutablePointer<UnsafeRawPointer?>?, ptrstride:GL.Int)
{
    fp_glSecondaryColorPointerListIBM = unsafeBitCast(get_fp("glSecondaryColorPointerListIBM", support: [ss212]), to: Swift.type(of: fp_glSecondaryColorPointerListIBM))
    fp_glSecondaryColorPointerListIBM(size, type, stride, pointer, ptrstride)
}
public
func glSecondaryColorPointerListIBM(size:GL.Int, type:GL.Enum, stride:GL.Int, pointer:UnsafeMutablePointer<UnsafeRawPointer?>?, ptrstride:GL.Int)
{
    fp_glSecondaryColorPointerListIBM(size, type, stride, pointer, ptrstride)
}
public
func glSecondaryColorPointerListIBM(_ size:GL.Int, _ type:GL.Enum, _ stride:GL.Int, _ pointer:UnsafeMutablePointer<UnsafeRawPointer?>?, _ ptrstride:GL.Int)
{
    fp_glSecondaryColorPointerListIBM(size, type, stride, pointer, ptrstride)
}

var fp_glSelectBuffer:@convention(c) (GL.Size, UnsafeMutablePointer<GL.UInt>?) -> () = load_glSelectBuffer
func load_glSelectBuffer(size:GL.Size, buffer:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glSelectBuffer = unsafeBitCast(get_fp("glSelectBuffer", support: [ss346, ss369]), to: Swift.type(of: fp_glSelectBuffer))
    fp_glSelectBuffer(size, buffer)
}
public
func glSelectBuffer(size:GL.Size, buffer:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glSelectBuffer(size, buffer)
}
public
func glSelectBuffer(_ size:GL.Size, _ buffer:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glSelectBuffer(size, buffer)
}

var fp_glSelectPerfMonitorCountersAMD:@convention(c) (GL.UInt, GL.Bool, GL.UInt, GL.Int, UnsafeMutablePointer<GL.UInt>?) -> () = load_glSelectPerfMonitorCountersAMD
func load_glSelectPerfMonitorCountersAMD(monitor:GL.UInt, enable:GL.Bool, group:GL.UInt, numCounters:GL.Int, counterList:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glSelectPerfMonitorCountersAMD = unsafeBitCast(get_fp("glSelectPerfMonitorCountersAMD", support: [ss8]), to: Swift.type(of: fp_glSelectPerfMonitorCountersAMD))
    fp_glSelectPerfMonitorCountersAMD(monitor, enable, group, numCounters, counterList)
}
public
func glSelectPerfMonitorCountersAMD(monitor:GL.UInt, enable:GL.Bool, group:GL.UInt, numCounters:GL.Int, counterList:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glSelectPerfMonitorCountersAMD(monitor, enable, group, numCounters, counterList)
}
public
func glSelectPerfMonitorCountersAMD(_ monitor:GL.UInt, _ enable:GL.Bool, _ group:GL.UInt, _ numCounters:GL.Int, _ counterList:UnsafeMutablePointer<GL.UInt>?)
{
    fp_glSelectPerfMonitorCountersAMD(monitor, enable, group, numCounters, counterList)
}

var fp_glSeparableFilter2D:@convention(c) (GL.Enum, GL.Enum, GL.Size, GL.Size, GL.Enum, GL.Enum, UnsafeRawPointer?, UnsafeRawPointer?) -> () = load_glSeparableFilter2D
func load_glSeparableFilter2D(target:GL.Enum, internalformat:GL.Enum, width:GL.Size, height:GL.Size, format:GL.Enum, type:GL.Enum, row:UnsafeRawPointer?, column:UnsafeRawPointer?)
{
    fp_glSeparableFilter2D = unsafeBitCast(get_fp("glSeparableFilter2D", support: [ss59]), to: Swift.type(of: fp_glSeparableFilter2D))
    fp_glSeparableFilter2D(target, internalformat, width, height, format, type, row, column)
}
public
func glSeparableFilter2D(target:GL.Enum, internalformat:GL.Enum, width:GL.Size, height:GL.Size, format:GL.Enum, type:GL.Enum, row:UnsafeRawPointer?, column:UnsafeRawPointer?)
{
    fp_glSeparableFilter2D(target, internalformat, width, height, format, type, row, column)
}
public
func glSeparableFilter2D(_ target:GL.Enum, _ internalformat:GL.Enum, _ width:GL.Size, _ height:GL.Size, _ format:GL.Enum, _ type:GL.Enum, _ row:UnsafeRawPointer?, _ column:UnsafeRawPointer?)
{
    fp_glSeparableFilter2D(target, internalformat, width, height, format, type, row, column)
}

var fp_glSeparableFilter2DEXT:@convention(c) (GL.Enum, GL.Enum, GL.Size, GL.Size, GL.Enum, GL.Enum, UnsafeRawPointer?, UnsafeRawPointer?) -> () = load_glSeparableFilter2DEXT
func load_glSeparableFilter2DEXT(target:GL.Enum, internalformat:GL.Enum, width:GL.Size, height:GL.Size, format:GL.Enum, type:GL.Enum, row:UnsafeRawPointer?, column:UnsafeRawPointer?)
{
    fp_glSeparableFilter2DEXT = unsafeBitCast(get_fp("glSeparableFilter2DEXT", support: [ss135]), to: Swift.type(of: fp_glSeparableFilter2DEXT))
    fp_glSeparableFilter2DEXT(target, internalformat, width, height, format, type, row, column)
}
public
func glSeparableFilter2DEXT(target:GL.Enum, internalformat:GL.Enum, width:GL.Size, height:GL.Size, format:GL.Enum, type:GL.Enum, row:UnsafeRawPointer?, column:UnsafeRawPointer?)
{
    fp_glSeparableFilter2DEXT(target, internalformat, width, height, format, type, row, column)
}
public
func glSeparableFilter2DEXT(_ target:GL.Enum, _ internalformat:GL.Enum, _ width:GL.Size, _ height:GL.Size, _ format:GL.Enum, _ type:GL.Enum, _ row:UnsafeRawPointer?, _ column:UnsafeRawPointer?)
{
    fp_glSeparableFilter2DEXT(target, internalformat, width, height, format, type, row, column)
}

var fp_glSetFenceAPPLE:@convention(c) (GL.UInt) -> () = load_glSetFenceAPPLE
func load_glSetFenceAPPLE(fence:GL.UInt)
{
    fp_glSetFenceAPPLE = unsafeBitCast(get_fp("glSetFenceAPPLE", support: [ss19]), to: Swift.type(of: fp_glSetFenceAPPLE))
    fp_glSetFenceAPPLE(fence)
}
public
func glSetFenceAPPLE(fence:GL.UInt)
{
    fp_glSetFenceAPPLE(fence)
}
public
func glSetFenceAPPLE(_ fence:GL.UInt)
{
    fp_glSetFenceAPPLE(fence)
}

var fp_glSetFenceNV:@convention(c) (GL.UInt, GL.Enum) -> () = load_glSetFenceNV
func load_glSetFenceNV(fence:GL.UInt, condition:GL.Enum)
{
    fp_glSetFenceNV = unsafeBitCast(get_fp("glSetFenceNV", support: [ss242]), to: Swift.type(of: fp_glSetFenceNV))
    fp_glSetFenceNV(fence, condition)
}
public
func glSetFenceNV(fence:GL.UInt, condition:GL.Enum)
{
    fp_glSetFenceNV(fence, condition)
}
public
func glSetFenceNV(_ fence:GL.UInt, _ condition:GL.Enum)
{
    fp_glSetFenceNV(fence, condition)
}

var fp_glSetFragmentShaderConstantATI:@convention(c) (GL.UInt, UnsafePointer<GL.Float>?) -> () = load_glSetFragmentShaderConstantATI
func load_glSetFragmentShaderConstantATI(dst:GL.UInt, value:UnsafePointer<GL.Float>?)
{
    fp_glSetFragmentShaderConstantATI = unsafeBitCast(get_fp("glSetFragmentShaderConstantATI", support: [ss118]), to: Swift.type(of: fp_glSetFragmentShaderConstantATI))
    fp_glSetFragmentShaderConstantATI(dst, value)
}
public
func glSetFragmentShaderConstantATI(dst:GL.UInt, value:UnsafePointer<GL.Float>?)
{
    fp_glSetFragmentShaderConstantATI(dst, value)
}
public
func glSetFragmentShaderConstantATI(_ dst:GL.UInt, _ value:UnsafePointer<GL.Float>?)
{
    fp_glSetFragmentShaderConstantATI(dst, value)
}

var fp_glSetInvariantEXT:@convention(c) (GL.UInt, GL.Enum, UnsafeRawPointer?) -> () = load_glSetInvariantEXT
func load_glSetInvariantEXT(id:GL.UInt, type:GL.Enum, addr:UnsafeRawPointer?)
{
    fp_glSetInvariantEXT = unsafeBitCast(get_fp("glSetInvariantEXT", support: [ss204]), to: Swift.type(of: fp_glSetInvariantEXT))
    fp_glSetInvariantEXT(id, type, addr)
}
public
func glSetInvariantEXT(id:GL.UInt, type:GL.Enum, addr:UnsafeRawPointer?)
{
    fp_glSetInvariantEXT(id, type, addr)
}
public
func glSetInvariantEXT(_ id:GL.UInt, _ type:GL.Enum, _ addr:UnsafeRawPointer?)
{
    fp_glSetInvariantEXT(id, type, addr)
}

var fp_glSetLocalConstantEXT:@convention(c) (GL.UInt, GL.Enum, UnsafeRawPointer?) -> () = load_glSetLocalConstantEXT
func load_glSetLocalConstantEXT(id:GL.UInt, type:GL.Enum, addr:UnsafeRawPointer?)
{
    fp_glSetLocalConstantEXT = unsafeBitCast(get_fp("glSetLocalConstantEXT", support: [ss204]), to: Swift.type(of: fp_glSetLocalConstantEXT))
    fp_glSetLocalConstantEXT(id, type, addr)
}
public
func glSetLocalConstantEXT(id:GL.UInt, type:GL.Enum, addr:UnsafeRawPointer?)
{
    fp_glSetLocalConstantEXT(id, type, addr)
}
public
func glSetLocalConstantEXT(_ id:GL.UInt, _ type:GL.Enum, _ addr:UnsafeRawPointer?)
{
    fp_glSetLocalConstantEXT(id, type, addr)
}

var fp_glSetMultisamplefvAMD:@convention(c) (GL.Enum, GL.UInt, UnsafePointer<GL.Float>?) -> () = load_glSetMultisamplefvAMD
func load_glSetMultisamplefvAMD(pname:GL.Enum, index:GL.UInt, val:UnsafePointer<GL.Float>?)
{
    fp_glSetMultisamplefvAMD = unsafeBitCast(get_fp("glSetMultisamplefvAMD", support: [ss9]), to: Swift.type(of: fp_glSetMultisamplefvAMD))
    fp_glSetMultisamplefvAMD(pname, index, val)
}
public
func glSetMultisamplefvAMD(pname:GL.Enum, index:GL.UInt, val:UnsafePointer<GL.Float>?)
{
    fp_glSetMultisamplefvAMD(pname, index, val)
}
public
func glSetMultisamplefvAMD(_ pname:GL.Enum, _ index:GL.UInt, _ val:UnsafePointer<GL.Float>?)
{
    fp_glSetMultisamplefvAMD(pname, index, val)
}

var fp_glShadeModel:@convention(c) (GL.Enum) -> () = load_glShadeModel
func load_glShadeModel(mode:GL.Enum)
{
    fp_glShadeModel = unsafeBitCast(get_fp("glShadeModel", support: [ss346, ss369, ss364]), to: Swift.type(of: fp_glShadeModel))
    fp_glShadeModel(mode)
}
public
func glShadeModel(mode:GL.Enum)
{
    fp_glShadeModel(mode)
}
public
func glShadeModel(_ mode:GL.Enum)
{
    fp_glShadeModel(mode)
}

var fp_glShaderBinary:@convention(c) (GL.Size, UnsafePointer<GL.UInt>?, GL.Enum, UnsafeRawPointer?, GL.Size) -> () = load_glShaderBinary
func load_glShaderBinary(count:GL.Size, shaders:UnsafePointer<GL.UInt>?, binaryformat:GL.Enum, binary:UnsafeRawPointer?, length:GL.Size)
{
    fp_glShaderBinary = unsafeBitCast(get_fp("glShaderBinary", support: [ss359, ss365, ss48]), to: Swift.type(of: fp_glShaderBinary))
    fp_glShaderBinary(count, shaders, binaryformat, binary, length)
}
public
func glShaderBinary(count:GL.Size, shaders:UnsafePointer<GL.UInt>?, binaryformat:GL.Enum, binary:UnsafeRawPointer?, length:GL.Size)
{
    fp_glShaderBinary(count, shaders, binaryformat, binary, length)
}
public
func glShaderBinary(_ count:GL.Size, _ shaders:UnsafePointer<GL.UInt>?, _ binaryformat:GL.Enum, _ binary:UnsafeRawPointer?, _ length:GL.Size)
{
    fp_glShaderBinary(count, shaders, binaryformat, binary, length)
}

var fp_glShaderOp1EXT:@convention(c) (GL.Enum, GL.UInt, GL.UInt) -> () = load_glShaderOp1EXT
func load_glShaderOp1EXT(op:GL.Enum, res:GL.UInt, arg1:GL.UInt)
{
    fp_glShaderOp1EXT = unsafeBitCast(get_fp("glShaderOp1EXT", support: [ss204]), to: Swift.type(of: fp_glShaderOp1EXT))
    fp_glShaderOp1EXT(op, res, arg1)
}
public
func glShaderOp1EXT(op:GL.Enum, res:GL.UInt, arg1:GL.UInt)
{
    fp_glShaderOp1EXT(op, res, arg1)
}
public
func glShaderOp1EXT(_ op:GL.Enum, _ res:GL.UInt, _ arg1:GL.UInt)
{
    fp_glShaderOp1EXT(op, res, arg1)
}

var fp_glShaderOp2EXT:@convention(c) (GL.Enum, GL.UInt, GL.UInt, GL.UInt) -> () = load_glShaderOp2EXT
func load_glShaderOp2EXT(op:GL.Enum, res:GL.UInt, arg1:GL.UInt, arg2:GL.UInt)
{
    fp_glShaderOp2EXT = unsafeBitCast(get_fp("glShaderOp2EXT", support: [ss204]), to: Swift.type(of: fp_glShaderOp2EXT))
    fp_glShaderOp2EXT(op, res, arg1, arg2)
}
public
func glShaderOp2EXT(op:GL.Enum, res:GL.UInt, arg1:GL.UInt, arg2:GL.UInt)
{
    fp_glShaderOp2EXT(op, res, arg1, arg2)
}
public
func glShaderOp2EXT(_ op:GL.Enum, _ res:GL.UInt, _ arg1:GL.UInt, _ arg2:GL.UInt)
{
    fp_glShaderOp2EXT(op, res, arg1, arg2)
}

var fp_glShaderOp3EXT:@convention(c) (GL.Enum, GL.UInt, GL.UInt, GL.UInt, GL.UInt) -> () = load_glShaderOp3EXT
func load_glShaderOp3EXT(op:GL.Enum, res:GL.UInt, arg1:GL.UInt, arg2:GL.UInt, arg3:GL.UInt)
{
    fp_glShaderOp3EXT = unsafeBitCast(get_fp("glShaderOp3EXT", support: [ss204]), to: Swift.type(of: fp_glShaderOp3EXT))
    fp_glShaderOp3EXT(op, res, arg1, arg2, arg3)
}
public
func glShaderOp3EXT(op:GL.Enum, res:GL.UInt, arg1:GL.UInt, arg2:GL.UInt, arg3:GL.UInt)
{
    fp_glShaderOp3EXT(op, res, arg1, arg2, arg3)
}
public
func glShaderOp3EXT(_ op:GL.Enum, _ res:GL.UInt, _ arg1:GL.UInt, _ arg2:GL.UInt, _ arg3:GL.UInt)
{
    fp_glShaderOp3EXT(op, res, arg1, arg2, arg3)
}

var fp_glShaderSource:@convention(c) (GL.UInt, GL.Size, UnsafePointer<UnsafePointer<GL.Char>?>?, UnsafePointer<GL.Int>?) -> () = load_glShaderSource
func load_glShaderSource(shader:GL.UInt, count:GL.Size, string:UnsafePointer<UnsafePointer<GL.Char>?>?, length:UnsafePointer<GL.Int>?)
{
    fp_glShaderSource = unsafeBitCast(get_fp("glShaderSource", support: [ss352, ss365]), to: Swift.type(of: fp_glShaderSource))
    fp_glShaderSource(shader, count, string, length)
}
public
func glShaderSource(shader:GL.UInt, count:GL.Size, string:UnsafePointer<UnsafePointer<GL.Char>?>?, length:UnsafePointer<GL.Int>?)
{
    fp_glShaderSource(shader, count, string, length)
}
public
func glShaderSource(_ shader:GL.UInt, _ count:GL.Size, _ string:UnsafePointer<UnsafePointer<GL.Char>?>?, _ length:UnsafePointer<GL.Int>?)
{
    fp_glShaderSource(shader, count, string, length)
}

var fp_glShaderSourceARB:@convention(c) (GL.HandleARB, GL.Size, UnsafeMutablePointer<UnsafeMutablePointer<GL.CharARB>?>?, UnsafePointer<GL.Int>?) -> () = load_glShaderSourceARB
func load_glShaderSourceARB(shaderObj:GL.HandleARB, count:GL.Size, string:UnsafeMutablePointer<UnsafeMutablePointer<GL.CharARB>?>?, length:UnsafePointer<GL.Int>?)
{
    fp_glShaderSourceARB = unsafeBitCast(get_fp("glShaderSourceARB", support: [ss83]), to: Swift.type(of: fp_glShaderSourceARB))
    fp_glShaderSourceARB(shaderObj, count, string, length)
}
public
func glShaderSourceARB(shaderObj:GL.HandleARB, count:GL.Size, string:UnsafeMutablePointer<UnsafeMutablePointer<GL.CharARB>?>?, length:UnsafePointer<GL.Int>?)
{
    fp_glShaderSourceARB(shaderObj, count, string, length)
}
public
func glShaderSourceARB(_ shaderObj:GL.HandleARB, _ count:GL.Size, _ string:UnsafeMutablePointer<UnsafeMutablePointer<GL.CharARB>?>?, _ length:UnsafePointer<GL.Int>?)
{
    fp_glShaderSourceARB(shaderObj, count, string, length)
}

var fp_glShaderStorageBlockBinding:@convention(c) (GL.UInt, GL.UInt, GL.UInt) -> () = load_glShaderStorageBlockBinding
func load_glShaderStorageBlockBinding(program:GL.UInt, storageBlockIndex:GL.UInt, storageBlockBinding:GL.UInt)
{
    fp_glShaderStorageBlockBinding = unsafeBitCast(get_fp("glShaderStorageBlockBinding", support: [ss361, ss84]), to: Swift.type(of: fp_glShaderStorageBlockBinding))
    fp_glShaderStorageBlockBinding(program, storageBlockIndex, storageBlockBinding)
}
public
func glShaderStorageBlockBinding(program:GL.UInt, storageBlockIndex:GL.UInt, storageBlockBinding:GL.UInt)
{
    fp_glShaderStorageBlockBinding(program, storageBlockIndex, storageBlockBinding)
}
public
func glShaderStorageBlockBinding(_ program:GL.UInt, _ storageBlockIndex:GL.UInt, _ storageBlockBinding:GL.UInt)
{
    fp_glShaderStorageBlockBinding(program, storageBlockIndex, storageBlockBinding)
}

var fp_glSharpenTexFuncSGIS:@convention(c) (GL.Enum, GL.Size, UnsafePointer<GL.Float>?) -> () = load_glSharpenTexFuncSGIS
func load_glSharpenTexFuncSGIS(target:GL.Enum, n:GL.Size, points:UnsafePointer<GL.Float>?)
{
    fp_glSharpenTexFuncSGIS = unsafeBitCast(get_fp("glSharpenTexFuncSGIS", support: [ss325]), to: Swift.type(of: fp_glSharpenTexFuncSGIS))
    fp_glSharpenTexFuncSGIS(target, n, points)
}
public
func glSharpenTexFuncSGIS(target:GL.Enum, n:GL.Size, points:UnsafePointer<GL.Float>?)
{
    fp_glSharpenTexFuncSGIS(target, n, points)
}
public
func glSharpenTexFuncSGIS(_ target:GL.Enum, _ n:GL.Size, _ points:UnsafePointer<GL.Float>?)
{
    fp_glSharpenTexFuncSGIS(target, n, points)
}

var fp_glSpriteParameterfSGIX:@convention(c) (GL.Enum, GL.Float) -> () = load_glSpriteParameterfSGIX
func load_glSpriteParameterfSGIX(pname:GL.Enum, param:GL.Float)
{
    fp_glSpriteParameterfSGIX = unsafeBitCast(get_fp("glSpriteParameterfSGIX", support: [ss339]), to: Swift.type(of: fp_glSpriteParameterfSGIX))
    fp_glSpriteParameterfSGIX(pname, param)
}
public
func glSpriteParameterfSGIX(pname:GL.Enum, param:GL.Float)
{
    fp_glSpriteParameterfSGIX(pname, param)
}
public
func glSpriteParameterfSGIX(_ pname:GL.Enum, _ param:GL.Float)
{
    fp_glSpriteParameterfSGIX(pname, param)
}

var fp_glSpriteParameterfvSGIX:@convention(c) (GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glSpriteParameterfvSGIX
func load_glSpriteParameterfvSGIX(pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glSpriteParameterfvSGIX = unsafeBitCast(get_fp("glSpriteParameterfvSGIX", support: [ss339]), to: Swift.type(of: fp_glSpriteParameterfvSGIX))
    fp_glSpriteParameterfvSGIX(pname, params)
}
public
func glSpriteParameterfvSGIX(pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glSpriteParameterfvSGIX(pname, params)
}
public
func glSpriteParameterfvSGIX(_ pname:GL.Enum, _ params:UnsafePointer<GL.Float>?)
{
    fp_glSpriteParameterfvSGIX(pname, params)
}

var fp_glSpriteParameteriSGIX:@convention(c) (GL.Enum, GL.Int) -> () = load_glSpriteParameteriSGIX
func load_glSpriteParameteriSGIX(pname:GL.Enum, param:GL.Int)
{
    fp_glSpriteParameteriSGIX = unsafeBitCast(get_fp("glSpriteParameteriSGIX", support: [ss339]), to: Swift.type(of: fp_glSpriteParameteriSGIX))
    fp_glSpriteParameteriSGIX(pname, param)
}
public
func glSpriteParameteriSGIX(pname:GL.Enum, param:GL.Int)
{
    fp_glSpriteParameteriSGIX(pname, param)
}
public
func glSpriteParameteriSGIX(_ pname:GL.Enum, _ param:GL.Int)
{
    fp_glSpriteParameteriSGIX(pname, param)
}

var fp_glSpriteParameterivSGIX:@convention(c) (GL.Enum, UnsafePointer<GL.Int>?) -> () = load_glSpriteParameterivSGIX
func load_glSpriteParameterivSGIX(pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glSpriteParameterivSGIX = unsafeBitCast(get_fp("glSpriteParameterivSGIX", support: [ss339]), to: Swift.type(of: fp_glSpriteParameterivSGIX))
    fp_glSpriteParameterivSGIX(pname, params)
}
public
func glSpriteParameterivSGIX(pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glSpriteParameterivSGIX(pname, params)
}
public
func glSpriteParameterivSGIX(_ pname:GL.Enum, _ params:UnsafePointer<GL.Int>?)
{
    fp_glSpriteParameterivSGIX(pname, params)
}

var fp_glStartInstrumentsSGIX:@convention(c) () -> () = load_glStartInstrumentsSGIX
func load_glStartInstrumentsSGIX()
{
    fp_glStartInstrumentsSGIX = unsafeBitCast(get_fp("glStartInstrumentsSGIX", support: [ss334]), to: Swift.type(of: fp_glStartInstrumentsSGIX))
    fp_glStartInstrumentsSGIX()
}
public
func glStartInstrumentsSGIX()
{
    fp_glStartInstrumentsSGIX()
}

var fp_glStartTilingQCOM:@convention(c) (GL.UInt, GL.UInt, GL.UInt, GL.UInt, GL.Bitfield) -> () = load_glStartTilingQCOM
func load_glStartTilingQCOM(x:GL.UInt, y:GL.UInt, width:GL.UInt, height:GL.UInt, preserveMask:GL.Bitfield)
{
    fp_glStartTilingQCOM = unsafeBitCast(get_fp("glStartTilingQCOM", support: [ss318]), to: Swift.type(of: fp_glStartTilingQCOM))
    fp_glStartTilingQCOM(x, y, width, height, preserveMask)
}
public
func glStartTilingQCOM(x:GL.UInt, y:GL.UInt, width:GL.UInt, height:GL.UInt, preserveMask:GL.Bitfield)
{
    fp_glStartTilingQCOM(x, y, width, height, preserveMask)
}
public
func glStartTilingQCOM(_ x:GL.UInt, _ y:GL.UInt, _ width:GL.UInt, _ height:GL.UInt, _ preserveMask:GL.Bitfield)
{
    fp_glStartTilingQCOM(x, y, width, height, preserveMask)
}

var fp_glStateCaptureNV:@convention(c) (GL.UInt, GL.Enum) -> () = load_glStateCaptureNV
func load_glStateCaptureNV(state:GL.UInt, mode:GL.Enum)
{
    fp_glStateCaptureNV = unsafeBitCast(get_fp("glStateCaptureNV", support: [ss229]), to: Swift.type(of: fp_glStateCaptureNV))
    fp_glStateCaptureNV(state, mode)
}
public
func glStateCaptureNV(state:GL.UInt, mode:GL.Enum)
{
    fp_glStateCaptureNV(state, mode)
}
public
func glStateCaptureNV(_ state:GL.UInt, _ mode:GL.Enum)
{
    fp_glStateCaptureNV(state, mode)
}

var fp_glStencilClearTagEXT:@convention(c) (GL.Size, GL.UInt) -> () = load_glStencilClearTagEXT
func load_glStencilClearTagEXT(stencilTagBits:GL.Size, stencilClearTag:GL.UInt)
{
    fp_glStencilClearTagEXT = unsafeBitCast(get_fp("glStencilClearTagEXT", support: [ss185]), to: Swift.type(of: fp_glStencilClearTagEXT))
    fp_glStencilClearTagEXT(stencilTagBits, stencilClearTag)
}
public
func glStencilClearTagEXT(stencilTagBits:GL.Size, stencilClearTag:GL.UInt)
{
    fp_glStencilClearTagEXT(stencilTagBits, stencilClearTag)
}
public
func glStencilClearTagEXT(_ stencilTagBits:GL.Size, _ stencilClearTag:GL.UInt)
{
    fp_glStencilClearTagEXT(stencilTagBits, stencilClearTag)
}

var fp_glStencilFillPathInstancedNV:@convention(c) (GL.Size, GL.Enum, UnsafeRawPointer?, GL.UInt, GL.Enum, GL.UInt, GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glStencilFillPathInstancedNV
func load_glStencilFillPathInstancedNV(numPaths:GL.Size, pathNameType:GL.Enum, paths:UnsafeRawPointer?, pathBase:GL.UInt, fillMode:GL.Enum, mask:GL.UInt, transformType:GL.Enum, transformValues:UnsafePointer<GL.Float>?)
{
    fp_glStencilFillPathInstancedNV = unsafeBitCast(get_fp("glStencilFillPathInstancedNV", support: [ss259]), to: Swift.type(of: fp_glStencilFillPathInstancedNV))
    fp_glStencilFillPathInstancedNV(numPaths, pathNameType, paths, pathBase, fillMode, mask, transformType, transformValues)
}
public
func glStencilFillPathInstancedNV(numPaths:GL.Size, pathNameType:GL.Enum, paths:UnsafeRawPointer?, pathBase:GL.UInt, fillMode:GL.Enum, mask:GL.UInt, transformType:GL.Enum, transformValues:UnsafePointer<GL.Float>?)
{
    fp_glStencilFillPathInstancedNV(numPaths, pathNameType, paths, pathBase, fillMode, mask, transformType, transformValues)
}
public
func glStencilFillPathInstancedNV(_ numPaths:GL.Size, _ pathNameType:GL.Enum, _ paths:UnsafeRawPointer?, _ pathBase:GL.UInt, _ fillMode:GL.Enum, _ mask:GL.UInt, _ transformType:GL.Enum, _ transformValues:UnsafePointer<GL.Float>?)
{
    fp_glStencilFillPathInstancedNV(numPaths, pathNameType, paths, pathBase, fillMode, mask, transformType, transformValues)
}

var fp_glStencilFillPathNV:@convention(c) (GL.UInt, GL.Enum, GL.UInt) -> () = load_glStencilFillPathNV
func load_glStencilFillPathNV(path:GL.UInt, fillMode:GL.Enum, mask:GL.UInt)
{
    fp_glStencilFillPathNV = unsafeBitCast(get_fp("glStencilFillPathNV", support: [ss259]), to: Swift.type(of: fp_glStencilFillPathNV))
    fp_glStencilFillPathNV(path, fillMode, mask)
}
public
func glStencilFillPathNV(path:GL.UInt, fillMode:GL.Enum, mask:GL.UInt)
{
    fp_glStencilFillPathNV(path, fillMode, mask)
}
public
func glStencilFillPathNV(_ path:GL.UInt, _ fillMode:GL.Enum, _ mask:GL.UInt)
{
    fp_glStencilFillPathNV(path, fillMode, mask)
}

var fp_glStencilFunc:@convention(c) (GL.Enum, GL.Int, GL.UInt) -> () = load_glStencilFunc
func load_glStencilFunc(f:GL.Enum, ref:GL.Int, mask:GL.UInt)
{
    fp_glStencilFunc = unsafeBitCast(get_fp("glStencilFunc", support: [ss346, ss365]), to: Swift.type(of: fp_glStencilFunc))
    fp_glStencilFunc(f, ref, mask)
}
public
func glStencilFunc(f:GL.Enum, ref:GL.Int, mask:GL.UInt)
{
    fp_glStencilFunc(f, ref, mask)
}
public
func glStencilFunc(_ f:GL.Enum, _ ref:GL.Int, _ mask:GL.UInt)
{
    fp_glStencilFunc(f, ref, mask)
}

var fp_glStencilFuncSeparate:@convention(c) (GL.Enum, GL.Enum, GL.Int, GL.UInt) -> () = load_glStencilFuncSeparate
func load_glStencilFuncSeparate(face:GL.Enum, f:GL.Enum, ref:GL.Int, mask:GL.UInt)
{
    fp_glStencilFuncSeparate = unsafeBitCast(get_fp("glStencilFuncSeparate", support: [ss352, ss365]), to: Swift.type(of: fp_glStencilFuncSeparate))
    fp_glStencilFuncSeparate(face, f, ref, mask)
}
public
func glStencilFuncSeparate(face:GL.Enum, f:GL.Enum, ref:GL.Int, mask:GL.UInt)
{
    fp_glStencilFuncSeparate(face, f, ref, mask)
}
public
func glStencilFuncSeparate(_ face:GL.Enum, _ f:GL.Enum, _ ref:GL.Int, _ mask:GL.UInt)
{
    fp_glStencilFuncSeparate(face, f, ref, mask)
}

var fp_glStencilFuncSeparateATI:@convention(c) (GL.Enum, GL.Enum, GL.Int, GL.UInt) -> () = load_glStencilFuncSeparateATI
func load_glStencilFuncSeparateATI(frontfunc:GL.Enum, backfunc:GL.Enum, ref:GL.Int, mask:GL.UInt)
{
    fp_glStencilFuncSeparateATI = unsafeBitCast(get_fp("glStencilFuncSeparateATI", support: [ss121]), to: Swift.type(of: fp_glStencilFuncSeparateATI))
    fp_glStencilFuncSeparateATI(frontfunc, backfunc, ref, mask)
}
public
func glStencilFuncSeparateATI(frontfunc:GL.Enum, backfunc:GL.Enum, ref:GL.Int, mask:GL.UInt)
{
    fp_glStencilFuncSeparateATI(frontfunc, backfunc, ref, mask)
}
public
func glStencilFuncSeparateATI(_ frontfunc:GL.Enum, _ backfunc:GL.Enum, _ ref:GL.Int, _ mask:GL.UInt)
{
    fp_glStencilFuncSeparateATI(frontfunc, backfunc, ref, mask)
}

var fp_glStencilMask:@convention(c) (GL.UInt) -> () = load_glStencilMask
func load_glStencilMask(mask:GL.UInt)
{
    fp_glStencilMask = unsafeBitCast(get_fp("glStencilMask", support: [ss346, ss365]), to: Swift.type(of: fp_glStencilMask))
    fp_glStencilMask(mask)
}
public
func glStencilMask(mask:GL.UInt)
{
    fp_glStencilMask(mask)
}
public
func glStencilMask(_ mask:GL.UInt)
{
    fp_glStencilMask(mask)
}

var fp_glStencilMaskSeparate:@convention(c) (GL.Enum, GL.UInt) -> () = load_glStencilMaskSeparate
func load_glStencilMaskSeparate(face:GL.Enum, mask:GL.UInt)
{
    fp_glStencilMaskSeparate = unsafeBitCast(get_fp("glStencilMaskSeparate", support: [ss352, ss365]), to: Swift.type(of: fp_glStencilMaskSeparate))
    fp_glStencilMaskSeparate(face, mask)
}
public
func glStencilMaskSeparate(face:GL.Enum, mask:GL.UInt)
{
    fp_glStencilMaskSeparate(face, mask)
}
public
func glStencilMaskSeparate(_ face:GL.Enum, _ mask:GL.UInt)
{
    fp_glStencilMaskSeparate(face, mask)
}

var fp_glStencilOp:@convention(c) (GL.Enum, GL.Enum, GL.Enum) -> () = load_glStencilOp
func load_glStencilOp(fail:GL.Enum, zfail:GL.Enum, zpass:GL.Enum)
{
    fp_glStencilOp = unsafeBitCast(get_fp("glStencilOp", support: [ss346, ss365]), to: Swift.type(of: fp_glStencilOp))
    fp_glStencilOp(fail, zfail, zpass)
}
public
func glStencilOp(fail:GL.Enum, zfail:GL.Enum, zpass:GL.Enum)
{
    fp_glStencilOp(fail, zfail, zpass)
}
public
func glStencilOp(_ fail:GL.Enum, _ zfail:GL.Enum, _ zpass:GL.Enum)
{
    fp_glStencilOp(fail, zfail, zpass)
}

var fp_glStencilOpSeparate:@convention(c) (GL.Enum, GL.Enum, GL.Enum, GL.Enum) -> () = load_glStencilOpSeparate
func load_glStencilOpSeparate(face:GL.Enum, sfail:GL.Enum, dpfail:GL.Enum, dppass:GL.Enum)
{
    fp_glStencilOpSeparate = unsafeBitCast(get_fp("glStencilOpSeparate", support: [ss352, ss365]), to: Swift.type(of: fp_glStencilOpSeparate))
    fp_glStencilOpSeparate(face, sfail, dpfail, dppass)
}
public
func glStencilOpSeparate(face:GL.Enum, sfail:GL.Enum, dpfail:GL.Enum, dppass:GL.Enum)
{
    fp_glStencilOpSeparate(face, sfail, dpfail, dppass)
}
public
func glStencilOpSeparate(_ face:GL.Enum, _ sfail:GL.Enum, _ dpfail:GL.Enum, _ dppass:GL.Enum)
{
    fp_glStencilOpSeparate(face, sfail, dpfail, dppass)
}

var fp_glStencilOpSeparateATI:@convention(c) (GL.Enum, GL.Enum, GL.Enum, GL.Enum) -> () = load_glStencilOpSeparateATI
func load_glStencilOpSeparateATI(face:GL.Enum, sfail:GL.Enum, dpfail:GL.Enum, dppass:GL.Enum)
{
    fp_glStencilOpSeparateATI = unsafeBitCast(get_fp("glStencilOpSeparateATI", support: [ss121]), to: Swift.type(of: fp_glStencilOpSeparateATI))
    fp_glStencilOpSeparateATI(face, sfail, dpfail, dppass)
}
public
func glStencilOpSeparateATI(face:GL.Enum, sfail:GL.Enum, dpfail:GL.Enum, dppass:GL.Enum)
{
    fp_glStencilOpSeparateATI(face, sfail, dpfail, dppass)
}
public
func glStencilOpSeparateATI(_ face:GL.Enum, _ sfail:GL.Enum, _ dpfail:GL.Enum, _ dppass:GL.Enum)
{
    fp_glStencilOpSeparateATI(face, sfail, dpfail, dppass)
}

var fp_glStencilOpValueAMD:@convention(c) (GL.Enum, GL.UInt) -> () = load_glStencilOpValueAMD
func load_glStencilOpValueAMD(face:GL.Enum, value:GL.UInt)
{
    fp_glStencilOpValueAMD = unsafeBitCast(get_fp("glStencilOpValueAMD", support: [ss11]), to: Swift.type(of: fp_glStencilOpValueAMD))
    fp_glStencilOpValueAMD(face, value)
}
public
func glStencilOpValueAMD(face:GL.Enum, value:GL.UInt)
{
    fp_glStencilOpValueAMD(face, value)
}
public
func glStencilOpValueAMD(_ face:GL.Enum, _ value:GL.UInt)
{
    fp_glStencilOpValueAMD(face, value)
}

var fp_glStencilStrokePathInstancedNV:@convention(c) (GL.Size, GL.Enum, UnsafeRawPointer?, GL.UInt, GL.Int, GL.UInt, GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glStencilStrokePathInstancedNV
func load_glStencilStrokePathInstancedNV(numPaths:GL.Size, pathNameType:GL.Enum, paths:UnsafeRawPointer?, pathBase:GL.UInt, reference:GL.Int, mask:GL.UInt, transformType:GL.Enum, transformValues:UnsafePointer<GL.Float>?)
{
    fp_glStencilStrokePathInstancedNV = unsafeBitCast(get_fp("glStencilStrokePathInstancedNV", support: [ss259]), to: Swift.type(of: fp_glStencilStrokePathInstancedNV))
    fp_glStencilStrokePathInstancedNV(numPaths, pathNameType, paths, pathBase, reference, mask, transformType, transformValues)
}
public
func glStencilStrokePathInstancedNV(numPaths:GL.Size, pathNameType:GL.Enum, paths:UnsafeRawPointer?, pathBase:GL.UInt, reference:GL.Int, mask:GL.UInt, transformType:GL.Enum, transformValues:UnsafePointer<GL.Float>?)
{
    fp_glStencilStrokePathInstancedNV(numPaths, pathNameType, paths, pathBase, reference, mask, transformType, transformValues)
}
public
func glStencilStrokePathInstancedNV(_ numPaths:GL.Size, _ pathNameType:GL.Enum, _ paths:UnsafeRawPointer?, _ pathBase:GL.UInt, _ reference:GL.Int, _ mask:GL.UInt, _ transformType:GL.Enum, _ transformValues:UnsafePointer<GL.Float>?)
{
    fp_glStencilStrokePathInstancedNV(numPaths, pathNameType, paths, pathBase, reference, mask, transformType, transformValues)
}

var fp_glStencilStrokePathNV:@convention(c) (GL.UInt, GL.Int, GL.UInt) -> () = load_glStencilStrokePathNV
func load_glStencilStrokePathNV(path:GL.UInt, reference:GL.Int, mask:GL.UInt)
{
    fp_glStencilStrokePathNV = unsafeBitCast(get_fp("glStencilStrokePathNV", support: [ss259]), to: Swift.type(of: fp_glStencilStrokePathNV))
    fp_glStencilStrokePathNV(path, reference, mask)
}
public
func glStencilStrokePathNV(path:GL.UInt, reference:GL.Int, mask:GL.UInt)
{
    fp_glStencilStrokePathNV(path, reference, mask)
}
public
func glStencilStrokePathNV(_ path:GL.UInt, _ reference:GL.Int, _ mask:GL.UInt)
{
    fp_glStencilStrokePathNV(path, reference, mask)
}

var fp_glStencilThenCoverFillPathInstancedNV:@convention(c) (GL.Size, GL.Enum, UnsafeRawPointer?, GL.UInt, GL.Enum, GL.UInt, GL.Enum, GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glStencilThenCoverFillPathInstancedNV
func load_glStencilThenCoverFillPathInstancedNV(numPaths:GL.Size, pathNameType:GL.Enum, paths:UnsafeRawPointer?, pathBase:GL.UInt, fillMode:GL.Enum, mask:GL.UInt, coverMode:GL.Enum, transformType:GL.Enum, transformValues:UnsafePointer<GL.Float>?)
{
    fp_glStencilThenCoverFillPathInstancedNV = unsafeBitCast(get_fp("glStencilThenCoverFillPathInstancedNV", support: [ss259]), to: Swift.type(of: fp_glStencilThenCoverFillPathInstancedNV))
    fp_glStencilThenCoverFillPathInstancedNV(numPaths, pathNameType, paths, pathBase, fillMode, mask, coverMode, transformType, transformValues)
}
public
func glStencilThenCoverFillPathInstancedNV(numPaths:GL.Size, pathNameType:GL.Enum, paths:UnsafeRawPointer?, pathBase:GL.UInt, fillMode:GL.Enum, mask:GL.UInt, coverMode:GL.Enum, transformType:GL.Enum, transformValues:UnsafePointer<GL.Float>?)
{
    fp_glStencilThenCoverFillPathInstancedNV(numPaths, pathNameType, paths, pathBase, fillMode, mask, coverMode, transformType, transformValues)
}
public
func glStencilThenCoverFillPathInstancedNV(_ numPaths:GL.Size, _ pathNameType:GL.Enum, _ paths:UnsafeRawPointer?, _ pathBase:GL.UInt, _ fillMode:GL.Enum, _ mask:GL.UInt, _ coverMode:GL.Enum, _ transformType:GL.Enum, _ transformValues:UnsafePointer<GL.Float>?)
{
    fp_glStencilThenCoverFillPathInstancedNV(numPaths, pathNameType, paths, pathBase, fillMode, mask, coverMode, transformType, transformValues)
}

var fp_glStencilThenCoverFillPathNV:@convention(c) (GL.UInt, GL.Enum, GL.UInt, GL.Enum) -> () = load_glStencilThenCoverFillPathNV
func load_glStencilThenCoverFillPathNV(path:GL.UInt, fillMode:GL.Enum, mask:GL.UInt, coverMode:GL.Enum)
{
    fp_glStencilThenCoverFillPathNV = unsafeBitCast(get_fp("glStencilThenCoverFillPathNV", support: [ss259]), to: Swift.type(of: fp_glStencilThenCoverFillPathNV))
    fp_glStencilThenCoverFillPathNV(path, fillMode, mask, coverMode)
}
public
func glStencilThenCoverFillPathNV(path:GL.UInt, fillMode:GL.Enum, mask:GL.UInt, coverMode:GL.Enum)
{
    fp_glStencilThenCoverFillPathNV(path, fillMode, mask, coverMode)
}
public
func glStencilThenCoverFillPathNV(_ path:GL.UInt, _ fillMode:GL.Enum, _ mask:GL.UInt, _ coverMode:GL.Enum)
{
    fp_glStencilThenCoverFillPathNV(path, fillMode, mask, coverMode)
}

var fp_glStencilThenCoverStrokePathInstancedNV:@convention(c) (GL.Size, GL.Enum, UnsafeRawPointer?, GL.UInt, GL.Int, GL.UInt, GL.Enum, GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glStencilThenCoverStrokePathInstancedNV
func load_glStencilThenCoverStrokePathInstancedNV(numPaths:GL.Size, pathNameType:GL.Enum, paths:UnsafeRawPointer?, pathBase:GL.UInt, reference:GL.Int, mask:GL.UInt, coverMode:GL.Enum, transformType:GL.Enum, transformValues:UnsafePointer<GL.Float>?)
{
    fp_glStencilThenCoverStrokePathInstancedNV = unsafeBitCast(get_fp("glStencilThenCoverStrokePathInstancedNV", support: [ss259]), to: Swift.type(of: fp_glStencilThenCoverStrokePathInstancedNV))
    fp_glStencilThenCoverStrokePathInstancedNV(numPaths, pathNameType, paths, pathBase, reference, mask, coverMode, transformType, transformValues)
}
public
func glStencilThenCoverStrokePathInstancedNV(numPaths:GL.Size, pathNameType:GL.Enum, paths:UnsafeRawPointer?, pathBase:GL.UInt, reference:GL.Int, mask:GL.UInt, coverMode:GL.Enum, transformType:GL.Enum, transformValues:UnsafePointer<GL.Float>?)
{
    fp_glStencilThenCoverStrokePathInstancedNV(numPaths, pathNameType, paths, pathBase, reference, mask, coverMode, transformType, transformValues)
}
public
func glStencilThenCoverStrokePathInstancedNV(_ numPaths:GL.Size, _ pathNameType:GL.Enum, _ paths:UnsafeRawPointer?, _ pathBase:GL.UInt, _ reference:GL.Int, _ mask:GL.UInt, _ coverMode:GL.Enum, _ transformType:GL.Enum, _ transformValues:UnsafePointer<GL.Float>?)
{
    fp_glStencilThenCoverStrokePathInstancedNV(numPaths, pathNameType, paths, pathBase, reference, mask, coverMode, transformType, transformValues)
}

var fp_glStencilThenCoverStrokePathNV:@convention(c) (GL.UInt, GL.Int, GL.UInt, GL.Enum) -> () = load_glStencilThenCoverStrokePathNV
func load_glStencilThenCoverStrokePathNV(path:GL.UInt, reference:GL.Int, mask:GL.UInt, coverMode:GL.Enum)
{
    fp_glStencilThenCoverStrokePathNV = unsafeBitCast(get_fp("glStencilThenCoverStrokePathNV", support: [ss259]), to: Swift.type(of: fp_glStencilThenCoverStrokePathNV))
    fp_glStencilThenCoverStrokePathNV(path, reference, mask, coverMode)
}
public
func glStencilThenCoverStrokePathNV(path:GL.UInt, reference:GL.Int, mask:GL.UInt, coverMode:GL.Enum)
{
    fp_glStencilThenCoverStrokePathNV(path, reference, mask, coverMode)
}
public
func glStencilThenCoverStrokePathNV(_ path:GL.UInt, _ reference:GL.Int, _ mask:GL.UInt, _ coverMode:GL.Enum)
{
    fp_glStencilThenCoverStrokePathNV(path, reference, mask, coverMode)
}

var fp_glStopInstrumentsSGIX:@convention(c) (GL.Int) -> () = load_glStopInstrumentsSGIX
func load_glStopInstrumentsSGIX(marker:GL.Int)
{
    fp_glStopInstrumentsSGIX = unsafeBitCast(get_fp("glStopInstrumentsSGIX", support: [ss334]), to: Swift.type(of: fp_glStopInstrumentsSGIX))
    fp_glStopInstrumentsSGIX(marker)
}
public
func glStopInstrumentsSGIX(marker:GL.Int)
{
    fp_glStopInstrumentsSGIX(marker)
}
public
func glStopInstrumentsSGIX(_ marker:GL.Int)
{
    fp_glStopInstrumentsSGIX(marker)
}

var fp_glStringMarkerGREMEDY:@convention(c) (GL.Size, UnsafeRawPointer?) -> () = load_glStringMarkerGREMEDY
func load_glStringMarkerGREMEDY(len:GL.Size, string:UnsafeRawPointer?)
{
    fp_glStringMarkerGREMEDY = unsafeBitCast(get_fp("glStringMarkerGREMEDY", support: [ss208]), to: Swift.type(of: fp_glStringMarkerGREMEDY))
    fp_glStringMarkerGREMEDY(len, string)
}
public
func glStringMarkerGREMEDY(len:GL.Size, string:UnsafeRawPointer?)
{
    fp_glStringMarkerGREMEDY(len, string)
}
public
func glStringMarkerGREMEDY(_ len:GL.Size, _ string:UnsafeRawPointer?)
{
    fp_glStringMarkerGREMEDY(len, string)
}

var fp_glSubpixelPrecisionBiasNV:@convention(c) (GL.UInt, GL.UInt) -> () = load_glSubpixelPrecisionBiasNV
func load_glSubpixelPrecisionBiasNV(xbits:GL.UInt, ybits:GL.UInt)
{
    fp_glSubpixelPrecisionBiasNV = unsafeBitCast(get_fp("glSubpixelPrecisionBiasNV", support: [ss232]), to: Swift.type(of: fp_glSubpixelPrecisionBiasNV))
    fp_glSubpixelPrecisionBiasNV(xbits, ybits)
}
public
func glSubpixelPrecisionBiasNV(xbits:GL.UInt, ybits:GL.UInt)
{
    fp_glSubpixelPrecisionBiasNV(xbits, ybits)
}
public
func glSubpixelPrecisionBiasNV(_ xbits:GL.UInt, _ ybits:GL.UInt)
{
    fp_glSubpixelPrecisionBiasNV(xbits, ybits)
}

var fp_glSwizzleEXT:@convention(c) (GL.UInt, GL.UInt, GL.Enum, GL.Enum, GL.Enum, GL.Enum) -> () = load_glSwizzleEXT
func load_glSwizzleEXT(res:GL.UInt, input:GL.UInt, outX:GL.Enum, outY:GL.Enum, outZ:GL.Enum, outW:GL.Enum)
{
    fp_glSwizzleEXT = unsafeBitCast(get_fp("glSwizzleEXT", support: [ss204]), to: Swift.type(of: fp_glSwizzleEXT))
    fp_glSwizzleEXT(res, input, outX, outY, outZ, outW)
}
public
func glSwizzleEXT(res:GL.UInt, input:GL.UInt, outX:GL.Enum, outY:GL.Enum, outZ:GL.Enum, outW:GL.Enum)
{
    fp_glSwizzleEXT(res, input, outX, outY, outZ, outW)
}
public
func glSwizzleEXT(_ res:GL.UInt, _ input:GL.UInt, _ outX:GL.Enum, _ outY:GL.Enum, _ outZ:GL.Enum, _ outW:GL.Enum)
{
    fp_glSwizzleEXT(res, input, outX, outY, outZ, outW)
}

var fp_glSyncTextureINTEL:@convention(c) (GL.UInt) -> () = load_glSyncTextureINTEL
func load_glSyncTextureINTEL(texture:GL.UInt)
{
    fp_glSyncTextureINTEL = unsafeBitCast(get_fp("glSyncTextureINTEL", support: [ss217]), to: Swift.type(of: fp_glSyncTextureINTEL))
    fp_glSyncTextureINTEL(texture)
}
public
func glSyncTextureINTEL(texture:GL.UInt)
{
    fp_glSyncTextureINTEL(texture)
}
public
func glSyncTextureINTEL(_ texture:GL.UInt)
{
    fp_glSyncTextureINTEL(texture)
}

var fp_glTagSampleBufferSGIX:@convention(c) () -> () = load_glTagSampleBufferSGIX
func load_glTagSampleBufferSGIX()
{
    fp_glTagSampleBufferSGIX = unsafeBitCast(get_fp("glTagSampleBufferSGIX", support: [ss340]), to: Swift.type(of: fp_glTagSampleBufferSGIX))
    fp_glTagSampleBufferSGIX()
}
public
func glTagSampleBufferSGIX()
{
    fp_glTagSampleBufferSGIX()
}

var fp_glTangent3bEXT:@convention(c) (GL.Byte, GL.Byte, GL.Byte) -> () = load_glTangent3bEXT
func load_glTangent3bEXT(tx:GL.Byte, ty:GL.Byte, tz:GL.Byte)
{
    fp_glTangent3bEXT = unsafeBitCast(get_fp("glTangent3bEXT", support: [ss136]), to: Swift.type(of: fp_glTangent3bEXT))
    fp_glTangent3bEXT(tx, ty, tz)
}
public
func glTangent3bEXT(tx:GL.Byte, ty:GL.Byte, tz:GL.Byte)
{
    fp_glTangent3bEXT(tx, ty, tz)
}
public
func glTangent3bEXT(_ tx:GL.Byte, _ ty:GL.Byte, _ tz:GL.Byte)
{
    fp_glTangent3bEXT(tx, ty, tz)
}

var fp_glTangent3bvEXT:@convention(c) (UnsafePointer<GL.Byte>?) -> () = load_glTangent3bvEXT
func load_glTangent3bvEXT(v:UnsafePointer<GL.Byte>?)
{
    fp_glTangent3bvEXT = unsafeBitCast(get_fp("glTangent3bvEXT", support: [ss136]), to: Swift.type(of: fp_glTangent3bvEXT))
    fp_glTangent3bvEXT(v)
}
public
func glTangent3bvEXT(v:UnsafePointer<GL.Byte>?)
{
    fp_glTangent3bvEXT(v)
}
public
func glTangent3bvEXT(_ v:UnsafePointer<GL.Byte>?)
{
    fp_glTangent3bvEXT(v)
}

var fp_glTangent3dEXT:@convention(c) (GL.Double, GL.Double, GL.Double) -> () = load_glTangent3dEXT
func load_glTangent3dEXT(tx:GL.Double, ty:GL.Double, tz:GL.Double)
{
    fp_glTangent3dEXT = unsafeBitCast(get_fp("glTangent3dEXT", support: [ss136]), to: Swift.type(of: fp_glTangent3dEXT))
    fp_glTangent3dEXT(tx, ty, tz)
}
public
func glTangent3dEXT(tx:GL.Double, ty:GL.Double, tz:GL.Double)
{
    fp_glTangent3dEXT(tx, ty, tz)
}
public
func glTangent3dEXT(_ tx:GL.Double, _ ty:GL.Double, _ tz:GL.Double)
{
    fp_glTangent3dEXT(tx, ty, tz)
}

var fp_glTangent3dvEXT:@convention(c) (UnsafePointer<GL.Double>?) -> () = load_glTangent3dvEXT
func load_glTangent3dvEXT(v:UnsafePointer<GL.Double>?)
{
    fp_glTangent3dvEXT = unsafeBitCast(get_fp("glTangent3dvEXT", support: [ss136]), to: Swift.type(of: fp_glTangent3dvEXT))
    fp_glTangent3dvEXT(v)
}
public
func glTangent3dvEXT(v:UnsafePointer<GL.Double>?)
{
    fp_glTangent3dvEXT(v)
}
public
func glTangent3dvEXT(_ v:UnsafePointer<GL.Double>?)
{
    fp_glTangent3dvEXT(v)
}

var fp_glTangent3fEXT:@convention(c) (GL.Float, GL.Float, GL.Float) -> () = load_glTangent3fEXT
func load_glTangent3fEXT(tx:GL.Float, ty:GL.Float, tz:GL.Float)
{
    fp_glTangent3fEXT = unsafeBitCast(get_fp("glTangent3fEXT", support: [ss136]), to: Swift.type(of: fp_glTangent3fEXT))
    fp_glTangent3fEXT(tx, ty, tz)
}
public
func glTangent3fEXT(tx:GL.Float, ty:GL.Float, tz:GL.Float)
{
    fp_glTangent3fEXT(tx, ty, tz)
}
public
func glTangent3fEXT(_ tx:GL.Float, _ ty:GL.Float, _ tz:GL.Float)
{
    fp_glTangent3fEXT(tx, ty, tz)
}

var fp_glTangent3fvEXT:@convention(c) (UnsafePointer<GL.Float>?) -> () = load_glTangent3fvEXT
func load_glTangent3fvEXT(v:UnsafePointer<GL.Float>?)
{
    fp_glTangent3fvEXT = unsafeBitCast(get_fp("glTangent3fvEXT", support: [ss136]), to: Swift.type(of: fp_glTangent3fvEXT))
    fp_glTangent3fvEXT(v)
}
public
func glTangent3fvEXT(v:UnsafePointer<GL.Float>?)
{
    fp_glTangent3fvEXT(v)
}
public
func glTangent3fvEXT(_ v:UnsafePointer<GL.Float>?)
{
    fp_glTangent3fvEXT(v)
}

var fp_glTangent3iEXT:@convention(c) (GL.Int, GL.Int, GL.Int) -> () = load_glTangent3iEXT
func load_glTangent3iEXT(tx:GL.Int, ty:GL.Int, tz:GL.Int)
{
    fp_glTangent3iEXT = unsafeBitCast(get_fp("glTangent3iEXT", support: [ss136]), to: Swift.type(of: fp_glTangent3iEXT))
    fp_glTangent3iEXT(tx, ty, tz)
}
public
func glTangent3iEXT(tx:GL.Int, ty:GL.Int, tz:GL.Int)
{
    fp_glTangent3iEXT(tx, ty, tz)
}
public
func glTangent3iEXT(_ tx:GL.Int, _ ty:GL.Int, _ tz:GL.Int)
{
    fp_glTangent3iEXT(tx, ty, tz)
}

var fp_glTangent3ivEXT:@convention(c) (UnsafePointer<GL.Int>?) -> () = load_glTangent3ivEXT
func load_glTangent3ivEXT(v:UnsafePointer<GL.Int>?)
{
    fp_glTangent3ivEXT = unsafeBitCast(get_fp("glTangent3ivEXT", support: [ss136]), to: Swift.type(of: fp_glTangent3ivEXT))
    fp_glTangent3ivEXT(v)
}
public
func glTangent3ivEXT(v:UnsafePointer<GL.Int>?)
{
    fp_glTangent3ivEXT(v)
}
public
func glTangent3ivEXT(_ v:UnsafePointer<GL.Int>?)
{
    fp_glTangent3ivEXT(v)
}

var fp_glTangent3sEXT:@convention(c) (GL.Short, GL.Short, GL.Short) -> () = load_glTangent3sEXT
func load_glTangent3sEXT(tx:GL.Short, ty:GL.Short, tz:GL.Short)
{
    fp_glTangent3sEXT = unsafeBitCast(get_fp("glTangent3sEXT", support: [ss136]), to: Swift.type(of: fp_glTangent3sEXT))
    fp_glTangent3sEXT(tx, ty, tz)
}
public
func glTangent3sEXT(tx:GL.Short, ty:GL.Short, tz:GL.Short)
{
    fp_glTangent3sEXT(tx, ty, tz)
}
public
func glTangent3sEXT(_ tx:GL.Short, _ ty:GL.Short, _ tz:GL.Short)
{
    fp_glTangent3sEXT(tx, ty, tz)
}

var fp_glTangent3svEXT:@convention(c) (UnsafePointer<GL.Short>?) -> () = load_glTangent3svEXT
func load_glTangent3svEXT(v:UnsafePointer<GL.Short>?)
{
    fp_glTangent3svEXT = unsafeBitCast(get_fp("glTangent3svEXT", support: [ss136]), to: Swift.type(of: fp_glTangent3svEXT))
    fp_glTangent3svEXT(v)
}
public
func glTangent3svEXT(v:UnsafePointer<GL.Short>?)
{
    fp_glTangent3svEXT(v)
}
public
func glTangent3svEXT(_ v:UnsafePointer<GL.Short>?)
{
    fp_glTangent3svEXT(v)
}

var fp_glTangentPointerEXT:@convention(c) (GL.Enum, GL.Size, UnsafeRawPointer?) -> () = load_glTangentPointerEXT
func load_glTangentPointerEXT(type:GL.Enum, stride:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glTangentPointerEXT = unsafeBitCast(get_fp("glTangentPointerEXT", support: [ss136]), to: Swift.type(of: fp_glTangentPointerEXT))
    fp_glTangentPointerEXT(type, stride, pointer)
}
public
func glTangentPointerEXT(type:GL.Enum, stride:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glTangentPointerEXT(type, stride, pointer)
}
public
func glTangentPointerEXT(_ type:GL.Enum, _ stride:GL.Size, _ pointer:UnsafeRawPointer?)
{
    fp_glTangentPointerEXT(type, stride, pointer)
}

var fp_glTbufferMask3DFX:@convention(c) (GL.UInt) -> () = load_glTbufferMask3DFX
func load_glTbufferMask3DFX(mask:GL.UInt)
{
    fp_glTbufferMask3DFX = unsafeBitCast(get_fp("glTbufferMask3DFX", support: [ss0]), to: Swift.type(of: fp_glTbufferMask3DFX))
    fp_glTbufferMask3DFX(mask)
}
public
func glTbufferMask3DFX(mask:GL.UInt)
{
    fp_glTbufferMask3DFX(mask)
}
public
func glTbufferMask3DFX(_ mask:GL.UInt)
{
    fp_glTbufferMask3DFX(mask)
}

var fp_glTessellationFactorAMD:@convention(c) (GL.Float) -> () = load_glTessellationFactorAMD
func load_glTessellationFactorAMD(factor:GL.Float)
{
    fp_glTessellationFactorAMD = unsafeBitCast(get_fp("glTessellationFactorAMD", support: [ss12]), to: Swift.type(of: fp_glTessellationFactorAMD))
    fp_glTessellationFactorAMD(factor)
}
public
func glTessellationFactorAMD(factor:GL.Float)
{
    fp_glTessellationFactorAMD(factor)
}
public
func glTessellationFactorAMD(_ factor:GL.Float)
{
    fp_glTessellationFactorAMD(factor)
}

var fp_glTessellationModeAMD:@convention(c) (GL.Enum) -> () = load_glTessellationModeAMD
func load_glTessellationModeAMD(mode:GL.Enum)
{
    fp_glTessellationModeAMD = unsafeBitCast(get_fp("glTessellationModeAMD", support: [ss12]), to: Swift.type(of: fp_glTessellationModeAMD))
    fp_glTessellationModeAMD(mode)
}
public
func glTessellationModeAMD(mode:GL.Enum)
{
    fp_glTessellationModeAMD(mode)
}
public
func glTessellationModeAMD(_ mode:GL.Enum)
{
    fp_glTessellationModeAMD(mode)
}

var fp_glTestFenceAPPLE:@convention(c) (GL.UInt) -> GL.Bool = load_glTestFenceAPPLE
func load_glTestFenceAPPLE(fence:GL.UInt) -> GL.Bool
{
    fp_glTestFenceAPPLE = unsafeBitCast(get_fp("glTestFenceAPPLE", support: [ss19]), to: Swift.type(of: fp_glTestFenceAPPLE))
    return fp_glTestFenceAPPLE(fence)
}
public
func glTestFenceAPPLE(fence:GL.UInt) -> GL.Bool
{
    return fp_glTestFenceAPPLE(fence)
}
public
func glTestFenceAPPLE(_ fence:GL.UInt) -> GL.Bool
{
    return fp_glTestFenceAPPLE(fence)
}

var fp_glTestFenceNV:@convention(c) (GL.UInt) -> GL.Bool = load_glTestFenceNV
func load_glTestFenceNV(fence:GL.UInt) -> GL.Bool
{
    fp_glTestFenceNV = unsafeBitCast(get_fp("glTestFenceNV", support: [ss242]), to: Swift.type(of: fp_glTestFenceNV))
    return fp_glTestFenceNV(fence)
}
public
func glTestFenceNV(fence:GL.UInt) -> GL.Bool
{
    return fp_glTestFenceNV(fence)
}
public
func glTestFenceNV(_ fence:GL.UInt) -> GL.Bool
{
    return fp_glTestFenceNV(fence)
}

var fp_glTestObjectAPPLE:@convention(c) (GL.Enum, GL.UInt) -> GL.Bool = load_glTestObjectAPPLE
func load_glTestObjectAPPLE(object:GL.Enum, name:GL.UInt) -> GL.Bool
{
    fp_glTestObjectAPPLE = unsafeBitCast(get_fp("glTestObjectAPPLE", support: [ss19]), to: Swift.type(of: fp_glTestObjectAPPLE))
    return fp_glTestObjectAPPLE(object, name)
}
public
func glTestObjectAPPLE(object:GL.Enum, name:GL.UInt) -> GL.Bool
{
    return fp_glTestObjectAPPLE(object, name)
}
public
func glTestObjectAPPLE(_ object:GL.Enum, _ name:GL.UInt) -> GL.Bool
{
    return fp_glTestObjectAPPLE(object, name)
}

var fp_glTexBuffer:@convention(c) (GL.Enum, GL.Enum, GL.UInt) -> () = load_glTexBuffer
func load_glTexBuffer(target:GL.Enum, internalformat:GL.Enum, buffer:GL.UInt)
{
    fp_glTexBuffer = unsafeBitCast(get_fp("glTexBuffer", support: [ss355, ss368]), to: Swift.type(of: fp_glTexBuffer))
    fp_glTexBuffer(target, internalformat, buffer)
}
public
func glTexBuffer(target:GL.Enum, internalformat:GL.Enum, buffer:GL.UInt)
{
    fp_glTexBuffer(target, internalformat, buffer)
}
public
func glTexBuffer(_ target:GL.Enum, _ internalformat:GL.Enum, _ buffer:GL.UInt)
{
    fp_glTexBuffer(target, internalformat, buffer)
}

var fp_glTexBufferARB:@convention(c) (GL.Enum, GL.Enum, GL.UInt) -> () = load_glTexBufferARB
func load_glTexBufferARB(target:GL.Enum, internalformat:GL.Enum, buffer:GL.UInt)
{
    fp_glTexBufferARB = unsafeBitCast(get_fp("glTexBufferARB", support: [ss92]), to: Swift.type(of: fp_glTexBufferARB))
    fp_glTexBufferARB(target, internalformat, buffer)
}
public
func glTexBufferARB(target:GL.Enum, internalformat:GL.Enum, buffer:GL.UInt)
{
    fp_glTexBufferARB(target, internalformat, buffer)
}
public
func glTexBufferARB(_ target:GL.Enum, _ internalformat:GL.Enum, _ buffer:GL.UInt)
{
    fp_glTexBufferARB(target, internalformat, buffer)
}

var fp_glTexBufferEXT:@convention(c) (GL.Enum, GL.Enum, GL.UInt) -> () = load_glTexBufferEXT
func load_glTexBufferEXT(target:GL.Enum, internalformat:GL.Enum, buffer:GL.UInt)
{
    fp_glTexBufferEXT = unsafeBitCast(get_fp("glTexBufferEXT", support: [ss192, ss191]), to: Swift.type(of: fp_glTexBufferEXT))
    fp_glTexBufferEXT(target, internalformat, buffer)
}
public
func glTexBufferEXT(target:GL.Enum, internalformat:GL.Enum, buffer:GL.UInt)
{
    fp_glTexBufferEXT(target, internalformat, buffer)
}
public
func glTexBufferEXT(_ target:GL.Enum, _ internalformat:GL.Enum, _ buffer:GL.UInt)
{
    fp_glTexBufferEXT(target, internalformat, buffer)
}

var fp_glTexBufferOES:@convention(c) (GL.Enum, GL.Enum, GL.UInt) -> () = load_glTexBufferOES
func load_glTexBufferOES(target:GL.Enum, internalformat:GL.Enum, buffer:GL.UInt)
{
    fp_glTexBufferOES = unsafeBitCast(get_fp("glTexBufferOES", support: [ss306]), to: Swift.type(of: fp_glTexBufferOES))
    fp_glTexBufferOES(target, internalformat, buffer)
}
public
func glTexBufferOES(target:GL.Enum, internalformat:GL.Enum, buffer:GL.UInt)
{
    fp_glTexBufferOES(target, internalformat, buffer)
}
public
func glTexBufferOES(_ target:GL.Enum, _ internalformat:GL.Enum, _ buffer:GL.UInt)
{
    fp_glTexBufferOES(target, internalformat, buffer)
}

var fp_glTexBufferRange:@convention(c) (GL.Enum, GL.Enum, GL.UInt, GL.IntPointer, GL.SizePointer) -> () = load_glTexBufferRange
func load_glTexBufferRange(target:GL.Enum, internalformat:GL.Enum, buffer:GL.UInt, offset:GL.IntPointer, size:GL.SizePointer)
{
    fp_glTexBufferRange = unsafeBitCast(get_fp("glTexBufferRange", support: [ss361, ss368, ss93]), to: Swift.type(of: fp_glTexBufferRange))
    fp_glTexBufferRange(target, internalformat, buffer, offset, size)
}
public
func glTexBufferRange(target:GL.Enum, internalformat:GL.Enum, buffer:GL.UInt, offset:GL.IntPointer, size:GL.SizePointer)
{
    fp_glTexBufferRange(target, internalformat, buffer, offset, size)
}
public
func glTexBufferRange(_ target:GL.Enum, _ internalformat:GL.Enum, _ buffer:GL.UInt, _ offset:GL.IntPointer, _ size:GL.SizePointer)
{
    fp_glTexBufferRange(target, internalformat, buffer, offset, size)
}

var fp_glTexBufferRangeEXT:@convention(c) (GL.Enum, GL.Enum, GL.UInt, GL.IntPointer, GL.SizePointer) -> () = load_glTexBufferRangeEXT
func load_glTexBufferRangeEXT(target:GL.Enum, internalformat:GL.Enum, buffer:GL.UInt, offset:GL.IntPointer, size:GL.SizePointer)
{
    fp_glTexBufferRangeEXT = unsafeBitCast(get_fp("glTexBufferRangeEXT", support: [ss192]), to: Swift.type(of: fp_glTexBufferRangeEXT))
    fp_glTexBufferRangeEXT(target, internalformat, buffer, offset, size)
}
public
func glTexBufferRangeEXT(target:GL.Enum, internalformat:GL.Enum, buffer:GL.UInt, offset:GL.IntPointer, size:GL.SizePointer)
{
    fp_glTexBufferRangeEXT(target, internalformat, buffer, offset, size)
}
public
func glTexBufferRangeEXT(_ target:GL.Enum, _ internalformat:GL.Enum, _ buffer:GL.UInt, _ offset:GL.IntPointer, _ size:GL.SizePointer)
{
    fp_glTexBufferRangeEXT(target, internalformat, buffer, offset, size)
}

var fp_glTexBufferRangeOES:@convention(c) (GL.Enum, GL.Enum, GL.UInt, GL.IntPointer, GL.SizePointer) -> () = load_glTexBufferRangeOES
func load_glTexBufferRangeOES(target:GL.Enum, internalformat:GL.Enum, buffer:GL.UInt, offset:GL.IntPointer, size:GL.SizePointer)
{
    fp_glTexBufferRangeOES = unsafeBitCast(get_fp("glTexBufferRangeOES", support: [ss306]), to: Swift.type(of: fp_glTexBufferRangeOES))
    fp_glTexBufferRangeOES(target, internalformat, buffer, offset, size)
}
public
func glTexBufferRangeOES(target:GL.Enum, internalformat:GL.Enum, buffer:GL.UInt, offset:GL.IntPointer, size:GL.SizePointer)
{
    fp_glTexBufferRangeOES(target, internalformat, buffer, offset, size)
}
public
func glTexBufferRangeOES(_ target:GL.Enum, _ internalformat:GL.Enum, _ buffer:GL.UInt, _ offset:GL.IntPointer, _ size:GL.SizePointer)
{
    fp_glTexBufferRangeOES(target, internalformat, buffer, offset, size)
}

var fp_glTexBumpParameterfvATI:@convention(c) (GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glTexBumpParameterfvATI
func load_glTexBumpParameterfvATI(pname:GL.Enum, param:UnsafePointer<GL.Float>?)
{
    fp_glTexBumpParameterfvATI = unsafeBitCast(get_fp("glTexBumpParameterfvATI", support: [ss117]), to: Swift.type(of: fp_glTexBumpParameterfvATI))
    fp_glTexBumpParameterfvATI(pname, param)
}
public
func glTexBumpParameterfvATI(pname:GL.Enum, param:UnsafePointer<GL.Float>?)
{
    fp_glTexBumpParameterfvATI(pname, param)
}
public
func glTexBumpParameterfvATI(_ pname:GL.Enum, _ param:UnsafePointer<GL.Float>?)
{
    fp_glTexBumpParameterfvATI(pname, param)
}

var fp_glTexBumpParameterivATI:@convention(c) (GL.Enum, UnsafePointer<GL.Int>?) -> () = load_glTexBumpParameterivATI
func load_glTexBumpParameterivATI(pname:GL.Enum, param:UnsafePointer<GL.Int>?)
{
    fp_glTexBumpParameterivATI = unsafeBitCast(get_fp("glTexBumpParameterivATI", support: [ss117]), to: Swift.type(of: fp_glTexBumpParameterivATI))
    fp_glTexBumpParameterivATI(pname, param)
}
public
func glTexBumpParameterivATI(pname:GL.Enum, param:UnsafePointer<GL.Int>?)
{
    fp_glTexBumpParameterivATI(pname, param)
}
public
func glTexBumpParameterivATI(_ pname:GL.Enum, _ param:UnsafePointer<GL.Int>?)
{
    fp_glTexBumpParameterivATI(pname, param)
}

var fp_glTexCoord1bOES:@convention(c) (GL.Byte) -> () = load_glTexCoord1bOES
func load_glTexCoord1bOES(s:GL.Byte)
{
    fp_glTexCoord1bOES = unsafeBitCast(get_fp("glTexCoord1bOES", support: [ss286]), to: Swift.type(of: fp_glTexCoord1bOES))
    fp_glTexCoord1bOES(s)
}
public
func glTexCoord1bOES(s:GL.Byte)
{
    fp_glTexCoord1bOES(s)
}
public
func glTexCoord1bOES(_ s:GL.Byte)
{
    fp_glTexCoord1bOES(s)
}

var fp_glTexCoord1bvOES:@convention(c) (UnsafePointer<GL.Byte>?) -> () = load_glTexCoord1bvOES
func load_glTexCoord1bvOES(coords:UnsafePointer<GL.Byte>?)
{
    fp_glTexCoord1bvOES = unsafeBitCast(get_fp("glTexCoord1bvOES", support: [ss286]), to: Swift.type(of: fp_glTexCoord1bvOES))
    fp_glTexCoord1bvOES(coords)
}
public
func glTexCoord1bvOES(coords:UnsafePointer<GL.Byte>?)
{
    fp_glTexCoord1bvOES(coords)
}
public
func glTexCoord1bvOES(_ coords:UnsafePointer<GL.Byte>?)
{
    fp_glTexCoord1bvOES(coords)
}

var fp_glTexCoord1d:@convention(c) (GL.Double) -> () = load_glTexCoord1d
func load_glTexCoord1d(s:GL.Double)
{
    fp_glTexCoord1d = unsafeBitCast(get_fp("glTexCoord1d", support: [ss346, ss369]), to: Swift.type(of: fp_glTexCoord1d))
    fp_glTexCoord1d(s)
}
public
func glTexCoord1d(s:GL.Double)
{
    fp_glTexCoord1d(s)
}
public
func glTexCoord1d(_ s:GL.Double)
{
    fp_glTexCoord1d(s)
}

var fp_glTexCoord1dv:@convention(c) (UnsafePointer<GL.Double>?) -> () = load_glTexCoord1dv
func load_glTexCoord1dv(v:UnsafePointer<GL.Double>?)
{
    fp_glTexCoord1dv = unsafeBitCast(get_fp("glTexCoord1dv", support: [ss346, ss369]), to: Swift.type(of: fp_glTexCoord1dv))
    fp_glTexCoord1dv(v)
}
public
func glTexCoord1dv(v:UnsafePointer<GL.Double>?)
{
    fp_glTexCoord1dv(v)
}
public
func glTexCoord1dv(_ v:UnsafePointer<GL.Double>?)
{
    fp_glTexCoord1dv(v)
}

var fp_glTexCoord1f:@convention(c) (GL.Float) -> () = load_glTexCoord1f
func load_glTexCoord1f(s:GL.Float)
{
    fp_glTexCoord1f = unsafeBitCast(get_fp("glTexCoord1f", support: [ss346, ss369]), to: Swift.type(of: fp_glTexCoord1f))
    fp_glTexCoord1f(s)
}
public
func glTexCoord1f(s:GL.Float)
{
    fp_glTexCoord1f(s)
}
public
func glTexCoord1f(_ s:GL.Float)
{
    fp_glTexCoord1f(s)
}

var fp_glTexCoord1fv:@convention(c) (UnsafePointer<GL.Float>?) -> () = load_glTexCoord1fv
func load_glTexCoord1fv(v:UnsafePointer<GL.Float>?)
{
    fp_glTexCoord1fv = unsafeBitCast(get_fp("glTexCoord1fv", support: [ss346, ss369]), to: Swift.type(of: fp_glTexCoord1fv))
    fp_glTexCoord1fv(v)
}
public
func glTexCoord1fv(v:UnsafePointer<GL.Float>?)
{
    fp_glTexCoord1fv(v)
}
public
func glTexCoord1fv(_ v:UnsafePointer<GL.Float>?)
{
    fp_glTexCoord1fv(v)
}

var fp_glTexCoord1hNV:@convention(c) (GL.HalfNV) -> () = load_glTexCoord1hNV
func load_glTexCoord1hNV(s:GL.HalfNV)
{
    fp_glTexCoord1hNV = unsafeBitCast(get_fp("glTexCoord1hNV", support: [ss253]), to: Swift.type(of: fp_glTexCoord1hNV))
    fp_glTexCoord1hNV(s)
}
public
func glTexCoord1hNV(s:GL.HalfNV)
{
    fp_glTexCoord1hNV(s)
}
public
func glTexCoord1hNV(_ s:GL.HalfNV)
{
    fp_glTexCoord1hNV(s)
}

var fp_glTexCoord1hvNV:@convention(c) (UnsafePointer<GL.HalfNV>?) -> () = load_glTexCoord1hvNV
func load_glTexCoord1hvNV(v:UnsafePointer<GL.HalfNV>?)
{
    fp_glTexCoord1hvNV = unsafeBitCast(get_fp("glTexCoord1hvNV", support: [ss253]), to: Swift.type(of: fp_glTexCoord1hvNV))
    fp_glTexCoord1hvNV(v)
}
public
func glTexCoord1hvNV(v:UnsafePointer<GL.HalfNV>?)
{
    fp_glTexCoord1hvNV(v)
}
public
func glTexCoord1hvNV(_ v:UnsafePointer<GL.HalfNV>?)
{
    fp_glTexCoord1hvNV(v)
}

var fp_glTexCoord1i:@convention(c) (GL.Int) -> () = load_glTexCoord1i
func load_glTexCoord1i(s:GL.Int)
{
    fp_glTexCoord1i = unsafeBitCast(get_fp("glTexCoord1i", support: [ss346, ss369]), to: Swift.type(of: fp_glTexCoord1i))
    fp_glTexCoord1i(s)
}
public
func glTexCoord1i(s:GL.Int)
{
    fp_glTexCoord1i(s)
}
public
func glTexCoord1i(_ s:GL.Int)
{
    fp_glTexCoord1i(s)
}

var fp_glTexCoord1iv:@convention(c) (UnsafePointer<GL.Int>?) -> () = load_glTexCoord1iv
func load_glTexCoord1iv(v:UnsafePointer<GL.Int>?)
{
    fp_glTexCoord1iv = unsafeBitCast(get_fp("glTexCoord1iv", support: [ss346, ss369]), to: Swift.type(of: fp_glTexCoord1iv))
    fp_glTexCoord1iv(v)
}
public
func glTexCoord1iv(v:UnsafePointer<GL.Int>?)
{
    fp_glTexCoord1iv(v)
}
public
func glTexCoord1iv(_ v:UnsafePointer<GL.Int>?)
{
    fp_glTexCoord1iv(v)
}

var fp_glTexCoord1s:@convention(c) (GL.Short) -> () = load_glTexCoord1s
func load_glTexCoord1s(s:GL.Short)
{
    fp_glTexCoord1s = unsafeBitCast(get_fp("glTexCoord1s", support: [ss346, ss369]), to: Swift.type(of: fp_glTexCoord1s))
    fp_glTexCoord1s(s)
}
public
func glTexCoord1s(s:GL.Short)
{
    fp_glTexCoord1s(s)
}
public
func glTexCoord1s(_ s:GL.Short)
{
    fp_glTexCoord1s(s)
}

var fp_glTexCoord1sv:@convention(c) (UnsafePointer<GL.Short>?) -> () = load_glTexCoord1sv
func load_glTexCoord1sv(v:UnsafePointer<GL.Short>?)
{
    fp_glTexCoord1sv = unsafeBitCast(get_fp("glTexCoord1sv", support: [ss346, ss369]), to: Swift.type(of: fp_glTexCoord1sv))
    fp_glTexCoord1sv(v)
}
public
func glTexCoord1sv(v:UnsafePointer<GL.Short>?)
{
    fp_glTexCoord1sv(v)
}
public
func glTexCoord1sv(_ v:UnsafePointer<GL.Short>?)
{
    fp_glTexCoord1sv(v)
}

var fp_glTexCoord1xOES:@convention(c) (GL.Fixed) -> () = load_glTexCoord1xOES
func load_glTexCoord1xOES(s:GL.Fixed)
{
    fp_glTexCoord1xOES = unsafeBitCast(get_fp("glTexCoord1xOES", support: [ss292]), to: Swift.type(of: fp_glTexCoord1xOES))
    fp_glTexCoord1xOES(s)
}
public
func glTexCoord1xOES(s:GL.Fixed)
{
    fp_glTexCoord1xOES(s)
}
public
func glTexCoord1xOES(_ s:GL.Fixed)
{
    fp_glTexCoord1xOES(s)
}

var fp_glTexCoord1xvOES:@convention(c) (UnsafePointer<GL.Fixed>?) -> () = load_glTexCoord1xvOES
func load_glTexCoord1xvOES(coords:UnsafePointer<GL.Fixed>?)
{
    fp_glTexCoord1xvOES = unsafeBitCast(get_fp("glTexCoord1xvOES", support: [ss292]), to: Swift.type(of: fp_glTexCoord1xvOES))
    fp_glTexCoord1xvOES(coords)
}
public
func glTexCoord1xvOES(coords:UnsafePointer<GL.Fixed>?)
{
    fp_glTexCoord1xvOES(coords)
}
public
func glTexCoord1xvOES(_ coords:UnsafePointer<GL.Fixed>?)
{
    fp_glTexCoord1xvOES(coords)
}

var fp_glTexCoord2bOES:@convention(c) (GL.Byte, GL.Byte) -> () = load_glTexCoord2bOES
func load_glTexCoord2bOES(s:GL.Byte, t:GL.Byte)
{
    fp_glTexCoord2bOES = unsafeBitCast(get_fp("glTexCoord2bOES", support: [ss286]), to: Swift.type(of: fp_glTexCoord2bOES))
    fp_glTexCoord2bOES(s, t)
}
public
func glTexCoord2bOES(s:GL.Byte, t:GL.Byte)
{
    fp_glTexCoord2bOES(s, t)
}
public
func glTexCoord2bOES(_ s:GL.Byte, _ t:GL.Byte)
{
    fp_glTexCoord2bOES(s, t)
}

var fp_glTexCoord2bvOES:@convention(c) (UnsafePointer<GL.Byte>?) -> () = load_glTexCoord2bvOES
func load_glTexCoord2bvOES(coords:UnsafePointer<GL.Byte>?)
{
    fp_glTexCoord2bvOES = unsafeBitCast(get_fp("glTexCoord2bvOES", support: [ss286]), to: Swift.type(of: fp_glTexCoord2bvOES))
    fp_glTexCoord2bvOES(coords)
}
public
func glTexCoord2bvOES(coords:UnsafePointer<GL.Byte>?)
{
    fp_glTexCoord2bvOES(coords)
}
public
func glTexCoord2bvOES(_ coords:UnsafePointer<GL.Byte>?)
{
    fp_glTexCoord2bvOES(coords)
}

var fp_glTexCoord2d:@convention(c) (GL.Double, GL.Double) -> () = load_glTexCoord2d
func load_glTexCoord2d(s:GL.Double, t:GL.Double)
{
    fp_glTexCoord2d = unsafeBitCast(get_fp("glTexCoord2d", support: [ss346, ss369]), to: Swift.type(of: fp_glTexCoord2d))
    fp_glTexCoord2d(s, t)
}
public
func glTexCoord2d(s:GL.Double, t:GL.Double)
{
    fp_glTexCoord2d(s, t)
}
public
func glTexCoord2d(_ s:GL.Double, _ t:GL.Double)
{
    fp_glTexCoord2d(s, t)
}

var fp_glTexCoord2dv:@convention(c) (UnsafePointer<GL.Double>?) -> () = load_glTexCoord2dv
func load_glTexCoord2dv(v:UnsafePointer<GL.Double>?)
{
    fp_glTexCoord2dv = unsafeBitCast(get_fp("glTexCoord2dv", support: [ss346, ss369]), to: Swift.type(of: fp_glTexCoord2dv))
    fp_glTexCoord2dv(v)
}
public
func glTexCoord2dv(v:UnsafePointer<GL.Double>?)
{
    fp_glTexCoord2dv(v)
}
public
func glTexCoord2dv(_ v:UnsafePointer<GL.Double>?)
{
    fp_glTexCoord2dv(v)
}

var fp_glTexCoord2f:@convention(c) (GL.Float, GL.Float) -> () = load_glTexCoord2f
func load_glTexCoord2f(s:GL.Float, t:GL.Float)
{
    fp_glTexCoord2f = unsafeBitCast(get_fp("glTexCoord2f", support: [ss346, ss369]), to: Swift.type(of: fp_glTexCoord2f))
    fp_glTexCoord2f(s, t)
}
public
func glTexCoord2f(s:GL.Float, t:GL.Float)
{
    fp_glTexCoord2f(s, t)
}
public
func glTexCoord2f(_ s:GL.Float, _ t:GL.Float)
{
    fp_glTexCoord2f(s, t)
}

var fp_glTexCoord2fColor3fVertex3fSUN:@convention(c) (GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float) -> () = load_glTexCoord2fColor3fVertex3fSUN
func load_glTexCoord2fColor3fVertex3fSUN(s:GL.Float, t:GL.Float, r:GL.Float, g:GL.Float, b:GL.Float, x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glTexCoord2fColor3fVertex3fSUN = unsafeBitCast(get_fp("glTexCoord2fColor3fVertex3fSUN", support: [ss344]), to: Swift.type(of: fp_glTexCoord2fColor3fVertex3fSUN))
    fp_glTexCoord2fColor3fVertex3fSUN(s, t, r, g, b, x, y, z)
}
public
func glTexCoord2fColor3fVertex3fSUN(s:GL.Float, t:GL.Float, r:GL.Float, g:GL.Float, b:GL.Float, x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glTexCoord2fColor3fVertex3fSUN(s, t, r, g, b, x, y, z)
}
public
func glTexCoord2fColor3fVertex3fSUN(_ s:GL.Float, _ t:GL.Float, _ r:GL.Float, _ g:GL.Float, _ b:GL.Float, _ x:GL.Float, _ y:GL.Float, _ z:GL.Float)
{
    fp_glTexCoord2fColor3fVertex3fSUN(s, t, r, g, b, x, y, z)
}

var fp_glTexCoord2fColor3fVertex3fvSUN:@convention(c) (UnsafePointer<GL.Float>?, UnsafePointer<GL.Float>?, UnsafePointer<GL.Float>?) -> () = load_glTexCoord2fColor3fVertex3fvSUN
func load_glTexCoord2fColor3fVertex3fvSUN(tc:UnsafePointer<GL.Float>?, c:UnsafePointer<GL.Float>?, v:UnsafePointer<GL.Float>?)
{
    fp_glTexCoord2fColor3fVertex3fvSUN = unsafeBitCast(get_fp("glTexCoord2fColor3fVertex3fvSUN", support: [ss344]), to: Swift.type(of: fp_glTexCoord2fColor3fVertex3fvSUN))
    fp_glTexCoord2fColor3fVertex3fvSUN(tc, c, v)
}
public
func glTexCoord2fColor3fVertex3fvSUN(tc:UnsafePointer<GL.Float>?, c:UnsafePointer<GL.Float>?, v:UnsafePointer<GL.Float>?)
{
    fp_glTexCoord2fColor3fVertex3fvSUN(tc, c, v)
}
public
func glTexCoord2fColor3fVertex3fvSUN(_ tc:UnsafePointer<GL.Float>?, _ c:UnsafePointer<GL.Float>?, _ v:UnsafePointer<GL.Float>?)
{
    fp_glTexCoord2fColor3fVertex3fvSUN(tc, c, v)
}

var fp_glTexCoord2fColor4fNormal3fVertex3fSUN:@convention(c) (GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float) -> () = load_glTexCoord2fColor4fNormal3fVertex3fSUN
func load_glTexCoord2fColor4fNormal3fVertex3fSUN(s:GL.Float, t:GL.Float, r:GL.Float, g:GL.Float, b:GL.Float, a:GL.Float, nx:GL.Float, ny:GL.Float, nz:GL.Float, x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glTexCoord2fColor4fNormal3fVertex3fSUN = unsafeBitCast(get_fp("glTexCoord2fColor4fNormal3fVertex3fSUN", support: [ss344]), to: Swift.type(of: fp_glTexCoord2fColor4fNormal3fVertex3fSUN))
    fp_glTexCoord2fColor4fNormal3fVertex3fSUN(s, t, r, g, b, a, nx, ny, nz, x, y, z)
}
public
func glTexCoord2fColor4fNormal3fVertex3fSUN(s:GL.Float, t:GL.Float, r:GL.Float, g:GL.Float, b:GL.Float, a:GL.Float, nx:GL.Float, ny:GL.Float, nz:GL.Float, x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glTexCoord2fColor4fNormal3fVertex3fSUN(s, t, r, g, b, a, nx, ny, nz, x, y, z)
}
public
func glTexCoord2fColor4fNormal3fVertex3fSUN(_ s:GL.Float, _ t:GL.Float, _ r:GL.Float, _ g:GL.Float, _ b:GL.Float, _ a:GL.Float, _ nx:GL.Float, _ ny:GL.Float, _ nz:GL.Float, _ x:GL.Float, _ y:GL.Float, _ z:GL.Float)
{
    fp_glTexCoord2fColor4fNormal3fVertex3fSUN(s, t, r, g, b, a, nx, ny, nz, x, y, z)
}

var fp_glTexCoord2fColor4fNormal3fVertex3fvSUN:@convention(c) (UnsafePointer<GL.Float>?, UnsafePointer<GL.Float>?, UnsafePointer<GL.Float>?, UnsafePointer<GL.Float>?) -> () = load_glTexCoord2fColor4fNormal3fVertex3fvSUN
func load_glTexCoord2fColor4fNormal3fVertex3fvSUN(tc:UnsafePointer<GL.Float>?, c:UnsafePointer<GL.Float>?, n:UnsafePointer<GL.Float>?, v:UnsafePointer<GL.Float>?)
{
    fp_glTexCoord2fColor4fNormal3fVertex3fvSUN = unsafeBitCast(get_fp("glTexCoord2fColor4fNormal3fVertex3fvSUN", support: [ss344]), to: Swift.type(of: fp_glTexCoord2fColor4fNormal3fVertex3fvSUN))
    fp_glTexCoord2fColor4fNormal3fVertex3fvSUN(tc, c, n, v)
}
public
func glTexCoord2fColor4fNormal3fVertex3fvSUN(tc:UnsafePointer<GL.Float>?, c:UnsafePointer<GL.Float>?, n:UnsafePointer<GL.Float>?, v:UnsafePointer<GL.Float>?)
{
    fp_glTexCoord2fColor4fNormal3fVertex3fvSUN(tc, c, n, v)
}
public
func glTexCoord2fColor4fNormal3fVertex3fvSUN(_ tc:UnsafePointer<GL.Float>?, _ c:UnsafePointer<GL.Float>?, _ n:UnsafePointer<GL.Float>?, _ v:UnsafePointer<GL.Float>?)
{
    fp_glTexCoord2fColor4fNormal3fVertex3fvSUN(tc, c, n, v)
}

var fp_glTexCoord2fColor4ubVertex3fSUN:@convention(c) (GL.Float, GL.Float, GL.UByte, GL.UByte, GL.UByte, GL.UByte, GL.Float, GL.Float, GL.Float) -> () = load_glTexCoord2fColor4ubVertex3fSUN
func load_glTexCoord2fColor4ubVertex3fSUN(s:GL.Float, t:GL.Float, r:GL.UByte, g:GL.UByte, b:GL.UByte, a:GL.UByte, x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glTexCoord2fColor4ubVertex3fSUN = unsafeBitCast(get_fp("glTexCoord2fColor4ubVertex3fSUN", support: [ss344]), to: Swift.type(of: fp_glTexCoord2fColor4ubVertex3fSUN))
    fp_glTexCoord2fColor4ubVertex3fSUN(s, t, r, g, b, a, x, y, z)
}
public
func glTexCoord2fColor4ubVertex3fSUN(s:GL.Float, t:GL.Float, r:GL.UByte, g:GL.UByte, b:GL.UByte, a:GL.UByte, x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glTexCoord2fColor4ubVertex3fSUN(s, t, r, g, b, a, x, y, z)
}
public
func glTexCoord2fColor4ubVertex3fSUN(_ s:GL.Float, _ t:GL.Float, _ r:GL.UByte, _ g:GL.UByte, _ b:GL.UByte, _ a:GL.UByte, _ x:GL.Float, _ y:GL.Float, _ z:GL.Float)
{
    fp_glTexCoord2fColor4ubVertex3fSUN(s, t, r, g, b, a, x, y, z)
}

var fp_glTexCoord2fColor4ubVertex3fvSUN:@convention(c) (UnsafePointer<GL.Float>?, UnsafePointer<GL.UByte>?, UnsafePointer<GL.Float>?) -> () = load_glTexCoord2fColor4ubVertex3fvSUN
func load_glTexCoord2fColor4ubVertex3fvSUN(tc:UnsafePointer<GL.Float>?, c:UnsafePointer<GL.UByte>?, v:UnsafePointer<GL.Float>?)
{
    fp_glTexCoord2fColor4ubVertex3fvSUN = unsafeBitCast(get_fp("glTexCoord2fColor4ubVertex3fvSUN", support: [ss344]), to: Swift.type(of: fp_glTexCoord2fColor4ubVertex3fvSUN))
    fp_glTexCoord2fColor4ubVertex3fvSUN(tc, c, v)
}
public
func glTexCoord2fColor4ubVertex3fvSUN(tc:UnsafePointer<GL.Float>?, c:UnsafePointer<GL.UByte>?, v:UnsafePointer<GL.Float>?)
{
    fp_glTexCoord2fColor4ubVertex3fvSUN(tc, c, v)
}
public
func glTexCoord2fColor4ubVertex3fvSUN(_ tc:UnsafePointer<GL.Float>?, _ c:UnsafePointer<GL.UByte>?, _ v:UnsafePointer<GL.Float>?)
{
    fp_glTexCoord2fColor4ubVertex3fvSUN(tc, c, v)
}

var fp_glTexCoord2fNormal3fVertex3fSUN:@convention(c) (GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float) -> () = load_glTexCoord2fNormal3fVertex3fSUN
func load_glTexCoord2fNormal3fVertex3fSUN(s:GL.Float, t:GL.Float, nx:GL.Float, ny:GL.Float, nz:GL.Float, x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glTexCoord2fNormal3fVertex3fSUN = unsafeBitCast(get_fp("glTexCoord2fNormal3fVertex3fSUN", support: [ss344]), to: Swift.type(of: fp_glTexCoord2fNormal3fVertex3fSUN))
    fp_glTexCoord2fNormal3fVertex3fSUN(s, t, nx, ny, nz, x, y, z)
}
public
func glTexCoord2fNormal3fVertex3fSUN(s:GL.Float, t:GL.Float, nx:GL.Float, ny:GL.Float, nz:GL.Float, x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glTexCoord2fNormal3fVertex3fSUN(s, t, nx, ny, nz, x, y, z)
}
public
func glTexCoord2fNormal3fVertex3fSUN(_ s:GL.Float, _ t:GL.Float, _ nx:GL.Float, _ ny:GL.Float, _ nz:GL.Float, _ x:GL.Float, _ y:GL.Float, _ z:GL.Float)
{
    fp_glTexCoord2fNormal3fVertex3fSUN(s, t, nx, ny, nz, x, y, z)
}

var fp_glTexCoord2fNormal3fVertex3fvSUN:@convention(c) (UnsafePointer<GL.Float>?, UnsafePointer<GL.Float>?, UnsafePointer<GL.Float>?) -> () = load_glTexCoord2fNormal3fVertex3fvSUN
func load_glTexCoord2fNormal3fVertex3fvSUN(tc:UnsafePointer<GL.Float>?, n:UnsafePointer<GL.Float>?, v:UnsafePointer<GL.Float>?)
{
    fp_glTexCoord2fNormal3fVertex3fvSUN = unsafeBitCast(get_fp("glTexCoord2fNormal3fVertex3fvSUN", support: [ss344]), to: Swift.type(of: fp_glTexCoord2fNormal3fVertex3fvSUN))
    fp_glTexCoord2fNormal3fVertex3fvSUN(tc, n, v)
}
public
func glTexCoord2fNormal3fVertex3fvSUN(tc:UnsafePointer<GL.Float>?, n:UnsafePointer<GL.Float>?, v:UnsafePointer<GL.Float>?)
{
    fp_glTexCoord2fNormal3fVertex3fvSUN(tc, n, v)
}
public
func glTexCoord2fNormal3fVertex3fvSUN(_ tc:UnsafePointer<GL.Float>?, _ n:UnsafePointer<GL.Float>?, _ v:UnsafePointer<GL.Float>?)
{
    fp_glTexCoord2fNormal3fVertex3fvSUN(tc, n, v)
}

var fp_glTexCoord2fVertex3fSUN:@convention(c) (GL.Float, GL.Float, GL.Float, GL.Float, GL.Float) -> () = load_glTexCoord2fVertex3fSUN
func load_glTexCoord2fVertex3fSUN(s:GL.Float, t:GL.Float, x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glTexCoord2fVertex3fSUN = unsafeBitCast(get_fp("glTexCoord2fVertex3fSUN", support: [ss344]), to: Swift.type(of: fp_glTexCoord2fVertex3fSUN))
    fp_glTexCoord2fVertex3fSUN(s, t, x, y, z)
}
public
func glTexCoord2fVertex3fSUN(s:GL.Float, t:GL.Float, x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glTexCoord2fVertex3fSUN(s, t, x, y, z)
}
public
func glTexCoord2fVertex3fSUN(_ s:GL.Float, _ t:GL.Float, _ x:GL.Float, _ y:GL.Float, _ z:GL.Float)
{
    fp_glTexCoord2fVertex3fSUN(s, t, x, y, z)
}

var fp_glTexCoord2fVertex3fvSUN:@convention(c) (UnsafePointer<GL.Float>?, UnsafePointer<GL.Float>?) -> () = load_glTexCoord2fVertex3fvSUN
func load_glTexCoord2fVertex3fvSUN(tc:UnsafePointer<GL.Float>?, v:UnsafePointer<GL.Float>?)
{
    fp_glTexCoord2fVertex3fvSUN = unsafeBitCast(get_fp("glTexCoord2fVertex3fvSUN", support: [ss344]), to: Swift.type(of: fp_glTexCoord2fVertex3fvSUN))
    fp_glTexCoord2fVertex3fvSUN(tc, v)
}
public
func glTexCoord2fVertex3fvSUN(tc:UnsafePointer<GL.Float>?, v:UnsafePointer<GL.Float>?)
{
    fp_glTexCoord2fVertex3fvSUN(tc, v)
}
public
func glTexCoord2fVertex3fvSUN(_ tc:UnsafePointer<GL.Float>?, _ v:UnsafePointer<GL.Float>?)
{
    fp_glTexCoord2fVertex3fvSUN(tc, v)
}

var fp_glTexCoord2fv:@convention(c) (UnsafePointer<GL.Float>?) -> () = load_glTexCoord2fv
func load_glTexCoord2fv(v:UnsafePointer<GL.Float>?)
{
    fp_glTexCoord2fv = unsafeBitCast(get_fp("glTexCoord2fv", support: [ss346, ss369]), to: Swift.type(of: fp_glTexCoord2fv))
    fp_glTexCoord2fv(v)
}
public
func glTexCoord2fv(v:UnsafePointer<GL.Float>?)
{
    fp_glTexCoord2fv(v)
}
public
func glTexCoord2fv(_ v:UnsafePointer<GL.Float>?)
{
    fp_glTexCoord2fv(v)
}

var fp_glTexCoord2hNV:@convention(c) (GL.HalfNV, GL.HalfNV) -> () = load_glTexCoord2hNV
func load_glTexCoord2hNV(s:GL.HalfNV, t:GL.HalfNV)
{
    fp_glTexCoord2hNV = unsafeBitCast(get_fp("glTexCoord2hNV", support: [ss253]), to: Swift.type(of: fp_glTexCoord2hNV))
    fp_glTexCoord2hNV(s, t)
}
public
func glTexCoord2hNV(s:GL.HalfNV, t:GL.HalfNV)
{
    fp_glTexCoord2hNV(s, t)
}
public
func glTexCoord2hNV(_ s:GL.HalfNV, _ t:GL.HalfNV)
{
    fp_glTexCoord2hNV(s, t)
}

var fp_glTexCoord2hvNV:@convention(c) (UnsafePointer<GL.HalfNV>?) -> () = load_glTexCoord2hvNV
func load_glTexCoord2hvNV(v:UnsafePointer<GL.HalfNV>?)
{
    fp_glTexCoord2hvNV = unsafeBitCast(get_fp("glTexCoord2hvNV", support: [ss253]), to: Swift.type(of: fp_glTexCoord2hvNV))
    fp_glTexCoord2hvNV(v)
}
public
func glTexCoord2hvNV(v:UnsafePointer<GL.HalfNV>?)
{
    fp_glTexCoord2hvNV(v)
}
public
func glTexCoord2hvNV(_ v:UnsafePointer<GL.HalfNV>?)
{
    fp_glTexCoord2hvNV(v)
}

var fp_glTexCoord2i:@convention(c) (GL.Int, GL.Int) -> () = load_glTexCoord2i
func load_glTexCoord2i(s:GL.Int, t:GL.Int)
{
    fp_glTexCoord2i = unsafeBitCast(get_fp("glTexCoord2i", support: [ss346, ss369]), to: Swift.type(of: fp_glTexCoord2i))
    fp_glTexCoord2i(s, t)
}
public
func glTexCoord2i(s:GL.Int, t:GL.Int)
{
    fp_glTexCoord2i(s, t)
}
public
func glTexCoord2i(_ s:GL.Int, _ t:GL.Int)
{
    fp_glTexCoord2i(s, t)
}

var fp_glTexCoord2iv:@convention(c) (UnsafePointer<GL.Int>?) -> () = load_glTexCoord2iv
func load_glTexCoord2iv(v:UnsafePointer<GL.Int>?)
{
    fp_glTexCoord2iv = unsafeBitCast(get_fp("glTexCoord2iv", support: [ss346, ss369]), to: Swift.type(of: fp_glTexCoord2iv))
    fp_glTexCoord2iv(v)
}
public
func glTexCoord2iv(v:UnsafePointer<GL.Int>?)
{
    fp_glTexCoord2iv(v)
}
public
func glTexCoord2iv(_ v:UnsafePointer<GL.Int>?)
{
    fp_glTexCoord2iv(v)
}

var fp_glTexCoord2s:@convention(c) (GL.Short, GL.Short) -> () = load_glTexCoord2s
func load_glTexCoord2s(s:GL.Short, t:GL.Short)
{
    fp_glTexCoord2s = unsafeBitCast(get_fp("glTexCoord2s", support: [ss346, ss369]), to: Swift.type(of: fp_glTexCoord2s))
    fp_glTexCoord2s(s, t)
}
public
func glTexCoord2s(s:GL.Short, t:GL.Short)
{
    fp_glTexCoord2s(s, t)
}
public
func glTexCoord2s(_ s:GL.Short, _ t:GL.Short)
{
    fp_glTexCoord2s(s, t)
}

var fp_glTexCoord2sv:@convention(c) (UnsafePointer<GL.Short>?) -> () = load_glTexCoord2sv
func load_glTexCoord2sv(v:UnsafePointer<GL.Short>?)
{
    fp_glTexCoord2sv = unsafeBitCast(get_fp("glTexCoord2sv", support: [ss346, ss369]), to: Swift.type(of: fp_glTexCoord2sv))
    fp_glTexCoord2sv(v)
}
public
func glTexCoord2sv(v:UnsafePointer<GL.Short>?)
{
    fp_glTexCoord2sv(v)
}
public
func glTexCoord2sv(_ v:UnsafePointer<GL.Short>?)
{
    fp_glTexCoord2sv(v)
}

var fp_glTexCoord2xOES:@convention(c) (GL.Fixed, GL.Fixed) -> () = load_glTexCoord2xOES
func load_glTexCoord2xOES(s:GL.Fixed, t:GL.Fixed)
{
    fp_glTexCoord2xOES = unsafeBitCast(get_fp("glTexCoord2xOES", support: [ss292]), to: Swift.type(of: fp_glTexCoord2xOES))
    fp_glTexCoord2xOES(s, t)
}
public
func glTexCoord2xOES(s:GL.Fixed, t:GL.Fixed)
{
    fp_glTexCoord2xOES(s, t)
}
public
func glTexCoord2xOES(_ s:GL.Fixed, _ t:GL.Fixed)
{
    fp_glTexCoord2xOES(s, t)
}

var fp_glTexCoord2xvOES:@convention(c) (UnsafePointer<GL.Fixed>?) -> () = load_glTexCoord2xvOES
func load_glTexCoord2xvOES(coords:UnsafePointer<GL.Fixed>?)
{
    fp_glTexCoord2xvOES = unsafeBitCast(get_fp("glTexCoord2xvOES", support: [ss292]), to: Swift.type(of: fp_glTexCoord2xvOES))
    fp_glTexCoord2xvOES(coords)
}
public
func glTexCoord2xvOES(coords:UnsafePointer<GL.Fixed>?)
{
    fp_glTexCoord2xvOES(coords)
}
public
func glTexCoord2xvOES(_ coords:UnsafePointer<GL.Fixed>?)
{
    fp_glTexCoord2xvOES(coords)
}

var fp_glTexCoord3bOES:@convention(c) (GL.Byte, GL.Byte, GL.Byte) -> () = load_glTexCoord3bOES
func load_glTexCoord3bOES(s:GL.Byte, t:GL.Byte, r:GL.Byte)
{
    fp_glTexCoord3bOES = unsafeBitCast(get_fp("glTexCoord3bOES", support: [ss286]), to: Swift.type(of: fp_glTexCoord3bOES))
    fp_glTexCoord3bOES(s, t, r)
}
public
func glTexCoord3bOES(s:GL.Byte, t:GL.Byte, r:GL.Byte)
{
    fp_glTexCoord3bOES(s, t, r)
}
public
func glTexCoord3bOES(_ s:GL.Byte, _ t:GL.Byte, _ r:GL.Byte)
{
    fp_glTexCoord3bOES(s, t, r)
}

var fp_glTexCoord3bvOES:@convention(c) (UnsafePointer<GL.Byte>?) -> () = load_glTexCoord3bvOES
func load_glTexCoord3bvOES(coords:UnsafePointer<GL.Byte>?)
{
    fp_glTexCoord3bvOES = unsafeBitCast(get_fp("glTexCoord3bvOES", support: [ss286]), to: Swift.type(of: fp_glTexCoord3bvOES))
    fp_glTexCoord3bvOES(coords)
}
public
func glTexCoord3bvOES(coords:UnsafePointer<GL.Byte>?)
{
    fp_glTexCoord3bvOES(coords)
}
public
func glTexCoord3bvOES(_ coords:UnsafePointer<GL.Byte>?)
{
    fp_glTexCoord3bvOES(coords)
}

var fp_glTexCoord3d:@convention(c) (GL.Double, GL.Double, GL.Double) -> () = load_glTexCoord3d
func load_glTexCoord3d(s:GL.Double, t:GL.Double, r:GL.Double)
{
    fp_glTexCoord3d = unsafeBitCast(get_fp("glTexCoord3d", support: [ss346, ss369]), to: Swift.type(of: fp_glTexCoord3d))
    fp_glTexCoord3d(s, t, r)
}
public
func glTexCoord3d(s:GL.Double, t:GL.Double, r:GL.Double)
{
    fp_glTexCoord3d(s, t, r)
}
public
func glTexCoord3d(_ s:GL.Double, _ t:GL.Double, _ r:GL.Double)
{
    fp_glTexCoord3d(s, t, r)
}

var fp_glTexCoord3dv:@convention(c) (UnsafePointer<GL.Double>?) -> () = load_glTexCoord3dv
func load_glTexCoord3dv(v:UnsafePointer<GL.Double>?)
{
    fp_glTexCoord3dv = unsafeBitCast(get_fp("glTexCoord3dv", support: [ss346, ss369]), to: Swift.type(of: fp_glTexCoord3dv))
    fp_glTexCoord3dv(v)
}
public
func glTexCoord3dv(v:UnsafePointer<GL.Double>?)
{
    fp_glTexCoord3dv(v)
}
public
func glTexCoord3dv(_ v:UnsafePointer<GL.Double>?)
{
    fp_glTexCoord3dv(v)
}

var fp_glTexCoord3f:@convention(c) (GL.Float, GL.Float, GL.Float) -> () = load_glTexCoord3f
func load_glTexCoord3f(s:GL.Float, t:GL.Float, r:GL.Float)
{
    fp_glTexCoord3f = unsafeBitCast(get_fp("glTexCoord3f", support: [ss346, ss369]), to: Swift.type(of: fp_glTexCoord3f))
    fp_glTexCoord3f(s, t, r)
}
public
func glTexCoord3f(s:GL.Float, t:GL.Float, r:GL.Float)
{
    fp_glTexCoord3f(s, t, r)
}
public
func glTexCoord3f(_ s:GL.Float, _ t:GL.Float, _ r:GL.Float)
{
    fp_glTexCoord3f(s, t, r)
}

var fp_glTexCoord3fv:@convention(c) (UnsafePointer<GL.Float>?) -> () = load_glTexCoord3fv
func load_glTexCoord3fv(v:UnsafePointer<GL.Float>?)
{
    fp_glTexCoord3fv = unsafeBitCast(get_fp("glTexCoord3fv", support: [ss346, ss369]), to: Swift.type(of: fp_glTexCoord3fv))
    fp_glTexCoord3fv(v)
}
public
func glTexCoord3fv(v:UnsafePointer<GL.Float>?)
{
    fp_glTexCoord3fv(v)
}
public
func glTexCoord3fv(_ v:UnsafePointer<GL.Float>?)
{
    fp_glTexCoord3fv(v)
}

var fp_glTexCoord3hNV:@convention(c) (GL.HalfNV, GL.HalfNV, GL.HalfNV) -> () = load_glTexCoord3hNV
func load_glTexCoord3hNV(s:GL.HalfNV, t:GL.HalfNV, r:GL.HalfNV)
{
    fp_glTexCoord3hNV = unsafeBitCast(get_fp("glTexCoord3hNV", support: [ss253]), to: Swift.type(of: fp_glTexCoord3hNV))
    fp_glTexCoord3hNV(s, t, r)
}
public
func glTexCoord3hNV(s:GL.HalfNV, t:GL.HalfNV, r:GL.HalfNV)
{
    fp_glTexCoord3hNV(s, t, r)
}
public
func glTexCoord3hNV(_ s:GL.HalfNV, _ t:GL.HalfNV, _ r:GL.HalfNV)
{
    fp_glTexCoord3hNV(s, t, r)
}

var fp_glTexCoord3hvNV:@convention(c) (UnsafePointer<GL.HalfNV>?) -> () = load_glTexCoord3hvNV
func load_glTexCoord3hvNV(v:UnsafePointer<GL.HalfNV>?)
{
    fp_glTexCoord3hvNV = unsafeBitCast(get_fp("glTexCoord3hvNV", support: [ss253]), to: Swift.type(of: fp_glTexCoord3hvNV))
    fp_glTexCoord3hvNV(v)
}
public
func glTexCoord3hvNV(v:UnsafePointer<GL.HalfNV>?)
{
    fp_glTexCoord3hvNV(v)
}
public
func glTexCoord3hvNV(_ v:UnsafePointer<GL.HalfNV>?)
{
    fp_glTexCoord3hvNV(v)
}

var fp_glTexCoord3i:@convention(c) (GL.Int, GL.Int, GL.Int) -> () = load_glTexCoord3i
func load_glTexCoord3i(s:GL.Int, t:GL.Int, r:GL.Int)
{
    fp_glTexCoord3i = unsafeBitCast(get_fp("glTexCoord3i", support: [ss346, ss369]), to: Swift.type(of: fp_glTexCoord3i))
    fp_glTexCoord3i(s, t, r)
}
public
func glTexCoord3i(s:GL.Int, t:GL.Int, r:GL.Int)
{
    fp_glTexCoord3i(s, t, r)
}
public
func glTexCoord3i(_ s:GL.Int, _ t:GL.Int, _ r:GL.Int)
{
    fp_glTexCoord3i(s, t, r)
}

var fp_glTexCoord3iv:@convention(c) (UnsafePointer<GL.Int>?) -> () = load_glTexCoord3iv
func load_glTexCoord3iv(v:UnsafePointer<GL.Int>?)
{
    fp_glTexCoord3iv = unsafeBitCast(get_fp("glTexCoord3iv", support: [ss346, ss369]), to: Swift.type(of: fp_glTexCoord3iv))
    fp_glTexCoord3iv(v)
}
public
func glTexCoord3iv(v:UnsafePointer<GL.Int>?)
{
    fp_glTexCoord3iv(v)
}
public
func glTexCoord3iv(_ v:UnsafePointer<GL.Int>?)
{
    fp_glTexCoord3iv(v)
}

var fp_glTexCoord3s:@convention(c) (GL.Short, GL.Short, GL.Short) -> () = load_glTexCoord3s
func load_glTexCoord3s(s:GL.Short, t:GL.Short, r:GL.Short)
{
    fp_glTexCoord3s = unsafeBitCast(get_fp("glTexCoord3s", support: [ss346, ss369]), to: Swift.type(of: fp_glTexCoord3s))
    fp_glTexCoord3s(s, t, r)
}
public
func glTexCoord3s(s:GL.Short, t:GL.Short, r:GL.Short)
{
    fp_glTexCoord3s(s, t, r)
}
public
func glTexCoord3s(_ s:GL.Short, _ t:GL.Short, _ r:GL.Short)
{
    fp_glTexCoord3s(s, t, r)
}

var fp_glTexCoord3sv:@convention(c) (UnsafePointer<GL.Short>?) -> () = load_glTexCoord3sv
func load_glTexCoord3sv(v:UnsafePointer<GL.Short>?)
{
    fp_glTexCoord3sv = unsafeBitCast(get_fp("glTexCoord3sv", support: [ss346, ss369]), to: Swift.type(of: fp_glTexCoord3sv))
    fp_glTexCoord3sv(v)
}
public
func glTexCoord3sv(v:UnsafePointer<GL.Short>?)
{
    fp_glTexCoord3sv(v)
}
public
func glTexCoord3sv(_ v:UnsafePointer<GL.Short>?)
{
    fp_glTexCoord3sv(v)
}

var fp_glTexCoord3xOES:@convention(c) (GL.Fixed, GL.Fixed, GL.Fixed) -> () = load_glTexCoord3xOES
func load_glTexCoord3xOES(s:GL.Fixed, t:GL.Fixed, r:GL.Fixed)
{
    fp_glTexCoord3xOES = unsafeBitCast(get_fp("glTexCoord3xOES", support: [ss292]), to: Swift.type(of: fp_glTexCoord3xOES))
    fp_glTexCoord3xOES(s, t, r)
}
public
func glTexCoord3xOES(s:GL.Fixed, t:GL.Fixed, r:GL.Fixed)
{
    fp_glTexCoord3xOES(s, t, r)
}
public
func glTexCoord3xOES(_ s:GL.Fixed, _ t:GL.Fixed, _ r:GL.Fixed)
{
    fp_glTexCoord3xOES(s, t, r)
}

var fp_glTexCoord3xvOES:@convention(c) (UnsafePointer<GL.Fixed>?) -> () = load_glTexCoord3xvOES
func load_glTexCoord3xvOES(coords:UnsafePointer<GL.Fixed>?)
{
    fp_glTexCoord3xvOES = unsafeBitCast(get_fp("glTexCoord3xvOES", support: [ss292]), to: Swift.type(of: fp_glTexCoord3xvOES))
    fp_glTexCoord3xvOES(coords)
}
public
func glTexCoord3xvOES(coords:UnsafePointer<GL.Fixed>?)
{
    fp_glTexCoord3xvOES(coords)
}
public
func glTexCoord3xvOES(_ coords:UnsafePointer<GL.Fixed>?)
{
    fp_glTexCoord3xvOES(coords)
}

var fp_glTexCoord4bOES:@convention(c) (GL.Byte, GL.Byte, GL.Byte, GL.Byte) -> () = load_glTexCoord4bOES
func load_glTexCoord4bOES(s:GL.Byte, t:GL.Byte, r:GL.Byte, q:GL.Byte)
{
    fp_glTexCoord4bOES = unsafeBitCast(get_fp("glTexCoord4bOES", support: [ss286]), to: Swift.type(of: fp_glTexCoord4bOES))
    fp_glTexCoord4bOES(s, t, r, q)
}
public
func glTexCoord4bOES(s:GL.Byte, t:GL.Byte, r:GL.Byte, q:GL.Byte)
{
    fp_glTexCoord4bOES(s, t, r, q)
}
public
func glTexCoord4bOES(_ s:GL.Byte, _ t:GL.Byte, _ r:GL.Byte, _ q:GL.Byte)
{
    fp_glTexCoord4bOES(s, t, r, q)
}

var fp_glTexCoord4bvOES:@convention(c) (UnsafePointer<GL.Byte>?) -> () = load_glTexCoord4bvOES
func load_glTexCoord4bvOES(coords:UnsafePointer<GL.Byte>?)
{
    fp_glTexCoord4bvOES = unsafeBitCast(get_fp("glTexCoord4bvOES", support: [ss286]), to: Swift.type(of: fp_glTexCoord4bvOES))
    fp_glTexCoord4bvOES(coords)
}
public
func glTexCoord4bvOES(coords:UnsafePointer<GL.Byte>?)
{
    fp_glTexCoord4bvOES(coords)
}
public
func glTexCoord4bvOES(_ coords:UnsafePointer<GL.Byte>?)
{
    fp_glTexCoord4bvOES(coords)
}

var fp_glTexCoord4d:@convention(c) (GL.Double, GL.Double, GL.Double, GL.Double) -> () = load_glTexCoord4d
func load_glTexCoord4d(s:GL.Double, t:GL.Double, r:GL.Double, q:GL.Double)
{
    fp_glTexCoord4d = unsafeBitCast(get_fp("glTexCoord4d", support: [ss346, ss369]), to: Swift.type(of: fp_glTexCoord4d))
    fp_glTexCoord4d(s, t, r, q)
}
public
func glTexCoord4d(s:GL.Double, t:GL.Double, r:GL.Double, q:GL.Double)
{
    fp_glTexCoord4d(s, t, r, q)
}
public
func glTexCoord4d(_ s:GL.Double, _ t:GL.Double, _ r:GL.Double, _ q:GL.Double)
{
    fp_glTexCoord4d(s, t, r, q)
}

var fp_glTexCoord4dv:@convention(c) (UnsafePointer<GL.Double>?) -> () = load_glTexCoord4dv
func load_glTexCoord4dv(v:UnsafePointer<GL.Double>?)
{
    fp_glTexCoord4dv = unsafeBitCast(get_fp("glTexCoord4dv", support: [ss346, ss369]), to: Swift.type(of: fp_glTexCoord4dv))
    fp_glTexCoord4dv(v)
}
public
func glTexCoord4dv(v:UnsafePointer<GL.Double>?)
{
    fp_glTexCoord4dv(v)
}
public
func glTexCoord4dv(_ v:UnsafePointer<GL.Double>?)
{
    fp_glTexCoord4dv(v)
}

var fp_glTexCoord4f:@convention(c) (GL.Float, GL.Float, GL.Float, GL.Float) -> () = load_glTexCoord4f
func load_glTexCoord4f(s:GL.Float, t:GL.Float, r:GL.Float, q:GL.Float)
{
    fp_glTexCoord4f = unsafeBitCast(get_fp("glTexCoord4f", support: [ss346, ss369]), to: Swift.type(of: fp_glTexCoord4f))
    fp_glTexCoord4f(s, t, r, q)
}
public
func glTexCoord4f(s:GL.Float, t:GL.Float, r:GL.Float, q:GL.Float)
{
    fp_glTexCoord4f(s, t, r, q)
}
public
func glTexCoord4f(_ s:GL.Float, _ t:GL.Float, _ r:GL.Float, _ q:GL.Float)
{
    fp_glTexCoord4f(s, t, r, q)
}

var fp_glTexCoord4fColor4fNormal3fVertex4fSUN:@convention(c) (GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float) -> () = load_glTexCoord4fColor4fNormal3fVertex4fSUN
func load_glTexCoord4fColor4fNormal3fVertex4fSUN(s:GL.Float, t:GL.Float, p:GL.Float, q:GL.Float, r:GL.Float, g:GL.Float, b:GL.Float, a:GL.Float, nx:GL.Float, ny:GL.Float, nz:GL.Float, x:GL.Float, y:GL.Float, z:GL.Float, w:GL.Float)
{
    fp_glTexCoord4fColor4fNormal3fVertex4fSUN = unsafeBitCast(get_fp("glTexCoord4fColor4fNormal3fVertex4fSUN", support: [ss344]), to: Swift.type(of: fp_glTexCoord4fColor4fNormal3fVertex4fSUN))
    fp_glTexCoord4fColor4fNormal3fVertex4fSUN(s, t, p, q, r, g, b, a, nx, ny, nz, x, y, z, w)
}
public
func glTexCoord4fColor4fNormal3fVertex4fSUN(s:GL.Float, t:GL.Float, p:GL.Float, q:GL.Float, r:GL.Float, g:GL.Float, b:GL.Float, a:GL.Float, nx:GL.Float, ny:GL.Float, nz:GL.Float, x:GL.Float, y:GL.Float, z:GL.Float, w:GL.Float)
{
    fp_glTexCoord4fColor4fNormal3fVertex4fSUN(s, t, p, q, r, g, b, a, nx, ny, nz, x, y, z, w)
}
public
func glTexCoord4fColor4fNormal3fVertex4fSUN(_ s:GL.Float, _ t:GL.Float, _ p:GL.Float, _ q:GL.Float, _ r:GL.Float, _ g:GL.Float, _ b:GL.Float, _ a:GL.Float, _ nx:GL.Float, _ ny:GL.Float, _ nz:GL.Float, _ x:GL.Float, _ y:GL.Float, _ z:GL.Float, _ w:GL.Float)
{
    fp_glTexCoord4fColor4fNormal3fVertex4fSUN(s, t, p, q, r, g, b, a, nx, ny, nz, x, y, z, w)
}

var fp_glTexCoord4fColor4fNormal3fVertex4fvSUN:@convention(c) (UnsafePointer<GL.Float>?, UnsafePointer<GL.Float>?, UnsafePointer<GL.Float>?, UnsafePointer<GL.Float>?) -> () = load_glTexCoord4fColor4fNormal3fVertex4fvSUN
func load_glTexCoord4fColor4fNormal3fVertex4fvSUN(tc:UnsafePointer<GL.Float>?, c:UnsafePointer<GL.Float>?, n:UnsafePointer<GL.Float>?, v:UnsafePointer<GL.Float>?)
{
    fp_glTexCoord4fColor4fNormal3fVertex4fvSUN = unsafeBitCast(get_fp("glTexCoord4fColor4fNormal3fVertex4fvSUN", support: [ss344]), to: Swift.type(of: fp_glTexCoord4fColor4fNormal3fVertex4fvSUN))
    fp_glTexCoord4fColor4fNormal3fVertex4fvSUN(tc, c, n, v)
}
public
func glTexCoord4fColor4fNormal3fVertex4fvSUN(tc:UnsafePointer<GL.Float>?, c:UnsafePointer<GL.Float>?, n:UnsafePointer<GL.Float>?, v:UnsafePointer<GL.Float>?)
{
    fp_glTexCoord4fColor4fNormal3fVertex4fvSUN(tc, c, n, v)
}
public
func glTexCoord4fColor4fNormal3fVertex4fvSUN(_ tc:UnsafePointer<GL.Float>?, _ c:UnsafePointer<GL.Float>?, _ n:UnsafePointer<GL.Float>?, _ v:UnsafePointer<GL.Float>?)
{
    fp_glTexCoord4fColor4fNormal3fVertex4fvSUN(tc, c, n, v)
}

var fp_glTexCoord4fVertex4fSUN:@convention(c) (GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float, GL.Float) -> () = load_glTexCoord4fVertex4fSUN
func load_glTexCoord4fVertex4fSUN(s:GL.Float, t:GL.Float, p:GL.Float, q:GL.Float, x:GL.Float, y:GL.Float, z:GL.Float, w:GL.Float)
{
    fp_glTexCoord4fVertex4fSUN = unsafeBitCast(get_fp("glTexCoord4fVertex4fSUN", support: [ss344]), to: Swift.type(of: fp_glTexCoord4fVertex4fSUN))
    fp_glTexCoord4fVertex4fSUN(s, t, p, q, x, y, z, w)
}
public
func glTexCoord4fVertex4fSUN(s:GL.Float, t:GL.Float, p:GL.Float, q:GL.Float, x:GL.Float, y:GL.Float, z:GL.Float, w:GL.Float)
{
    fp_glTexCoord4fVertex4fSUN(s, t, p, q, x, y, z, w)
}
public
func glTexCoord4fVertex4fSUN(_ s:GL.Float, _ t:GL.Float, _ p:GL.Float, _ q:GL.Float, _ x:GL.Float, _ y:GL.Float, _ z:GL.Float, _ w:GL.Float)
{
    fp_glTexCoord4fVertex4fSUN(s, t, p, q, x, y, z, w)
}

var fp_glTexCoord4fVertex4fvSUN:@convention(c) (UnsafePointer<GL.Float>?, UnsafePointer<GL.Float>?) -> () = load_glTexCoord4fVertex4fvSUN
func load_glTexCoord4fVertex4fvSUN(tc:UnsafePointer<GL.Float>?, v:UnsafePointer<GL.Float>?)
{
    fp_glTexCoord4fVertex4fvSUN = unsafeBitCast(get_fp("glTexCoord4fVertex4fvSUN", support: [ss344]), to: Swift.type(of: fp_glTexCoord4fVertex4fvSUN))
    fp_glTexCoord4fVertex4fvSUN(tc, v)
}
public
func glTexCoord4fVertex4fvSUN(tc:UnsafePointer<GL.Float>?, v:UnsafePointer<GL.Float>?)
{
    fp_glTexCoord4fVertex4fvSUN(tc, v)
}
public
func glTexCoord4fVertex4fvSUN(_ tc:UnsafePointer<GL.Float>?, _ v:UnsafePointer<GL.Float>?)
{
    fp_glTexCoord4fVertex4fvSUN(tc, v)
}

var fp_glTexCoord4fv:@convention(c) (UnsafePointer<GL.Float>?) -> () = load_glTexCoord4fv
func load_glTexCoord4fv(v:UnsafePointer<GL.Float>?)
{
    fp_glTexCoord4fv = unsafeBitCast(get_fp("glTexCoord4fv", support: [ss346, ss369]), to: Swift.type(of: fp_glTexCoord4fv))
    fp_glTexCoord4fv(v)
}
public
func glTexCoord4fv(v:UnsafePointer<GL.Float>?)
{
    fp_glTexCoord4fv(v)
}
public
func glTexCoord4fv(_ v:UnsafePointer<GL.Float>?)
{
    fp_glTexCoord4fv(v)
}

var fp_glTexCoord4hNV:@convention(c) (GL.HalfNV, GL.HalfNV, GL.HalfNV, GL.HalfNV) -> () = load_glTexCoord4hNV
func load_glTexCoord4hNV(s:GL.HalfNV, t:GL.HalfNV, r:GL.HalfNV, q:GL.HalfNV)
{
    fp_glTexCoord4hNV = unsafeBitCast(get_fp("glTexCoord4hNV", support: [ss253]), to: Swift.type(of: fp_glTexCoord4hNV))
    fp_glTexCoord4hNV(s, t, r, q)
}
public
func glTexCoord4hNV(s:GL.HalfNV, t:GL.HalfNV, r:GL.HalfNV, q:GL.HalfNV)
{
    fp_glTexCoord4hNV(s, t, r, q)
}
public
func glTexCoord4hNV(_ s:GL.HalfNV, _ t:GL.HalfNV, _ r:GL.HalfNV, _ q:GL.HalfNV)
{
    fp_glTexCoord4hNV(s, t, r, q)
}

var fp_glTexCoord4hvNV:@convention(c) (UnsafePointer<GL.HalfNV>?) -> () = load_glTexCoord4hvNV
func load_glTexCoord4hvNV(v:UnsafePointer<GL.HalfNV>?)
{
    fp_glTexCoord4hvNV = unsafeBitCast(get_fp("glTexCoord4hvNV", support: [ss253]), to: Swift.type(of: fp_glTexCoord4hvNV))
    fp_glTexCoord4hvNV(v)
}
public
func glTexCoord4hvNV(v:UnsafePointer<GL.HalfNV>?)
{
    fp_glTexCoord4hvNV(v)
}
public
func glTexCoord4hvNV(_ v:UnsafePointer<GL.HalfNV>?)
{
    fp_glTexCoord4hvNV(v)
}

var fp_glTexCoord4i:@convention(c) (GL.Int, GL.Int, GL.Int, GL.Int) -> () = load_glTexCoord4i
func load_glTexCoord4i(s:GL.Int, t:GL.Int, r:GL.Int, q:GL.Int)
{
    fp_glTexCoord4i = unsafeBitCast(get_fp("glTexCoord4i", support: [ss346, ss369]), to: Swift.type(of: fp_glTexCoord4i))
    fp_glTexCoord4i(s, t, r, q)
}
public
func glTexCoord4i(s:GL.Int, t:GL.Int, r:GL.Int, q:GL.Int)
{
    fp_glTexCoord4i(s, t, r, q)
}
public
func glTexCoord4i(_ s:GL.Int, _ t:GL.Int, _ r:GL.Int, _ q:GL.Int)
{
    fp_glTexCoord4i(s, t, r, q)
}

var fp_glTexCoord4iv:@convention(c) (UnsafePointer<GL.Int>?) -> () = load_glTexCoord4iv
func load_glTexCoord4iv(v:UnsafePointer<GL.Int>?)
{
    fp_glTexCoord4iv = unsafeBitCast(get_fp("glTexCoord4iv", support: [ss346, ss369]), to: Swift.type(of: fp_glTexCoord4iv))
    fp_glTexCoord4iv(v)
}
public
func glTexCoord4iv(v:UnsafePointer<GL.Int>?)
{
    fp_glTexCoord4iv(v)
}
public
func glTexCoord4iv(_ v:UnsafePointer<GL.Int>?)
{
    fp_glTexCoord4iv(v)
}

var fp_glTexCoord4s:@convention(c) (GL.Short, GL.Short, GL.Short, GL.Short) -> () = load_glTexCoord4s
func load_glTexCoord4s(s:GL.Short, t:GL.Short, r:GL.Short, q:GL.Short)
{
    fp_glTexCoord4s = unsafeBitCast(get_fp("glTexCoord4s", support: [ss346, ss369]), to: Swift.type(of: fp_glTexCoord4s))
    fp_glTexCoord4s(s, t, r, q)
}
public
func glTexCoord4s(s:GL.Short, t:GL.Short, r:GL.Short, q:GL.Short)
{
    fp_glTexCoord4s(s, t, r, q)
}
public
func glTexCoord4s(_ s:GL.Short, _ t:GL.Short, _ r:GL.Short, _ q:GL.Short)
{
    fp_glTexCoord4s(s, t, r, q)
}

var fp_glTexCoord4sv:@convention(c) (UnsafePointer<GL.Short>?) -> () = load_glTexCoord4sv
func load_glTexCoord4sv(v:UnsafePointer<GL.Short>?)
{
    fp_glTexCoord4sv = unsafeBitCast(get_fp("glTexCoord4sv", support: [ss346, ss369]), to: Swift.type(of: fp_glTexCoord4sv))
    fp_glTexCoord4sv(v)
}
public
func glTexCoord4sv(v:UnsafePointer<GL.Short>?)
{
    fp_glTexCoord4sv(v)
}
public
func glTexCoord4sv(_ v:UnsafePointer<GL.Short>?)
{
    fp_glTexCoord4sv(v)
}

var fp_glTexCoord4xOES:@convention(c) (GL.Fixed, GL.Fixed, GL.Fixed, GL.Fixed) -> () = load_glTexCoord4xOES
func load_glTexCoord4xOES(s:GL.Fixed, t:GL.Fixed, r:GL.Fixed, q:GL.Fixed)
{
    fp_glTexCoord4xOES = unsafeBitCast(get_fp("glTexCoord4xOES", support: [ss292]), to: Swift.type(of: fp_glTexCoord4xOES))
    fp_glTexCoord4xOES(s, t, r, q)
}
public
func glTexCoord4xOES(s:GL.Fixed, t:GL.Fixed, r:GL.Fixed, q:GL.Fixed)
{
    fp_glTexCoord4xOES(s, t, r, q)
}
public
func glTexCoord4xOES(_ s:GL.Fixed, _ t:GL.Fixed, _ r:GL.Fixed, _ q:GL.Fixed)
{
    fp_glTexCoord4xOES(s, t, r, q)
}

var fp_glTexCoord4xvOES:@convention(c) (UnsafePointer<GL.Fixed>?) -> () = load_glTexCoord4xvOES
func load_glTexCoord4xvOES(coords:UnsafePointer<GL.Fixed>?)
{
    fp_glTexCoord4xvOES = unsafeBitCast(get_fp("glTexCoord4xvOES", support: [ss292]), to: Swift.type(of: fp_glTexCoord4xvOES))
    fp_glTexCoord4xvOES(coords)
}
public
func glTexCoord4xvOES(coords:UnsafePointer<GL.Fixed>?)
{
    fp_glTexCoord4xvOES(coords)
}
public
func glTexCoord4xvOES(_ coords:UnsafePointer<GL.Fixed>?)
{
    fp_glTexCoord4xvOES(coords)
}

var fp_glTexCoordFormatNV:@convention(c) (GL.Int, GL.Enum, GL.Size) -> () = load_glTexCoordFormatNV
func load_glTexCoordFormatNV(size:GL.Int, type:GL.Enum, stride:GL.Size)
{
    fp_glTexCoordFormatNV = unsafeBitCast(get_fp("glTexCoordFormatNV", support: [ss277]), to: Swift.type(of: fp_glTexCoordFormatNV))
    fp_glTexCoordFormatNV(size, type, stride)
}
public
func glTexCoordFormatNV(size:GL.Int, type:GL.Enum, stride:GL.Size)
{
    fp_glTexCoordFormatNV(size, type, stride)
}
public
func glTexCoordFormatNV(_ size:GL.Int, _ type:GL.Enum, _ stride:GL.Size)
{
    fp_glTexCoordFormatNV(size, type, stride)
}

var fp_glTexCoordP1ui:@convention(c) (GL.Enum, GL.UInt) -> () = load_glTexCoordP1ui
func load_glTexCoordP1ui(type:GL.Enum, coords:GL.UInt)
{
    fp_glTexCoordP1ui = unsafeBitCast(get_fp("glTexCoordP1ui", support: [ss357, ss112]), to: Swift.type(of: fp_glTexCoordP1ui))
    fp_glTexCoordP1ui(type, coords)
}
public
func glTexCoordP1ui(type:GL.Enum, coords:GL.UInt)
{
    fp_glTexCoordP1ui(type, coords)
}
public
func glTexCoordP1ui(_ type:GL.Enum, _ coords:GL.UInt)
{
    fp_glTexCoordP1ui(type, coords)
}

var fp_glTexCoordP1uiv:@convention(c) (GL.Enum, UnsafePointer<GL.UInt>?) -> () = load_glTexCoordP1uiv
func load_glTexCoordP1uiv(type:GL.Enum, coords:UnsafePointer<GL.UInt>?)
{
    fp_glTexCoordP1uiv = unsafeBitCast(get_fp("glTexCoordP1uiv", support: [ss357, ss112]), to: Swift.type(of: fp_glTexCoordP1uiv))
    fp_glTexCoordP1uiv(type, coords)
}
public
func glTexCoordP1uiv(type:GL.Enum, coords:UnsafePointer<GL.UInt>?)
{
    fp_glTexCoordP1uiv(type, coords)
}
public
func glTexCoordP1uiv(_ type:GL.Enum, _ coords:UnsafePointer<GL.UInt>?)
{
    fp_glTexCoordP1uiv(type, coords)
}

var fp_glTexCoordP2ui:@convention(c) (GL.Enum, GL.UInt) -> () = load_glTexCoordP2ui
func load_glTexCoordP2ui(type:GL.Enum, coords:GL.UInt)
{
    fp_glTexCoordP2ui = unsafeBitCast(get_fp("glTexCoordP2ui", support: [ss357, ss112]), to: Swift.type(of: fp_glTexCoordP2ui))
    fp_glTexCoordP2ui(type, coords)
}
public
func glTexCoordP2ui(type:GL.Enum, coords:GL.UInt)
{
    fp_glTexCoordP2ui(type, coords)
}
public
func glTexCoordP2ui(_ type:GL.Enum, _ coords:GL.UInt)
{
    fp_glTexCoordP2ui(type, coords)
}

var fp_glTexCoordP2uiv:@convention(c) (GL.Enum, UnsafePointer<GL.UInt>?) -> () = load_glTexCoordP2uiv
func load_glTexCoordP2uiv(type:GL.Enum, coords:UnsafePointer<GL.UInt>?)
{
    fp_glTexCoordP2uiv = unsafeBitCast(get_fp("glTexCoordP2uiv", support: [ss357, ss112]), to: Swift.type(of: fp_glTexCoordP2uiv))
    fp_glTexCoordP2uiv(type, coords)
}
public
func glTexCoordP2uiv(type:GL.Enum, coords:UnsafePointer<GL.UInt>?)
{
    fp_glTexCoordP2uiv(type, coords)
}
public
func glTexCoordP2uiv(_ type:GL.Enum, _ coords:UnsafePointer<GL.UInt>?)
{
    fp_glTexCoordP2uiv(type, coords)
}

var fp_glTexCoordP3ui:@convention(c) (GL.Enum, GL.UInt) -> () = load_glTexCoordP3ui
func load_glTexCoordP3ui(type:GL.Enum, coords:GL.UInt)
{
    fp_glTexCoordP3ui = unsafeBitCast(get_fp("glTexCoordP3ui", support: [ss357, ss112]), to: Swift.type(of: fp_glTexCoordP3ui))
    fp_glTexCoordP3ui(type, coords)
}
public
func glTexCoordP3ui(type:GL.Enum, coords:GL.UInt)
{
    fp_glTexCoordP3ui(type, coords)
}
public
func glTexCoordP3ui(_ type:GL.Enum, _ coords:GL.UInt)
{
    fp_glTexCoordP3ui(type, coords)
}

var fp_glTexCoordP3uiv:@convention(c) (GL.Enum, UnsafePointer<GL.UInt>?) -> () = load_glTexCoordP3uiv
func load_glTexCoordP3uiv(type:GL.Enum, coords:UnsafePointer<GL.UInt>?)
{
    fp_glTexCoordP3uiv = unsafeBitCast(get_fp("glTexCoordP3uiv", support: [ss357, ss112]), to: Swift.type(of: fp_glTexCoordP3uiv))
    fp_glTexCoordP3uiv(type, coords)
}
public
func glTexCoordP3uiv(type:GL.Enum, coords:UnsafePointer<GL.UInt>?)
{
    fp_glTexCoordP3uiv(type, coords)
}
public
func glTexCoordP3uiv(_ type:GL.Enum, _ coords:UnsafePointer<GL.UInt>?)
{
    fp_glTexCoordP3uiv(type, coords)
}

var fp_glTexCoordP4ui:@convention(c) (GL.Enum, GL.UInt) -> () = load_glTexCoordP4ui
func load_glTexCoordP4ui(type:GL.Enum, coords:GL.UInt)
{
    fp_glTexCoordP4ui = unsafeBitCast(get_fp("glTexCoordP4ui", support: [ss357, ss112]), to: Swift.type(of: fp_glTexCoordP4ui))
    fp_glTexCoordP4ui(type, coords)
}
public
func glTexCoordP4ui(type:GL.Enum, coords:GL.UInt)
{
    fp_glTexCoordP4ui(type, coords)
}
public
func glTexCoordP4ui(_ type:GL.Enum, _ coords:GL.UInt)
{
    fp_glTexCoordP4ui(type, coords)
}

var fp_glTexCoordP4uiv:@convention(c) (GL.Enum, UnsafePointer<GL.UInt>?) -> () = load_glTexCoordP4uiv
func load_glTexCoordP4uiv(type:GL.Enum, coords:UnsafePointer<GL.UInt>?)
{
    fp_glTexCoordP4uiv = unsafeBitCast(get_fp("glTexCoordP4uiv", support: [ss357, ss112]), to: Swift.type(of: fp_glTexCoordP4uiv))
    fp_glTexCoordP4uiv(type, coords)
}
public
func glTexCoordP4uiv(type:GL.Enum, coords:UnsafePointer<GL.UInt>?)
{
    fp_glTexCoordP4uiv(type, coords)
}
public
func glTexCoordP4uiv(_ type:GL.Enum, _ coords:UnsafePointer<GL.UInt>?)
{
    fp_glTexCoordP4uiv(type, coords)
}

var fp_glTexCoordPointer:@convention(c) (GL.Int, GL.Enum, GL.Size, UnsafeRawPointer?) -> () = load_glTexCoordPointer
func load_glTexCoordPointer(size:GL.Int, type:GL.Enum, stride:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glTexCoordPointer = unsafeBitCast(get_fp("glTexCoordPointer", support: [ss347, ss369, ss364]), to: Swift.type(of: fp_glTexCoordPointer))
    fp_glTexCoordPointer(size, type, stride, pointer)
}
public
func glTexCoordPointer(size:GL.Int, type:GL.Enum, stride:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glTexCoordPointer(size, type, stride, pointer)
}
public
func glTexCoordPointer(_ size:GL.Int, _ type:GL.Enum, _ stride:GL.Size, _ pointer:UnsafeRawPointer?)
{
    fp_glTexCoordPointer(size, type, stride, pointer)
}

var fp_glTexCoordPointerEXT:@convention(c) (GL.Int, GL.Enum, GL.Size, GL.Size, UnsafeRawPointer?) -> () = load_glTexCoordPointerEXT
func load_glTexCoordPointerEXT(size:GL.Int, type:GL.Enum, stride:GL.Size, count:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glTexCoordPointerEXT = unsafeBitCast(get_fp("glTexCoordPointerEXT", support: [ss202]), to: Swift.type(of: fp_glTexCoordPointerEXT))
    fp_glTexCoordPointerEXT(size, type, stride, count, pointer)
}
public
func glTexCoordPointerEXT(size:GL.Int, type:GL.Enum, stride:GL.Size, count:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glTexCoordPointerEXT(size, type, stride, count, pointer)
}
public
func glTexCoordPointerEXT(_ size:GL.Int, _ type:GL.Enum, _ stride:GL.Size, _ count:GL.Size, _ pointer:UnsafeRawPointer?)
{
    fp_glTexCoordPointerEXT(size, type, stride, count, pointer)
}

var fp_glTexCoordPointerListIBM:@convention(c) (GL.Int, GL.Enum, GL.Int, UnsafeMutablePointer<UnsafeRawPointer?>?, GL.Int) -> () = load_glTexCoordPointerListIBM
func load_glTexCoordPointerListIBM(size:GL.Int, type:GL.Enum, stride:GL.Int, pointer:UnsafeMutablePointer<UnsafeRawPointer?>?, ptrstride:GL.Int)
{
    fp_glTexCoordPointerListIBM = unsafeBitCast(get_fp("glTexCoordPointerListIBM", support: [ss212]), to: Swift.type(of: fp_glTexCoordPointerListIBM))
    fp_glTexCoordPointerListIBM(size, type, stride, pointer, ptrstride)
}
public
func glTexCoordPointerListIBM(size:GL.Int, type:GL.Enum, stride:GL.Int, pointer:UnsafeMutablePointer<UnsafeRawPointer?>?, ptrstride:GL.Int)
{
    fp_glTexCoordPointerListIBM(size, type, stride, pointer, ptrstride)
}
public
func glTexCoordPointerListIBM(_ size:GL.Int, _ type:GL.Enum, _ stride:GL.Int, _ pointer:UnsafeMutablePointer<UnsafeRawPointer?>?, _ ptrstride:GL.Int)
{
    fp_glTexCoordPointerListIBM(size, type, stride, pointer, ptrstride)
}

var fp_glTexCoordPointervINTEL:@convention(c) (GL.Int, GL.Enum, UnsafeMutablePointer<UnsafeRawPointer?>?) -> () = load_glTexCoordPointervINTEL
func load_glTexCoordPointervINTEL(size:GL.Int, type:GL.Enum, pointer:UnsafeMutablePointer<UnsafeRawPointer?>?)
{
    fp_glTexCoordPointervINTEL = unsafeBitCast(get_fp("glTexCoordPointervINTEL", support: [ss218]), to: Swift.type(of: fp_glTexCoordPointervINTEL))
    fp_glTexCoordPointervINTEL(size, type, pointer)
}
public
func glTexCoordPointervINTEL(size:GL.Int, type:GL.Enum, pointer:UnsafeMutablePointer<UnsafeRawPointer?>?)
{
    fp_glTexCoordPointervINTEL(size, type, pointer)
}
public
func glTexCoordPointervINTEL(_ size:GL.Int, _ type:GL.Enum, _ pointer:UnsafeMutablePointer<UnsafeRawPointer?>?)
{
    fp_glTexCoordPointervINTEL(size, type, pointer)
}

var fp_glTexEnvf:@convention(c) (GL.Enum, GL.Enum, GL.Float) -> () = load_glTexEnvf
func load_glTexEnvf(target:GL.Enum, pname:GL.Enum, param:GL.Float)
{
    fp_glTexEnvf = unsafeBitCast(get_fp("glTexEnvf", support: [ss346, ss369, ss364]), to: Swift.type(of: fp_glTexEnvf))
    fp_glTexEnvf(target, pname, param)
}
public
func glTexEnvf(target:GL.Enum, pname:GL.Enum, param:GL.Float)
{
    fp_glTexEnvf(target, pname, param)
}
public
func glTexEnvf(_ target:GL.Enum, _ pname:GL.Enum, _ param:GL.Float)
{
    fp_glTexEnvf(target, pname, param)
}

var fp_glTexEnvfv:@convention(c) (GL.Enum, GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glTexEnvfv
func load_glTexEnvfv(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glTexEnvfv = unsafeBitCast(get_fp("glTexEnvfv", support: [ss346, ss369, ss364]), to: Swift.type(of: fp_glTexEnvfv))
    fp_glTexEnvfv(target, pname, params)
}
public
func glTexEnvfv(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glTexEnvfv(target, pname, params)
}
public
func glTexEnvfv(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.Float>?)
{
    fp_glTexEnvfv(target, pname, params)
}

var fp_glTexEnvi:@convention(c) (GL.Enum, GL.Enum, GL.Int) -> () = load_glTexEnvi
func load_glTexEnvi(target:GL.Enum, pname:GL.Enum, param:GL.Int)
{
    fp_glTexEnvi = unsafeBitCast(get_fp("glTexEnvi", support: [ss346, ss369, ss364]), to: Swift.type(of: fp_glTexEnvi))
    fp_glTexEnvi(target, pname, param)
}
public
func glTexEnvi(target:GL.Enum, pname:GL.Enum, param:GL.Int)
{
    fp_glTexEnvi(target, pname, param)
}
public
func glTexEnvi(_ target:GL.Enum, _ pname:GL.Enum, _ param:GL.Int)
{
    fp_glTexEnvi(target, pname, param)
}

var fp_glTexEnviv:@convention(c) (GL.Enum, GL.Enum, UnsafePointer<GL.Int>?) -> () = load_glTexEnviv
func load_glTexEnviv(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glTexEnviv = unsafeBitCast(get_fp("glTexEnviv", support: [ss346, ss369, ss364]), to: Swift.type(of: fp_glTexEnviv))
    fp_glTexEnviv(target, pname, params)
}
public
func glTexEnviv(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glTexEnviv(target, pname, params)
}
public
func glTexEnviv(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.Int>?)
{
    fp_glTexEnviv(target, pname, params)
}

var fp_glTexEnvx:@convention(c) (GL.Enum, GL.Enum, GL.Fixed) -> () = load_glTexEnvx
func load_glTexEnvx(target:GL.Enum, pname:GL.Enum, param:GL.Fixed)
{
    fp_glTexEnvx = unsafeBitCast(get_fp("glTexEnvx", support: [ss364]), to: Swift.type(of: fp_glTexEnvx))
    fp_glTexEnvx(target, pname, param)
}
public
func glTexEnvx(target:GL.Enum, pname:GL.Enum, param:GL.Fixed)
{
    fp_glTexEnvx(target, pname, param)
}
public
func glTexEnvx(_ target:GL.Enum, _ pname:GL.Enum, _ param:GL.Fixed)
{
    fp_glTexEnvx(target, pname, param)
}

var fp_glTexEnvxOES:@convention(c) (GL.Enum, GL.Enum, GL.Fixed) -> () = load_glTexEnvxOES
func load_glTexEnvxOES(target:GL.Enum, pname:GL.Enum, param:GL.Fixed)
{
    fp_glTexEnvxOES = unsafeBitCast(get_fp("glTexEnvxOES", support: [ss292]), to: Swift.type(of: fp_glTexEnvxOES))
    fp_glTexEnvxOES(target, pname, param)
}
public
func glTexEnvxOES(target:GL.Enum, pname:GL.Enum, param:GL.Fixed)
{
    fp_glTexEnvxOES(target, pname, param)
}
public
func glTexEnvxOES(_ target:GL.Enum, _ pname:GL.Enum, _ param:GL.Fixed)
{
    fp_glTexEnvxOES(target, pname, param)
}

var fp_glTexEnvxv:@convention(c) (GL.Enum, GL.Enum, UnsafePointer<GL.Fixed>?) -> () = load_glTexEnvxv
func load_glTexEnvxv(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Fixed>?)
{
    fp_glTexEnvxv = unsafeBitCast(get_fp("glTexEnvxv", support: [ss364]), to: Swift.type(of: fp_glTexEnvxv))
    fp_glTexEnvxv(target, pname, params)
}
public
func glTexEnvxv(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Fixed>?)
{
    fp_glTexEnvxv(target, pname, params)
}
public
func glTexEnvxv(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.Fixed>?)
{
    fp_glTexEnvxv(target, pname, params)
}

var fp_glTexEnvxvOES:@convention(c) (GL.Enum, GL.Enum, UnsafePointer<GL.Fixed>?) -> () = load_glTexEnvxvOES
func load_glTexEnvxvOES(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Fixed>?)
{
    fp_glTexEnvxvOES = unsafeBitCast(get_fp("glTexEnvxvOES", support: [ss292]), to: Swift.type(of: fp_glTexEnvxvOES))
    fp_glTexEnvxvOES(target, pname, params)
}
public
func glTexEnvxvOES(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Fixed>?)
{
    fp_glTexEnvxvOES(target, pname, params)
}
public
func glTexEnvxvOES(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.Fixed>?)
{
    fp_glTexEnvxvOES(target, pname, params)
}

var fp_glTexFilterFuncSGIS:@convention(c) (GL.Enum, GL.Enum, GL.Size, UnsafePointer<GL.Float>?) -> () = load_glTexFilterFuncSGIS
func load_glTexFilterFuncSGIS(target:GL.Enum, filter:GL.Enum, n:GL.Size, weights:UnsafePointer<GL.Float>?)
{
    fp_glTexFilterFuncSGIS = unsafeBitCast(get_fp("glTexFilterFuncSGIS", support: [ss327]), to: Swift.type(of: fp_glTexFilterFuncSGIS))
    fp_glTexFilterFuncSGIS(target, filter, n, weights)
}
public
func glTexFilterFuncSGIS(target:GL.Enum, filter:GL.Enum, n:GL.Size, weights:UnsafePointer<GL.Float>?)
{
    fp_glTexFilterFuncSGIS(target, filter, n, weights)
}
public
func glTexFilterFuncSGIS(_ target:GL.Enum, _ filter:GL.Enum, _ n:GL.Size, _ weights:UnsafePointer<GL.Float>?)
{
    fp_glTexFilterFuncSGIS(target, filter, n, weights)
}

var fp_glTexGend:@convention(c) (GL.Enum, GL.Enum, GL.Double) -> () = load_glTexGend
func load_glTexGend(coord:GL.Enum, pname:GL.Enum, param:GL.Double)
{
    fp_glTexGend = unsafeBitCast(get_fp("glTexGend", support: [ss346, ss369]), to: Swift.type(of: fp_glTexGend))
    fp_glTexGend(coord, pname, param)
}
public
func glTexGend(coord:GL.Enum, pname:GL.Enum, param:GL.Double)
{
    fp_glTexGend(coord, pname, param)
}
public
func glTexGend(_ coord:GL.Enum, _ pname:GL.Enum, _ param:GL.Double)
{
    fp_glTexGend(coord, pname, param)
}

var fp_glTexGendv:@convention(c) (GL.Enum, GL.Enum, UnsafePointer<GL.Double>?) -> () = load_glTexGendv
func load_glTexGendv(coord:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Double>?)
{
    fp_glTexGendv = unsafeBitCast(get_fp("glTexGendv", support: [ss346, ss369]), to: Swift.type(of: fp_glTexGendv))
    fp_glTexGendv(coord, pname, params)
}
public
func glTexGendv(coord:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Double>?)
{
    fp_glTexGendv(coord, pname, params)
}
public
func glTexGendv(_ coord:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.Double>?)
{
    fp_glTexGendv(coord, pname, params)
}

var fp_glTexGenf:@convention(c) (GL.Enum, GL.Enum, GL.Float) -> () = load_glTexGenf
func load_glTexGenf(coord:GL.Enum, pname:GL.Enum, param:GL.Float)
{
    fp_glTexGenf = unsafeBitCast(get_fp("glTexGenf", support: [ss346, ss369]), to: Swift.type(of: fp_glTexGenf))
    fp_glTexGenf(coord, pname, param)
}
public
func glTexGenf(coord:GL.Enum, pname:GL.Enum, param:GL.Float)
{
    fp_glTexGenf(coord, pname, param)
}
public
func glTexGenf(_ coord:GL.Enum, _ pname:GL.Enum, _ param:GL.Float)
{
    fp_glTexGenf(coord, pname, param)
}

var fp_glTexGenfOES:@convention(c) (GL.Enum, GL.Enum, GL.Float) -> () = load_glTexGenfOES
func load_glTexGenfOES(coord:GL.Enum, pname:GL.Enum, param:GL.Float)
{
    fp_glTexGenfOES = unsafeBitCast(get_fp("glTexGenfOES", support: [ss307]), to: Swift.type(of: fp_glTexGenfOES))
    fp_glTexGenfOES(coord, pname, param)
}
public
func glTexGenfOES(coord:GL.Enum, pname:GL.Enum, param:GL.Float)
{
    fp_glTexGenfOES(coord, pname, param)
}
public
func glTexGenfOES(_ coord:GL.Enum, _ pname:GL.Enum, _ param:GL.Float)
{
    fp_glTexGenfOES(coord, pname, param)
}

var fp_glTexGenfv:@convention(c) (GL.Enum, GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glTexGenfv
func load_glTexGenfv(coord:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glTexGenfv = unsafeBitCast(get_fp("glTexGenfv", support: [ss346, ss369]), to: Swift.type(of: fp_glTexGenfv))
    fp_glTexGenfv(coord, pname, params)
}
public
func glTexGenfv(coord:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glTexGenfv(coord, pname, params)
}
public
func glTexGenfv(_ coord:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.Float>?)
{
    fp_glTexGenfv(coord, pname, params)
}

var fp_glTexGenfvOES:@convention(c) (GL.Enum, GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glTexGenfvOES
func load_glTexGenfvOES(coord:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glTexGenfvOES = unsafeBitCast(get_fp("glTexGenfvOES", support: [ss307]), to: Swift.type(of: fp_glTexGenfvOES))
    fp_glTexGenfvOES(coord, pname, params)
}
public
func glTexGenfvOES(coord:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glTexGenfvOES(coord, pname, params)
}
public
func glTexGenfvOES(_ coord:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.Float>?)
{
    fp_glTexGenfvOES(coord, pname, params)
}

var fp_glTexGeni:@convention(c) (GL.Enum, GL.Enum, GL.Int) -> () = load_glTexGeni
func load_glTexGeni(coord:GL.Enum, pname:GL.Enum, param:GL.Int)
{
    fp_glTexGeni = unsafeBitCast(get_fp("glTexGeni", support: [ss346, ss369]), to: Swift.type(of: fp_glTexGeni))
    fp_glTexGeni(coord, pname, param)
}
public
func glTexGeni(coord:GL.Enum, pname:GL.Enum, param:GL.Int)
{
    fp_glTexGeni(coord, pname, param)
}
public
func glTexGeni(_ coord:GL.Enum, _ pname:GL.Enum, _ param:GL.Int)
{
    fp_glTexGeni(coord, pname, param)
}

var fp_glTexGeniOES:@convention(c) (GL.Enum, GL.Enum, GL.Int) -> () = load_glTexGeniOES
func load_glTexGeniOES(coord:GL.Enum, pname:GL.Enum, param:GL.Int)
{
    fp_glTexGeniOES = unsafeBitCast(get_fp("glTexGeniOES", support: [ss307]), to: Swift.type(of: fp_glTexGeniOES))
    fp_glTexGeniOES(coord, pname, param)
}
public
func glTexGeniOES(coord:GL.Enum, pname:GL.Enum, param:GL.Int)
{
    fp_glTexGeniOES(coord, pname, param)
}
public
func glTexGeniOES(_ coord:GL.Enum, _ pname:GL.Enum, _ param:GL.Int)
{
    fp_glTexGeniOES(coord, pname, param)
}

var fp_glTexGeniv:@convention(c) (GL.Enum, GL.Enum, UnsafePointer<GL.Int>?) -> () = load_glTexGeniv
func load_glTexGeniv(coord:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glTexGeniv = unsafeBitCast(get_fp("glTexGeniv", support: [ss346, ss369]), to: Swift.type(of: fp_glTexGeniv))
    fp_glTexGeniv(coord, pname, params)
}
public
func glTexGeniv(coord:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glTexGeniv(coord, pname, params)
}
public
func glTexGeniv(_ coord:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.Int>?)
{
    fp_glTexGeniv(coord, pname, params)
}

var fp_glTexGenivOES:@convention(c) (GL.Enum, GL.Enum, UnsafePointer<GL.Int>?) -> () = load_glTexGenivOES
func load_glTexGenivOES(coord:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glTexGenivOES = unsafeBitCast(get_fp("glTexGenivOES", support: [ss307]), to: Swift.type(of: fp_glTexGenivOES))
    fp_glTexGenivOES(coord, pname, params)
}
public
func glTexGenivOES(coord:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glTexGenivOES(coord, pname, params)
}
public
func glTexGenivOES(_ coord:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.Int>?)
{
    fp_glTexGenivOES(coord, pname, params)
}

var fp_glTexGenxOES:@convention(c) (GL.Enum, GL.Enum, GL.Fixed) -> () = load_glTexGenxOES
func load_glTexGenxOES(coord:GL.Enum, pname:GL.Enum, param:GL.Fixed)
{
    fp_glTexGenxOES = unsafeBitCast(get_fp("glTexGenxOES", support: [ss292, ss307]), to: Swift.type(of: fp_glTexGenxOES))
    fp_glTexGenxOES(coord, pname, param)
}
public
func glTexGenxOES(coord:GL.Enum, pname:GL.Enum, param:GL.Fixed)
{
    fp_glTexGenxOES(coord, pname, param)
}
public
func glTexGenxOES(_ coord:GL.Enum, _ pname:GL.Enum, _ param:GL.Fixed)
{
    fp_glTexGenxOES(coord, pname, param)
}

var fp_glTexGenxvOES:@convention(c) (GL.Enum, GL.Enum, UnsafePointer<GL.Fixed>?) -> () = load_glTexGenxvOES
func load_glTexGenxvOES(coord:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Fixed>?)
{
    fp_glTexGenxvOES = unsafeBitCast(get_fp("glTexGenxvOES", support: [ss292, ss307]), to: Swift.type(of: fp_glTexGenxvOES))
    fp_glTexGenxvOES(coord, pname, params)
}
public
func glTexGenxvOES(coord:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Fixed>?)
{
    fp_glTexGenxvOES(coord, pname, params)
}
public
func glTexGenxvOES(_ coord:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.Fixed>?)
{
    fp_glTexGenxvOES(coord, pname, params)
}

var fp_glTexImage1D:@convention(c) (GL.Enum, GL.Int, GL.Int, GL.Size, GL.Int, GL.Enum, GL.Enum, UnsafeRawPointer?) -> () = load_glTexImage1D
func load_glTexImage1D(target:GL.Enum, level:GL.Int, internalformat:GL.Int, width:GL.Size, border:GL.Int, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glTexImage1D = unsafeBitCast(get_fp("glTexImage1D", support: [ss346]), to: Swift.type(of: fp_glTexImage1D))
    fp_glTexImage1D(target, level, internalformat, width, border, format, type, pixels)
}
public
func glTexImage1D(target:GL.Enum, level:GL.Int, internalformat:GL.Int, width:GL.Size, border:GL.Int, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glTexImage1D(target, level, internalformat, width, border, format, type, pixels)
}
public
func glTexImage1D(_ target:GL.Enum, _ level:GL.Int, _ internalformat:GL.Int, _ width:GL.Size, _ border:GL.Int, _ format:GL.Enum, _ type:GL.Enum, _ pixels:UnsafeRawPointer?)
{
    fp_glTexImage1D(target, level, internalformat, width, border, format, type, pixels)
}

var fp_glTexImage2D:@convention(c) (GL.Enum, GL.Int, GL.Int, GL.Size, GL.Size, GL.Int, GL.Enum, GL.Enum, UnsafeRawPointer?) -> () = load_glTexImage2D
func load_glTexImage2D(target:GL.Enum, level:GL.Int, internalformat:GL.Int, width:GL.Size, height:GL.Size, border:GL.Int, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glTexImage2D = unsafeBitCast(get_fp("glTexImage2D", support: [ss346, ss365]), to: Swift.type(of: fp_glTexImage2D))
    fp_glTexImage2D(target, level, internalformat, width, height, border, format, type, pixels)
}
public
func glTexImage2D(target:GL.Enum, level:GL.Int, internalformat:GL.Int, width:GL.Size, height:GL.Size, border:GL.Int, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glTexImage2D(target, level, internalformat, width, height, border, format, type, pixels)
}
public
func glTexImage2D(_ target:GL.Enum, _ level:GL.Int, _ internalformat:GL.Int, _ width:GL.Size, _ height:GL.Size, _ border:GL.Int, _ format:GL.Enum, _ type:GL.Enum, _ pixels:UnsafeRawPointer?)
{
    fp_glTexImage2D(target, level, internalformat, width, height, border, format, type, pixels)
}

var fp_glTexImage2DMultisample:@convention(c) (GL.Enum, GL.Size, GL.Enum, GL.Size, GL.Size, GL.Bool) -> () = load_glTexImage2DMultisample
func load_glTexImage2DMultisample(target:GL.Enum, samples:GL.Size, internalformat:GL.Enum, width:GL.Size, height:GL.Size, fixedsamplelocations:GL.Bool)
{
    fp_glTexImage2DMultisample = unsafeBitCast(get_fp("glTexImage2DMultisample", support: [ss356, ss95]), to: Swift.type(of: fp_glTexImage2DMultisample))
    fp_glTexImage2DMultisample(target, samples, internalformat, width, height, fixedsamplelocations)
}
public
func glTexImage2DMultisample(target:GL.Enum, samples:GL.Size, internalformat:GL.Enum, width:GL.Size, height:GL.Size, fixedsamplelocations:GL.Bool)
{
    fp_glTexImage2DMultisample(target, samples, internalformat, width, height, fixedsamplelocations)
}
public
func glTexImage2DMultisample(_ target:GL.Enum, _ samples:GL.Size, _ internalformat:GL.Enum, _ width:GL.Size, _ height:GL.Size, _ fixedsamplelocations:GL.Bool)
{
    fp_glTexImage2DMultisample(target, samples, internalformat, width, height, fixedsamplelocations)
}

var fp_glTexImage2DMultisampleCoverageNV:@convention(c) (GL.Enum, GL.Size, GL.Size, GL.Int, GL.Size, GL.Size, GL.Bool) -> () = load_glTexImage2DMultisampleCoverageNV
func load_glTexImage2DMultisampleCoverageNV(target:GL.Enum, coverageSamples:GL.Size, colorSamples:GL.Size, internalFormat:GL.Int, width:GL.Size, height:GL.Size, fixedSampleLocations:GL.Bool)
{
    fp_glTexImage2DMultisampleCoverageNV = unsafeBitCast(get_fp("glTexImage2DMultisampleCoverageNV", support: [ss271]), to: Swift.type(of: fp_glTexImage2DMultisampleCoverageNV))
    fp_glTexImage2DMultisampleCoverageNV(target, coverageSamples, colorSamples, internalFormat, width, height, fixedSampleLocations)
}
public
func glTexImage2DMultisampleCoverageNV(target:GL.Enum, coverageSamples:GL.Size, colorSamples:GL.Size, internalFormat:GL.Int, width:GL.Size, height:GL.Size, fixedSampleLocations:GL.Bool)
{
    fp_glTexImage2DMultisampleCoverageNV(target, coverageSamples, colorSamples, internalFormat, width, height, fixedSampleLocations)
}
public
func glTexImage2DMultisampleCoverageNV(_ target:GL.Enum, _ coverageSamples:GL.Size, _ colorSamples:GL.Size, _ internalFormat:GL.Int, _ width:GL.Size, _ height:GL.Size, _ fixedSampleLocations:GL.Bool)
{
    fp_glTexImage2DMultisampleCoverageNV(target, coverageSamples, colorSamples, internalFormat, width, height, fixedSampleLocations)
}

var fp_glTexImage3D:@convention(c) (GL.Enum, GL.Int, GL.Int, GL.Size, GL.Size, GL.Size, GL.Int, GL.Enum, GL.Enum, UnsafeRawPointer?) -> () = load_glTexImage3D
func load_glTexImage3D(target:GL.Enum, level:GL.Int, internalformat:GL.Int, width:GL.Size, height:GL.Size, depth:GL.Size, border:GL.Int, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glTexImage3D = unsafeBitCast(get_fp("glTexImage3D", support: [ss348, ss366]), to: Swift.type(of: fp_glTexImage3D))
    fp_glTexImage3D(target, level, internalformat, width, height, depth, border, format, type, pixels)
}
public
func glTexImage3D(target:GL.Enum, level:GL.Int, internalformat:GL.Int, width:GL.Size, height:GL.Size, depth:GL.Size, border:GL.Int, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glTexImage3D(target, level, internalformat, width, height, depth, border, format, type, pixels)
}
public
func glTexImage3D(_ target:GL.Enum, _ level:GL.Int, _ internalformat:GL.Int, _ width:GL.Size, _ height:GL.Size, _ depth:GL.Size, _ border:GL.Int, _ format:GL.Enum, _ type:GL.Enum, _ pixels:UnsafeRawPointer?)
{
    fp_glTexImage3D(target, level, internalformat, width, height, depth, border, format, type, pixels)
}

var fp_glTexImage3DEXT:@convention(c) (GL.Enum, GL.Int, GL.Enum, GL.Size, GL.Size, GL.Size, GL.Int, GL.Enum, GL.Enum, UnsafeRawPointer?) -> () = load_glTexImage3DEXT
func load_glTexImage3DEXT(target:GL.Enum, level:GL.Int, internalformat:GL.Enum, width:GL.Size, height:GL.Size, depth:GL.Size, border:GL.Int, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glTexImage3DEXT = unsafeBitCast(get_fp("glTexImage3DEXT", support: [ss199]), to: Swift.type(of: fp_glTexImage3DEXT))
    fp_glTexImage3DEXT(target, level, internalformat, width, height, depth, border, format, type, pixels)
}
public
func glTexImage3DEXT(target:GL.Enum, level:GL.Int, internalformat:GL.Enum, width:GL.Size, height:GL.Size, depth:GL.Size, border:GL.Int, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glTexImage3DEXT(target, level, internalformat, width, height, depth, border, format, type, pixels)
}
public
func glTexImage3DEXT(_ target:GL.Enum, _ level:GL.Int, _ internalformat:GL.Enum, _ width:GL.Size, _ height:GL.Size, _ depth:GL.Size, _ border:GL.Int, _ format:GL.Enum, _ type:GL.Enum, _ pixels:UnsafeRawPointer?)
{
    fp_glTexImage3DEXT(target, level, internalformat, width, height, depth, border, format, type, pixels)
}

var fp_glTexImage3DMultisample:@convention(c) (GL.Enum, GL.Size, GL.Enum, GL.Size, GL.Size, GL.Size, GL.Bool) -> () = load_glTexImage3DMultisample
func load_glTexImage3DMultisample(target:GL.Enum, samples:GL.Size, internalformat:GL.Enum, width:GL.Size, height:GL.Size, depth:GL.Size, fixedsamplelocations:GL.Bool)
{
    fp_glTexImage3DMultisample = unsafeBitCast(get_fp("glTexImage3DMultisample", support: [ss356, ss95]), to: Swift.type(of: fp_glTexImage3DMultisample))
    fp_glTexImage3DMultisample(target, samples, internalformat, width, height, depth, fixedsamplelocations)
}
public
func glTexImage3DMultisample(target:GL.Enum, samples:GL.Size, internalformat:GL.Enum, width:GL.Size, height:GL.Size, depth:GL.Size, fixedsamplelocations:GL.Bool)
{
    fp_glTexImage3DMultisample(target, samples, internalformat, width, height, depth, fixedsamplelocations)
}
public
func glTexImage3DMultisample(_ target:GL.Enum, _ samples:GL.Size, _ internalformat:GL.Enum, _ width:GL.Size, _ height:GL.Size, _ depth:GL.Size, _ fixedsamplelocations:GL.Bool)
{
    fp_glTexImage3DMultisample(target, samples, internalformat, width, height, depth, fixedsamplelocations)
}

var fp_glTexImage3DMultisampleCoverageNV:@convention(c) (GL.Enum, GL.Size, GL.Size, GL.Int, GL.Size, GL.Size, GL.Size, GL.Bool) -> () = load_glTexImage3DMultisampleCoverageNV
func load_glTexImage3DMultisampleCoverageNV(target:GL.Enum, coverageSamples:GL.Size, colorSamples:GL.Size, internalFormat:GL.Int, width:GL.Size, height:GL.Size, depth:GL.Size, fixedSampleLocations:GL.Bool)
{
    fp_glTexImage3DMultisampleCoverageNV = unsafeBitCast(get_fp("glTexImage3DMultisampleCoverageNV", support: [ss271]), to: Swift.type(of: fp_glTexImage3DMultisampleCoverageNV))
    fp_glTexImage3DMultisampleCoverageNV(target, coverageSamples, colorSamples, internalFormat, width, height, depth, fixedSampleLocations)
}
public
func glTexImage3DMultisampleCoverageNV(target:GL.Enum, coverageSamples:GL.Size, colorSamples:GL.Size, internalFormat:GL.Int, width:GL.Size, height:GL.Size, depth:GL.Size, fixedSampleLocations:GL.Bool)
{
    fp_glTexImage3DMultisampleCoverageNV(target, coverageSamples, colorSamples, internalFormat, width, height, depth, fixedSampleLocations)
}
public
func glTexImage3DMultisampleCoverageNV(_ target:GL.Enum, _ coverageSamples:GL.Size, _ colorSamples:GL.Size, _ internalFormat:GL.Int, _ width:GL.Size, _ height:GL.Size, _ depth:GL.Size, _ fixedSampleLocations:GL.Bool)
{
    fp_glTexImage3DMultisampleCoverageNV(target, coverageSamples, colorSamples, internalFormat, width, height, depth, fixedSampleLocations)
}

var fp_glTexImage3DOES:@convention(c) (GL.Enum, GL.Int, GL.Enum, GL.Size, GL.Size, GL.Size, GL.Int, GL.Enum, GL.Enum, UnsafeRawPointer?) -> () = load_glTexImage3DOES
func load_glTexImage3DOES(target:GL.Enum, level:GL.Int, internalformat:GL.Enum, width:GL.Size, height:GL.Size, depth:GL.Size, border:GL.Int, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glTexImage3DOES = unsafeBitCast(get_fp("glTexImage3DOES", support: [ss304]), to: Swift.type(of: fp_glTexImage3DOES))
    fp_glTexImage3DOES(target, level, internalformat, width, height, depth, border, format, type, pixels)
}
public
func glTexImage3DOES(target:GL.Enum, level:GL.Int, internalformat:GL.Enum, width:GL.Size, height:GL.Size, depth:GL.Size, border:GL.Int, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glTexImage3DOES(target, level, internalformat, width, height, depth, border, format, type, pixels)
}
public
func glTexImage3DOES(_ target:GL.Enum, _ level:GL.Int, _ internalformat:GL.Enum, _ width:GL.Size, _ height:GL.Size, _ depth:GL.Size, _ border:GL.Int, _ format:GL.Enum, _ type:GL.Enum, _ pixels:UnsafeRawPointer?)
{
    fp_glTexImage3DOES(target, level, internalformat, width, height, depth, border, format, type, pixels)
}

var fp_glTexImage4DSGIS:@convention(c) (GL.Enum, GL.Int, GL.Enum, GL.Size, GL.Size, GL.Size, GL.Size, GL.Int, GL.Enum, GL.Enum, UnsafeRawPointer?) -> () = load_glTexImage4DSGIS
func load_glTexImage4DSGIS(target:GL.Enum, level:GL.Int, internalformat:GL.Enum, width:GL.Size, height:GL.Size, depth:GL.Size, size4d:GL.Size, border:GL.Int, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glTexImage4DSGIS = unsafeBitCast(get_fp("glTexImage4DSGIS", support: [ss328]), to: Swift.type(of: fp_glTexImage4DSGIS))
    fp_glTexImage4DSGIS(target, level, internalformat, width, height, depth, size4d, border, format, type, pixels)
}
public
func glTexImage4DSGIS(target:GL.Enum, level:GL.Int, internalformat:GL.Enum, width:GL.Size, height:GL.Size, depth:GL.Size, size4d:GL.Size, border:GL.Int, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glTexImage4DSGIS(target, level, internalformat, width, height, depth, size4d, border, format, type, pixels)
}
public
func glTexImage4DSGIS(_ target:GL.Enum, _ level:GL.Int, _ internalformat:GL.Enum, _ width:GL.Size, _ height:GL.Size, _ depth:GL.Size, _ size4d:GL.Size, _ border:GL.Int, _ format:GL.Enum, _ type:GL.Enum, _ pixels:UnsafeRawPointer?)
{
    fp_glTexImage4DSGIS(target, level, internalformat, width, height, depth, size4d, border, format, type, pixels)
}

var fp_glTexPageCommitmentARB:@convention(c) (GL.Enum, GL.Int, GL.Int, GL.Int, GL.Int, GL.Size, GL.Size, GL.Size, GL.Bool) -> () = load_glTexPageCommitmentARB
func load_glTexPageCommitmentARB(target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, zoffset:GL.Int, width:GL.Size, height:GL.Size, depth:GL.Size, commit:GL.Bool)
{
    fp_glTexPageCommitmentARB = unsafeBitCast(get_fp("glTexPageCommitmentARB", support: [ss88]), to: Swift.type(of: fp_glTexPageCommitmentARB))
    fp_glTexPageCommitmentARB(target, level, xoffset, yoffset, zoffset, width, height, depth, commit)
}
public
func glTexPageCommitmentARB(target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, zoffset:GL.Int, width:GL.Size, height:GL.Size, depth:GL.Size, commit:GL.Bool)
{
    fp_glTexPageCommitmentARB(target, level, xoffset, yoffset, zoffset, width, height, depth, commit)
}
public
func glTexPageCommitmentARB(_ target:GL.Enum, _ level:GL.Int, _ xoffset:GL.Int, _ yoffset:GL.Int, _ zoffset:GL.Int, _ width:GL.Size, _ height:GL.Size, _ depth:GL.Size, _ commit:GL.Bool)
{
    fp_glTexPageCommitmentARB(target, level, xoffset, yoffset, zoffset, width, height, depth, commit)
}

var fp_glTexPageCommitmentEXT:@convention(c) (GL.Enum, GL.Int, GL.Int, GL.Int, GL.Int, GL.Size, GL.Size, GL.Size, GL.Bool) -> () = load_glTexPageCommitmentEXT
func load_glTexPageCommitmentEXT(target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, zoffset:GL.Int, width:GL.Size, height:GL.Size, depth:GL.Size, commit:GL.Bool)
{
    fp_glTexPageCommitmentEXT = unsafeBitCast(get_fp("glTexPageCommitmentEXT", support: [ss184]), to: Swift.type(of: fp_glTexPageCommitmentEXT))
    fp_glTexPageCommitmentEXT(target, level, xoffset, yoffset, zoffset, width, height, depth, commit)
}
public
func glTexPageCommitmentEXT(target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, zoffset:GL.Int, width:GL.Size, height:GL.Size, depth:GL.Size, commit:GL.Bool)
{
    fp_glTexPageCommitmentEXT(target, level, xoffset, yoffset, zoffset, width, height, depth, commit)
}
public
func glTexPageCommitmentEXT(_ target:GL.Enum, _ level:GL.Int, _ xoffset:GL.Int, _ yoffset:GL.Int, _ zoffset:GL.Int, _ width:GL.Size, _ height:GL.Size, _ depth:GL.Size, _ commit:GL.Bool)
{
    fp_glTexPageCommitmentEXT(target, level, xoffset, yoffset, zoffset, width, height, depth, commit)
}

var fp_glTexParameterIiv:@convention(c) (GL.Enum, GL.Enum, UnsafePointer<GL.Int>?) -> () = load_glTexParameterIiv
func load_glTexParameterIiv(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glTexParameterIiv = unsafeBitCast(get_fp("glTexParameterIiv", support: [ss354, ss368]), to: Swift.type(of: fp_glTexParameterIiv))
    fp_glTexParameterIiv(target, pname, params)
}
public
func glTexParameterIiv(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glTexParameterIiv(target, pname, params)
}
public
func glTexParameterIiv(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.Int>?)
{
    fp_glTexParameterIiv(target, pname, params)
}

var fp_glTexParameterIivEXT:@convention(c) (GL.Enum, GL.Enum, UnsafePointer<GL.Int>?) -> () = load_glTexParameterIivEXT
func load_glTexParameterIivEXT(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glTexParameterIivEXT = unsafeBitCast(get_fp("glTexParameterIivEXT", support: [ss190, ss194]), to: Swift.type(of: fp_glTexParameterIivEXT))
    fp_glTexParameterIivEXT(target, pname, params)
}
public
func glTexParameterIivEXT(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glTexParameterIivEXT(target, pname, params)
}
public
func glTexParameterIivEXT(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.Int>?)
{
    fp_glTexParameterIivEXT(target, pname, params)
}

var fp_glTexParameterIivOES:@convention(c) (GL.Enum, GL.Enum, UnsafePointer<GL.Int>?) -> () = load_glTexParameterIivOES
func load_glTexParameterIivOES(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glTexParameterIivOES = unsafeBitCast(get_fp("glTexParameterIivOES", support: [ss305]), to: Swift.type(of: fp_glTexParameterIivOES))
    fp_glTexParameterIivOES(target, pname, params)
}
public
func glTexParameterIivOES(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glTexParameterIivOES(target, pname, params)
}
public
func glTexParameterIivOES(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.Int>?)
{
    fp_glTexParameterIivOES(target, pname, params)
}

var fp_glTexParameterIuiv:@convention(c) (GL.Enum, GL.Enum, UnsafePointer<GL.UInt>?) -> () = load_glTexParameterIuiv
func load_glTexParameterIuiv(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.UInt>?)
{
    fp_glTexParameterIuiv = unsafeBitCast(get_fp("glTexParameterIuiv", support: [ss354, ss368]), to: Swift.type(of: fp_glTexParameterIuiv))
    fp_glTexParameterIuiv(target, pname, params)
}
public
func glTexParameterIuiv(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.UInt>?)
{
    fp_glTexParameterIuiv(target, pname, params)
}
public
func glTexParameterIuiv(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.UInt>?)
{
    fp_glTexParameterIuiv(target, pname, params)
}

var fp_glTexParameterIuivEXT:@convention(c) (GL.Enum, GL.Enum, UnsafePointer<GL.UInt>?) -> () = load_glTexParameterIuivEXT
func load_glTexParameterIuivEXT(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.UInt>?)
{
    fp_glTexParameterIuivEXT = unsafeBitCast(get_fp("glTexParameterIuivEXT", support: [ss190, ss194]), to: Swift.type(of: fp_glTexParameterIuivEXT))
    fp_glTexParameterIuivEXT(target, pname, params)
}
public
func glTexParameterIuivEXT(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.UInt>?)
{
    fp_glTexParameterIuivEXT(target, pname, params)
}
public
func glTexParameterIuivEXT(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.UInt>?)
{
    fp_glTexParameterIuivEXT(target, pname, params)
}

var fp_glTexParameterIuivOES:@convention(c) (GL.Enum, GL.Enum, UnsafePointer<GL.UInt>?) -> () = load_glTexParameterIuivOES
func load_glTexParameterIuivOES(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.UInt>?)
{
    fp_glTexParameterIuivOES = unsafeBitCast(get_fp("glTexParameterIuivOES", support: [ss305]), to: Swift.type(of: fp_glTexParameterIuivOES))
    fp_glTexParameterIuivOES(target, pname, params)
}
public
func glTexParameterIuivOES(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.UInt>?)
{
    fp_glTexParameterIuivOES(target, pname, params)
}
public
func glTexParameterIuivOES(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.UInt>?)
{
    fp_glTexParameterIuivOES(target, pname, params)
}

var fp_glTexParameterf:@convention(c) (GL.Enum, GL.Enum, GL.Float) -> () = load_glTexParameterf
func load_glTexParameterf(target:GL.Enum, pname:GL.Enum, param:GL.Float)
{
    fp_glTexParameterf = unsafeBitCast(get_fp("glTexParameterf", support: [ss346, ss365]), to: Swift.type(of: fp_glTexParameterf))
    fp_glTexParameterf(target, pname, param)
}
public
func glTexParameterf(target:GL.Enum, pname:GL.Enum, param:GL.Float)
{
    fp_glTexParameterf(target, pname, param)
}
public
func glTexParameterf(_ target:GL.Enum, _ pname:GL.Enum, _ param:GL.Float)
{
    fp_glTexParameterf(target, pname, param)
}

var fp_glTexParameterfv:@convention(c) (GL.Enum, GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glTexParameterfv
func load_glTexParameterfv(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glTexParameterfv = unsafeBitCast(get_fp("glTexParameterfv", support: [ss346, ss365]), to: Swift.type(of: fp_glTexParameterfv))
    fp_glTexParameterfv(target, pname, params)
}
public
func glTexParameterfv(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glTexParameterfv(target, pname, params)
}
public
func glTexParameterfv(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.Float>?)
{
    fp_glTexParameterfv(target, pname, params)
}

var fp_glTexParameteri:@convention(c) (GL.Enum, GL.Enum, GL.Int) -> () = load_glTexParameteri
func load_glTexParameteri(target:GL.Enum, pname:GL.Enum, param:GL.Int)
{
    fp_glTexParameteri = unsafeBitCast(get_fp("glTexParameteri", support: [ss346, ss365]), to: Swift.type(of: fp_glTexParameteri))
    fp_glTexParameteri(target, pname, param)
}
public
func glTexParameteri(target:GL.Enum, pname:GL.Enum, param:GL.Int)
{
    fp_glTexParameteri(target, pname, param)
}
public
func glTexParameteri(_ target:GL.Enum, _ pname:GL.Enum, _ param:GL.Int)
{
    fp_glTexParameteri(target, pname, param)
}

var fp_glTexParameteriv:@convention(c) (GL.Enum, GL.Enum, UnsafePointer<GL.Int>?) -> () = load_glTexParameteriv
func load_glTexParameteriv(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glTexParameteriv = unsafeBitCast(get_fp("glTexParameteriv", support: [ss346, ss365]), to: Swift.type(of: fp_glTexParameteriv))
    fp_glTexParameteriv(target, pname, params)
}
public
func glTexParameteriv(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glTexParameteriv(target, pname, params)
}
public
func glTexParameteriv(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.Int>?)
{
    fp_glTexParameteriv(target, pname, params)
}

var fp_glTexParameterx:@convention(c) (GL.Enum, GL.Enum, GL.Fixed) -> () = load_glTexParameterx
func load_glTexParameterx(target:GL.Enum, pname:GL.Enum, param:GL.Fixed)
{
    fp_glTexParameterx = unsafeBitCast(get_fp("glTexParameterx", support: [ss364]), to: Swift.type(of: fp_glTexParameterx))
    fp_glTexParameterx(target, pname, param)
}
public
func glTexParameterx(target:GL.Enum, pname:GL.Enum, param:GL.Fixed)
{
    fp_glTexParameterx(target, pname, param)
}
public
func glTexParameterx(_ target:GL.Enum, _ pname:GL.Enum, _ param:GL.Fixed)
{
    fp_glTexParameterx(target, pname, param)
}

var fp_glTexParameterxOES:@convention(c) (GL.Enum, GL.Enum, GL.Fixed) -> () = load_glTexParameterxOES
func load_glTexParameterxOES(target:GL.Enum, pname:GL.Enum, param:GL.Fixed)
{
    fp_glTexParameterxOES = unsafeBitCast(get_fp("glTexParameterxOES", support: [ss292]), to: Swift.type(of: fp_glTexParameterxOES))
    fp_glTexParameterxOES(target, pname, param)
}
public
func glTexParameterxOES(target:GL.Enum, pname:GL.Enum, param:GL.Fixed)
{
    fp_glTexParameterxOES(target, pname, param)
}
public
func glTexParameterxOES(_ target:GL.Enum, _ pname:GL.Enum, _ param:GL.Fixed)
{
    fp_glTexParameterxOES(target, pname, param)
}

var fp_glTexParameterxv:@convention(c) (GL.Enum, GL.Enum, UnsafePointer<GL.Fixed>?) -> () = load_glTexParameterxv
func load_glTexParameterxv(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Fixed>?)
{
    fp_glTexParameterxv = unsafeBitCast(get_fp("glTexParameterxv", support: [ss364]), to: Swift.type(of: fp_glTexParameterxv))
    fp_glTexParameterxv(target, pname, params)
}
public
func glTexParameterxv(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Fixed>?)
{
    fp_glTexParameterxv(target, pname, params)
}
public
func glTexParameterxv(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.Fixed>?)
{
    fp_glTexParameterxv(target, pname, params)
}

var fp_glTexParameterxvOES:@convention(c) (GL.Enum, GL.Enum, UnsafePointer<GL.Fixed>?) -> () = load_glTexParameterxvOES
func load_glTexParameterxvOES(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Fixed>?)
{
    fp_glTexParameterxvOES = unsafeBitCast(get_fp("glTexParameterxvOES", support: [ss292]), to: Swift.type(of: fp_glTexParameterxvOES))
    fp_glTexParameterxvOES(target, pname, params)
}
public
func glTexParameterxvOES(target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Fixed>?)
{
    fp_glTexParameterxvOES(target, pname, params)
}
public
func glTexParameterxvOES(_ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.Fixed>?)
{
    fp_glTexParameterxvOES(target, pname, params)
}

var fp_glTexRenderbufferNV:@convention(c) (GL.Enum, GL.UInt) -> () = load_glTexRenderbufferNV
func load_glTexRenderbufferNV(target:GL.Enum, renderbuffer:GL.UInt)
{
    fp_glTexRenderbufferNV = unsafeBitCast(get_fp("glTexRenderbufferNV", support: [ss241]), to: Swift.type(of: fp_glTexRenderbufferNV))
    fp_glTexRenderbufferNV(target, renderbuffer)
}
public
func glTexRenderbufferNV(target:GL.Enum, renderbuffer:GL.UInt)
{
    fp_glTexRenderbufferNV(target, renderbuffer)
}
public
func glTexRenderbufferNV(_ target:GL.Enum, _ renderbuffer:GL.UInt)
{
    fp_glTexRenderbufferNV(target, renderbuffer)
}

var fp_glTexStorage1D:@convention(c) (GL.Enum, GL.Size, GL.Enum, GL.Size) -> () = load_glTexStorage1D
func load_glTexStorage1D(target:GL.Enum, levels:GL.Size, internalformat:GL.Enum, width:GL.Size)
{
    fp_glTexStorage1D = unsafeBitCast(get_fp("glTexStorage1D", support: [ss360, ss97]), to: Swift.type(of: fp_glTexStorage1D))
    fp_glTexStorage1D(target, levels, internalformat, width)
}
public
func glTexStorage1D(target:GL.Enum, levels:GL.Size, internalformat:GL.Enum, width:GL.Size)
{
    fp_glTexStorage1D(target, levels, internalformat, width)
}
public
func glTexStorage1D(_ target:GL.Enum, _ levels:GL.Size, _ internalformat:GL.Enum, _ width:GL.Size)
{
    fp_glTexStorage1D(target, levels, internalformat, width)
}

var fp_glTexStorage1DEXT:@convention(c) (GL.Enum, GL.Size, GL.Enum, GL.Size) -> () = load_glTexStorage1DEXT
func load_glTexStorage1DEXT(target:GL.Enum, levels:GL.Size, internalformat:GL.Enum, width:GL.Size)
{
    fp_glTexStorage1DEXT = unsafeBitCast(get_fp("glTexStorage1DEXT", support: [ss197]), to: Swift.type(of: fp_glTexStorage1DEXT))
    fp_glTexStorage1DEXT(target, levels, internalformat, width)
}
public
func glTexStorage1DEXT(target:GL.Enum, levels:GL.Size, internalformat:GL.Enum, width:GL.Size)
{
    fp_glTexStorage1DEXT(target, levels, internalformat, width)
}
public
func glTexStorage1DEXT(_ target:GL.Enum, _ levels:GL.Size, _ internalformat:GL.Enum, _ width:GL.Size)
{
    fp_glTexStorage1DEXT(target, levels, internalformat, width)
}

var fp_glTexStorage2D:@convention(c) (GL.Enum, GL.Size, GL.Enum, GL.Size, GL.Size) -> () = load_glTexStorage2D
func load_glTexStorage2D(target:GL.Enum, levels:GL.Size, internalformat:GL.Enum, width:GL.Size, height:GL.Size)
{
    fp_glTexStorage2D = unsafeBitCast(get_fp("glTexStorage2D", support: [ss360, ss366, ss97]), to: Swift.type(of: fp_glTexStorage2D))
    fp_glTexStorage2D(target, levels, internalformat, width, height)
}
public
func glTexStorage2D(target:GL.Enum, levels:GL.Size, internalformat:GL.Enum, width:GL.Size, height:GL.Size)
{
    fp_glTexStorage2D(target, levels, internalformat, width, height)
}
public
func glTexStorage2D(_ target:GL.Enum, _ levels:GL.Size, _ internalformat:GL.Enum, _ width:GL.Size, _ height:GL.Size)
{
    fp_glTexStorage2D(target, levels, internalformat, width, height)
}

var fp_glTexStorage2DEXT:@convention(c) (GL.Enum, GL.Size, GL.Enum, GL.Size, GL.Size) -> () = load_glTexStorage2DEXT
func load_glTexStorage2DEXT(target:GL.Enum, levels:GL.Size, internalformat:GL.Enum, width:GL.Size, height:GL.Size)
{
    fp_glTexStorage2DEXT = unsafeBitCast(get_fp("glTexStorage2DEXT", support: [ss197]), to: Swift.type(of: fp_glTexStorage2DEXT))
    fp_glTexStorage2DEXT(target, levels, internalformat, width, height)
}
public
func glTexStorage2DEXT(target:GL.Enum, levels:GL.Size, internalformat:GL.Enum, width:GL.Size, height:GL.Size)
{
    fp_glTexStorage2DEXT(target, levels, internalformat, width, height)
}
public
func glTexStorage2DEXT(_ target:GL.Enum, _ levels:GL.Size, _ internalformat:GL.Enum, _ width:GL.Size, _ height:GL.Size)
{
    fp_glTexStorage2DEXT(target, levels, internalformat, width, height)
}

var fp_glTexStorage2DMultisample:@convention(c) (GL.Enum, GL.Size, GL.Enum, GL.Size, GL.Size, GL.Bool) -> () = load_glTexStorage2DMultisample
func load_glTexStorage2DMultisample(target:GL.Enum, samples:GL.Size, internalformat:GL.Enum, width:GL.Size, height:GL.Size, fixedsamplelocations:GL.Bool)
{
    fp_glTexStorage2DMultisample = unsafeBitCast(get_fp("glTexStorage2DMultisample", support: [ss361, ss367, ss96]), to: Swift.type(of: fp_glTexStorage2DMultisample))
    fp_glTexStorage2DMultisample(target, samples, internalformat, width, height, fixedsamplelocations)
}
public
func glTexStorage2DMultisample(target:GL.Enum, samples:GL.Size, internalformat:GL.Enum, width:GL.Size, height:GL.Size, fixedsamplelocations:GL.Bool)
{
    fp_glTexStorage2DMultisample(target, samples, internalformat, width, height, fixedsamplelocations)
}
public
func glTexStorage2DMultisample(_ target:GL.Enum, _ samples:GL.Size, _ internalformat:GL.Enum, _ width:GL.Size, _ height:GL.Size, _ fixedsamplelocations:GL.Bool)
{
    fp_glTexStorage2DMultisample(target, samples, internalformat, width, height, fixedsamplelocations)
}

var fp_glTexStorage3D:@convention(c) (GL.Enum, GL.Size, GL.Enum, GL.Size, GL.Size, GL.Size) -> () = load_glTexStorage3D
func load_glTexStorage3D(target:GL.Enum, levels:GL.Size, internalformat:GL.Enum, width:GL.Size, height:GL.Size, depth:GL.Size)
{
    fp_glTexStorage3D = unsafeBitCast(get_fp("glTexStorage3D", support: [ss360, ss366, ss97]), to: Swift.type(of: fp_glTexStorage3D))
    fp_glTexStorage3D(target, levels, internalformat, width, height, depth)
}
public
func glTexStorage3D(target:GL.Enum, levels:GL.Size, internalformat:GL.Enum, width:GL.Size, height:GL.Size, depth:GL.Size)
{
    fp_glTexStorage3D(target, levels, internalformat, width, height, depth)
}
public
func glTexStorage3D(_ target:GL.Enum, _ levels:GL.Size, _ internalformat:GL.Enum, _ width:GL.Size, _ height:GL.Size, _ depth:GL.Size)
{
    fp_glTexStorage3D(target, levels, internalformat, width, height, depth)
}

var fp_glTexStorage3DEXT:@convention(c) (GL.Enum, GL.Size, GL.Enum, GL.Size, GL.Size, GL.Size) -> () = load_glTexStorage3DEXT
func load_glTexStorage3DEXT(target:GL.Enum, levels:GL.Size, internalformat:GL.Enum, width:GL.Size, height:GL.Size, depth:GL.Size)
{
    fp_glTexStorage3DEXT = unsafeBitCast(get_fp("glTexStorage3DEXT", support: [ss197]), to: Swift.type(of: fp_glTexStorage3DEXT))
    fp_glTexStorage3DEXT(target, levels, internalformat, width, height, depth)
}
public
func glTexStorage3DEXT(target:GL.Enum, levels:GL.Size, internalformat:GL.Enum, width:GL.Size, height:GL.Size, depth:GL.Size)
{
    fp_glTexStorage3DEXT(target, levels, internalformat, width, height, depth)
}
public
func glTexStorage3DEXT(_ target:GL.Enum, _ levels:GL.Size, _ internalformat:GL.Enum, _ width:GL.Size, _ height:GL.Size, _ depth:GL.Size)
{
    fp_glTexStorage3DEXT(target, levels, internalformat, width, height, depth)
}

var fp_glTexStorage3DMultisample:@convention(c) (GL.Enum, GL.Size, GL.Enum, GL.Size, GL.Size, GL.Size, GL.Bool) -> () = load_glTexStorage3DMultisample
func load_glTexStorage3DMultisample(target:GL.Enum, samples:GL.Size, internalformat:GL.Enum, width:GL.Size, height:GL.Size, depth:GL.Size, fixedsamplelocations:GL.Bool)
{
    fp_glTexStorage3DMultisample = unsafeBitCast(get_fp("glTexStorage3DMultisample", support: [ss361, ss368, ss96]), to: Swift.type(of: fp_glTexStorage3DMultisample))
    fp_glTexStorage3DMultisample(target, samples, internalformat, width, height, depth, fixedsamplelocations)
}
public
func glTexStorage3DMultisample(target:GL.Enum, samples:GL.Size, internalformat:GL.Enum, width:GL.Size, height:GL.Size, depth:GL.Size, fixedsamplelocations:GL.Bool)
{
    fp_glTexStorage3DMultisample(target, samples, internalformat, width, height, depth, fixedsamplelocations)
}
public
func glTexStorage3DMultisample(_ target:GL.Enum, _ samples:GL.Size, _ internalformat:GL.Enum, _ width:GL.Size, _ height:GL.Size, _ depth:GL.Size, _ fixedsamplelocations:GL.Bool)
{
    fp_glTexStorage3DMultisample(target, samples, internalformat, width, height, depth, fixedsamplelocations)
}

var fp_glTexStorage3DMultisampleOES:@convention(c) (GL.Enum, GL.Size, GL.Enum, GL.Size, GL.Size, GL.Size, GL.Bool) -> () = load_glTexStorage3DMultisampleOES
func load_glTexStorage3DMultisampleOES(target:GL.Enum, samples:GL.Size, internalformat:GL.Enum, width:GL.Size, height:GL.Size, depth:GL.Size, fixedsamplelocations:GL.Bool)
{
    fp_glTexStorage3DMultisampleOES = unsafeBitCast(get_fp("glTexStorage3DMultisampleOES", support: [ss308]), to: Swift.type(of: fp_glTexStorage3DMultisampleOES))
    fp_glTexStorage3DMultisampleOES(target, samples, internalformat, width, height, depth, fixedsamplelocations)
}
public
func glTexStorage3DMultisampleOES(target:GL.Enum, samples:GL.Size, internalformat:GL.Enum, width:GL.Size, height:GL.Size, depth:GL.Size, fixedsamplelocations:GL.Bool)
{
    fp_glTexStorage3DMultisampleOES(target, samples, internalformat, width, height, depth, fixedsamplelocations)
}
public
func glTexStorage3DMultisampleOES(_ target:GL.Enum, _ samples:GL.Size, _ internalformat:GL.Enum, _ width:GL.Size, _ height:GL.Size, _ depth:GL.Size, _ fixedsamplelocations:GL.Bool)
{
    fp_glTexStorage3DMultisampleOES(target, samples, internalformat, width, height, depth, fixedsamplelocations)
}

var fp_glTexStorageSparseAMD:@convention(c) (GL.Enum, GL.Enum, GL.Size, GL.Size, GL.Size, GL.Size, GL.Bitfield) -> () = load_glTexStorageSparseAMD
func load_glTexStorageSparseAMD(target:GL.Enum, internalFormat:GL.Enum, width:GL.Size, height:GL.Size, depth:GL.Size, layers:GL.Size, flags:GL.Bitfield)
{
    fp_glTexStorageSparseAMD = unsafeBitCast(get_fp("glTexStorageSparseAMD", support: [ss10]), to: Swift.type(of: fp_glTexStorageSparseAMD))
    fp_glTexStorageSparseAMD(target, internalFormat, width, height, depth, layers, flags)
}
public
func glTexStorageSparseAMD(target:GL.Enum, internalFormat:GL.Enum, width:GL.Size, height:GL.Size, depth:GL.Size, layers:GL.Size, flags:GL.Bitfield)
{
    fp_glTexStorageSparseAMD(target, internalFormat, width, height, depth, layers, flags)
}
public
func glTexStorageSparseAMD(_ target:GL.Enum, _ internalFormat:GL.Enum, _ width:GL.Size, _ height:GL.Size, _ depth:GL.Size, _ layers:GL.Size, _ flags:GL.Bitfield)
{
    fp_glTexStorageSparseAMD(target, internalFormat, width, height, depth, layers, flags)
}

var fp_glTexSubImage1D:@convention(c) (GL.Enum, GL.Int, GL.Int, GL.Size, GL.Enum, GL.Enum, UnsafeRawPointer?) -> () = load_glTexSubImage1D
func load_glTexSubImage1D(target:GL.Enum, level:GL.Int, xoffset:GL.Int, width:GL.Size, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glTexSubImage1D = unsafeBitCast(get_fp("glTexSubImage1D", support: [ss347]), to: Swift.type(of: fp_glTexSubImage1D))
    fp_glTexSubImage1D(target, level, xoffset, width, format, type, pixels)
}
public
func glTexSubImage1D(target:GL.Enum, level:GL.Int, xoffset:GL.Int, width:GL.Size, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glTexSubImage1D(target, level, xoffset, width, format, type, pixels)
}
public
func glTexSubImage1D(_ target:GL.Enum, _ level:GL.Int, _ xoffset:GL.Int, _ width:GL.Size, _ format:GL.Enum, _ type:GL.Enum, _ pixels:UnsafeRawPointer?)
{
    fp_glTexSubImage1D(target, level, xoffset, width, format, type, pixels)
}

var fp_glTexSubImage1DEXT:@convention(c) (GL.Enum, GL.Int, GL.Int, GL.Size, GL.Enum, GL.Enum, UnsafeRawPointer?) -> () = load_glTexSubImage1DEXT
func load_glTexSubImage1DEXT(target:GL.Enum, level:GL.Int, xoffset:GL.Int, width:GL.Size, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glTexSubImage1DEXT = unsafeBitCast(get_fp("glTexSubImage1DEXT", support: [ss187]), to: Swift.type(of: fp_glTexSubImage1DEXT))
    fp_glTexSubImage1DEXT(target, level, xoffset, width, format, type, pixels)
}
public
func glTexSubImage1DEXT(target:GL.Enum, level:GL.Int, xoffset:GL.Int, width:GL.Size, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glTexSubImage1DEXT(target, level, xoffset, width, format, type, pixels)
}
public
func glTexSubImage1DEXT(_ target:GL.Enum, _ level:GL.Int, _ xoffset:GL.Int, _ width:GL.Size, _ format:GL.Enum, _ type:GL.Enum, _ pixels:UnsafeRawPointer?)
{
    fp_glTexSubImage1DEXT(target, level, xoffset, width, format, type, pixels)
}

var fp_glTexSubImage2D:@convention(c) (GL.Enum, GL.Int, GL.Int, GL.Int, GL.Size, GL.Size, GL.Enum, GL.Enum, UnsafeRawPointer?) -> () = load_glTexSubImage2D
func load_glTexSubImage2D(target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, width:GL.Size, height:GL.Size, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glTexSubImage2D = unsafeBitCast(get_fp("glTexSubImage2D", support: [ss347, ss365]), to: Swift.type(of: fp_glTexSubImage2D))
    fp_glTexSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels)
}
public
func glTexSubImage2D(target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, width:GL.Size, height:GL.Size, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glTexSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels)
}
public
func glTexSubImage2D(_ target:GL.Enum, _ level:GL.Int, _ xoffset:GL.Int, _ yoffset:GL.Int, _ width:GL.Size, _ height:GL.Size, _ format:GL.Enum, _ type:GL.Enum, _ pixels:UnsafeRawPointer?)
{
    fp_glTexSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels)
}

var fp_glTexSubImage2DEXT:@convention(c) (GL.Enum, GL.Int, GL.Int, GL.Int, GL.Size, GL.Size, GL.Enum, GL.Enum, UnsafeRawPointer?) -> () = load_glTexSubImage2DEXT
func load_glTexSubImage2DEXT(target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, width:GL.Size, height:GL.Size, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glTexSubImage2DEXT = unsafeBitCast(get_fp("glTexSubImage2DEXT", support: [ss187]), to: Swift.type(of: fp_glTexSubImage2DEXT))
    fp_glTexSubImage2DEXT(target, level, xoffset, yoffset, width, height, format, type, pixels)
}
public
func glTexSubImage2DEXT(target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, width:GL.Size, height:GL.Size, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glTexSubImage2DEXT(target, level, xoffset, yoffset, width, height, format, type, pixels)
}
public
func glTexSubImage2DEXT(_ target:GL.Enum, _ level:GL.Int, _ xoffset:GL.Int, _ yoffset:GL.Int, _ width:GL.Size, _ height:GL.Size, _ format:GL.Enum, _ type:GL.Enum, _ pixels:UnsafeRawPointer?)
{
    fp_glTexSubImage2DEXT(target, level, xoffset, yoffset, width, height, format, type, pixels)
}

var fp_glTexSubImage3D:@convention(c) (GL.Enum, GL.Int, GL.Int, GL.Int, GL.Int, GL.Size, GL.Size, GL.Size, GL.Enum, GL.Enum, UnsafeRawPointer?) -> () = load_glTexSubImage3D
func load_glTexSubImage3D(target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, zoffset:GL.Int, width:GL.Size, height:GL.Size, depth:GL.Size, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glTexSubImage3D = unsafeBitCast(get_fp("glTexSubImage3D", support: [ss348, ss366]), to: Swift.type(of: fp_glTexSubImage3D))
    fp_glTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels)
}
public
func glTexSubImage3D(target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, zoffset:GL.Int, width:GL.Size, height:GL.Size, depth:GL.Size, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels)
}
public
func glTexSubImage3D(_ target:GL.Enum, _ level:GL.Int, _ xoffset:GL.Int, _ yoffset:GL.Int, _ zoffset:GL.Int, _ width:GL.Size, _ height:GL.Size, _ depth:GL.Size, _ format:GL.Enum, _ type:GL.Enum, _ pixels:UnsafeRawPointer?)
{
    fp_glTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels)
}

var fp_glTexSubImage3DEXT:@convention(c) (GL.Enum, GL.Int, GL.Int, GL.Int, GL.Int, GL.Size, GL.Size, GL.Size, GL.Enum, GL.Enum, UnsafeRawPointer?) -> () = load_glTexSubImage3DEXT
func load_glTexSubImage3DEXT(target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, zoffset:GL.Int, width:GL.Size, height:GL.Size, depth:GL.Size, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glTexSubImage3DEXT = unsafeBitCast(get_fp("glTexSubImage3DEXT", support: [ss199]), to: Swift.type(of: fp_glTexSubImage3DEXT))
    fp_glTexSubImage3DEXT(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels)
}
public
func glTexSubImage3DEXT(target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, zoffset:GL.Int, width:GL.Size, height:GL.Size, depth:GL.Size, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glTexSubImage3DEXT(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels)
}
public
func glTexSubImage3DEXT(_ target:GL.Enum, _ level:GL.Int, _ xoffset:GL.Int, _ yoffset:GL.Int, _ zoffset:GL.Int, _ width:GL.Size, _ height:GL.Size, _ depth:GL.Size, _ format:GL.Enum, _ type:GL.Enum, _ pixels:UnsafeRawPointer?)
{
    fp_glTexSubImage3DEXT(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels)
}

var fp_glTexSubImage3DOES:@convention(c) (GL.Enum, GL.Int, GL.Int, GL.Int, GL.Int, GL.Size, GL.Size, GL.Size, GL.Enum, GL.Enum, UnsafeRawPointer?) -> () = load_glTexSubImage3DOES
func load_glTexSubImage3DOES(target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, zoffset:GL.Int, width:GL.Size, height:GL.Size, depth:GL.Size, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glTexSubImage3DOES = unsafeBitCast(get_fp("glTexSubImage3DOES", support: [ss304]), to: Swift.type(of: fp_glTexSubImage3DOES))
    fp_glTexSubImage3DOES(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels)
}
public
func glTexSubImage3DOES(target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, zoffset:GL.Int, width:GL.Size, height:GL.Size, depth:GL.Size, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glTexSubImage3DOES(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels)
}
public
func glTexSubImage3DOES(_ target:GL.Enum, _ level:GL.Int, _ xoffset:GL.Int, _ yoffset:GL.Int, _ zoffset:GL.Int, _ width:GL.Size, _ height:GL.Size, _ depth:GL.Size, _ format:GL.Enum, _ type:GL.Enum, _ pixels:UnsafeRawPointer?)
{
    fp_glTexSubImage3DOES(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels)
}

var fp_glTexSubImage4DSGIS:@convention(c) (GL.Enum, GL.Int, GL.Int, GL.Int, GL.Int, GL.Int, GL.Size, GL.Size, GL.Size, GL.Size, GL.Enum, GL.Enum, UnsafeRawPointer?) -> () = load_glTexSubImage4DSGIS
func load_glTexSubImage4DSGIS(target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, zoffset:GL.Int, woffset:GL.Int, width:GL.Size, height:GL.Size, depth:GL.Size, size4d:GL.Size, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glTexSubImage4DSGIS = unsafeBitCast(get_fp("glTexSubImage4DSGIS", support: [ss328]), to: Swift.type(of: fp_glTexSubImage4DSGIS))
    fp_glTexSubImage4DSGIS(target, level, xoffset, yoffset, zoffset, woffset, width, height, depth, size4d, format, type, pixels)
}
public
func glTexSubImage4DSGIS(target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, zoffset:GL.Int, woffset:GL.Int, width:GL.Size, height:GL.Size, depth:GL.Size, size4d:GL.Size, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glTexSubImage4DSGIS(target, level, xoffset, yoffset, zoffset, woffset, width, height, depth, size4d, format, type, pixels)
}
public
func glTexSubImage4DSGIS(_ target:GL.Enum, _ level:GL.Int, _ xoffset:GL.Int, _ yoffset:GL.Int, _ zoffset:GL.Int, _ woffset:GL.Int, _ width:GL.Size, _ height:GL.Size, _ depth:GL.Size, _ size4d:GL.Size, _ format:GL.Enum, _ type:GL.Enum, _ pixels:UnsafeRawPointer?)
{
    fp_glTexSubImage4DSGIS(target, level, xoffset, yoffset, zoffset, woffset, width, height, depth, size4d, format, type, pixels)
}

var fp_glTextureBarrier:@convention(c) () -> () = load_glTextureBarrier
func load_glTextureBarrier()
{
    fp_glTextureBarrier = unsafeBitCast(get_fp("glTextureBarrier", support: [ss363, ss91]), to: Swift.type(of: fp_glTextureBarrier))
    fp_glTextureBarrier()
}
public
func glTextureBarrier()
{
    fp_glTextureBarrier()
}

var fp_glTextureBarrierNV:@convention(c) () -> () = load_glTextureBarrierNV
func load_glTextureBarrierNV()
{
    fp_glTextureBarrierNV = unsafeBitCast(get_fp("glTextureBarrierNV", support: [ss270]), to: Swift.type(of: fp_glTextureBarrierNV))
    fp_glTextureBarrierNV()
}
public
func glTextureBarrierNV()
{
    fp_glTextureBarrierNV()
}

var fp_glTextureBuffer:@convention(c) (GL.UInt, GL.Enum, GL.UInt) -> () = load_glTextureBuffer
func load_glTextureBuffer(texture:GL.UInt, internalformat:GL.Enum, buffer:GL.UInt)
{
    fp_glTextureBuffer = unsafeBitCast(get_fp("glTextureBuffer", support: [ss363, ss42]), to: Swift.type(of: fp_glTextureBuffer))
    fp_glTextureBuffer(texture, internalformat, buffer)
}
public
func glTextureBuffer(texture:GL.UInt, internalformat:GL.Enum, buffer:GL.UInt)
{
    fp_glTextureBuffer(texture, internalformat, buffer)
}
public
func glTextureBuffer(_ texture:GL.UInt, _ internalformat:GL.Enum, _ buffer:GL.UInt)
{
    fp_glTextureBuffer(texture, internalformat, buffer)
}

var fp_glTextureBufferEXT:@convention(c) (GL.UInt, GL.Enum, GL.Enum, GL.UInt) -> () = load_glTextureBufferEXT
func load_glTextureBufferEXT(texture:GL.UInt, target:GL.Enum, internalformat:GL.Enum, buffer:GL.UInt)
{
    fp_glTextureBufferEXT = unsafeBitCast(get_fp("glTextureBufferEXT", support: [ss143]), to: Swift.type(of: fp_glTextureBufferEXT))
    fp_glTextureBufferEXT(texture, target, internalformat, buffer)
}
public
func glTextureBufferEXT(texture:GL.UInt, target:GL.Enum, internalformat:GL.Enum, buffer:GL.UInt)
{
    fp_glTextureBufferEXT(texture, target, internalformat, buffer)
}
public
func glTextureBufferEXT(_ texture:GL.UInt, _ target:GL.Enum, _ internalformat:GL.Enum, _ buffer:GL.UInt)
{
    fp_glTextureBufferEXT(texture, target, internalformat, buffer)
}

var fp_glTextureBufferRange:@convention(c) (GL.UInt, GL.Enum, GL.UInt, GL.IntPointer, GL.SizePointer) -> () = load_glTextureBufferRange
func load_glTextureBufferRange(texture:GL.UInt, internalformat:GL.Enum, buffer:GL.UInt, offset:GL.IntPointer, size:GL.SizePointer)
{
    fp_glTextureBufferRange = unsafeBitCast(get_fp("glTextureBufferRange", support: [ss363, ss42]), to: Swift.type(of: fp_glTextureBufferRange))
    fp_glTextureBufferRange(texture, internalformat, buffer, offset, size)
}
public
func glTextureBufferRange(texture:GL.UInt, internalformat:GL.Enum, buffer:GL.UInt, offset:GL.IntPointer, size:GL.SizePointer)
{
    fp_glTextureBufferRange(texture, internalformat, buffer, offset, size)
}
public
func glTextureBufferRange(_ texture:GL.UInt, _ internalformat:GL.Enum, _ buffer:GL.UInt, _ offset:GL.IntPointer, _ size:GL.SizePointer)
{
    fp_glTextureBufferRange(texture, internalformat, buffer, offset, size)
}

var fp_glTextureBufferRangeEXT:@convention(c) (GL.UInt, GL.Enum, GL.Enum, GL.UInt, GL.IntPointer, GL.SizePointer) -> () = load_glTextureBufferRangeEXT
func load_glTextureBufferRangeEXT(texture:GL.UInt, target:GL.Enum, internalformat:GL.Enum, buffer:GL.UInt, offset:GL.IntPointer, size:GL.SizePointer)
{
    fp_glTextureBufferRangeEXT = unsafeBitCast(get_fp("glTextureBufferRangeEXT", support: [ss143]), to: Swift.type(of: fp_glTextureBufferRangeEXT))
    fp_glTextureBufferRangeEXT(texture, target, internalformat, buffer, offset, size)
}
public
func glTextureBufferRangeEXT(texture:GL.UInt, target:GL.Enum, internalformat:GL.Enum, buffer:GL.UInt, offset:GL.IntPointer, size:GL.SizePointer)
{
    fp_glTextureBufferRangeEXT(texture, target, internalformat, buffer, offset, size)
}
public
func glTextureBufferRangeEXT(_ texture:GL.UInt, _ target:GL.Enum, _ internalformat:GL.Enum, _ buffer:GL.UInt, _ offset:GL.IntPointer, _ size:GL.SizePointer)
{
    fp_glTextureBufferRangeEXT(texture, target, internalformat, buffer, offset, size)
}

var fp_glTextureColorMaskSGIS:@convention(c) (GL.Bool, GL.Bool, GL.Bool, GL.Bool) -> () = load_glTextureColorMaskSGIS
func load_glTextureColorMaskSGIS(red:GL.Bool, green:GL.Bool, blue:GL.Bool, alpha:GL.Bool)
{
    fp_glTextureColorMaskSGIS = unsafeBitCast(get_fp("glTextureColorMaskSGIS", support: [ss326]), to: Swift.type(of: fp_glTextureColorMaskSGIS))
    fp_glTextureColorMaskSGIS(red, green, blue, alpha)
}
public
func glTextureColorMaskSGIS(red:GL.Bool, green:GL.Bool, blue:GL.Bool, alpha:GL.Bool)
{
    fp_glTextureColorMaskSGIS(red, green, blue, alpha)
}
public
func glTextureColorMaskSGIS(_ red:GL.Bool, _ green:GL.Bool, _ blue:GL.Bool, _ alpha:GL.Bool)
{
    fp_glTextureColorMaskSGIS(red, green, blue, alpha)
}

var fp_glTextureImage1DEXT:@convention(c) (GL.UInt, GL.Enum, GL.Int, GL.Int, GL.Size, GL.Int, GL.Enum, GL.Enum, UnsafeRawPointer?) -> () = load_glTextureImage1DEXT
func load_glTextureImage1DEXT(texture:GL.UInt, target:GL.Enum, level:GL.Int, internalformat:GL.Int, width:GL.Size, border:GL.Int, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glTextureImage1DEXT = unsafeBitCast(get_fp("glTextureImage1DEXT", support: [ss143]), to: Swift.type(of: fp_glTextureImage1DEXT))
    fp_glTextureImage1DEXT(texture, target, level, internalformat, width, border, format, type, pixels)
}
public
func glTextureImage1DEXT(texture:GL.UInt, target:GL.Enum, level:GL.Int, internalformat:GL.Int, width:GL.Size, border:GL.Int, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glTextureImage1DEXT(texture, target, level, internalformat, width, border, format, type, pixels)
}
public
func glTextureImage1DEXT(_ texture:GL.UInt, _ target:GL.Enum, _ level:GL.Int, _ internalformat:GL.Int, _ width:GL.Size, _ border:GL.Int, _ format:GL.Enum, _ type:GL.Enum, _ pixels:UnsafeRawPointer?)
{
    fp_glTextureImage1DEXT(texture, target, level, internalformat, width, border, format, type, pixels)
}

var fp_glTextureImage2DEXT:@convention(c) (GL.UInt, GL.Enum, GL.Int, GL.Int, GL.Size, GL.Size, GL.Int, GL.Enum, GL.Enum, UnsafeRawPointer?) -> () = load_glTextureImage2DEXT
func load_glTextureImage2DEXT(texture:GL.UInt, target:GL.Enum, level:GL.Int, internalformat:GL.Int, width:GL.Size, height:GL.Size, border:GL.Int, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glTextureImage2DEXT = unsafeBitCast(get_fp("glTextureImage2DEXT", support: [ss143]), to: Swift.type(of: fp_glTextureImage2DEXT))
    fp_glTextureImage2DEXT(texture, target, level, internalformat, width, height, border, format, type, pixels)
}
public
func glTextureImage2DEXT(texture:GL.UInt, target:GL.Enum, level:GL.Int, internalformat:GL.Int, width:GL.Size, height:GL.Size, border:GL.Int, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glTextureImage2DEXT(texture, target, level, internalformat, width, height, border, format, type, pixels)
}
public
func glTextureImage2DEXT(_ texture:GL.UInt, _ target:GL.Enum, _ level:GL.Int, _ internalformat:GL.Int, _ width:GL.Size, _ height:GL.Size, _ border:GL.Int, _ format:GL.Enum, _ type:GL.Enum, _ pixels:UnsafeRawPointer?)
{
    fp_glTextureImage2DEXT(texture, target, level, internalformat, width, height, border, format, type, pixels)
}

var fp_glTextureImage2DMultisampleCoverageNV:@convention(c) (GL.UInt, GL.Enum, GL.Size, GL.Size, GL.Int, GL.Size, GL.Size, GL.Bool) -> () = load_glTextureImage2DMultisampleCoverageNV
func load_glTextureImage2DMultisampleCoverageNV(texture:GL.UInt, target:GL.Enum, coverageSamples:GL.Size, colorSamples:GL.Size, internalFormat:GL.Int, width:GL.Size, height:GL.Size, fixedSampleLocations:GL.Bool)
{
    fp_glTextureImage2DMultisampleCoverageNV = unsafeBitCast(get_fp("glTextureImage2DMultisampleCoverageNV", support: [ss271]), to: Swift.type(of: fp_glTextureImage2DMultisampleCoverageNV))
    fp_glTextureImage2DMultisampleCoverageNV(texture, target, coverageSamples, colorSamples, internalFormat, width, height, fixedSampleLocations)
}
public
func glTextureImage2DMultisampleCoverageNV(texture:GL.UInt, target:GL.Enum, coverageSamples:GL.Size, colorSamples:GL.Size, internalFormat:GL.Int, width:GL.Size, height:GL.Size, fixedSampleLocations:GL.Bool)
{
    fp_glTextureImage2DMultisampleCoverageNV(texture, target, coverageSamples, colorSamples, internalFormat, width, height, fixedSampleLocations)
}
public
func glTextureImage2DMultisampleCoverageNV(_ texture:GL.UInt, _ target:GL.Enum, _ coverageSamples:GL.Size, _ colorSamples:GL.Size, _ internalFormat:GL.Int, _ width:GL.Size, _ height:GL.Size, _ fixedSampleLocations:GL.Bool)
{
    fp_glTextureImage2DMultisampleCoverageNV(texture, target, coverageSamples, colorSamples, internalFormat, width, height, fixedSampleLocations)
}

var fp_glTextureImage2DMultisampleNV:@convention(c) (GL.UInt, GL.Enum, GL.Size, GL.Int, GL.Size, GL.Size, GL.Bool) -> () = load_glTextureImage2DMultisampleNV
func load_glTextureImage2DMultisampleNV(texture:GL.UInt, target:GL.Enum, samples:GL.Size, internalFormat:GL.Int, width:GL.Size, height:GL.Size, fixedSampleLocations:GL.Bool)
{
    fp_glTextureImage2DMultisampleNV = unsafeBitCast(get_fp("glTextureImage2DMultisampleNV", support: [ss271]), to: Swift.type(of: fp_glTextureImage2DMultisampleNV))
    fp_glTextureImage2DMultisampleNV(texture, target, samples, internalFormat, width, height, fixedSampleLocations)
}
public
func glTextureImage2DMultisampleNV(texture:GL.UInt, target:GL.Enum, samples:GL.Size, internalFormat:GL.Int, width:GL.Size, height:GL.Size, fixedSampleLocations:GL.Bool)
{
    fp_glTextureImage2DMultisampleNV(texture, target, samples, internalFormat, width, height, fixedSampleLocations)
}
public
func glTextureImage2DMultisampleNV(_ texture:GL.UInt, _ target:GL.Enum, _ samples:GL.Size, _ internalFormat:GL.Int, _ width:GL.Size, _ height:GL.Size, _ fixedSampleLocations:GL.Bool)
{
    fp_glTextureImage2DMultisampleNV(texture, target, samples, internalFormat, width, height, fixedSampleLocations)
}

var fp_glTextureImage3DEXT:@convention(c) (GL.UInt, GL.Enum, GL.Int, GL.Int, GL.Size, GL.Size, GL.Size, GL.Int, GL.Enum, GL.Enum, UnsafeRawPointer?) -> () = load_glTextureImage3DEXT
func load_glTextureImage3DEXT(texture:GL.UInt, target:GL.Enum, level:GL.Int, internalformat:GL.Int, width:GL.Size, height:GL.Size, depth:GL.Size, border:GL.Int, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glTextureImage3DEXT = unsafeBitCast(get_fp("glTextureImage3DEXT", support: [ss143]), to: Swift.type(of: fp_glTextureImage3DEXT))
    fp_glTextureImage3DEXT(texture, target, level, internalformat, width, height, depth, border, format, type, pixels)
}
public
func glTextureImage3DEXT(texture:GL.UInt, target:GL.Enum, level:GL.Int, internalformat:GL.Int, width:GL.Size, height:GL.Size, depth:GL.Size, border:GL.Int, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glTextureImage3DEXT(texture, target, level, internalformat, width, height, depth, border, format, type, pixels)
}
public
func glTextureImage3DEXT(_ texture:GL.UInt, _ target:GL.Enum, _ level:GL.Int, _ internalformat:GL.Int, _ width:GL.Size, _ height:GL.Size, _ depth:GL.Size, _ border:GL.Int, _ format:GL.Enum, _ type:GL.Enum, _ pixels:UnsafeRawPointer?)
{
    fp_glTextureImage3DEXT(texture, target, level, internalformat, width, height, depth, border, format, type, pixels)
}

var fp_glTextureImage3DMultisampleCoverageNV:@convention(c) (GL.UInt, GL.Enum, GL.Size, GL.Size, GL.Int, GL.Size, GL.Size, GL.Size, GL.Bool) -> () = load_glTextureImage3DMultisampleCoverageNV
func load_glTextureImage3DMultisampleCoverageNV(texture:GL.UInt, target:GL.Enum, coverageSamples:GL.Size, colorSamples:GL.Size, internalFormat:GL.Int, width:GL.Size, height:GL.Size, depth:GL.Size, fixedSampleLocations:GL.Bool)
{
    fp_glTextureImage3DMultisampleCoverageNV = unsafeBitCast(get_fp("glTextureImage3DMultisampleCoverageNV", support: [ss271]), to: Swift.type(of: fp_glTextureImage3DMultisampleCoverageNV))
    fp_glTextureImage3DMultisampleCoverageNV(texture, target, coverageSamples, colorSamples, internalFormat, width, height, depth, fixedSampleLocations)
}
public
func glTextureImage3DMultisampleCoverageNV(texture:GL.UInt, target:GL.Enum, coverageSamples:GL.Size, colorSamples:GL.Size, internalFormat:GL.Int, width:GL.Size, height:GL.Size, depth:GL.Size, fixedSampleLocations:GL.Bool)
{
    fp_glTextureImage3DMultisampleCoverageNV(texture, target, coverageSamples, colorSamples, internalFormat, width, height, depth, fixedSampleLocations)
}
public
func glTextureImage3DMultisampleCoverageNV(_ texture:GL.UInt, _ target:GL.Enum, _ coverageSamples:GL.Size, _ colorSamples:GL.Size, _ internalFormat:GL.Int, _ width:GL.Size, _ height:GL.Size, _ depth:GL.Size, _ fixedSampleLocations:GL.Bool)
{
    fp_glTextureImage3DMultisampleCoverageNV(texture, target, coverageSamples, colorSamples, internalFormat, width, height, depth, fixedSampleLocations)
}

var fp_glTextureImage3DMultisampleNV:@convention(c) (GL.UInt, GL.Enum, GL.Size, GL.Int, GL.Size, GL.Size, GL.Size, GL.Bool) -> () = load_glTextureImage3DMultisampleNV
func load_glTextureImage3DMultisampleNV(texture:GL.UInt, target:GL.Enum, samples:GL.Size, internalFormat:GL.Int, width:GL.Size, height:GL.Size, depth:GL.Size, fixedSampleLocations:GL.Bool)
{
    fp_glTextureImage3DMultisampleNV = unsafeBitCast(get_fp("glTextureImage3DMultisampleNV", support: [ss271]), to: Swift.type(of: fp_glTextureImage3DMultisampleNV))
    fp_glTextureImage3DMultisampleNV(texture, target, samples, internalFormat, width, height, depth, fixedSampleLocations)
}
public
func glTextureImage3DMultisampleNV(texture:GL.UInt, target:GL.Enum, samples:GL.Size, internalFormat:GL.Int, width:GL.Size, height:GL.Size, depth:GL.Size, fixedSampleLocations:GL.Bool)
{
    fp_glTextureImage3DMultisampleNV(texture, target, samples, internalFormat, width, height, depth, fixedSampleLocations)
}
public
func glTextureImage3DMultisampleNV(_ texture:GL.UInt, _ target:GL.Enum, _ samples:GL.Size, _ internalFormat:GL.Int, _ width:GL.Size, _ height:GL.Size, _ depth:GL.Size, _ fixedSampleLocations:GL.Bool)
{
    fp_glTextureImage3DMultisampleNV(texture, target, samples, internalFormat, width, height, depth, fixedSampleLocations)
}

var fp_glTextureLightEXT:@convention(c) (GL.Enum) -> () = load_glTextureLightEXT
func load_glTextureLightEXT(pname:GL.Enum)
{
    fp_glTextureLightEXT = unsafeBitCast(get_fp("glTextureLightEXT", support: [ss164]), to: Swift.type(of: fp_glTextureLightEXT))
    fp_glTextureLightEXT(pname)
}
public
func glTextureLightEXT(pname:GL.Enum)
{
    fp_glTextureLightEXT(pname)
}
public
func glTextureLightEXT(_ pname:GL.Enum)
{
    fp_glTextureLightEXT(pname)
}

var fp_glTextureMaterialEXT:@convention(c) (GL.Enum, GL.Enum) -> () = load_glTextureMaterialEXT
func load_glTextureMaterialEXT(face:GL.Enum, mode:GL.Enum)
{
    fp_glTextureMaterialEXT = unsafeBitCast(get_fp("glTextureMaterialEXT", support: [ss164]), to: Swift.type(of: fp_glTextureMaterialEXT))
    fp_glTextureMaterialEXT(face, mode)
}
public
func glTextureMaterialEXT(face:GL.Enum, mode:GL.Enum)
{
    fp_glTextureMaterialEXT(face, mode)
}
public
func glTextureMaterialEXT(_ face:GL.Enum, _ mode:GL.Enum)
{
    fp_glTextureMaterialEXT(face, mode)
}

var fp_glTextureNormalEXT:@convention(c) (GL.Enum) -> () = load_glTextureNormalEXT
func load_glTextureNormalEXT(mode:GL.Enum)
{
    fp_glTextureNormalEXT = unsafeBitCast(get_fp("glTextureNormalEXT", support: [ss196]), to: Swift.type(of: fp_glTextureNormalEXT))
    fp_glTextureNormalEXT(mode)
}
public
func glTextureNormalEXT(mode:GL.Enum)
{
    fp_glTextureNormalEXT(mode)
}
public
func glTextureNormalEXT(_ mode:GL.Enum)
{
    fp_glTextureNormalEXT(mode)
}

var fp_glTexturePageCommitmentEXT:@convention(c) (GL.UInt, GL.Int, GL.Int, GL.Int, GL.Int, GL.Size, GL.Size, GL.Size, GL.Bool) -> () = load_glTexturePageCommitmentEXT
func load_glTexturePageCommitmentEXT(texture:GL.UInt, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, zoffset:GL.Int, width:GL.Size, height:GL.Size, depth:GL.Size, commit:GL.Bool)
{
    fp_glTexturePageCommitmentEXT = unsafeBitCast(get_fp("glTexturePageCommitmentEXT", support: [ss143]), to: Swift.type(of: fp_glTexturePageCommitmentEXT))
    fp_glTexturePageCommitmentEXT(texture, level, xoffset, yoffset, zoffset, width, height, depth, commit)
}
public
func glTexturePageCommitmentEXT(texture:GL.UInt, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, zoffset:GL.Int, width:GL.Size, height:GL.Size, depth:GL.Size, commit:GL.Bool)
{
    fp_glTexturePageCommitmentEXT(texture, level, xoffset, yoffset, zoffset, width, height, depth, commit)
}
public
func glTexturePageCommitmentEXT(_ texture:GL.UInt, _ level:GL.Int, _ xoffset:GL.Int, _ yoffset:GL.Int, _ zoffset:GL.Int, _ width:GL.Size, _ height:GL.Size, _ depth:GL.Size, _ commit:GL.Bool)
{
    fp_glTexturePageCommitmentEXT(texture, level, xoffset, yoffset, zoffset, width, height, depth, commit)
}

var fp_glTextureParameterIiv:@convention(c) (GL.UInt, GL.Enum, UnsafePointer<GL.Int>?) -> () = load_glTextureParameterIiv
func load_glTextureParameterIiv(texture:GL.UInt, pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glTextureParameterIiv = unsafeBitCast(get_fp("glTextureParameterIiv", support: [ss363, ss42]), to: Swift.type(of: fp_glTextureParameterIiv))
    fp_glTextureParameterIiv(texture, pname, params)
}
public
func glTextureParameterIiv(texture:GL.UInt, pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glTextureParameterIiv(texture, pname, params)
}
public
func glTextureParameterIiv(_ texture:GL.UInt, _ pname:GL.Enum, _ params:UnsafePointer<GL.Int>?)
{
    fp_glTextureParameterIiv(texture, pname, params)
}

var fp_glTextureParameterIivEXT:@convention(c) (GL.UInt, GL.Enum, GL.Enum, UnsafePointer<GL.Int>?) -> () = load_glTextureParameterIivEXT
func load_glTextureParameterIivEXT(texture:GL.UInt, target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glTextureParameterIivEXT = unsafeBitCast(get_fp("glTextureParameterIivEXT", support: [ss143]), to: Swift.type(of: fp_glTextureParameterIivEXT))
    fp_glTextureParameterIivEXT(texture, target, pname, params)
}
public
func glTextureParameterIivEXT(texture:GL.UInt, target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glTextureParameterIivEXT(texture, target, pname, params)
}
public
func glTextureParameterIivEXT(_ texture:GL.UInt, _ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.Int>?)
{
    fp_glTextureParameterIivEXT(texture, target, pname, params)
}

var fp_glTextureParameterIuiv:@convention(c) (GL.UInt, GL.Enum, UnsafePointer<GL.UInt>?) -> () = load_glTextureParameterIuiv
func load_glTextureParameterIuiv(texture:GL.UInt, pname:GL.Enum, params:UnsafePointer<GL.UInt>?)
{
    fp_glTextureParameterIuiv = unsafeBitCast(get_fp("glTextureParameterIuiv", support: [ss363, ss42]), to: Swift.type(of: fp_glTextureParameterIuiv))
    fp_glTextureParameterIuiv(texture, pname, params)
}
public
func glTextureParameterIuiv(texture:GL.UInt, pname:GL.Enum, params:UnsafePointer<GL.UInt>?)
{
    fp_glTextureParameterIuiv(texture, pname, params)
}
public
func glTextureParameterIuiv(_ texture:GL.UInt, _ pname:GL.Enum, _ params:UnsafePointer<GL.UInt>?)
{
    fp_glTextureParameterIuiv(texture, pname, params)
}

var fp_glTextureParameterIuivEXT:@convention(c) (GL.UInt, GL.Enum, GL.Enum, UnsafePointer<GL.UInt>?) -> () = load_glTextureParameterIuivEXT
func load_glTextureParameterIuivEXT(texture:GL.UInt, target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.UInt>?)
{
    fp_glTextureParameterIuivEXT = unsafeBitCast(get_fp("glTextureParameterIuivEXT", support: [ss143]), to: Swift.type(of: fp_glTextureParameterIuivEXT))
    fp_glTextureParameterIuivEXT(texture, target, pname, params)
}
public
func glTextureParameterIuivEXT(texture:GL.UInt, target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.UInt>?)
{
    fp_glTextureParameterIuivEXT(texture, target, pname, params)
}
public
func glTextureParameterIuivEXT(_ texture:GL.UInt, _ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.UInt>?)
{
    fp_glTextureParameterIuivEXT(texture, target, pname, params)
}

var fp_glTextureParameterf:@convention(c) (GL.UInt, GL.Enum, GL.Float) -> () = load_glTextureParameterf
func load_glTextureParameterf(texture:GL.UInt, pname:GL.Enum, param:GL.Float)
{
    fp_glTextureParameterf = unsafeBitCast(get_fp("glTextureParameterf", support: [ss363, ss42]), to: Swift.type(of: fp_glTextureParameterf))
    fp_glTextureParameterf(texture, pname, param)
}
public
func glTextureParameterf(texture:GL.UInt, pname:GL.Enum, param:GL.Float)
{
    fp_glTextureParameterf(texture, pname, param)
}
public
func glTextureParameterf(_ texture:GL.UInt, _ pname:GL.Enum, _ param:GL.Float)
{
    fp_glTextureParameterf(texture, pname, param)
}

var fp_glTextureParameterfEXT:@convention(c) (GL.UInt, GL.Enum, GL.Enum, GL.Float) -> () = load_glTextureParameterfEXT
func load_glTextureParameterfEXT(texture:GL.UInt, target:GL.Enum, pname:GL.Enum, param:GL.Float)
{
    fp_glTextureParameterfEXT = unsafeBitCast(get_fp("glTextureParameterfEXT", support: [ss143]), to: Swift.type(of: fp_glTextureParameterfEXT))
    fp_glTextureParameterfEXT(texture, target, pname, param)
}
public
func glTextureParameterfEXT(texture:GL.UInt, target:GL.Enum, pname:GL.Enum, param:GL.Float)
{
    fp_glTextureParameterfEXT(texture, target, pname, param)
}
public
func glTextureParameterfEXT(_ texture:GL.UInt, _ target:GL.Enum, _ pname:GL.Enum, _ param:GL.Float)
{
    fp_glTextureParameterfEXT(texture, target, pname, param)
}

var fp_glTextureParameterfv:@convention(c) (GL.UInt, GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glTextureParameterfv
func load_glTextureParameterfv(texture:GL.UInt, pname:GL.Enum, param:UnsafePointer<GL.Float>?)
{
    fp_glTextureParameterfv = unsafeBitCast(get_fp("glTextureParameterfv", support: [ss363, ss42]), to: Swift.type(of: fp_glTextureParameterfv))
    fp_glTextureParameterfv(texture, pname, param)
}
public
func glTextureParameterfv(texture:GL.UInt, pname:GL.Enum, param:UnsafePointer<GL.Float>?)
{
    fp_glTextureParameterfv(texture, pname, param)
}
public
func glTextureParameterfv(_ texture:GL.UInt, _ pname:GL.Enum, _ param:UnsafePointer<GL.Float>?)
{
    fp_glTextureParameterfv(texture, pname, param)
}

var fp_glTextureParameterfvEXT:@convention(c) (GL.UInt, GL.Enum, GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glTextureParameterfvEXT
func load_glTextureParameterfvEXT(texture:GL.UInt, target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glTextureParameterfvEXT = unsafeBitCast(get_fp("glTextureParameterfvEXT", support: [ss143]), to: Swift.type(of: fp_glTextureParameterfvEXT))
    fp_glTextureParameterfvEXT(texture, target, pname, params)
}
public
func glTextureParameterfvEXT(texture:GL.UInt, target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glTextureParameterfvEXT(texture, target, pname, params)
}
public
func glTextureParameterfvEXT(_ texture:GL.UInt, _ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.Float>?)
{
    fp_glTextureParameterfvEXT(texture, target, pname, params)
}

var fp_glTextureParameteri:@convention(c) (GL.UInt, GL.Enum, GL.Int) -> () = load_glTextureParameteri
func load_glTextureParameteri(texture:GL.UInt, pname:GL.Enum, param:GL.Int)
{
    fp_glTextureParameteri = unsafeBitCast(get_fp("glTextureParameteri", support: [ss363, ss42]), to: Swift.type(of: fp_glTextureParameteri))
    fp_glTextureParameteri(texture, pname, param)
}
public
func glTextureParameteri(texture:GL.UInt, pname:GL.Enum, param:GL.Int)
{
    fp_glTextureParameteri(texture, pname, param)
}
public
func glTextureParameteri(_ texture:GL.UInt, _ pname:GL.Enum, _ param:GL.Int)
{
    fp_glTextureParameteri(texture, pname, param)
}

var fp_glTextureParameteriEXT:@convention(c) (GL.UInt, GL.Enum, GL.Enum, GL.Int) -> () = load_glTextureParameteriEXT
func load_glTextureParameteriEXT(texture:GL.UInt, target:GL.Enum, pname:GL.Enum, param:GL.Int)
{
    fp_glTextureParameteriEXT = unsafeBitCast(get_fp("glTextureParameteriEXT", support: [ss143]), to: Swift.type(of: fp_glTextureParameteriEXT))
    fp_glTextureParameteriEXT(texture, target, pname, param)
}
public
func glTextureParameteriEXT(texture:GL.UInt, target:GL.Enum, pname:GL.Enum, param:GL.Int)
{
    fp_glTextureParameteriEXT(texture, target, pname, param)
}
public
func glTextureParameteriEXT(_ texture:GL.UInt, _ target:GL.Enum, _ pname:GL.Enum, _ param:GL.Int)
{
    fp_glTextureParameteriEXT(texture, target, pname, param)
}

var fp_glTextureParameteriv:@convention(c) (GL.UInt, GL.Enum, UnsafePointer<GL.Int>?) -> () = load_glTextureParameteriv
func load_glTextureParameteriv(texture:GL.UInt, pname:GL.Enum, param:UnsafePointer<GL.Int>?)
{
    fp_glTextureParameteriv = unsafeBitCast(get_fp("glTextureParameteriv", support: [ss363, ss42]), to: Swift.type(of: fp_glTextureParameteriv))
    fp_glTextureParameteriv(texture, pname, param)
}
public
func glTextureParameteriv(texture:GL.UInt, pname:GL.Enum, param:UnsafePointer<GL.Int>?)
{
    fp_glTextureParameteriv(texture, pname, param)
}
public
func glTextureParameteriv(_ texture:GL.UInt, _ pname:GL.Enum, _ param:UnsafePointer<GL.Int>?)
{
    fp_glTextureParameteriv(texture, pname, param)
}

var fp_glTextureParameterivEXT:@convention(c) (GL.UInt, GL.Enum, GL.Enum, UnsafePointer<GL.Int>?) -> () = load_glTextureParameterivEXT
func load_glTextureParameterivEXT(texture:GL.UInt, target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glTextureParameterivEXT = unsafeBitCast(get_fp("glTextureParameterivEXT", support: [ss143]), to: Swift.type(of: fp_glTextureParameterivEXT))
    fp_glTextureParameterivEXT(texture, target, pname, params)
}
public
func glTextureParameterivEXT(texture:GL.UInt, target:GL.Enum, pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glTextureParameterivEXT(texture, target, pname, params)
}
public
func glTextureParameterivEXT(_ texture:GL.UInt, _ target:GL.Enum, _ pname:GL.Enum, _ params:UnsafePointer<GL.Int>?)
{
    fp_glTextureParameterivEXT(texture, target, pname, params)
}

var fp_glTextureRangeAPPLE:@convention(c) (GL.Enum, GL.Size, UnsafeRawPointer?) -> () = load_glTextureRangeAPPLE
func load_glTextureRangeAPPLE(target:GL.Enum, length:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glTextureRangeAPPLE = unsafeBitCast(get_fp("glTextureRangeAPPLE", support: [ss24]), to: Swift.type(of: fp_glTextureRangeAPPLE))
    fp_glTextureRangeAPPLE(target, length, pointer)
}
public
func glTextureRangeAPPLE(target:GL.Enum, length:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glTextureRangeAPPLE(target, length, pointer)
}
public
func glTextureRangeAPPLE(_ target:GL.Enum, _ length:GL.Size, _ pointer:UnsafeRawPointer?)
{
    fp_glTextureRangeAPPLE(target, length, pointer)
}

var fp_glTextureRenderbufferEXT:@convention(c) (GL.UInt, GL.Enum, GL.UInt) -> () = load_glTextureRenderbufferEXT
func load_glTextureRenderbufferEXT(texture:GL.UInt, target:GL.Enum, renderbuffer:GL.UInt)
{
    fp_glTextureRenderbufferEXT = unsafeBitCast(get_fp("glTextureRenderbufferEXT", support: [ss143]), to: Swift.type(of: fp_glTextureRenderbufferEXT))
    fp_glTextureRenderbufferEXT(texture, target, renderbuffer)
}
public
func glTextureRenderbufferEXT(texture:GL.UInt, target:GL.Enum, renderbuffer:GL.UInt)
{
    fp_glTextureRenderbufferEXT(texture, target, renderbuffer)
}
public
func glTextureRenderbufferEXT(_ texture:GL.UInt, _ target:GL.Enum, _ renderbuffer:GL.UInt)
{
    fp_glTextureRenderbufferEXT(texture, target, renderbuffer)
}

var fp_glTextureStorage1D:@convention(c) (GL.UInt, GL.Size, GL.Enum, GL.Size) -> () = load_glTextureStorage1D
func load_glTextureStorage1D(texture:GL.UInt, levels:GL.Size, internalformat:GL.Enum, width:GL.Size)
{
    fp_glTextureStorage1D = unsafeBitCast(get_fp("glTextureStorage1D", support: [ss363, ss42]), to: Swift.type(of: fp_glTextureStorage1D))
    fp_glTextureStorage1D(texture, levels, internalformat, width)
}
public
func glTextureStorage1D(texture:GL.UInt, levels:GL.Size, internalformat:GL.Enum, width:GL.Size)
{
    fp_glTextureStorage1D(texture, levels, internalformat, width)
}
public
func glTextureStorage1D(_ texture:GL.UInt, _ levels:GL.Size, _ internalformat:GL.Enum, _ width:GL.Size)
{
    fp_glTextureStorage1D(texture, levels, internalformat, width)
}

var fp_glTextureStorage1DEXT:@convention(c) (GL.UInt, GL.Enum, GL.Size, GL.Enum, GL.Size) -> () = load_glTextureStorage1DEXT
func load_glTextureStorage1DEXT(texture:GL.UInt, target:GL.Enum, levels:GL.Size, internalformat:GL.Enum, width:GL.Size)
{
    fp_glTextureStorage1DEXT = unsafeBitCast(get_fp("glTextureStorage1DEXT", support: [ss143, ss197]), to: Swift.type(of: fp_glTextureStorage1DEXT))
    fp_glTextureStorage1DEXT(texture, target, levels, internalformat, width)
}
public
func glTextureStorage1DEXT(texture:GL.UInt, target:GL.Enum, levels:GL.Size, internalformat:GL.Enum, width:GL.Size)
{
    fp_glTextureStorage1DEXT(texture, target, levels, internalformat, width)
}
public
func glTextureStorage1DEXT(_ texture:GL.UInt, _ target:GL.Enum, _ levels:GL.Size, _ internalformat:GL.Enum, _ width:GL.Size)
{
    fp_glTextureStorage1DEXT(texture, target, levels, internalformat, width)
}

var fp_glTextureStorage2D:@convention(c) (GL.UInt, GL.Size, GL.Enum, GL.Size, GL.Size) -> () = load_glTextureStorage2D
func load_glTextureStorage2D(texture:GL.UInt, levels:GL.Size, internalformat:GL.Enum, width:GL.Size, height:GL.Size)
{
    fp_glTextureStorage2D = unsafeBitCast(get_fp("glTextureStorage2D", support: [ss363, ss42]), to: Swift.type(of: fp_glTextureStorage2D))
    fp_glTextureStorage2D(texture, levels, internalformat, width, height)
}
public
func glTextureStorage2D(texture:GL.UInt, levels:GL.Size, internalformat:GL.Enum, width:GL.Size, height:GL.Size)
{
    fp_glTextureStorage2D(texture, levels, internalformat, width, height)
}
public
func glTextureStorage2D(_ texture:GL.UInt, _ levels:GL.Size, _ internalformat:GL.Enum, _ width:GL.Size, _ height:GL.Size)
{
    fp_glTextureStorage2D(texture, levels, internalformat, width, height)
}

var fp_glTextureStorage2DEXT:@convention(c) (GL.UInt, GL.Enum, GL.Size, GL.Enum, GL.Size, GL.Size) -> () = load_glTextureStorage2DEXT
func load_glTextureStorage2DEXT(texture:GL.UInt, target:GL.Enum, levels:GL.Size, internalformat:GL.Enum, width:GL.Size, height:GL.Size)
{
    fp_glTextureStorage2DEXT = unsafeBitCast(get_fp("glTextureStorage2DEXT", support: [ss143, ss197]), to: Swift.type(of: fp_glTextureStorage2DEXT))
    fp_glTextureStorage2DEXT(texture, target, levels, internalformat, width, height)
}
public
func glTextureStorage2DEXT(texture:GL.UInt, target:GL.Enum, levels:GL.Size, internalformat:GL.Enum, width:GL.Size, height:GL.Size)
{
    fp_glTextureStorage2DEXT(texture, target, levels, internalformat, width, height)
}
public
func glTextureStorage2DEXT(_ texture:GL.UInt, _ target:GL.Enum, _ levels:GL.Size, _ internalformat:GL.Enum, _ width:GL.Size, _ height:GL.Size)
{
    fp_glTextureStorage2DEXT(texture, target, levels, internalformat, width, height)
}

var fp_glTextureStorage2DMultisample:@convention(c) (GL.UInt, GL.Size, GL.Enum, GL.Size, GL.Size, GL.Bool) -> () = load_glTextureStorage2DMultisample
func load_glTextureStorage2DMultisample(texture:GL.UInt, samples:GL.Size, internalformat:GL.Enum, width:GL.Size, height:GL.Size, fixedsamplelocations:GL.Bool)
{
    fp_glTextureStorage2DMultisample = unsafeBitCast(get_fp("glTextureStorage2DMultisample", support: [ss363, ss42]), to: Swift.type(of: fp_glTextureStorage2DMultisample))
    fp_glTextureStorage2DMultisample(texture, samples, internalformat, width, height, fixedsamplelocations)
}
public
func glTextureStorage2DMultisample(texture:GL.UInt, samples:GL.Size, internalformat:GL.Enum, width:GL.Size, height:GL.Size, fixedsamplelocations:GL.Bool)
{
    fp_glTextureStorage2DMultisample(texture, samples, internalformat, width, height, fixedsamplelocations)
}
public
func glTextureStorage2DMultisample(_ texture:GL.UInt, _ samples:GL.Size, _ internalformat:GL.Enum, _ width:GL.Size, _ height:GL.Size, _ fixedsamplelocations:GL.Bool)
{
    fp_glTextureStorage2DMultisample(texture, samples, internalformat, width, height, fixedsamplelocations)
}

var fp_glTextureStorage2DMultisampleEXT:@convention(c) (GL.UInt, GL.Enum, GL.Size, GL.Enum, GL.Size, GL.Size, GL.Bool) -> () = load_glTextureStorage2DMultisampleEXT
func load_glTextureStorage2DMultisampleEXT(texture:GL.UInt, target:GL.Enum, samples:GL.Size, internalformat:GL.Enum, width:GL.Size, height:GL.Size, fixedsamplelocations:GL.Bool)
{
    fp_glTextureStorage2DMultisampleEXT = unsafeBitCast(get_fp("glTextureStorage2DMultisampleEXT", support: [ss143]), to: Swift.type(of: fp_glTextureStorage2DMultisampleEXT))
    fp_glTextureStorage2DMultisampleEXT(texture, target, samples, internalformat, width, height, fixedsamplelocations)
}
public
func glTextureStorage2DMultisampleEXT(texture:GL.UInt, target:GL.Enum, samples:GL.Size, internalformat:GL.Enum, width:GL.Size, height:GL.Size, fixedsamplelocations:GL.Bool)
{
    fp_glTextureStorage2DMultisampleEXT(texture, target, samples, internalformat, width, height, fixedsamplelocations)
}
public
func glTextureStorage2DMultisampleEXT(_ texture:GL.UInt, _ target:GL.Enum, _ samples:GL.Size, _ internalformat:GL.Enum, _ width:GL.Size, _ height:GL.Size, _ fixedsamplelocations:GL.Bool)
{
    fp_glTextureStorage2DMultisampleEXT(texture, target, samples, internalformat, width, height, fixedsamplelocations)
}

var fp_glTextureStorage3D:@convention(c) (GL.UInt, GL.Size, GL.Enum, GL.Size, GL.Size, GL.Size) -> () = load_glTextureStorage3D
func load_glTextureStorage3D(texture:GL.UInt, levels:GL.Size, internalformat:GL.Enum, width:GL.Size, height:GL.Size, depth:GL.Size)
{
    fp_glTextureStorage3D = unsafeBitCast(get_fp("glTextureStorage3D", support: [ss363, ss42]), to: Swift.type(of: fp_glTextureStorage3D))
    fp_glTextureStorage3D(texture, levels, internalformat, width, height, depth)
}
public
func glTextureStorage3D(texture:GL.UInt, levels:GL.Size, internalformat:GL.Enum, width:GL.Size, height:GL.Size, depth:GL.Size)
{
    fp_glTextureStorage3D(texture, levels, internalformat, width, height, depth)
}
public
func glTextureStorage3D(_ texture:GL.UInt, _ levels:GL.Size, _ internalformat:GL.Enum, _ width:GL.Size, _ height:GL.Size, _ depth:GL.Size)
{
    fp_glTextureStorage3D(texture, levels, internalformat, width, height, depth)
}

var fp_glTextureStorage3DEXT:@convention(c) (GL.UInt, GL.Enum, GL.Size, GL.Enum, GL.Size, GL.Size, GL.Size) -> () = load_glTextureStorage3DEXT
func load_glTextureStorage3DEXT(texture:GL.UInt, target:GL.Enum, levels:GL.Size, internalformat:GL.Enum, width:GL.Size, height:GL.Size, depth:GL.Size)
{
    fp_glTextureStorage3DEXT = unsafeBitCast(get_fp("glTextureStorage3DEXT", support: [ss143, ss197]), to: Swift.type(of: fp_glTextureStorage3DEXT))
    fp_glTextureStorage3DEXT(texture, target, levels, internalformat, width, height, depth)
}
public
func glTextureStorage3DEXT(texture:GL.UInt, target:GL.Enum, levels:GL.Size, internalformat:GL.Enum, width:GL.Size, height:GL.Size, depth:GL.Size)
{
    fp_glTextureStorage3DEXT(texture, target, levels, internalformat, width, height, depth)
}
public
func glTextureStorage3DEXT(_ texture:GL.UInt, _ target:GL.Enum, _ levels:GL.Size, _ internalformat:GL.Enum, _ width:GL.Size, _ height:GL.Size, _ depth:GL.Size)
{
    fp_glTextureStorage3DEXT(texture, target, levels, internalformat, width, height, depth)
}

var fp_glTextureStorage3DMultisample:@convention(c) (GL.UInt, GL.Size, GL.Enum, GL.Size, GL.Size, GL.Size, GL.Bool) -> () = load_glTextureStorage3DMultisample
func load_glTextureStorage3DMultisample(texture:GL.UInt, samples:GL.Size, internalformat:GL.Enum, width:GL.Size, height:GL.Size, depth:GL.Size, fixedsamplelocations:GL.Bool)
{
    fp_glTextureStorage3DMultisample = unsafeBitCast(get_fp("glTextureStorage3DMultisample", support: [ss363, ss42]), to: Swift.type(of: fp_glTextureStorage3DMultisample))
    fp_glTextureStorage3DMultisample(texture, samples, internalformat, width, height, depth, fixedsamplelocations)
}
public
func glTextureStorage3DMultisample(texture:GL.UInt, samples:GL.Size, internalformat:GL.Enum, width:GL.Size, height:GL.Size, depth:GL.Size, fixedsamplelocations:GL.Bool)
{
    fp_glTextureStorage3DMultisample(texture, samples, internalformat, width, height, depth, fixedsamplelocations)
}
public
func glTextureStorage3DMultisample(_ texture:GL.UInt, _ samples:GL.Size, _ internalformat:GL.Enum, _ width:GL.Size, _ height:GL.Size, _ depth:GL.Size, _ fixedsamplelocations:GL.Bool)
{
    fp_glTextureStorage3DMultisample(texture, samples, internalformat, width, height, depth, fixedsamplelocations)
}

var fp_glTextureStorage3DMultisampleEXT:@convention(c) (GL.UInt, GL.Enum, GL.Size, GL.Enum, GL.Size, GL.Size, GL.Size, GL.Bool) -> () = load_glTextureStorage3DMultisampleEXT
func load_glTextureStorage3DMultisampleEXT(texture:GL.UInt, target:GL.Enum, samples:GL.Size, internalformat:GL.Enum, width:GL.Size, height:GL.Size, depth:GL.Size, fixedsamplelocations:GL.Bool)
{
    fp_glTextureStorage3DMultisampleEXT = unsafeBitCast(get_fp("glTextureStorage3DMultisampleEXT", support: [ss143]), to: Swift.type(of: fp_glTextureStorage3DMultisampleEXT))
    fp_glTextureStorage3DMultisampleEXT(texture, target, samples, internalformat, width, height, depth, fixedsamplelocations)
}
public
func glTextureStorage3DMultisampleEXT(texture:GL.UInt, target:GL.Enum, samples:GL.Size, internalformat:GL.Enum, width:GL.Size, height:GL.Size, depth:GL.Size, fixedsamplelocations:GL.Bool)
{
    fp_glTextureStorage3DMultisampleEXT(texture, target, samples, internalformat, width, height, depth, fixedsamplelocations)
}
public
func glTextureStorage3DMultisampleEXT(_ texture:GL.UInt, _ target:GL.Enum, _ samples:GL.Size, _ internalformat:GL.Enum, _ width:GL.Size, _ height:GL.Size, _ depth:GL.Size, _ fixedsamplelocations:GL.Bool)
{
    fp_glTextureStorage3DMultisampleEXT(texture, target, samples, internalformat, width, height, depth, fixedsamplelocations)
}

var fp_glTextureStorageSparseAMD:@convention(c) (GL.UInt, GL.Enum, GL.Enum, GL.Size, GL.Size, GL.Size, GL.Size, GL.Bitfield) -> () = load_glTextureStorageSparseAMD
func load_glTextureStorageSparseAMD(texture:GL.UInt, target:GL.Enum, internalFormat:GL.Enum, width:GL.Size, height:GL.Size, depth:GL.Size, layers:GL.Size, flags:GL.Bitfield)
{
    fp_glTextureStorageSparseAMD = unsafeBitCast(get_fp("glTextureStorageSparseAMD", support: [ss10]), to: Swift.type(of: fp_glTextureStorageSparseAMD))
    fp_glTextureStorageSparseAMD(texture, target, internalFormat, width, height, depth, layers, flags)
}
public
func glTextureStorageSparseAMD(texture:GL.UInt, target:GL.Enum, internalFormat:GL.Enum, width:GL.Size, height:GL.Size, depth:GL.Size, layers:GL.Size, flags:GL.Bitfield)
{
    fp_glTextureStorageSparseAMD(texture, target, internalFormat, width, height, depth, layers, flags)
}
public
func glTextureStorageSparseAMD(_ texture:GL.UInt, _ target:GL.Enum, _ internalFormat:GL.Enum, _ width:GL.Size, _ height:GL.Size, _ depth:GL.Size, _ layers:GL.Size, _ flags:GL.Bitfield)
{
    fp_glTextureStorageSparseAMD(texture, target, internalFormat, width, height, depth, layers, flags)
}

var fp_glTextureSubImage1D:@convention(c) (GL.UInt, GL.Int, GL.Int, GL.Size, GL.Enum, GL.Enum, UnsafeRawPointer?) -> () = load_glTextureSubImage1D
func load_glTextureSubImage1D(texture:GL.UInt, level:GL.Int, xoffset:GL.Int, width:GL.Size, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glTextureSubImage1D = unsafeBitCast(get_fp("glTextureSubImage1D", support: [ss363, ss42]), to: Swift.type(of: fp_glTextureSubImage1D))
    fp_glTextureSubImage1D(texture, level, xoffset, width, format, type, pixels)
}
public
func glTextureSubImage1D(texture:GL.UInt, level:GL.Int, xoffset:GL.Int, width:GL.Size, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glTextureSubImage1D(texture, level, xoffset, width, format, type, pixels)
}
public
func glTextureSubImage1D(_ texture:GL.UInt, _ level:GL.Int, _ xoffset:GL.Int, _ width:GL.Size, _ format:GL.Enum, _ type:GL.Enum, _ pixels:UnsafeRawPointer?)
{
    fp_glTextureSubImage1D(texture, level, xoffset, width, format, type, pixels)
}

var fp_glTextureSubImage1DEXT:@convention(c) (GL.UInt, GL.Enum, GL.Int, GL.Int, GL.Size, GL.Enum, GL.Enum, UnsafeRawPointer?) -> () = load_glTextureSubImage1DEXT
func load_glTextureSubImage1DEXT(texture:GL.UInt, target:GL.Enum, level:GL.Int, xoffset:GL.Int, width:GL.Size, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glTextureSubImage1DEXT = unsafeBitCast(get_fp("glTextureSubImage1DEXT", support: [ss143]), to: Swift.type(of: fp_glTextureSubImage1DEXT))
    fp_glTextureSubImage1DEXT(texture, target, level, xoffset, width, format, type, pixels)
}
public
func glTextureSubImage1DEXT(texture:GL.UInt, target:GL.Enum, level:GL.Int, xoffset:GL.Int, width:GL.Size, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glTextureSubImage1DEXT(texture, target, level, xoffset, width, format, type, pixels)
}
public
func glTextureSubImage1DEXT(_ texture:GL.UInt, _ target:GL.Enum, _ level:GL.Int, _ xoffset:GL.Int, _ width:GL.Size, _ format:GL.Enum, _ type:GL.Enum, _ pixels:UnsafeRawPointer?)
{
    fp_glTextureSubImage1DEXT(texture, target, level, xoffset, width, format, type, pixels)
}

var fp_glTextureSubImage2D:@convention(c) (GL.UInt, GL.Int, GL.Int, GL.Int, GL.Size, GL.Size, GL.Enum, GL.Enum, UnsafeRawPointer?) -> () = load_glTextureSubImage2D
func load_glTextureSubImage2D(texture:GL.UInt, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, width:GL.Size, height:GL.Size, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glTextureSubImage2D = unsafeBitCast(get_fp("glTextureSubImage2D", support: [ss363, ss42]), to: Swift.type(of: fp_glTextureSubImage2D))
    fp_glTextureSubImage2D(texture, level, xoffset, yoffset, width, height, format, type, pixels)
}
public
func glTextureSubImage2D(texture:GL.UInt, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, width:GL.Size, height:GL.Size, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glTextureSubImage2D(texture, level, xoffset, yoffset, width, height, format, type, pixels)
}
public
func glTextureSubImage2D(_ texture:GL.UInt, _ level:GL.Int, _ xoffset:GL.Int, _ yoffset:GL.Int, _ width:GL.Size, _ height:GL.Size, _ format:GL.Enum, _ type:GL.Enum, _ pixels:UnsafeRawPointer?)
{
    fp_glTextureSubImage2D(texture, level, xoffset, yoffset, width, height, format, type, pixels)
}

var fp_glTextureSubImage2DEXT:@convention(c) (GL.UInt, GL.Enum, GL.Int, GL.Int, GL.Int, GL.Size, GL.Size, GL.Enum, GL.Enum, UnsafeRawPointer?) -> () = load_glTextureSubImage2DEXT
func load_glTextureSubImage2DEXT(texture:GL.UInt, target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, width:GL.Size, height:GL.Size, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glTextureSubImage2DEXT = unsafeBitCast(get_fp("glTextureSubImage2DEXT", support: [ss143]), to: Swift.type(of: fp_glTextureSubImage2DEXT))
    fp_glTextureSubImage2DEXT(texture, target, level, xoffset, yoffset, width, height, format, type, pixels)
}
public
func glTextureSubImage2DEXT(texture:GL.UInt, target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, width:GL.Size, height:GL.Size, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glTextureSubImage2DEXT(texture, target, level, xoffset, yoffset, width, height, format, type, pixels)
}
public
func glTextureSubImage2DEXT(_ texture:GL.UInt, _ target:GL.Enum, _ level:GL.Int, _ xoffset:GL.Int, _ yoffset:GL.Int, _ width:GL.Size, _ height:GL.Size, _ format:GL.Enum, _ type:GL.Enum, _ pixels:UnsafeRawPointer?)
{
    fp_glTextureSubImage2DEXT(texture, target, level, xoffset, yoffset, width, height, format, type, pixels)
}

var fp_glTextureSubImage3D:@convention(c) (GL.UInt, GL.Int, GL.Int, GL.Int, GL.Int, GL.Size, GL.Size, GL.Size, GL.Enum, GL.Enum, UnsafeRawPointer?) -> () = load_glTextureSubImage3D
func load_glTextureSubImage3D(texture:GL.UInt, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, zoffset:GL.Int, width:GL.Size, height:GL.Size, depth:GL.Size, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glTextureSubImage3D = unsafeBitCast(get_fp("glTextureSubImage3D", support: [ss363, ss42]), to: Swift.type(of: fp_glTextureSubImage3D))
    fp_glTextureSubImage3D(texture, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels)
}
public
func glTextureSubImage3D(texture:GL.UInt, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, zoffset:GL.Int, width:GL.Size, height:GL.Size, depth:GL.Size, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glTextureSubImage3D(texture, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels)
}
public
func glTextureSubImage3D(_ texture:GL.UInt, _ level:GL.Int, _ xoffset:GL.Int, _ yoffset:GL.Int, _ zoffset:GL.Int, _ width:GL.Size, _ height:GL.Size, _ depth:GL.Size, _ format:GL.Enum, _ type:GL.Enum, _ pixels:UnsafeRawPointer?)
{
    fp_glTextureSubImage3D(texture, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels)
}

var fp_glTextureSubImage3DEXT:@convention(c) (GL.UInt, GL.Enum, GL.Int, GL.Int, GL.Int, GL.Int, GL.Size, GL.Size, GL.Size, GL.Enum, GL.Enum, UnsafeRawPointer?) -> () = load_glTextureSubImage3DEXT
func load_glTextureSubImage3DEXT(texture:GL.UInt, target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, zoffset:GL.Int, width:GL.Size, height:GL.Size, depth:GL.Size, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glTextureSubImage3DEXT = unsafeBitCast(get_fp("glTextureSubImage3DEXT", support: [ss143]), to: Swift.type(of: fp_glTextureSubImage3DEXT))
    fp_glTextureSubImage3DEXT(texture, target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels)
}
public
func glTextureSubImage3DEXT(texture:GL.UInt, target:GL.Enum, level:GL.Int, xoffset:GL.Int, yoffset:GL.Int, zoffset:GL.Int, width:GL.Size, height:GL.Size, depth:GL.Size, format:GL.Enum, type:GL.Enum, pixels:UnsafeRawPointer?)
{
    fp_glTextureSubImage3DEXT(texture, target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels)
}
public
func glTextureSubImage3DEXT(_ texture:GL.UInt, _ target:GL.Enum, _ level:GL.Int, _ xoffset:GL.Int, _ yoffset:GL.Int, _ zoffset:GL.Int, _ width:GL.Size, _ height:GL.Size, _ depth:GL.Size, _ format:GL.Enum, _ type:GL.Enum, _ pixels:UnsafeRawPointer?)
{
    fp_glTextureSubImage3DEXT(texture, target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels)
}

var fp_glTextureView:@convention(c) (GL.UInt, GL.Enum, GL.UInt, GL.Enum, GL.UInt, GL.UInt, GL.UInt, GL.UInt) -> () = load_glTextureView
func load_glTextureView(texture:GL.UInt, target:GL.Enum, origtexture:GL.UInt, internalformat:GL.Enum, minlevel:GL.UInt, numlevels:GL.UInt, minlayer:GL.UInt, numlayers:GL.UInt)
{
    fp_glTextureView = unsafeBitCast(get_fp("glTextureView", support: [ss361, ss98]), to: Swift.type(of: fp_glTextureView))
    fp_glTextureView(texture, target, origtexture, internalformat, minlevel, numlevels, minlayer, numlayers)
}
public
func glTextureView(texture:GL.UInt, target:GL.Enum, origtexture:GL.UInt, internalformat:GL.Enum, minlevel:GL.UInt, numlevels:GL.UInt, minlayer:GL.UInt, numlayers:GL.UInt)
{
    fp_glTextureView(texture, target, origtexture, internalformat, minlevel, numlevels, minlayer, numlayers)
}
public
func glTextureView(_ texture:GL.UInt, _ target:GL.Enum, _ origtexture:GL.UInt, _ internalformat:GL.Enum, _ minlevel:GL.UInt, _ numlevels:GL.UInt, _ minlayer:GL.UInt, _ numlayers:GL.UInt)
{
    fp_glTextureView(texture, target, origtexture, internalformat, minlevel, numlevels, minlayer, numlayers)
}

var fp_glTextureViewEXT:@convention(c) (GL.UInt, GL.Enum, GL.UInt, GL.Enum, GL.UInt, GL.UInt, GL.UInt, GL.UInt) -> () = load_glTextureViewEXT
func load_glTextureViewEXT(texture:GL.UInt, target:GL.Enum, origtexture:GL.UInt, internalformat:GL.Enum, minlevel:GL.UInt, numlevels:GL.UInt, minlayer:GL.UInt, numlayers:GL.UInt)
{
    fp_glTextureViewEXT = unsafeBitCast(get_fp("glTextureViewEXT", support: [ss198]), to: Swift.type(of: fp_glTextureViewEXT))
    fp_glTextureViewEXT(texture, target, origtexture, internalformat, minlevel, numlevels, minlayer, numlayers)
}
public
func glTextureViewEXT(texture:GL.UInt, target:GL.Enum, origtexture:GL.UInt, internalformat:GL.Enum, minlevel:GL.UInt, numlevels:GL.UInt, minlayer:GL.UInt, numlayers:GL.UInt)
{
    fp_glTextureViewEXT(texture, target, origtexture, internalformat, minlevel, numlevels, minlayer, numlayers)
}
public
func glTextureViewEXT(_ texture:GL.UInt, _ target:GL.Enum, _ origtexture:GL.UInt, _ internalformat:GL.Enum, _ minlevel:GL.UInt, _ numlevels:GL.UInt, _ minlayer:GL.UInt, _ numlayers:GL.UInt)
{
    fp_glTextureViewEXT(texture, target, origtexture, internalformat, minlevel, numlevels, minlayer, numlayers)
}

var fp_glTextureViewOES:@convention(c) (GL.UInt, GL.Enum, GL.UInt, GL.Enum, GL.UInt, GL.UInt, GL.UInt, GL.UInt) -> () = load_glTextureViewOES
func load_glTextureViewOES(texture:GL.UInt, target:GL.Enum, origtexture:GL.UInt, internalformat:GL.Enum, minlevel:GL.UInt, numlevels:GL.UInt, minlayer:GL.UInt, numlayers:GL.UInt)
{
    fp_glTextureViewOES = unsafeBitCast(get_fp("glTextureViewOES", support: [ss309]), to: Swift.type(of: fp_glTextureViewOES))
    fp_glTextureViewOES(texture, target, origtexture, internalformat, minlevel, numlevels, minlayer, numlayers)
}
public
func glTextureViewOES(texture:GL.UInt, target:GL.Enum, origtexture:GL.UInt, internalformat:GL.Enum, minlevel:GL.UInt, numlevels:GL.UInt, minlayer:GL.UInt, numlayers:GL.UInt)
{
    fp_glTextureViewOES(texture, target, origtexture, internalformat, minlevel, numlevels, minlayer, numlayers)
}
public
func glTextureViewOES(_ texture:GL.UInt, _ target:GL.Enum, _ origtexture:GL.UInt, _ internalformat:GL.Enum, _ minlevel:GL.UInt, _ numlevels:GL.UInt, _ minlayer:GL.UInt, _ numlayers:GL.UInt)
{
    fp_glTextureViewOES(texture, target, origtexture, internalformat, minlevel, numlevels, minlayer, numlayers)
}

var fp_glTrackMatrixNV:@convention(c) (GL.Enum, GL.UInt, GL.Enum, GL.Enum) -> () = load_glTrackMatrixNV
func load_glTrackMatrixNV(target:GL.Enum, address:GL.UInt, matrix:GL.Enum, transform:GL.Enum)
{
    fp_glTrackMatrixNV = unsafeBitCast(get_fp("glTrackMatrixNV", support: [ss278]), to: Swift.type(of: fp_glTrackMatrixNV))
    fp_glTrackMatrixNV(target, address, matrix, transform)
}
public
func glTrackMatrixNV(target:GL.Enum, address:GL.UInt, matrix:GL.Enum, transform:GL.Enum)
{
    fp_glTrackMatrixNV(target, address, matrix, transform)
}
public
func glTrackMatrixNV(_ target:GL.Enum, _ address:GL.UInt, _ matrix:GL.Enum, _ transform:GL.Enum)
{
    fp_glTrackMatrixNV(target, address, matrix, transform)
}

var fp_glTransformFeedbackAttribsNV:@convention(c) (GL.Size, UnsafePointer<GL.Int>?, GL.Enum) -> () = load_glTransformFeedbackAttribsNV
func load_glTransformFeedbackAttribsNV(count:GL.Size, attribs:UnsafePointer<GL.Int>?, bufferMode:GL.Enum)
{
    fp_glTransformFeedbackAttribsNV = unsafeBitCast(get_fp("glTransformFeedbackAttribsNV", support: [ss272]), to: Swift.type(of: fp_glTransformFeedbackAttribsNV))
    fp_glTransformFeedbackAttribsNV(count, attribs, bufferMode)
}
public
func glTransformFeedbackAttribsNV(count:GL.Size, attribs:UnsafePointer<GL.Int>?, bufferMode:GL.Enum)
{
    fp_glTransformFeedbackAttribsNV(count, attribs, bufferMode)
}
public
func glTransformFeedbackAttribsNV(_ count:GL.Size, _ attribs:UnsafePointer<GL.Int>?, _ bufferMode:GL.Enum)
{
    fp_glTransformFeedbackAttribsNV(count, attribs, bufferMode)
}

var fp_glTransformFeedbackBufferBase:@convention(c) (GL.UInt, GL.UInt, GL.UInt) -> () = load_glTransformFeedbackBufferBase
func load_glTransformFeedbackBufferBase(xfb:GL.UInt, index:GL.UInt, buffer:GL.UInt)
{
    fp_glTransformFeedbackBufferBase = unsafeBitCast(get_fp("glTransformFeedbackBufferBase", support: [ss363, ss42]), to: Swift.type(of: fp_glTransformFeedbackBufferBase))
    fp_glTransformFeedbackBufferBase(xfb, index, buffer)
}
public
func glTransformFeedbackBufferBase(xfb:GL.UInt, index:GL.UInt, buffer:GL.UInt)
{
    fp_glTransformFeedbackBufferBase(xfb, index, buffer)
}
public
func glTransformFeedbackBufferBase(_ xfb:GL.UInt, _ index:GL.UInt, _ buffer:GL.UInt)
{
    fp_glTransformFeedbackBufferBase(xfb, index, buffer)
}

var fp_glTransformFeedbackBufferRange:@convention(c) (GL.UInt, GL.UInt, GL.UInt, GL.IntPointer, GL.SizePointer) -> () = load_glTransformFeedbackBufferRange
func load_glTransformFeedbackBufferRange(xfb:GL.UInt, index:GL.UInt, buffer:GL.UInt, offset:GL.IntPointer, size:GL.SizePointer)
{
    fp_glTransformFeedbackBufferRange = unsafeBitCast(get_fp("glTransformFeedbackBufferRange", support: [ss363, ss42]), to: Swift.type(of: fp_glTransformFeedbackBufferRange))
    fp_glTransformFeedbackBufferRange(xfb, index, buffer, offset, size)
}
public
func glTransformFeedbackBufferRange(xfb:GL.UInt, index:GL.UInt, buffer:GL.UInt, offset:GL.IntPointer, size:GL.SizePointer)
{
    fp_glTransformFeedbackBufferRange(xfb, index, buffer, offset, size)
}
public
func glTransformFeedbackBufferRange(_ xfb:GL.UInt, _ index:GL.UInt, _ buffer:GL.UInt, _ offset:GL.IntPointer, _ size:GL.SizePointer)
{
    fp_glTransformFeedbackBufferRange(xfb, index, buffer, offset, size)
}

var fp_glTransformFeedbackStreamAttribsNV:@convention(c) (GL.Size, UnsafePointer<GL.Int>?, GL.Size, UnsafePointer<GL.Int>?, GL.Enum) -> () = load_glTransformFeedbackStreamAttribsNV
func load_glTransformFeedbackStreamAttribsNV(count:GL.Size, attribs:UnsafePointer<GL.Int>?, nbuffers:GL.Size, bufstreams:UnsafePointer<GL.Int>?, bufferMode:GL.Enum)
{
    fp_glTransformFeedbackStreamAttribsNV = unsafeBitCast(get_fp("glTransformFeedbackStreamAttribsNV", support: [ss272]), to: Swift.type(of: fp_glTransformFeedbackStreamAttribsNV))
    fp_glTransformFeedbackStreamAttribsNV(count, attribs, nbuffers, bufstreams, bufferMode)
}
public
func glTransformFeedbackStreamAttribsNV(count:GL.Size, attribs:UnsafePointer<GL.Int>?, nbuffers:GL.Size, bufstreams:UnsafePointer<GL.Int>?, bufferMode:GL.Enum)
{
    fp_glTransformFeedbackStreamAttribsNV(count, attribs, nbuffers, bufstreams, bufferMode)
}
public
func glTransformFeedbackStreamAttribsNV(_ count:GL.Size, _ attribs:UnsafePointer<GL.Int>?, _ nbuffers:GL.Size, _ bufstreams:UnsafePointer<GL.Int>?, _ bufferMode:GL.Enum)
{
    fp_glTransformFeedbackStreamAttribsNV(count, attribs, nbuffers, bufstreams, bufferMode)
}

var fp_glTransformFeedbackVaryings:@convention(c) (GL.UInt, GL.Size, UnsafePointer<UnsafePointer<GL.Char>?>?, GL.Enum) -> () = load_glTransformFeedbackVaryings
func load_glTransformFeedbackVaryings(program:GL.UInt, count:GL.Size, varyings:UnsafePointer<UnsafePointer<GL.Char>?>?, bufferMode:GL.Enum)
{
    fp_glTransformFeedbackVaryings = unsafeBitCast(get_fp("glTransformFeedbackVaryings", support: [ss354, ss366]), to: Swift.type(of: fp_glTransformFeedbackVaryings))
    fp_glTransformFeedbackVaryings(program, count, varyings, bufferMode)
}
public
func glTransformFeedbackVaryings(program:GL.UInt, count:GL.Size, varyings:UnsafePointer<UnsafePointer<GL.Char>?>?, bufferMode:GL.Enum)
{
    fp_glTransformFeedbackVaryings(program, count, varyings, bufferMode)
}
public
func glTransformFeedbackVaryings(_ program:GL.UInt, _ count:GL.Size, _ varyings:UnsafePointer<UnsafePointer<GL.Char>?>?, _ bufferMode:GL.Enum)
{
    fp_glTransformFeedbackVaryings(program, count, varyings, bufferMode)
}

var fp_glTransformFeedbackVaryingsEXT:@convention(c) (GL.UInt, GL.Size, UnsafePointer<UnsafePointer<GL.Char>?>?, GL.Enum) -> () = load_glTransformFeedbackVaryingsEXT
func load_glTransformFeedbackVaryingsEXT(program:GL.UInt, count:GL.Size, varyings:UnsafePointer<UnsafePointer<GL.Char>?>?, bufferMode:GL.Enum)
{
    fp_glTransformFeedbackVaryingsEXT = unsafeBitCast(get_fp("glTransformFeedbackVaryingsEXT", support: [ss201]), to: Swift.type(of: fp_glTransformFeedbackVaryingsEXT))
    fp_glTransformFeedbackVaryingsEXT(program, count, varyings, bufferMode)
}
public
func glTransformFeedbackVaryingsEXT(program:GL.UInt, count:GL.Size, varyings:UnsafePointer<UnsafePointer<GL.Char>?>?, bufferMode:GL.Enum)
{
    fp_glTransformFeedbackVaryingsEXT(program, count, varyings, bufferMode)
}
public
func glTransformFeedbackVaryingsEXT(_ program:GL.UInt, _ count:GL.Size, _ varyings:UnsafePointer<UnsafePointer<GL.Char>?>?, _ bufferMode:GL.Enum)
{
    fp_glTransformFeedbackVaryingsEXT(program, count, varyings, bufferMode)
}

var fp_glTransformFeedbackVaryingsNV:@convention(c) (GL.UInt, GL.Size, UnsafePointer<GL.Int>?, GL.Enum) -> () = load_glTransformFeedbackVaryingsNV
func load_glTransformFeedbackVaryingsNV(program:GL.UInt, count:GL.Size, locations:UnsafePointer<GL.Int>?, bufferMode:GL.Enum)
{
    fp_glTransformFeedbackVaryingsNV = unsafeBitCast(get_fp("glTransformFeedbackVaryingsNV", support: [ss272]), to: Swift.type(of: fp_glTransformFeedbackVaryingsNV))
    fp_glTransformFeedbackVaryingsNV(program, count, locations, bufferMode)
}
public
func glTransformFeedbackVaryingsNV(program:GL.UInt, count:GL.Size, locations:UnsafePointer<GL.Int>?, bufferMode:GL.Enum)
{
    fp_glTransformFeedbackVaryingsNV(program, count, locations, bufferMode)
}
public
func glTransformFeedbackVaryingsNV(_ program:GL.UInt, _ count:GL.Size, _ locations:UnsafePointer<GL.Int>?, _ bufferMode:GL.Enum)
{
    fp_glTransformFeedbackVaryingsNV(program, count, locations, bufferMode)
}

var fp_glTransformPathNV:@convention(c) (GL.UInt, GL.UInt, GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glTransformPathNV
func load_glTransformPathNV(resultPath:GL.UInt, srcPath:GL.UInt, transformType:GL.Enum, transformValues:UnsafePointer<GL.Float>?)
{
    fp_glTransformPathNV = unsafeBitCast(get_fp("glTransformPathNV", support: [ss259]), to: Swift.type(of: fp_glTransformPathNV))
    fp_glTransformPathNV(resultPath, srcPath, transformType, transformValues)
}
public
func glTransformPathNV(resultPath:GL.UInt, srcPath:GL.UInt, transformType:GL.Enum, transformValues:UnsafePointer<GL.Float>?)
{
    fp_glTransformPathNV(resultPath, srcPath, transformType, transformValues)
}
public
func glTransformPathNV(_ resultPath:GL.UInt, _ srcPath:GL.UInt, _ transformType:GL.Enum, _ transformValues:UnsafePointer<GL.Float>?)
{
    fp_glTransformPathNV(resultPath, srcPath, transformType, transformValues)
}

var fp_glTranslated:@convention(c) (GL.Double, GL.Double, GL.Double) -> () = load_glTranslated
func load_glTranslated(x:GL.Double, y:GL.Double, z:GL.Double)
{
    fp_glTranslated = unsafeBitCast(get_fp("glTranslated", support: [ss346, ss369]), to: Swift.type(of: fp_glTranslated))
    fp_glTranslated(x, y, z)
}
public
func glTranslated(x:GL.Double, y:GL.Double, z:GL.Double)
{
    fp_glTranslated(x, y, z)
}
public
func glTranslated(_ x:GL.Double, _ y:GL.Double, _ z:GL.Double)
{
    fp_glTranslated(x, y, z)
}

var fp_glTranslatef:@convention(c) (GL.Float, GL.Float, GL.Float) -> () = load_glTranslatef
func load_glTranslatef(x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glTranslatef = unsafeBitCast(get_fp("glTranslatef", support: [ss346, ss369, ss364]), to: Swift.type(of: fp_glTranslatef))
    fp_glTranslatef(x, y, z)
}
public
func glTranslatef(x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glTranslatef(x, y, z)
}
public
func glTranslatef(_ x:GL.Float, _ y:GL.Float, _ z:GL.Float)
{
    fp_glTranslatef(x, y, z)
}

var fp_glTranslatex:@convention(c) (GL.Fixed, GL.Fixed, GL.Fixed) -> () = load_glTranslatex
func load_glTranslatex(x:GL.Fixed, y:GL.Fixed, z:GL.Fixed)
{
    fp_glTranslatex = unsafeBitCast(get_fp("glTranslatex", support: [ss364]), to: Swift.type(of: fp_glTranslatex))
    fp_glTranslatex(x, y, z)
}
public
func glTranslatex(x:GL.Fixed, y:GL.Fixed, z:GL.Fixed)
{
    fp_glTranslatex(x, y, z)
}
public
func glTranslatex(_ x:GL.Fixed, _ y:GL.Fixed, _ z:GL.Fixed)
{
    fp_glTranslatex(x, y, z)
}

var fp_glTranslatexOES:@convention(c) (GL.Fixed, GL.Fixed, GL.Fixed) -> () = load_glTranslatexOES
func load_glTranslatexOES(x:GL.Fixed, y:GL.Fixed, z:GL.Fixed)
{
    fp_glTranslatexOES = unsafeBitCast(get_fp("glTranslatexOES", support: [ss292]), to: Swift.type(of: fp_glTranslatexOES))
    fp_glTranslatexOES(x, y, z)
}
public
func glTranslatexOES(x:GL.Fixed, y:GL.Fixed, z:GL.Fixed)
{
    fp_glTranslatexOES(x, y, z)
}
public
func glTranslatexOES(_ x:GL.Fixed, _ y:GL.Fixed, _ z:GL.Fixed)
{
    fp_glTranslatexOES(x, y, z)
}

var fp_glUniform1d:@convention(c) (GL.Int, GL.Double) -> () = load_glUniform1d
func load_glUniform1d(location:GL.Int, x:GL.Double)
{
    fp_glUniform1d = unsafeBitCast(get_fp("glUniform1d", support: [ss358, ss57]), to: Swift.type(of: fp_glUniform1d))
    fp_glUniform1d(location, x)
}
public
func glUniform1d(location:GL.Int, x:GL.Double)
{
    fp_glUniform1d(location, x)
}
public
func glUniform1d(_ location:GL.Int, _ x:GL.Double)
{
    fp_glUniform1d(location, x)
}

var fp_glUniform1dv:@convention(c) (GL.Int, GL.Size, UnsafePointer<GL.Double>?) -> () = load_glUniform1dv
func load_glUniform1dv(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Double>?)
{
    fp_glUniform1dv = unsafeBitCast(get_fp("glUniform1dv", support: [ss358, ss57]), to: Swift.type(of: fp_glUniform1dv))
    fp_glUniform1dv(location, count, value)
}
public
func glUniform1dv(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Double>?)
{
    fp_glUniform1dv(location, count, value)
}
public
func glUniform1dv(_ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Double>?)
{
    fp_glUniform1dv(location, count, value)
}

var fp_glUniform1f:@convention(c) (GL.Int, GL.Float) -> () = load_glUniform1f
func load_glUniform1f(location:GL.Int, v0:GL.Float)
{
    fp_glUniform1f = unsafeBitCast(get_fp("glUniform1f", support: [ss352, ss365]), to: Swift.type(of: fp_glUniform1f))
    fp_glUniform1f(location, v0)
}
public
func glUniform1f(location:GL.Int, v0:GL.Float)
{
    fp_glUniform1f(location, v0)
}
public
func glUniform1f(_ location:GL.Int, _ v0:GL.Float)
{
    fp_glUniform1f(location, v0)
}

var fp_glUniform1fARB:@convention(c) (GL.Int, GL.Float) -> () = load_glUniform1fARB
func load_glUniform1fARB(location:GL.Int, v0:GL.Float)
{
    fp_glUniform1fARB = unsafeBitCast(get_fp("glUniform1fARB", support: [ss83]), to: Swift.type(of: fp_glUniform1fARB))
    fp_glUniform1fARB(location, v0)
}
public
func glUniform1fARB(location:GL.Int, v0:GL.Float)
{
    fp_glUniform1fARB(location, v0)
}
public
func glUniform1fARB(_ location:GL.Int, _ v0:GL.Float)
{
    fp_glUniform1fARB(location, v0)
}

var fp_glUniform1fv:@convention(c) (GL.Int, GL.Size, UnsafePointer<GL.Float>?) -> () = load_glUniform1fv
func load_glUniform1fv(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Float>?)
{
    fp_glUniform1fv = unsafeBitCast(get_fp("glUniform1fv", support: [ss352, ss365]), to: Swift.type(of: fp_glUniform1fv))
    fp_glUniform1fv(location, count, value)
}
public
func glUniform1fv(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Float>?)
{
    fp_glUniform1fv(location, count, value)
}
public
func glUniform1fv(_ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Float>?)
{
    fp_glUniform1fv(location, count, value)
}

var fp_glUniform1fvARB:@convention(c) (GL.Int, GL.Size, UnsafePointer<GL.Float>?) -> () = load_glUniform1fvARB
func load_glUniform1fvARB(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Float>?)
{
    fp_glUniform1fvARB = unsafeBitCast(get_fp("glUniform1fvARB", support: [ss83]), to: Swift.type(of: fp_glUniform1fvARB))
    fp_glUniform1fvARB(location, count, value)
}
public
func glUniform1fvARB(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Float>?)
{
    fp_glUniform1fvARB(location, count, value)
}
public
func glUniform1fvARB(_ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Float>?)
{
    fp_glUniform1fvARB(location, count, value)
}

var fp_glUniform1i:@convention(c) (GL.Int, GL.Int) -> () = load_glUniform1i
func load_glUniform1i(location:GL.Int, v0:GL.Int)
{
    fp_glUniform1i = unsafeBitCast(get_fp("glUniform1i", support: [ss352, ss365]), to: Swift.type(of: fp_glUniform1i))
    fp_glUniform1i(location, v0)
}
public
func glUniform1i(location:GL.Int, v0:GL.Int)
{
    fp_glUniform1i(location, v0)
}
public
func glUniform1i(_ location:GL.Int, _ v0:GL.Int)
{
    fp_glUniform1i(location, v0)
}

var fp_glUniform1i64ARB:@convention(c) (GL.Int, GL.Int64) -> () = load_glUniform1i64ARB
func load_glUniform1i64ARB(location:GL.Int, x:GL.Int64)
{
    fp_glUniform1i64ARB = unsafeBitCast(get_fp("glUniform1i64ARB", support: [ss58]), to: Swift.type(of: fp_glUniform1i64ARB))
    fp_glUniform1i64ARB(location, x)
}
public
func glUniform1i64ARB(location:GL.Int, x:GL.Int64)
{
    fp_glUniform1i64ARB(location, x)
}
public
func glUniform1i64ARB(_ location:GL.Int, _ x:GL.Int64)
{
    fp_glUniform1i64ARB(location, x)
}

var fp_glUniform1i64NV:@convention(c) (GL.Int, GL.Int64EXT) -> () = load_glUniform1i64NV
func load_glUniform1i64NV(location:GL.Int, x:GL.Int64EXT)
{
    fp_glUniform1i64NV = unsafeBitCast(get_fp("glUniform1i64NV", support: [ss3, ss252]), to: Swift.type(of: fp_glUniform1i64NV))
    fp_glUniform1i64NV(location, x)
}
public
func glUniform1i64NV(location:GL.Int, x:GL.Int64EXT)
{
    fp_glUniform1i64NV(location, x)
}
public
func glUniform1i64NV(_ location:GL.Int, _ x:GL.Int64EXT)
{
    fp_glUniform1i64NV(location, x)
}

var fp_glUniform1i64vARB:@convention(c) (GL.Int, GL.Size, UnsafePointer<GL.Int64>?) -> () = load_glUniform1i64vARB
func load_glUniform1i64vARB(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int64>?)
{
    fp_glUniform1i64vARB = unsafeBitCast(get_fp("glUniform1i64vARB", support: [ss58]), to: Swift.type(of: fp_glUniform1i64vARB))
    fp_glUniform1i64vARB(location, count, value)
}
public
func glUniform1i64vARB(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int64>?)
{
    fp_glUniform1i64vARB(location, count, value)
}
public
func glUniform1i64vARB(_ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Int64>?)
{
    fp_glUniform1i64vARB(location, count, value)
}

var fp_glUniform1i64vNV:@convention(c) (GL.Int, GL.Size, UnsafePointer<GL.Int64EXT>?) -> () = load_glUniform1i64vNV
func load_glUniform1i64vNV(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int64EXT>?)
{
    fp_glUniform1i64vNV = unsafeBitCast(get_fp("glUniform1i64vNV", support: [ss3, ss252]), to: Swift.type(of: fp_glUniform1i64vNV))
    fp_glUniform1i64vNV(location, count, value)
}
public
func glUniform1i64vNV(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int64EXT>?)
{
    fp_glUniform1i64vNV(location, count, value)
}
public
func glUniform1i64vNV(_ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Int64EXT>?)
{
    fp_glUniform1i64vNV(location, count, value)
}

var fp_glUniform1iARB:@convention(c) (GL.Int, GL.Int) -> () = load_glUniform1iARB
func load_glUniform1iARB(location:GL.Int, v0:GL.Int)
{
    fp_glUniform1iARB = unsafeBitCast(get_fp("glUniform1iARB", support: [ss83]), to: Swift.type(of: fp_glUniform1iARB))
    fp_glUniform1iARB(location, v0)
}
public
func glUniform1iARB(location:GL.Int, v0:GL.Int)
{
    fp_glUniform1iARB(location, v0)
}
public
func glUniform1iARB(_ location:GL.Int, _ v0:GL.Int)
{
    fp_glUniform1iARB(location, v0)
}

var fp_glUniform1iv:@convention(c) (GL.Int, GL.Size, UnsafePointer<GL.Int>?) -> () = load_glUniform1iv
func load_glUniform1iv(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int>?)
{
    fp_glUniform1iv = unsafeBitCast(get_fp("glUniform1iv", support: [ss352, ss365]), to: Swift.type(of: fp_glUniform1iv))
    fp_glUniform1iv(location, count, value)
}
public
func glUniform1iv(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int>?)
{
    fp_glUniform1iv(location, count, value)
}
public
func glUniform1iv(_ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Int>?)
{
    fp_glUniform1iv(location, count, value)
}

var fp_glUniform1ivARB:@convention(c) (GL.Int, GL.Size, UnsafePointer<GL.Int>?) -> () = load_glUniform1ivARB
func load_glUniform1ivARB(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int>?)
{
    fp_glUniform1ivARB = unsafeBitCast(get_fp("glUniform1ivARB", support: [ss83]), to: Swift.type(of: fp_glUniform1ivARB))
    fp_glUniform1ivARB(location, count, value)
}
public
func glUniform1ivARB(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int>?)
{
    fp_glUniform1ivARB(location, count, value)
}
public
func glUniform1ivARB(_ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Int>?)
{
    fp_glUniform1ivARB(location, count, value)
}

var fp_glUniform1ui:@convention(c) (GL.Int, GL.UInt) -> () = load_glUniform1ui
func load_glUniform1ui(location:GL.Int, v0:GL.UInt)
{
    fp_glUniform1ui = unsafeBitCast(get_fp("glUniform1ui", support: [ss354, ss366]), to: Swift.type(of: fp_glUniform1ui))
    fp_glUniform1ui(location, v0)
}
public
func glUniform1ui(location:GL.Int, v0:GL.UInt)
{
    fp_glUniform1ui(location, v0)
}
public
func glUniform1ui(_ location:GL.Int, _ v0:GL.UInt)
{
    fp_glUniform1ui(location, v0)
}

var fp_glUniform1ui64ARB:@convention(c) (GL.Int, GL.UInt64) -> () = load_glUniform1ui64ARB
func load_glUniform1ui64ARB(location:GL.Int, x:GL.UInt64)
{
    fp_glUniform1ui64ARB = unsafeBitCast(get_fp("glUniform1ui64ARB", support: [ss58]), to: Swift.type(of: fp_glUniform1ui64ARB))
    fp_glUniform1ui64ARB(location, x)
}
public
func glUniform1ui64ARB(location:GL.Int, x:GL.UInt64)
{
    fp_glUniform1ui64ARB(location, x)
}
public
func glUniform1ui64ARB(_ location:GL.Int, _ x:GL.UInt64)
{
    fp_glUniform1ui64ARB(location, x)
}

var fp_glUniform1ui64NV:@convention(c) (GL.Int, GL.UInt64EXT) -> () = load_glUniform1ui64NV
func load_glUniform1ui64NV(location:GL.Int, x:GL.UInt64EXT)
{
    fp_glUniform1ui64NV = unsafeBitCast(get_fp("glUniform1ui64NV", support: [ss3, ss252]), to: Swift.type(of: fp_glUniform1ui64NV))
    fp_glUniform1ui64NV(location, x)
}
public
func glUniform1ui64NV(location:GL.Int, x:GL.UInt64EXT)
{
    fp_glUniform1ui64NV(location, x)
}
public
func glUniform1ui64NV(_ location:GL.Int, _ x:GL.UInt64EXT)
{
    fp_glUniform1ui64NV(location, x)
}

var fp_glUniform1ui64vARB:@convention(c) (GL.Int, GL.Size, UnsafePointer<GL.UInt64>?) -> () = load_glUniform1ui64vARB
func load_glUniform1ui64vARB(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt64>?)
{
    fp_glUniform1ui64vARB = unsafeBitCast(get_fp("glUniform1ui64vARB", support: [ss58]), to: Swift.type(of: fp_glUniform1ui64vARB))
    fp_glUniform1ui64vARB(location, count, value)
}
public
func glUniform1ui64vARB(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt64>?)
{
    fp_glUniform1ui64vARB(location, count, value)
}
public
func glUniform1ui64vARB(_ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.UInt64>?)
{
    fp_glUniform1ui64vARB(location, count, value)
}

var fp_glUniform1ui64vNV:@convention(c) (GL.Int, GL.Size, UnsafePointer<GL.UInt64EXT>?) -> () = load_glUniform1ui64vNV
func load_glUniform1ui64vNV(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt64EXT>?)
{
    fp_glUniform1ui64vNV = unsafeBitCast(get_fp("glUniform1ui64vNV", support: [ss3, ss252]), to: Swift.type(of: fp_glUniform1ui64vNV))
    fp_glUniform1ui64vNV(location, count, value)
}
public
func glUniform1ui64vNV(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt64EXT>?)
{
    fp_glUniform1ui64vNV(location, count, value)
}
public
func glUniform1ui64vNV(_ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.UInt64EXT>?)
{
    fp_glUniform1ui64vNV(location, count, value)
}

var fp_glUniform1uiEXT:@convention(c) (GL.Int, GL.UInt) -> () = load_glUniform1uiEXT
func load_glUniform1uiEXT(location:GL.Int, v0:GL.UInt)
{
    fp_glUniform1uiEXT = unsafeBitCast(get_fp("glUniform1uiEXT", support: [ss159]), to: Swift.type(of: fp_glUniform1uiEXT))
    fp_glUniform1uiEXT(location, v0)
}
public
func glUniform1uiEXT(location:GL.Int, v0:GL.UInt)
{
    fp_glUniform1uiEXT(location, v0)
}
public
func glUniform1uiEXT(_ location:GL.Int, _ v0:GL.UInt)
{
    fp_glUniform1uiEXT(location, v0)
}

var fp_glUniform1uiv:@convention(c) (GL.Int, GL.Size, UnsafePointer<GL.UInt>?) -> () = load_glUniform1uiv
func load_glUniform1uiv(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt>?)
{
    fp_glUniform1uiv = unsafeBitCast(get_fp("glUniform1uiv", support: [ss354, ss366]), to: Swift.type(of: fp_glUniform1uiv))
    fp_glUniform1uiv(location, count, value)
}
public
func glUniform1uiv(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt>?)
{
    fp_glUniform1uiv(location, count, value)
}
public
func glUniform1uiv(_ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.UInt>?)
{
    fp_glUniform1uiv(location, count, value)
}

var fp_glUniform1uivEXT:@convention(c) (GL.Int, GL.Size, UnsafePointer<GL.UInt>?) -> () = load_glUniform1uivEXT
func load_glUniform1uivEXT(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt>?)
{
    fp_glUniform1uivEXT = unsafeBitCast(get_fp("glUniform1uivEXT", support: [ss159]), to: Swift.type(of: fp_glUniform1uivEXT))
    fp_glUniform1uivEXT(location, count, value)
}
public
func glUniform1uivEXT(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt>?)
{
    fp_glUniform1uivEXT(location, count, value)
}
public
func glUniform1uivEXT(_ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.UInt>?)
{
    fp_glUniform1uivEXT(location, count, value)
}

var fp_glUniform2d:@convention(c) (GL.Int, GL.Double, GL.Double) -> () = load_glUniform2d
func load_glUniform2d(location:GL.Int, x:GL.Double, y:GL.Double)
{
    fp_glUniform2d = unsafeBitCast(get_fp("glUniform2d", support: [ss358, ss57]), to: Swift.type(of: fp_glUniform2d))
    fp_glUniform2d(location, x, y)
}
public
func glUniform2d(location:GL.Int, x:GL.Double, y:GL.Double)
{
    fp_glUniform2d(location, x, y)
}
public
func glUniform2d(_ location:GL.Int, _ x:GL.Double, _ y:GL.Double)
{
    fp_glUniform2d(location, x, y)
}

var fp_glUniform2dv:@convention(c) (GL.Int, GL.Size, UnsafePointer<GL.Double>?) -> () = load_glUniform2dv
func load_glUniform2dv(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Double>?)
{
    fp_glUniform2dv = unsafeBitCast(get_fp("glUniform2dv", support: [ss358, ss57]), to: Swift.type(of: fp_glUniform2dv))
    fp_glUniform2dv(location, count, value)
}
public
func glUniform2dv(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Double>?)
{
    fp_glUniform2dv(location, count, value)
}
public
func glUniform2dv(_ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Double>?)
{
    fp_glUniform2dv(location, count, value)
}

var fp_glUniform2f:@convention(c) (GL.Int, GL.Float, GL.Float) -> () = load_glUniform2f
func load_glUniform2f(location:GL.Int, v0:GL.Float, v1:GL.Float)
{
    fp_glUniform2f = unsafeBitCast(get_fp("glUniform2f", support: [ss352, ss365]), to: Swift.type(of: fp_glUniform2f))
    fp_glUniform2f(location, v0, v1)
}
public
func glUniform2f(location:GL.Int, v0:GL.Float, v1:GL.Float)
{
    fp_glUniform2f(location, v0, v1)
}
public
func glUniform2f(_ location:GL.Int, _ v0:GL.Float, _ v1:GL.Float)
{
    fp_glUniform2f(location, v0, v1)
}

var fp_glUniform2fARB:@convention(c) (GL.Int, GL.Float, GL.Float) -> () = load_glUniform2fARB
func load_glUniform2fARB(location:GL.Int, v0:GL.Float, v1:GL.Float)
{
    fp_glUniform2fARB = unsafeBitCast(get_fp("glUniform2fARB", support: [ss83]), to: Swift.type(of: fp_glUniform2fARB))
    fp_glUniform2fARB(location, v0, v1)
}
public
func glUniform2fARB(location:GL.Int, v0:GL.Float, v1:GL.Float)
{
    fp_glUniform2fARB(location, v0, v1)
}
public
func glUniform2fARB(_ location:GL.Int, _ v0:GL.Float, _ v1:GL.Float)
{
    fp_glUniform2fARB(location, v0, v1)
}

var fp_glUniform2fv:@convention(c) (GL.Int, GL.Size, UnsafePointer<GL.Float>?) -> () = load_glUniform2fv
func load_glUniform2fv(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Float>?)
{
    fp_glUniform2fv = unsafeBitCast(get_fp("glUniform2fv", support: [ss352, ss365]), to: Swift.type(of: fp_glUniform2fv))
    fp_glUniform2fv(location, count, value)
}
public
func glUniform2fv(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Float>?)
{
    fp_glUniform2fv(location, count, value)
}
public
func glUniform2fv(_ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Float>?)
{
    fp_glUniform2fv(location, count, value)
}

var fp_glUniform2fvARB:@convention(c) (GL.Int, GL.Size, UnsafePointer<GL.Float>?) -> () = load_glUniform2fvARB
func load_glUniform2fvARB(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Float>?)
{
    fp_glUniform2fvARB = unsafeBitCast(get_fp("glUniform2fvARB", support: [ss83]), to: Swift.type(of: fp_glUniform2fvARB))
    fp_glUniform2fvARB(location, count, value)
}
public
func glUniform2fvARB(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Float>?)
{
    fp_glUniform2fvARB(location, count, value)
}
public
func glUniform2fvARB(_ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Float>?)
{
    fp_glUniform2fvARB(location, count, value)
}

var fp_glUniform2i:@convention(c) (GL.Int, GL.Int, GL.Int) -> () = load_glUniform2i
func load_glUniform2i(location:GL.Int, v0:GL.Int, v1:GL.Int)
{
    fp_glUniform2i = unsafeBitCast(get_fp("glUniform2i", support: [ss352, ss365]), to: Swift.type(of: fp_glUniform2i))
    fp_glUniform2i(location, v0, v1)
}
public
func glUniform2i(location:GL.Int, v0:GL.Int, v1:GL.Int)
{
    fp_glUniform2i(location, v0, v1)
}
public
func glUniform2i(_ location:GL.Int, _ v0:GL.Int, _ v1:GL.Int)
{
    fp_glUniform2i(location, v0, v1)
}

var fp_glUniform2i64ARB:@convention(c) (GL.Int, GL.Int64, GL.Int64) -> () = load_glUniform2i64ARB
func load_glUniform2i64ARB(location:GL.Int, x:GL.Int64, y:GL.Int64)
{
    fp_glUniform2i64ARB = unsafeBitCast(get_fp("glUniform2i64ARB", support: [ss58]), to: Swift.type(of: fp_glUniform2i64ARB))
    fp_glUniform2i64ARB(location, x, y)
}
public
func glUniform2i64ARB(location:GL.Int, x:GL.Int64, y:GL.Int64)
{
    fp_glUniform2i64ARB(location, x, y)
}
public
func glUniform2i64ARB(_ location:GL.Int, _ x:GL.Int64, _ y:GL.Int64)
{
    fp_glUniform2i64ARB(location, x, y)
}

var fp_glUniform2i64NV:@convention(c) (GL.Int, GL.Int64EXT, GL.Int64EXT) -> () = load_glUniform2i64NV
func load_glUniform2i64NV(location:GL.Int, x:GL.Int64EXT, y:GL.Int64EXT)
{
    fp_glUniform2i64NV = unsafeBitCast(get_fp("glUniform2i64NV", support: [ss3, ss252]), to: Swift.type(of: fp_glUniform2i64NV))
    fp_glUniform2i64NV(location, x, y)
}
public
func glUniform2i64NV(location:GL.Int, x:GL.Int64EXT, y:GL.Int64EXT)
{
    fp_glUniform2i64NV(location, x, y)
}
public
func glUniform2i64NV(_ location:GL.Int, _ x:GL.Int64EXT, _ y:GL.Int64EXT)
{
    fp_glUniform2i64NV(location, x, y)
}

var fp_glUniform2i64vARB:@convention(c) (GL.Int, GL.Size, UnsafePointer<GL.Int64>?) -> () = load_glUniform2i64vARB
func load_glUniform2i64vARB(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int64>?)
{
    fp_glUniform2i64vARB = unsafeBitCast(get_fp("glUniform2i64vARB", support: [ss58]), to: Swift.type(of: fp_glUniform2i64vARB))
    fp_glUniform2i64vARB(location, count, value)
}
public
func glUniform2i64vARB(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int64>?)
{
    fp_glUniform2i64vARB(location, count, value)
}
public
func glUniform2i64vARB(_ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Int64>?)
{
    fp_glUniform2i64vARB(location, count, value)
}

var fp_glUniform2i64vNV:@convention(c) (GL.Int, GL.Size, UnsafePointer<GL.Int64EXT>?) -> () = load_glUniform2i64vNV
func load_glUniform2i64vNV(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int64EXT>?)
{
    fp_glUniform2i64vNV = unsafeBitCast(get_fp("glUniform2i64vNV", support: [ss3, ss252]), to: Swift.type(of: fp_glUniform2i64vNV))
    fp_glUniform2i64vNV(location, count, value)
}
public
func glUniform2i64vNV(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int64EXT>?)
{
    fp_glUniform2i64vNV(location, count, value)
}
public
func glUniform2i64vNV(_ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Int64EXT>?)
{
    fp_glUniform2i64vNV(location, count, value)
}

var fp_glUniform2iARB:@convention(c) (GL.Int, GL.Int, GL.Int) -> () = load_glUniform2iARB
func load_glUniform2iARB(location:GL.Int, v0:GL.Int, v1:GL.Int)
{
    fp_glUniform2iARB = unsafeBitCast(get_fp("glUniform2iARB", support: [ss83]), to: Swift.type(of: fp_glUniform2iARB))
    fp_glUniform2iARB(location, v0, v1)
}
public
func glUniform2iARB(location:GL.Int, v0:GL.Int, v1:GL.Int)
{
    fp_glUniform2iARB(location, v0, v1)
}
public
func glUniform2iARB(_ location:GL.Int, _ v0:GL.Int, _ v1:GL.Int)
{
    fp_glUniform2iARB(location, v0, v1)
}

var fp_glUniform2iv:@convention(c) (GL.Int, GL.Size, UnsafePointer<GL.Int>?) -> () = load_glUniform2iv
func load_glUniform2iv(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int>?)
{
    fp_glUniform2iv = unsafeBitCast(get_fp("glUniform2iv", support: [ss352, ss365]), to: Swift.type(of: fp_glUniform2iv))
    fp_glUniform2iv(location, count, value)
}
public
func glUniform2iv(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int>?)
{
    fp_glUniform2iv(location, count, value)
}
public
func glUniform2iv(_ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Int>?)
{
    fp_glUniform2iv(location, count, value)
}

var fp_glUniform2ivARB:@convention(c) (GL.Int, GL.Size, UnsafePointer<GL.Int>?) -> () = load_glUniform2ivARB
func load_glUniform2ivARB(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int>?)
{
    fp_glUniform2ivARB = unsafeBitCast(get_fp("glUniform2ivARB", support: [ss83]), to: Swift.type(of: fp_glUniform2ivARB))
    fp_glUniform2ivARB(location, count, value)
}
public
func glUniform2ivARB(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int>?)
{
    fp_glUniform2ivARB(location, count, value)
}
public
func glUniform2ivARB(_ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Int>?)
{
    fp_glUniform2ivARB(location, count, value)
}

var fp_glUniform2ui:@convention(c) (GL.Int, GL.UInt, GL.UInt) -> () = load_glUniform2ui
func load_glUniform2ui(location:GL.Int, v0:GL.UInt, v1:GL.UInt)
{
    fp_glUniform2ui = unsafeBitCast(get_fp("glUniform2ui", support: [ss354, ss366]), to: Swift.type(of: fp_glUniform2ui))
    fp_glUniform2ui(location, v0, v1)
}
public
func glUniform2ui(location:GL.Int, v0:GL.UInt, v1:GL.UInt)
{
    fp_glUniform2ui(location, v0, v1)
}
public
func glUniform2ui(_ location:GL.Int, _ v0:GL.UInt, _ v1:GL.UInt)
{
    fp_glUniform2ui(location, v0, v1)
}

var fp_glUniform2ui64ARB:@convention(c) (GL.Int, GL.UInt64, GL.UInt64) -> () = load_glUniform2ui64ARB
func load_glUniform2ui64ARB(location:GL.Int, x:GL.UInt64, y:GL.UInt64)
{
    fp_glUniform2ui64ARB = unsafeBitCast(get_fp("glUniform2ui64ARB", support: [ss58]), to: Swift.type(of: fp_glUniform2ui64ARB))
    fp_glUniform2ui64ARB(location, x, y)
}
public
func glUniform2ui64ARB(location:GL.Int, x:GL.UInt64, y:GL.UInt64)
{
    fp_glUniform2ui64ARB(location, x, y)
}
public
func glUniform2ui64ARB(_ location:GL.Int, _ x:GL.UInt64, _ y:GL.UInt64)
{
    fp_glUniform2ui64ARB(location, x, y)
}

var fp_glUniform2ui64NV:@convention(c) (GL.Int, GL.UInt64EXT, GL.UInt64EXT) -> () = load_glUniform2ui64NV
func load_glUniform2ui64NV(location:GL.Int, x:GL.UInt64EXT, y:GL.UInt64EXT)
{
    fp_glUniform2ui64NV = unsafeBitCast(get_fp("glUniform2ui64NV", support: [ss3, ss252]), to: Swift.type(of: fp_glUniform2ui64NV))
    fp_glUniform2ui64NV(location, x, y)
}
public
func glUniform2ui64NV(location:GL.Int, x:GL.UInt64EXT, y:GL.UInt64EXT)
{
    fp_glUniform2ui64NV(location, x, y)
}
public
func glUniform2ui64NV(_ location:GL.Int, _ x:GL.UInt64EXT, _ y:GL.UInt64EXT)
{
    fp_glUniform2ui64NV(location, x, y)
}

var fp_glUniform2ui64vARB:@convention(c) (GL.Int, GL.Size, UnsafePointer<GL.UInt64>?) -> () = load_glUniform2ui64vARB
func load_glUniform2ui64vARB(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt64>?)
{
    fp_glUniform2ui64vARB = unsafeBitCast(get_fp("glUniform2ui64vARB", support: [ss58]), to: Swift.type(of: fp_glUniform2ui64vARB))
    fp_glUniform2ui64vARB(location, count, value)
}
public
func glUniform2ui64vARB(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt64>?)
{
    fp_glUniform2ui64vARB(location, count, value)
}
public
func glUniform2ui64vARB(_ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.UInt64>?)
{
    fp_glUniform2ui64vARB(location, count, value)
}

var fp_glUniform2ui64vNV:@convention(c) (GL.Int, GL.Size, UnsafePointer<GL.UInt64EXT>?) -> () = load_glUniform2ui64vNV
func load_glUniform2ui64vNV(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt64EXT>?)
{
    fp_glUniform2ui64vNV = unsafeBitCast(get_fp("glUniform2ui64vNV", support: [ss3, ss252]), to: Swift.type(of: fp_glUniform2ui64vNV))
    fp_glUniform2ui64vNV(location, count, value)
}
public
func glUniform2ui64vNV(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt64EXT>?)
{
    fp_glUniform2ui64vNV(location, count, value)
}
public
func glUniform2ui64vNV(_ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.UInt64EXT>?)
{
    fp_glUniform2ui64vNV(location, count, value)
}

var fp_glUniform2uiEXT:@convention(c) (GL.Int, GL.UInt, GL.UInt) -> () = load_glUniform2uiEXT
func load_glUniform2uiEXT(location:GL.Int, v0:GL.UInt, v1:GL.UInt)
{
    fp_glUniform2uiEXT = unsafeBitCast(get_fp("glUniform2uiEXT", support: [ss159]), to: Swift.type(of: fp_glUniform2uiEXT))
    fp_glUniform2uiEXT(location, v0, v1)
}
public
func glUniform2uiEXT(location:GL.Int, v0:GL.UInt, v1:GL.UInt)
{
    fp_glUniform2uiEXT(location, v0, v1)
}
public
func glUniform2uiEXT(_ location:GL.Int, _ v0:GL.UInt, _ v1:GL.UInt)
{
    fp_glUniform2uiEXT(location, v0, v1)
}

var fp_glUniform2uiv:@convention(c) (GL.Int, GL.Size, UnsafePointer<GL.UInt>?) -> () = load_glUniform2uiv
func load_glUniform2uiv(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt>?)
{
    fp_glUniform2uiv = unsafeBitCast(get_fp("glUniform2uiv", support: [ss354, ss366]), to: Swift.type(of: fp_glUniform2uiv))
    fp_glUniform2uiv(location, count, value)
}
public
func glUniform2uiv(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt>?)
{
    fp_glUniform2uiv(location, count, value)
}
public
func glUniform2uiv(_ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.UInt>?)
{
    fp_glUniform2uiv(location, count, value)
}

var fp_glUniform2uivEXT:@convention(c) (GL.Int, GL.Size, UnsafePointer<GL.UInt>?) -> () = load_glUniform2uivEXT
func load_glUniform2uivEXT(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt>?)
{
    fp_glUniform2uivEXT = unsafeBitCast(get_fp("glUniform2uivEXT", support: [ss159]), to: Swift.type(of: fp_glUniform2uivEXT))
    fp_glUniform2uivEXT(location, count, value)
}
public
func glUniform2uivEXT(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt>?)
{
    fp_glUniform2uivEXT(location, count, value)
}
public
func glUniform2uivEXT(_ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.UInt>?)
{
    fp_glUniform2uivEXT(location, count, value)
}

var fp_glUniform3d:@convention(c) (GL.Int, GL.Double, GL.Double, GL.Double) -> () = load_glUniform3d
func load_glUniform3d(location:GL.Int, x:GL.Double, y:GL.Double, z:GL.Double)
{
    fp_glUniform3d = unsafeBitCast(get_fp("glUniform3d", support: [ss358, ss57]), to: Swift.type(of: fp_glUniform3d))
    fp_glUniform3d(location, x, y, z)
}
public
func glUniform3d(location:GL.Int, x:GL.Double, y:GL.Double, z:GL.Double)
{
    fp_glUniform3d(location, x, y, z)
}
public
func glUniform3d(_ location:GL.Int, _ x:GL.Double, _ y:GL.Double, _ z:GL.Double)
{
    fp_glUniform3d(location, x, y, z)
}

var fp_glUniform3dv:@convention(c) (GL.Int, GL.Size, UnsafePointer<GL.Double>?) -> () = load_glUniform3dv
func load_glUniform3dv(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Double>?)
{
    fp_glUniform3dv = unsafeBitCast(get_fp("glUniform3dv", support: [ss358, ss57]), to: Swift.type(of: fp_glUniform3dv))
    fp_glUniform3dv(location, count, value)
}
public
func glUniform3dv(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Double>?)
{
    fp_glUniform3dv(location, count, value)
}
public
func glUniform3dv(_ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Double>?)
{
    fp_glUniform3dv(location, count, value)
}

var fp_glUniform3f:@convention(c) (GL.Int, GL.Float, GL.Float, GL.Float) -> () = load_glUniform3f
func load_glUniform3f(location:GL.Int, v0:GL.Float, v1:GL.Float, v2:GL.Float)
{
    fp_glUniform3f = unsafeBitCast(get_fp("glUniform3f", support: [ss352, ss365]), to: Swift.type(of: fp_glUniform3f))
    fp_glUniform3f(location, v0, v1, v2)
}
public
func glUniform3f(location:GL.Int, v0:GL.Float, v1:GL.Float, v2:GL.Float)
{
    fp_glUniform3f(location, v0, v1, v2)
}
public
func glUniform3f(_ location:GL.Int, _ v0:GL.Float, _ v1:GL.Float, _ v2:GL.Float)
{
    fp_glUniform3f(location, v0, v1, v2)
}

var fp_glUniform3fARB:@convention(c) (GL.Int, GL.Float, GL.Float, GL.Float) -> () = load_glUniform3fARB
func load_glUniform3fARB(location:GL.Int, v0:GL.Float, v1:GL.Float, v2:GL.Float)
{
    fp_glUniform3fARB = unsafeBitCast(get_fp("glUniform3fARB", support: [ss83]), to: Swift.type(of: fp_glUniform3fARB))
    fp_glUniform3fARB(location, v0, v1, v2)
}
public
func glUniform3fARB(location:GL.Int, v0:GL.Float, v1:GL.Float, v2:GL.Float)
{
    fp_glUniform3fARB(location, v0, v1, v2)
}
public
func glUniform3fARB(_ location:GL.Int, _ v0:GL.Float, _ v1:GL.Float, _ v2:GL.Float)
{
    fp_glUniform3fARB(location, v0, v1, v2)
}

var fp_glUniform3fv:@convention(c) (GL.Int, GL.Size, UnsafePointer<GL.Float>?) -> () = load_glUniform3fv
func load_glUniform3fv(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Float>?)
{
    fp_glUniform3fv = unsafeBitCast(get_fp("glUniform3fv", support: [ss352, ss365]), to: Swift.type(of: fp_glUniform3fv))
    fp_glUniform3fv(location, count, value)
}
public
func glUniform3fv(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Float>?)
{
    fp_glUniform3fv(location, count, value)
}
public
func glUniform3fv(_ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Float>?)
{
    fp_glUniform3fv(location, count, value)
}

var fp_glUniform3fvARB:@convention(c) (GL.Int, GL.Size, UnsafePointer<GL.Float>?) -> () = load_glUniform3fvARB
func load_glUniform3fvARB(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Float>?)
{
    fp_glUniform3fvARB = unsafeBitCast(get_fp("glUniform3fvARB", support: [ss83]), to: Swift.type(of: fp_glUniform3fvARB))
    fp_glUniform3fvARB(location, count, value)
}
public
func glUniform3fvARB(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Float>?)
{
    fp_glUniform3fvARB(location, count, value)
}
public
func glUniform3fvARB(_ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Float>?)
{
    fp_glUniform3fvARB(location, count, value)
}

var fp_glUniform3i:@convention(c) (GL.Int, GL.Int, GL.Int, GL.Int) -> () = load_glUniform3i
func load_glUniform3i(location:GL.Int, v0:GL.Int, v1:GL.Int, v2:GL.Int)
{
    fp_glUniform3i = unsafeBitCast(get_fp("glUniform3i", support: [ss352, ss365]), to: Swift.type(of: fp_glUniform3i))
    fp_glUniform3i(location, v0, v1, v2)
}
public
func glUniform3i(location:GL.Int, v0:GL.Int, v1:GL.Int, v2:GL.Int)
{
    fp_glUniform3i(location, v0, v1, v2)
}
public
func glUniform3i(_ location:GL.Int, _ v0:GL.Int, _ v1:GL.Int, _ v2:GL.Int)
{
    fp_glUniform3i(location, v0, v1, v2)
}

var fp_glUniform3i64ARB:@convention(c) (GL.Int, GL.Int64, GL.Int64, GL.Int64) -> () = load_glUniform3i64ARB
func load_glUniform3i64ARB(location:GL.Int, x:GL.Int64, y:GL.Int64, z:GL.Int64)
{
    fp_glUniform3i64ARB = unsafeBitCast(get_fp("glUniform3i64ARB", support: [ss58]), to: Swift.type(of: fp_glUniform3i64ARB))
    fp_glUniform3i64ARB(location, x, y, z)
}
public
func glUniform3i64ARB(location:GL.Int, x:GL.Int64, y:GL.Int64, z:GL.Int64)
{
    fp_glUniform3i64ARB(location, x, y, z)
}
public
func glUniform3i64ARB(_ location:GL.Int, _ x:GL.Int64, _ y:GL.Int64, _ z:GL.Int64)
{
    fp_glUniform3i64ARB(location, x, y, z)
}

var fp_glUniform3i64NV:@convention(c) (GL.Int, GL.Int64EXT, GL.Int64EXT, GL.Int64EXT) -> () = load_glUniform3i64NV
func load_glUniform3i64NV(location:GL.Int, x:GL.Int64EXT, y:GL.Int64EXT, z:GL.Int64EXT)
{
    fp_glUniform3i64NV = unsafeBitCast(get_fp("glUniform3i64NV", support: [ss3, ss252]), to: Swift.type(of: fp_glUniform3i64NV))
    fp_glUniform3i64NV(location, x, y, z)
}
public
func glUniform3i64NV(location:GL.Int, x:GL.Int64EXT, y:GL.Int64EXT, z:GL.Int64EXT)
{
    fp_glUniform3i64NV(location, x, y, z)
}
public
func glUniform3i64NV(_ location:GL.Int, _ x:GL.Int64EXT, _ y:GL.Int64EXT, _ z:GL.Int64EXT)
{
    fp_glUniform3i64NV(location, x, y, z)
}

var fp_glUniform3i64vARB:@convention(c) (GL.Int, GL.Size, UnsafePointer<GL.Int64>?) -> () = load_glUniform3i64vARB
func load_glUniform3i64vARB(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int64>?)
{
    fp_glUniform3i64vARB = unsafeBitCast(get_fp("glUniform3i64vARB", support: [ss58]), to: Swift.type(of: fp_glUniform3i64vARB))
    fp_glUniform3i64vARB(location, count, value)
}
public
func glUniform3i64vARB(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int64>?)
{
    fp_glUniform3i64vARB(location, count, value)
}
public
func glUniform3i64vARB(_ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Int64>?)
{
    fp_glUniform3i64vARB(location, count, value)
}

var fp_glUniform3i64vNV:@convention(c) (GL.Int, GL.Size, UnsafePointer<GL.Int64EXT>?) -> () = load_glUniform3i64vNV
func load_glUniform3i64vNV(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int64EXT>?)
{
    fp_glUniform3i64vNV = unsafeBitCast(get_fp("glUniform3i64vNV", support: [ss3, ss252]), to: Swift.type(of: fp_glUniform3i64vNV))
    fp_glUniform3i64vNV(location, count, value)
}
public
func glUniform3i64vNV(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int64EXT>?)
{
    fp_glUniform3i64vNV(location, count, value)
}
public
func glUniform3i64vNV(_ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Int64EXT>?)
{
    fp_glUniform3i64vNV(location, count, value)
}

var fp_glUniform3iARB:@convention(c) (GL.Int, GL.Int, GL.Int, GL.Int) -> () = load_glUniform3iARB
func load_glUniform3iARB(location:GL.Int, v0:GL.Int, v1:GL.Int, v2:GL.Int)
{
    fp_glUniform3iARB = unsafeBitCast(get_fp("glUniform3iARB", support: [ss83]), to: Swift.type(of: fp_glUniform3iARB))
    fp_glUniform3iARB(location, v0, v1, v2)
}
public
func glUniform3iARB(location:GL.Int, v0:GL.Int, v1:GL.Int, v2:GL.Int)
{
    fp_glUniform3iARB(location, v0, v1, v2)
}
public
func glUniform3iARB(_ location:GL.Int, _ v0:GL.Int, _ v1:GL.Int, _ v2:GL.Int)
{
    fp_glUniform3iARB(location, v0, v1, v2)
}

var fp_glUniform3iv:@convention(c) (GL.Int, GL.Size, UnsafePointer<GL.Int>?) -> () = load_glUniform3iv
func load_glUniform3iv(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int>?)
{
    fp_glUniform3iv = unsafeBitCast(get_fp("glUniform3iv", support: [ss352, ss365]), to: Swift.type(of: fp_glUniform3iv))
    fp_glUniform3iv(location, count, value)
}
public
func glUniform3iv(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int>?)
{
    fp_glUniform3iv(location, count, value)
}
public
func glUniform3iv(_ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Int>?)
{
    fp_glUniform3iv(location, count, value)
}

var fp_glUniform3ivARB:@convention(c) (GL.Int, GL.Size, UnsafePointer<GL.Int>?) -> () = load_glUniform3ivARB
func load_glUniform3ivARB(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int>?)
{
    fp_glUniform3ivARB = unsafeBitCast(get_fp("glUniform3ivARB", support: [ss83]), to: Swift.type(of: fp_glUniform3ivARB))
    fp_glUniform3ivARB(location, count, value)
}
public
func glUniform3ivARB(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int>?)
{
    fp_glUniform3ivARB(location, count, value)
}
public
func glUniform3ivARB(_ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Int>?)
{
    fp_glUniform3ivARB(location, count, value)
}

var fp_glUniform3ui:@convention(c) (GL.Int, GL.UInt, GL.UInt, GL.UInt) -> () = load_glUniform3ui
func load_glUniform3ui(location:GL.Int, v0:GL.UInt, v1:GL.UInt, v2:GL.UInt)
{
    fp_glUniform3ui = unsafeBitCast(get_fp("glUniform3ui", support: [ss354, ss366]), to: Swift.type(of: fp_glUniform3ui))
    fp_glUniform3ui(location, v0, v1, v2)
}
public
func glUniform3ui(location:GL.Int, v0:GL.UInt, v1:GL.UInt, v2:GL.UInt)
{
    fp_glUniform3ui(location, v0, v1, v2)
}
public
func glUniform3ui(_ location:GL.Int, _ v0:GL.UInt, _ v1:GL.UInt, _ v2:GL.UInt)
{
    fp_glUniform3ui(location, v0, v1, v2)
}

var fp_glUniform3ui64ARB:@convention(c) (GL.Int, GL.UInt64, GL.UInt64, GL.UInt64) -> () = load_glUniform3ui64ARB
func load_glUniform3ui64ARB(location:GL.Int, x:GL.UInt64, y:GL.UInt64, z:GL.UInt64)
{
    fp_glUniform3ui64ARB = unsafeBitCast(get_fp("glUniform3ui64ARB", support: [ss58]), to: Swift.type(of: fp_glUniform3ui64ARB))
    fp_glUniform3ui64ARB(location, x, y, z)
}
public
func glUniform3ui64ARB(location:GL.Int, x:GL.UInt64, y:GL.UInt64, z:GL.UInt64)
{
    fp_glUniform3ui64ARB(location, x, y, z)
}
public
func glUniform3ui64ARB(_ location:GL.Int, _ x:GL.UInt64, _ y:GL.UInt64, _ z:GL.UInt64)
{
    fp_glUniform3ui64ARB(location, x, y, z)
}

var fp_glUniform3ui64NV:@convention(c) (GL.Int, GL.UInt64EXT, GL.UInt64EXT, GL.UInt64EXT) -> () = load_glUniform3ui64NV
func load_glUniform3ui64NV(location:GL.Int, x:GL.UInt64EXT, y:GL.UInt64EXT, z:GL.UInt64EXT)
{
    fp_glUniform3ui64NV = unsafeBitCast(get_fp("glUniform3ui64NV", support: [ss3, ss252]), to: Swift.type(of: fp_glUniform3ui64NV))
    fp_glUniform3ui64NV(location, x, y, z)
}
public
func glUniform3ui64NV(location:GL.Int, x:GL.UInt64EXT, y:GL.UInt64EXT, z:GL.UInt64EXT)
{
    fp_glUniform3ui64NV(location, x, y, z)
}
public
func glUniform3ui64NV(_ location:GL.Int, _ x:GL.UInt64EXT, _ y:GL.UInt64EXT, _ z:GL.UInt64EXT)
{
    fp_glUniform3ui64NV(location, x, y, z)
}

var fp_glUniform3ui64vARB:@convention(c) (GL.Int, GL.Size, UnsafePointer<GL.UInt64>?) -> () = load_glUniform3ui64vARB
func load_glUniform3ui64vARB(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt64>?)
{
    fp_glUniform3ui64vARB = unsafeBitCast(get_fp("glUniform3ui64vARB", support: [ss58]), to: Swift.type(of: fp_glUniform3ui64vARB))
    fp_glUniform3ui64vARB(location, count, value)
}
public
func glUniform3ui64vARB(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt64>?)
{
    fp_glUniform3ui64vARB(location, count, value)
}
public
func glUniform3ui64vARB(_ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.UInt64>?)
{
    fp_glUniform3ui64vARB(location, count, value)
}

var fp_glUniform3ui64vNV:@convention(c) (GL.Int, GL.Size, UnsafePointer<GL.UInt64EXT>?) -> () = load_glUniform3ui64vNV
func load_glUniform3ui64vNV(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt64EXT>?)
{
    fp_glUniform3ui64vNV = unsafeBitCast(get_fp("glUniform3ui64vNV", support: [ss3, ss252]), to: Swift.type(of: fp_glUniform3ui64vNV))
    fp_glUniform3ui64vNV(location, count, value)
}
public
func glUniform3ui64vNV(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt64EXT>?)
{
    fp_glUniform3ui64vNV(location, count, value)
}
public
func glUniform3ui64vNV(_ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.UInt64EXT>?)
{
    fp_glUniform3ui64vNV(location, count, value)
}

var fp_glUniform3uiEXT:@convention(c) (GL.Int, GL.UInt, GL.UInt, GL.UInt) -> () = load_glUniform3uiEXT
func load_glUniform3uiEXT(location:GL.Int, v0:GL.UInt, v1:GL.UInt, v2:GL.UInt)
{
    fp_glUniform3uiEXT = unsafeBitCast(get_fp("glUniform3uiEXT", support: [ss159]), to: Swift.type(of: fp_glUniform3uiEXT))
    fp_glUniform3uiEXT(location, v0, v1, v2)
}
public
func glUniform3uiEXT(location:GL.Int, v0:GL.UInt, v1:GL.UInt, v2:GL.UInt)
{
    fp_glUniform3uiEXT(location, v0, v1, v2)
}
public
func glUniform3uiEXT(_ location:GL.Int, _ v0:GL.UInt, _ v1:GL.UInt, _ v2:GL.UInt)
{
    fp_glUniform3uiEXT(location, v0, v1, v2)
}

var fp_glUniform3uiv:@convention(c) (GL.Int, GL.Size, UnsafePointer<GL.UInt>?) -> () = load_glUniform3uiv
func load_glUniform3uiv(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt>?)
{
    fp_glUniform3uiv = unsafeBitCast(get_fp("glUniform3uiv", support: [ss354, ss366]), to: Swift.type(of: fp_glUniform3uiv))
    fp_glUniform3uiv(location, count, value)
}
public
func glUniform3uiv(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt>?)
{
    fp_glUniform3uiv(location, count, value)
}
public
func glUniform3uiv(_ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.UInt>?)
{
    fp_glUniform3uiv(location, count, value)
}

var fp_glUniform3uivEXT:@convention(c) (GL.Int, GL.Size, UnsafePointer<GL.UInt>?) -> () = load_glUniform3uivEXT
func load_glUniform3uivEXT(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt>?)
{
    fp_glUniform3uivEXT = unsafeBitCast(get_fp("glUniform3uivEXT", support: [ss159]), to: Swift.type(of: fp_glUniform3uivEXT))
    fp_glUniform3uivEXT(location, count, value)
}
public
func glUniform3uivEXT(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt>?)
{
    fp_glUniform3uivEXT(location, count, value)
}
public
func glUniform3uivEXT(_ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.UInt>?)
{
    fp_glUniform3uivEXT(location, count, value)
}

var fp_glUniform4d:@convention(c) (GL.Int, GL.Double, GL.Double, GL.Double, GL.Double) -> () = load_glUniform4d
func load_glUniform4d(location:GL.Int, x:GL.Double, y:GL.Double, z:GL.Double, w:GL.Double)
{
    fp_glUniform4d = unsafeBitCast(get_fp("glUniform4d", support: [ss358, ss57]), to: Swift.type(of: fp_glUniform4d))
    fp_glUniform4d(location, x, y, z, w)
}
public
func glUniform4d(location:GL.Int, x:GL.Double, y:GL.Double, z:GL.Double, w:GL.Double)
{
    fp_glUniform4d(location, x, y, z, w)
}
public
func glUniform4d(_ location:GL.Int, _ x:GL.Double, _ y:GL.Double, _ z:GL.Double, _ w:GL.Double)
{
    fp_glUniform4d(location, x, y, z, w)
}

var fp_glUniform4dv:@convention(c) (GL.Int, GL.Size, UnsafePointer<GL.Double>?) -> () = load_glUniform4dv
func load_glUniform4dv(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Double>?)
{
    fp_glUniform4dv = unsafeBitCast(get_fp("glUniform4dv", support: [ss358, ss57]), to: Swift.type(of: fp_glUniform4dv))
    fp_glUniform4dv(location, count, value)
}
public
func glUniform4dv(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Double>?)
{
    fp_glUniform4dv(location, count, value)
}
public
func glUniform4dv(_ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Double>?)
{
    fp_glUniform4dv(location, count, value)
}

var fp_glUniform4f:@convention(c) (GL.Int, GL.Float, GL.Float, GL.Float, GL.Float) -> () = load_glUniform4f
func load_glUniform4f(location:GL.Int, v0:GL.Float, v1:GL.Float, v2:GL.Float, v3:GL.Float)
{
    fp_glUniform4f = unsafeBitCast(get_fp("glUniform4f", support: [ss352, ss365]), to: Swift.type(of: fp_glUniform4f))
    fp_glUniform4f(location, v0, v1, v2, v3)
}
public
func glUniform4f(location:GL.Int, v0:GL.Float, v1:GL.Float, v2:GL.Float, v3:GL.Float)
{
    fp_glUniform4f(location, v0, v1, v2, v3)
}
public
func glUniform4f(_ location:GL.Int, _ v0:GL.Float, _ v1:GL.Float, _ v2:GL.Float, _ v3:GL.Float)
{
    fp_glUniform4f(location, v0, v1, v2, v3)
}

var fp_glUniform4fARB:@convention(c) (GL.Int, GL.Float, GL.Float, GL.Float, GL.Float) -> () = load_glUniform4fARB
func load_glUniform4fARB(location:GL.Int, v0:GL.Float, v1:GL.Float, v2:GL.Float, v3:GL.Float)
{
    fp_glUniform4fARB = unsafeBitCast(get_fp("glUniform4fARB", support: [ss83]), to: Swift.type(of: fp_glUniform4fARB))
    fp_glUniform4fARB(location, v0, v1, v2, v3)
}
public
func glUniform4fARB(location:GL.Int, v0:GL.Float, v1:GL.Float, v2:GL.Float, v3:GL.Float)
{
    fp_glUniform4fARB(location, v0, v1, v2, v3)
}
public
func glUniform4fARB(_ location:GL.Int, _ v0:GL.Float, _ v1:GL.Float, _ v2:GL.Float, _ v3:GL.Float)
{
    fp_glUniform4fARB(location, v0, v1, v2, v3)
}

var fp_glUniform4fv:@convention(c) (GL.Int, GL.Size, UnsafePointer<GL.Float>?) -> () = load_glUniform4fv
func load_glUniform4fv(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Float>?)
{
    fp_glUniform4fv = unsafeBitCast(get_fp("glUniform4fv", support: [ss352, ss365]), to: Swift.type(of: fp_glUniform4fv))
    fp_glUniform4fv(location, count, value)
}
public
func glUniform4fv(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Float>?)
{
    fp_glUniform4fv(location, count, value)
}
public
func glUniform4fv(_ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Float>?)
{
    fp_glUniform4fv(location, count, value)
}

var fp_glUniform4fvARB:@convention(c) (GL.Int, GL.Size, UnsafePointer<GL.Float>?) -> () = load_glUniform4fvARB
func load_glUniform4fvARB(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Float>?)
{
    fp_glUniform4fvARB = unsafeBitCast(get_fp("glUniform4fvARB", support: [ss83]), to: Swift.type(of: fp_glUniform4fvARB))
    fp_glUniform4fvARB(location, count, value)
}
public
func glUniform4fvARB(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Float>?)
{
    fp_glUniform4fvARB(location, count, value)
}
public
func glUniform4fvARB(_ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Float>?)
{
    fp_glUniform4fvARB(location, count, value)
}

var fp_glUniform4i:@convention(c) (GL.Int, GL.Int, GL.Int, GL.Int, GL.Int) -> () = load_glUniform4i
func load_glUniform4i(location:GL.Int, v0:GL.Int, v1:GL.Int, v2:GL.Int, v3:GL.Int)
{
    fp_glUniform4i = unsafeBitCast(get_fp("glUniform4i", support: [ss352, ss365]), to: Swift.type(of: fp_glUniform4i))
    fp_glUniform4i(location, v0, v1, v2, v3)
}
public
func glUniform4i(location:GL.Int, v0:GL.Int, v1:GL.Int, v2:GL.Int, v3:GL.Int)
{
    fp_glUniform4i(location, v0, v1, v2, v3)
}
public
func glUniform4i(_ location:GL.Int, _ v0:GL.Int, _ v1:GL.Int, _ v2:GL.Int, _ v3:GL.Int)
{
    fp_glUniform4i(location, v0, v1, v2, v3)
}

var fp_glUniform4i64ARB:@convention(c) (GL.Int, GL.Int64, GL.Int64, GL.Int64, GL.Int64) -> () = load_glUniform4i64ARB
func load_glUniform4i64ARB(location:GL.Int, x:GL.Int64, y:GL.Int64, z:GL.Int64, w:GL.Int64)
{
    fp_glUniform4i64ARB = unsafeBitCast(get_fp("glUniform4i64ARB", support: [ss58]), to: Swift.type(of: fp_glUniform4i64ARB))
    fp_glUniform4i64ARB(location, x, y, z, w)
}
public
func glUniform4i64ARB(location:GL.Int, x:GL.Int64, y:GL.Int64, z:GL.Int64, w:GL.Int64)
{
    fp_glUniform4i64ARB(location, x, y, z, w)
}
public
func glUniform4i64ARB(_ location:GL.Int, _ x:GL.Int64, _ y:GL.Int64, _ z:GL.Int64, _ w:GL.Int64)
{
    fp_glUniform4i64ARB(location, x, y, z, w)
}

var fp_glUniform4i64NV:@convention(c) (GL.Int, GL.Int64EXT, GL.Int64EXT, GL.Int64EXT, GL.Int64EXT) -> () = load_glUniform4i64NV
func load_glUniform4i64NV(location:GL.Int, x:GL.Int64EXT, y:GL.Int64EXT, z:GL.Int64EXT, w:GL.Int64EXT)
{
    fp_glUniform4i64NV = unsafeBitCast(get_fp("glUniform4i64NV", support: [ss3, ss252]), to: Swift.type(of: fp_glUniform4i64NV))
    fp_glUniform4i64NV(location, x, y, z, w)
}
public
func glUniform4i64NV(location:GL.Int, x:GL.Int64EXT, y:GL.Int64EXT, z:GL.Int64EXT, w:GL.Int64EXT)
{
    fp_glUniform4i64NV(location, x, y, z, w)
}
public
func glUniform4i64NV(_ location:GL.Int, _ x:GL.Int64EXT, _ y:GL.Int64EXT, _ z:GL.Int64EXT, _ w:GL.Int64EXT)
{
    fp_glUniform4i64NV(location, x, y, z, w)
}

var fp_glUniform4i64vARB:@convention(c) (GL.Int, GL.Size, UnsafePointer<GL.Int64>?) -> () = load_glUniform4i64vARB
func load_glUniform4i64vARB(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int64>?)
{
    fp_glUniform4i64vARB = unsafeBitCast(get_fp("glUniform4i64vARB", support: [ss58]), to: Swift.type(of: fp_glUniform4i64vARB))
    fp_glUniform4i64vARB(location, count, value)
}
public
func glUniform4i64vARB(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int64>?)
{
    fp_glUniform4i64vARB(location, count, value)
}
public
func glUniform4i64vARB(_ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Int64>?)
{
    fp_glUniform4i64vARB(location, count, value)
}

var fp_glUniform4i64vNV:@convention(c) (GL.Int, GL.Size, UnsafePointer<GL.Int64EXT>?) -> () = load_glUniform4i64vNV
func load_glUniform4i64vNV(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int64EXT>?)
{
    fp_glUniform4i64vNV = unsafeBitCast(get_fp("glUniform4i64vNV", support: [ss3, ss252]), to: Swift.type(of: fp_glUniform4i64vNV))
    fp_glUniform4i64vNV(location, count, value)
}
public
func glUniform4i64vNV(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int64EXT>?)
{
    fp_glUniform4i64vNV(location, count, value)
}
public
func glUniform4i64vNV(_ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Int64EXT>?)
{
    fp_glUniform4i64vNV(location, count, value)
}

var fp_glUniform4iARB:@convention(c) (GL.Int, GL.Int, GL.Int, GL.Int, GL.Int) -> () = load_glUniform4iARB
func load_glUniform4iARB(location:GL.Int, v0:GL.Int, v1:GL.Int, v2:GL.Int, v3:GL.Int)
{
    fp_glUniform4iARB = unsafeBitCast(get_fp("glUniform4iARB", support: [ss83]), to: Swift.type(of: fp_glUniform4iARB))
    fp_glUniform4iARB(location, v0, v1, v2, v3)
}
public
func glUniform4iARB(location:GL.Int, v0:GL.Int, v1:GL.Int, v2:GL.Int, v3:GL.Int)
{
    fp_glUniform4iARB(location, v0, v1, v2, v3)
}
public
func glUniform4iARB(_ location:GL.Int, _ v0:GL.Int, _ v1:GL.Int, _ v2:GL.Int, _ v3:GL.Int)
{
    fp_glUniform4iARB(location, v0, v1, v2, v3)
}

var fp_glUniform4iv:@convention(c) (GL.Int, GL.Size, UnsafePointer<GL.Int>?) -> () = load_glUniform4iv
func load_glUniform4iv(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int>?)
{
    fp_glUniform4iv = unsafeBitCast(get_fp("glUniform4iv", support: [ss352, ss365]), to: Swift.type(of: fp_glUniform4iv))
    fp_glUniform4iv(location, count, value)
}
public
func glUniform4iv(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int>?)
{
    fp_glUniform4iv(location, count, value)
}
public
func glUniform4iv(_ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Int>?)
{
    fp_glUniform4iv(location, count, value)
}

var fp_glUniform4ivARB:@convention(c) (GL.Int, GL.Size, UnsafePointer<GL.Int>?) -> () = load_glUniform4ivARB
func load_glUniform4ivARB(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int>?)
{
    fp_glUniform4ivARB = unsafeBitCast(get_fp("glUniform4ivARB", support: [ss83]), to: Swift.type(of: fp_glUniform4ivARB))
    fp_glUniform4ivARB(location, count, value)
}
public
func glUniform4ivARB(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.Int>?)
{
    fp_glUniform4ivARB(location, count, value)
}
public
func glUniform4ivARB(_ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.Int>?)
{
    fp_glUniform4ivARB(location, count, value)
}

var fp_glUniform4ui:@convention(c) (GL.Int, GL.UInt, GL.UInt, GL.UInt, GL.UInt) -> () = load_glUniform4ui
func load_glUniform4ui(location:GL.Int, v0:GL.UInt, v1:GL.UInt, v2:GL.UInt, v3:GL.UInt)
{
    fp_glUniform4ui = unsafeBitCast(get_fp("glUniform4ui", support: [ss354, ss366]), to: Swift.type(of: fp_glUniform4ui))
    fp_glUniform4ui(location, v0, v1, v2, v3)
}
public
func glUniform4ui(location:GL.Int, v0:GL.UInt, v1:GL.UInt, v2:GL.UInt, v3:GL.UInt)
{
    fp_glUniform4ui(location, v0, v1, v2, v3)
}
public
func glUniform4ui(_ location:GL.Int, _ v0:GL.UInt, _ v1:GL.UInt, _ v2:GL.UInt, _ v3:GL.UInt)
{
    fp_glUniform4ui(location, v0, v1, v2, v3)
}

var fp_glUniform4ui64ARB:@convention(c) (GL.Int, GL.UInt64, GL.UInt64, GL.UInt64, GL.UInt64) -> () = load_glUniform4ui64ARB
func load_glUniform4ui64ARB(location:GL.Int, x:GL.UInt64, y:GL.UInt64, z:GL.UInt64, w:GL.UInt64)
{
    fp_glUniform4ui64ARB = unsafeBitCast(get_fp("glUniform4ui64ARB", support: [ss58]), to: Swift.type(of: fp_glUniform4ui64ARB))
    fp_glUniform4ui64ARB(location, x, y, z, w)
}
public
func glUniform4ui64ARB(location:GL.Int, x:GL.UInt64, y:GL.UInt64, z:GL.UInt64, w:GL.UInt64)
{
    fp_glUniform4ui64ARB(location, x, y, z, w)
}
public
func glUniform4ui64ARB(_ location:GL.Int, _ x:GL.UInt64, _ y:GL.UInt64, _ z:GL.UInt64, _ w:GL.UInt64)
{
    fp_glUniform4ui64ARB(location, x, y, z, w)
}

var fp_glUniform4ui64NV:@convention(c) (GL.Int, GL.UInt64EXT, GL.UInt64EXT, GL.UInt64EXT, GL.UInt64EXT) -> () = load_glUniform4ui64NV
func load_glUniform4ui64NV(location:GL.Int, x:GL.UInt64EXT, y:GL.UInt64EXT, z:GL.UInt64EXT, w:GL.UInt64EXT)
{
    fp_glUniform4ui64NV = unsafeBitCast(get_fp("glUniform4ui64NV", support: [ss3, ss252]), to: Swift.type(of: fp_glUniform4ui64NV))
    fp_glUniform4ui64NV(location, x, y, z, w)
}
public
func glUniform4ui64NV(location:GL.Int, x:GL.UInt64EXT, y:GL.UInt64EXT, z:GL.UInt64EXT, w:GL.UInt64EXT)
{
    fp_glUniform4ui64NV(location, x, y, z, w)
}
public
func glUniform4ui64NV(_ location:GL.Int, _ x:GL.UInt64EXT, _ y:GL.UInt64EXT, _ z:GL.UInt64EXT, _ w:GL.UInt64EXT)
{
    fp_glUniform4ui64NV(location, x, y, z, w)
}

var fp_glUniform4ui64vARB:@convention(c) (GL.Int, GL.Size, UnsafePointer<GL.UInt64>?) -> () = load_glUniform4ui64vARB
func load_glUniform4ui64vARB(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt64>?)
{
    fp_glUniform4ui64vARB = unsafeBitCast(get_fp("glUniform4ui64vARB", support: [ss58]), to: Swift.type(of: fp_glUniform4ui64vARB))
    fp_glUniform4ui64vARB(location, count, value)
}
public
func glUniform4ui64vARB(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt64>?)
{
    fp_glUniform4ui64vARB(location, count, value)
}
public
func glUniform4ui64vARB(_ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.UInt64>?)
{
    fp_glUniform4ui64vARB(location, count, value)
}

var fp_glUniform4ui64vNV:@convention(c) (GL.Int, GL.Size, UnsafePointer<GL.UInt64EXT>?) -> () = load_glUniform4ui64vNV
func load_glUniform4ui64vNV(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt64EXT>?)
{
    fp_glUniform4ui64vNV = unsafeBitCast(get_fp("glUniform4ui64vNV", support: [ss3, ss252]), to: Swift.type(of: fp_glUniform4ui64vNV))
    fp_glUniform4ui64vNV(location, count, value)
}
public
func glUniform4ui64vNV(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt64EXT>?)
{
    fp_glUniform4ui64vNV(location, count, value)
}
public
func glUniform4ui64vNV(_ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.UInt64EXT>?)
{
    fp_glUniform4ui64vNV(location, count, value)
}

var fp_glUniform4uiEXT:@convention(c) (GL.Int, GL.UInt, GL.UInt, GL.UInt, GL.UInt) -> () = load_glUniform4uiEXT
func load_glUniform4uiEXT(location:GL.Int, v0:GL.UInt, v1:GL.UInt, v2:GL.UInt, v3:GL.UInt)
{
    fp_glUniform4uiEXT = unsafeBitCast(get_fp("glUniform4uiEXT", support: [ss159]), to: Swift.type(of: fp_glUniform4uiEXT))
    fp_glUniform4uiEXT(location, v0, v1, v2, v3)
}
public
func glUniform4uiEXT(location:GL.Int, v0:GL.UInt, v1:GL.UInt, v2:GL.UInt, v3:GL.UInt)
{
    fp_glUniform4uiEXT(location, v0, v1, v2, v3)
}
public
func glUniform4uiEXT(_ location:GL.Int, _ v0:GL.UInt, _ v1:GL.UInt, _ v2:GL.UInt, _ v3:GL.UInt)
{
    fp_glUniform4uiEXT(location, v0, v1, v2, v3)
}

var fp_glUniform4uiv:@convention(c) (GL.Int, GL.Size, UnsafePointer<GL.UInt>?) -> () = load_glUniform4uiv
func load_glUniform4uiv(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt>?)
{
    fp_glUniform4uiv = unsafeBitCast(get_fp("glUniform4uiv", support: [ss354, ss366]), to: Swift.type(of: fp_glUniform4uiv))
    fp_glUniform4uiv(location, count, value)
}
public
func glUniform4uiv(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt>?)
{
    fp_glUniform4uiv(location, count, value)
}
public
func glUniform4uiv(_ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.UInt>?)
{
    fp_glUniform4uiv(location, count, value)
}

var fp_glUniform4uivEXT:@convention(c) (GL.Int, GL.Size, UnsafePointer<GL.UInt>?) -> () = load_glUniform4uivEXT
func load_glUniform4uivEXT(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt>?)
{
    fp_glUniform4uivEXT = unsafeBitCast(get_fp("glUniform4uivEXT", support: [ss159]), to: Swift.type(of: fp_glUniform4uivEXT))
    fp_glUniform4uivEXT(location, count, value)
}
public
func glUniform4uivEXT(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt>?)
{
    fp_glUniform4uivEXT(location, count, value)
}
public
func glUniform4uivEXT(_ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.UInt>?)
{
    fp_glUniform4uivEXT(location, count, value)
}

var fp_glUniformBlockBinding:@convention(c) (GL.UInt, GL.UInt, GL.UInt) -> () = load_glUniformBlockBinding
func load_glUniformBlockBinding(program:GL.UInt, uniformBlockIndex:GL.UInt, uniformBlockBinding:GL.UInt)
{
    fp_glUniformBlockBinding = unsafeBitCast(get_fp("glUniformBlockBinding", support: [ss355, ss366, ss104]), to: Swift.type(of: fp_glUniformBlockBinding))
    fp_glUniformBlockBinding(program, uniformBlockIndex, uniformBlockBinding)
}
public
func glUniformBlockBinding(program:GL.UInt, uniformBlockIndex:GL.UInt, uniformBlockBinding:GL.UInt)
{
    fp_glUniformBlockBinding(program, uniformBlockIndex, uniformBlockBinding)
}
public
func glUniformBlockBinding(_ program:GL.UInt, _ uniformBlockIndex:GL.UInt, _ uniformBlockBinding:GL.UInt)
{
    fp_glUniformBlockBinding(program, uniformBlockIndex, uniformBlockBinding)
}

var fp_glUniformBufferEXT:@convention(c) (GL.UInt, GL.Int, GL.UInt) -> () = load_glUniformBufferEXT
func load_glUniformBufferEXT(program:GL.UInt, location:GL.Int, buffer:GL.UInt)
{
    fp_glUniformBufferEXT = unsafeBitCast(get_fp("glUniformBufferEXT", support: [ss126]), to: Swift.type(of: fp_glUniformBufferEXT))
    fp_glUniformBufferEXT(program, location, buffer)
}
public
func glUniformBufferEXT(program:GL.UInt, location:GL.Int, buffer:GL.UInt)
{
    fp_glUniformBufferEXT(program, location, buffer)
}
public
func glUniformBufferEXT(_ program:GL.UInt, _ location:GL.Int, _ buffer:GL.UInt)
{
    fp_glUniformBufferEXT(program, location, buffer)
}

var fp_glUniformHandleui64ARB:@convention(c) (GL.Int, GL.UInt64) -> () = load_glUniformHandleui64ARB
func load_glUniformHandleui64ARB(location:GL.Int, value:GL.UInt64)
{
    fp_glUniformHandleui64ARB = unsafeBitCast(get_fp("glUniformHandleui64ARB", support: [ss29]), to: Swift.type(of: fp_glUniformHandleui64ARB))
    fp_glUniformHandleui64ARB(location, value)
}
public
func glUniformHandleui64ARB(location:GL.Int, value:GL.UInt64)
{
    fp_glUniformHandleui64ARB(location, value)
}
public
func glUniformHandleui64ARB(_ location:GL.Int, _ value:GL.UInt64)
{
    fp_glUniformHandleui64ARB(location, value)
}

var fp_glUniformHandleui64NV:@convention(c) (GL.Int, GL.UInt64) -> () = load_glUniformHandleui64NV
func load_glUniformHandleui64NV(location:GL.Int, value:GL.UInt64)
{
    fp_glUniformHandleui64NV = unsafeBitCast(get_fp("glUniformHandleui64NV", support: [ss227]), to: Swift.type(of: fp_glUniformHandleui64NV))
    fp_glUniformHandleui64NV(location, value)
}
public
func glUniformHandleui64NV(location:GL.Int, value:GL.UInt64)
{
    fp_glUniformHandleui64NV(location, value)
}
public
func glUniformHandleui64NV(_ location:GL.Int, _ value:GL.UInt64)
{
    fp_glUniformHandleui64NV(location, value)
}

var fp_glUniformHandleui64vARB:@convention(c) (GL.Int, GL.Size, UnsafePointer<GL.UInt64>?) -> () = load_glUniformHandleui64vARB
func load_glUniformHandleui64vARB(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt64>?)
{
    fp_glUniformHandleui64vARB = unsafeBitCast(get_fp("glUniformHandleui64vARB", support: [ss29]), to: Swift.type(of: fp_glUniformHandleui64vARB))
    fp_glUniformHandleui64vARB(location, count, value)
}
public
func glUniformHandleui64vARB(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt64>?)
{
    fp_glUniformHandleui64vARB(location, count, value)
}
public
func glUniformHandleui64vARB(_ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.UInt64>?)
{
    fp_glUniformHandleui64vARB(location, count, value)
}

var fp_glUniformHandleui64vNV:@convention(c) (GL.Int, GL.Size, UnsafePointer<GL.UInt64>?) -> () = load_glUniformHandleui64vNV
func load_glUniformHandleui64vNV(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt64>?)
{
    fp_glUniformHandleui64vNV = unsafeBitCast(get_fp("glUniformHandleui64vNV", support: [ss227]), to: Swift.type(of: fp_glUniformHandleui64vNV))
    fp_glUniformHandleui64vNV(location, count, value)
}
public
func glUniformHandleui64vNV(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt64>?)
{
    fp_glUniformHandleui64vNV(location, count, value)
}
public
func glUniformHandleui64vNV(_ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.UInt64>?)
{
    fp_glUniformHandleui64vNV(location, count, value)
}

var fp_glUniformMatrix2dv:@convention(c) (GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Double>?) -> () = load_glUniformMatrix2dv
func load_glUniformMatrix2dv(location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Double>?)
{
    fp_glUniformMatrix2dv = unsafeBitCast(get_fp("glUniformMatrix2dv", support: [ss358, ss57]), to: Swift.type(of: fp_glUniformMatrix2dv))
    fp_glUniformMatrix2dv(location, count, transpose, value)
}
public
func glUniformMatrix2dv(location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Double>?)
{
    fp_glUniformMatrix2dv(location, count, transpose, value)
}
public
func glUniformMatrix2dv(_ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Double>?)
{
    fp_glUniformMatrix2dv(location, count, transpose, value)
}

var fp_glUniformMatrix2fv:@convention(c) (GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Float>?) -> () = load_glUniformMatrix2fv
func load_glUniformMatrix2fv(location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glUniformMatrix2fv = unsafeBitCast(get_fp("glUniformMatrix2fv", support: [ss352, ss365]), to: Swift.type(of: fp_glUniformMatrix2fv))
    fp_glUniformMatrix2fv(location, count, transpose, value)
}
public
func glUniformMatrix2fv(location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glUniformMatrix2fv(location, count, transpose, value)
}
public
func glUniformMatrix2fv(_ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Float>?)
{
    fp_glUniformMatrix2fv(location, count, transpose, value)
}

var fp_glUniformMatrix2fvARB:@convention(c) (GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Float>?) -> () = load_glUniformMatrix2fvARB
func load_glUniformMatrix2fvARB(location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glUniformMatrix2fvARB = unsafeBitCast(get_fp("glUniformMatrix2fvARB", support: [ss83]), to: Swift.type(of: fp_glUniformMatrix2fvARB))
    fp_glUniformMatrix2fvARB(location, count, transpose, value)
}
public
func glUniformMatrix2fvARB(location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glUniformMatrix2fvARB(location, count, transpose, value)
}
public
func glUniformMatrix2fvARB(_ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Float>?)
{
    fp_glUniformMatrix2fvARB(location, count, transpose, value)
}

var fp_glUniformMatrix2x3dv:@convention(c) (GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Double>?) -> () = load_glUniformMatrix2x3dv
func load_glUniformMatrix2x3dv(location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Double>?)
{
    fp_glUniformMatrix2x3dv = unsafeBitCast(get_fp("glUniformMatrix2x3dv", support: [ss358, ss57]), to: Swift.type(of: fp_glUniformMatrix2x3dv))
    fp_glUniformMatrix2x3dv(location, count, transpose, value)
}
public
func glUniformMatrix2x3dv(location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Double>?)
{
    fp_glUniformMatrix2x3dv(location, count, transpose, value)
}
public
func glUniformMatrix2x3dv(_ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Double>?)
{
    fp_glUniformMatrix2x3dv(location, count, transpose, value)
}

var fp_glUniformMatrix2x3fv:@convention(c) (GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Float>?) -> () = load_glUniformMatrix2x3fv
func load_glUniformMatrix2x3fv(location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glUniformMatrix2x3fv = unsafeBitCast(get_fp("glUniformMatrix2x3fv", support: [ss353, ss366]), to: Swift.type(of: fp_glUniformMatrix2x3fv))
    fp_glUniformMatrix2x3fv(location, count, transpose, value)
}
public
func glUniformMatrix2x3fv(location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glUniformMatrix2x3fv(location, count, transpose, value)
}
public
func glUniformMatrix2x3fv(_ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Float>?)
{
    fp_glUniformMatrix2x3fv(location, count, transpose, value)
}

var fp_glUniformMatrix2x3fvNV:@convention(c) (GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Float>?) -> () = load_glUniformMatrix2x3fvNV
func load_glUniformMatrix2x3fvNV(location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glUniformMatrix2x3fvNV = unsafeBitCast(get_fp("glUniformMatrix2x3fvNV", support: [ss256]), to: Swift.type(of: fp_glUniformMatrix2x3fvNV))
    fp_glUniformMatrix2x3fvNV(location, count, transpose, value)
}
public
func glUniformMatrix2x3fvNV(location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glUniformMatrix2x3fvNV(location, count, transpose, value)
}
public
func glUniformMatrix2x3fvNV(_ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Float>?)
{
    fp_glUniformMatrix2x3fvNV(location, count, transpose, value)
}

var fp_glUniformMatrix2x4dv:@convention(c) (GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Double>?) -> () = load_glUniformMatrix2x4dv
func load_glUniformMatrix2x4dv(location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Double>?)
{
    fp_glUniformMatrix2x4dv = unsafeBitCast(get_fp("glUniformMatrix2x4dv", support: [ss358, ss57]), to: Swift.type(of: fp_glUniformMatrix2x4dv))
    fp_glUniformMatrix2x4dv(location, count, transpose, value)
}
public
func glUniformMatrix2x4dv(location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Double>?)
{
    fp_glUniformMatrix2x4dv(location, count, transpose, value)
}
public
func glUniformMatrix2x4dv(_ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Double>?)
{
    fp_glUniformMatrix2x4dv(location, count, transpose, value)
}

var fp_glUniformMatrix2x4fv:@convention(c) (GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Float>?) -> () = load_glUniformMatrix2x4fv
func load_glUniformMatrix2x4fv(location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glUniformMatrix2x4fv = unsafeBitCast(get_fp("glUniformMatrix2x4fv", support: [ss353, ss366]), to: Swift.type(of: fp_glUniformMatrix2x4fv))
    fp_glUniformMatrix2x4fv(location, count, transpose, value)
}
public
func glUniformMatrix2x4fv(location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glUniformMatrix2x4fv(location, count, transpose, value)
}
public
func glUniformMatrix2x4fv(_ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Float>?)
{
    fp_glUniformMatrix2x4fv(location, count, transpose, value)
}

var fp_glUniformMatrix2x4fvNV:@convention(c) (GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Float>?) -> () = load_glUniformMatrix2x4fvNV
func load_glUniformMatrix2x4fvNV(location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glUniformMatrix2x4fvNV = unsafeBitCast(get_fp("glUniformMatrix2x4fvNV", support: [ss256]), to: Swift.type(of: fp_glUniformMatrix2x4fvNV))
    fp_glUniformMatrix2x4fvNV(location, count, transpose, value)
}
public
func glUniformMatrix2x4fvNV(location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glUniformMatrix2x4fvNV(location, count, transpose, value)
}
public
func glUniformMatrix2x4fvNV(_ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Float>?)
{
    fp_glUniformMatrix2x4fvNV(location, count, transpose, value)
}

var fp_glUniformMatrix3dv:@convention(c) (GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Double>?) -> () = load_glUniformMatrix3dv
func load_glUniformMatrix3dv(location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Double>?)
{
    fp_glUniformMatrix3dv = unsafeBitCast(get_fp("glUniformMatrix3dv", support: [ss358, ss57]), to: Swift.type(of: fp_glUniformMatrix3dv))
    fp_glUniformMatrix3dv(location, count, transpose, value)
}
public
func glUniformMatrix3dv(location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Double>?)
{
    fp_glUniformMatrix3dv(location, count, transpose, value)
}
public
func glUniformMatrix3dv(_ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Double>?)
{
    fp_glUniformMatrix3dv(location, count, transpose, value)
}

var fp_glUniformMatrix3fv:@convention(c) (GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Float>?) -> () = load_glUniformMatrix3fv
func load_glUniformMatrix3fv(location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glUniformMatrix3fv = unsafeBitCast(get_fp("glUniformMatrix3fv", support: [ss352, ss365]), to: Swift.type(of: fp_glUniformMatrix3fv))
    fp_glUniformMatrix3fv(location, count, transpose, value)
}
public
func glUniformMatrix3fv(location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glUniformMatrix3fv(location, count, transpose, value)
}
public
func glUniformMatrix3fv(_ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Float>?)
{
    fp_glUniformMatrix3fv(location, count, transpose, value)
}

var fp_glUniformMatrix3fvARB:@convention(c) (GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Float>?) -> () = load_glUniformMatrix3fvARB
func load_glUniformMatrix3fvARB(location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glUniformMatrix3fvARB = unsafeBitCast(get_fp("glUniformMatrix3fvARB", support: [ss83]), to: Swift.type(of: fp_glUniformMatrix3fvARB))
    fp_glUniformMatrix3fvARB(location, count, transpose, value)
}
public
func glUniformMatrix3fvARB(location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glUniformMatrix3fvARB(location, count, transpose, value)
}
public
func glUniformMatrix3fvARB(_ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Float>?)
{
    fp_glUniformMatrix3fvARB(location, count, transpose, value)
}

var fp_glUniformMatrix3x2dv:@convention(c) (GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Double>?) -> () = load_glUniformMatrix3x2dv
func load_glUniformMatrix3x2dv(location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Double>?)
{
    fp_glUniformMatrix3x2dv = unsafeBitCast(get_fp("glUniformMatrix3x2dv", support: [ss358, ss57]), to: Swift.type(of: fp_glUniformMatrix3x2dv))
    fp_glUniformMatrix3x2dv(location, count, transpose, value)
}
public
func glUniformMatrix3x2dv(location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Double>?)
{
    fp_glUniformMatrix3x2dv(location, count, transpose, value)
}
public
func glUniformMatrix3x2dv(_ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Double>?)
{
    fp_glUniformMatrix3x2dv(location, count, transpose, value)
}

var fp_glUniformMatrix3x2fv:@convention(c) (GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Float>?) -> () = load_glUniformMatrix3x2fv
func load_glUniformMatrix3x2fv(location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glUniformMatrix3x2fv = unsafeBitCast(get_fp("glUniformMatrix3x2fv", support: [ss353, ss366]), to: Swift.type(of: fp_glUniformMatrix3x2fv))
    fp_glUniformMatrix3x2fv(location, count, transpose, value)
}
public
func glUniformMatrix3x2fv(location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glUniformMatrix3x2fv(location, count, transpose, value)
}
public
func glUniformMatrix3x2fv(_ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Float>?)
{
    fp_glUniformMatrix3x2fv(location, count, transpose, value)
}

var fp_glUniformMatrix3x2fvNV:@convention(c) (GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Float>?) -> () = load_glUniformMatrix3x2fvNV
func load_glUniformMatrix3x2fvNV(location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glUniformMatrix3x2fvNV = unsafeBitCast(get_fp("glUniformMatrix3x2fvNV", support: [ss256]), to: Swift.type(of: fp_glUniformMatrix3x2fvNV))
    fp_glUniformMatrix3x2fvNV(location, count, transpose, value)
}
public
func glUniformMatrix3x2fvNV(location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glUniformMatrix3x2fvNV(location, count, transpose, value)
}
public
func glUniformMatrix3x2fvNV(_ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Float>?)
{
    fp_glUniformMatrix3x2fvNV(location, count, transpose, value)
}

var fp_glUniformMatrix3x4dv:@convention(c) (GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Double>?) -> () = load_glUniformMatrix3x4dv
func load_glUniformMatrix3x4dv(location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Double>?)
{
    fp_glUniformMatrix3x4dv = unsafeBitCast(get_fp("glUniformMatrix3x4dv", support: [ss358, ss57]), to: Swift.type(of: fp_glUniformMatrix3x4dv))
    fp_glUniformMatrix3x4dv(location, count, transpose, value)
}
public
func glUniformMatrix3x4dv(location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Double>?)
{
    fp_glUniformMatrix3x4dv(location, count, transpose, value)
}
public
func glUniformMatrix3x4dv(_ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Double>?)
{
    fp_glUniformMatrix3x4dv(location, count, transpose, value)
}

var fp_glUniformMatrix3x4fv:@convention(c) (GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Float>?) -> () = load_glUniformMatrix3x4fv
func load_glUniformMatrix3x4fv(location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glUniformMatrix3x4fv = unsafeBitCast(get_fp("glUniformMatrix3x4fv", support: [ss353, ss366]), to: Swift.type(of: fp_glUniformMatrix3x4fv))
    fp_glUniformMatrix3x4fv(location, count, transpose, value)
}
public
func glUniformMatrix3x4fv(location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glUniformMatrix3x4fv(location, count, transpose, value)
}
public
func glUniformMatrix3x4fv(_ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Float>?)
{
    fp_glUniformMatrix3x4fv(location, count, transpose, value)
}

var fp_glUniformMatrix3x4fvNV:@convention(c) (GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Float>?) -> () = load_glUniformMatrix3x4fvNV
func load_glUniformMatrix3x4fvNV(location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glUniformMatrix3x4fvNV = unsafeBitCast(get_fp("glUniformMatrix3x4fvNV", support: [ss256]), to: Swift.type(of: fp_glUniformMatrix3x4fvNV))
    fp_glUniformMatrix3x4fvNV(location, count, transpose, value)
}
public
func glUniformMatrix3x4fvNV(location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glUniformMatrix3x4fvNV(location, count, transpose, value)
}
public
func glUniformMatrix3x4fvNV(_ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Float>?)
{
    fp_glUniformMatrix3x4fvNV(location, count, transpose, value)
}

var fp_glUniformMatrix4dv:@convention(c) (GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Double>?) -> () = load_glUniformMatrix4dv
func load_glUniformMatrix4dv(location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Double>?)
{
    fp_glUniformMatrix4dv = unsafeBitCast(get_fp("glUniformMatrix4dv", support: [ss358, ss57]), to: Swift.type(of: fp_glUniformMatrix4dv))
    fp_glUniformMatrix4dv(location, count, transpose, value)
}
public
func glUniformMatrix4dv(location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Double>?)
{
    fp_glUniformMatrix4dv(location, count, transpose, value)
}
public
func glUniformMatrix4dv(_ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Double>?)
{
    fp_glUniformMatrix4dv(location, count, transpose, value)
}

var fp_glUniformMatrix4fv:@convention(c) (GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Float>?) -> () = load_glUniformMatrix4fv
func load_glUniformMatrix4fv(location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glUniformMatrix4fv = unsafeBitCast(get_fp("glUniformMatrix4fv", support: [ss352, ss365]), to: Swift.type(of: fp_glUniformMatrix4fv))
    fp_glUniformMatrix4fv(location, count, transpose, value)
}
public
func glUniformMatrix4fv(location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glUniformMatrix4fv(location, count, transpose, value)
}
public
func glUniformMatrix4fv(_ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Float>?)
{
    fp_glUniformMatrix4fv(location, count, transpose, value)
}

var fp_glUniformMatrix4fvARB:@convention(c) (GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Float>?) -> () = load_glUniformMatrix4fvARB
func load_glUniformMatrix4fvARB(location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glUniformMatrix4fvARB = unsafeBitCast(get_fp("glUniformMatrix4fvARB", support: [ss83]), to: Swift.type(of: fp_glUniformMatrix4fvARB))
    fp_glUniformMatrix4fvARB(location, count, transpose, value)
}
public
func glUniformMatrix4fvARB(location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glUniformMatrix4fvARB(location, count, transpose, value)
}
public
func glUniformMatrix4fvARB(_ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Float>?)
{
    fp_glUniformMatrix4fvARB(location, count, transpose, value)
}

var fp_glUniformMatrix4x2dv:@convention(c) (GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Double>?) -> () = load_glUniformMatrix4x2dv
func load_glUniformMatrix4x2dv(location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Double>?)
{
    fp_glUniformMatrix4x2dv = unsafeBitCast(get_fp("glUniformMatrix4x2dv", support: [ss358, ss57]), to: Swift.type(of: fp_glUniformMatrix4x2dv))
    fp_glUniformMatrix4x2dv(location, count, transpose, value)
}
public
func glUniformMatrix4x2dv(location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Double>?)
{
    fp_glUniformMatrix4x2dv(location, count, transpose, value)
}
public
func glUniformMatrix4x2dv(_ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Double>?)
{
    fp_glUniformMatrix4x2dv(location, count, transpose, value)
}

var fp_glUniformMatrix4x2fv:@convention(c) (GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Float>?) -> () = load_glUniformMatrix4x2fv
func load_glUniformMatrix4x2fv(location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glUniformMatrix4x2fv = unsafeBitCast(get_fp("glUniformMatrix4x2fv", support: [ss353, ss366]), to: Swift.type(of: fp_glUniformMatrix4x2fv))
    fp_glUniformMatrix4x2fv(location, count, transpose, value)
}
public
func glUniformMatrix4x2fv(location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glUniformMatrix4x2fv(location, count, transpose, value)
}
public
func glUniformMatrix4x2fv(_ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Float>?)
{
    fp_glUniformMatrix4x2fv(location, count, transpose, value)
}

var fp_glUniformMatrix4x2fvNV:@convention(c) (GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Float>?) -> () = load_glUniformMatrix4x2fvNV
func load_glUniformMatrix4x2fvNV(location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glUniformMatrix4x2fvNV = unsafeBitCast(get_fp("glUniformMatrix4x2fvNV", support: [ss256]), to: Swift.type(of: fp_glUniformMatrix4x2fvNV))
    fp_glUniformMatrix4x2fvNV(location, count, transpose, value)
}
public
func glUniformMatrix4x2fvNV(location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glUniformMatrix4x2fvNV(location, count, transpose, value)
}
public
func glUniformMatrix4x2fvNV(_ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Float>?)
{
    fp_glUniformMatrix4x2fvNV(location, count, transpose, value)
}

var fp_glUniformMatrix4x3dv:@convention(c) (GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Double>?) -> () = load_glUniformMatrix4x3dv
func load_glUniformMatrix4x3dv(location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Double>?)
{
    fp_glUniformMatrix4x3dv = unsafeBitCast(get_fp("glUniformMatrix4x3dv", support: [ss358, ss57]), to: Swift.type(of: fp_glUniformMatrix4x3dv))
    fp_glUniformMatrix4x3dv(location, count, transpose, value)
}
public
func glUniformMatrix4x3dv(location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Double>?)
{
    fp_glUniformMatrix4x3dv(location, count, transpose, value)
}
public
func glUniformMatrix4x3dv(_ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Double>?)
{
    fp_glUniformMatrix4x3dv(location, count, transpose, value)
}

var fp_glUniformMatrix4x3fv:@convention(c) (GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Float>?) -> () = load_glUniformMatrix4x3fv
func load_glUniformMatrix4x3fv(location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glUniformMatrix4x3fv = unsafeBitCast(get_fp("glUniformMatrix4x3fv", support: [ss353, ss366]), to: Swift.type(of: fp_glUniformMatrix4x3fv))
    fp_glUniformMatrix4x3fv(location, count, transpose, value)
}
public
func glUniformMatrix4x3fv(location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glUniformMatrix4x3fv(location, count, transpose, value)
}
public
func glUniformMatrix4x3fv(_ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Float>?)
{
    fp_glUniformMatrix4x3fv(location, count, transpose, value)
}

var fp_glUniformMatrix4x3fvNV:@convention(c) (GL.Int, GL.Size, GL.Bool, UnsafePointer<GL.Float>?) -> () = load_glUniformMatrix4x3fvNV
func load_glUniformMatrix4x3fvNV(location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glUniformMatrix4x3fvNV = unsafeBitCast(get_fp("glUniformMatrix4x3fvNV", support: [ss256]), to: Swift.type(of: fp_glUniformMatrix4x3fvNV))
    fp_glUniformMatrix4x3fvNV(location, count, transpose, value)
}
public
func glUniformMatrix4x3fvNV(location:GL.Int, count:GL.Size, transpose:GL.Bool, value:UnsafePointer<GL.Float>?)
{
    fp_glUniformMatrix4x3fvNV(location, count, transpose, value)
}
public
func glUniformMatrix4x3fvNV(_ location:GL.Int, _ count:GL.Size, _ transpose:GL.Bool, _ value:UnsafePointer<GL.Float>?)
{
    fp_glUniformMatrix4x3fvNV(location, count, transpose, value)
}

var fp_glUniformSubroutinesuiv:@convention(c) (GL.Enum, GL.Size, UnsafePointer<GL.UInt>?) -> () = load_glUniformSubroutinesuiv
func load_glUniformSubroutinesuiv(shadertype:GL.Enum, count:GL.Size, indices:UnsafePointer<GL.UInt>?)
{
    fp_glUniformSubroutinesuiv = unsafeBitCast(get_fp("glUniformSubroutinesuiv", support: [ss358, ss85]), to: Swift.type(of: fp_glUniformSubroutinesuiv))
    fp_glUniformSubroutinesuiv(shadertype, count, indices)
}
public
func glUniformSubroutinesuiv(shadertype:GL.Enum, count:GL.Size, indices:UnsafePointer<GL.UInt>?)
{
    fp_glUniformSubroutinesuiv(shadertype, count, indices)
}
public
func glUniformSubroutinesuiv(_ shadertype:GL.Enum, _ count:GL.Size, _ indices:UnsafePointer<GL.UInt>?)
{
    fp_glUniformSubroutinesuiv(shadertype, count, indices)
}

var fp_glUniformui64NV:@convention(c) (GL.Int, GL.UInt64EXT) -> () = load_glUniformui64NV
func load_glUniformui64NV(location:GL.Int, value:GL.UInt64EXT)
{
    fp_glUniformui64NV = unsafeBitCast(get_fp("glUniformui64NV", support: [ss269]), to: Swift.type(of: fp_glUniformui64NV))
    fp_glUniformui64NV(location, value)
}
public
func glUniformui64NV(location:GL.Int, value:GL.UInt64EXT)
{
    fp_glUniformui64NV(location, value)
}
public
func glUniformui64NV(_ location:GL.Int, _ value:GL.UInt64EXT)
{
    fp_glUniformui64NV(location, value)
}

var fp_glUniformui64vNV:@convention(c) (GL.Int, GL.Size, UnsafePointer<GL.UInt64EXT>?) -> () = load_glUniformui64vNV
func load_glUniformui64vNV(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt64EXT>?)
{
    fp_glUniformui64vNV = unsafeBitCast(get_fp("glUniformui64vNV", support: [ss269]), to: Swift.type(of: fp_glUniformui64vNV))
    fp_glUniformui64vNV(location, count, value)
}
public
func glUniformui64vNV(location:GL.Int, count:GL.Size, value:UnsafePointer<GL.UInt64EXT>?)
{
    fp_glUniformui64vNV(location, count, value)
}
public
func glUniformui64vNV(_ location:GL.Int, _ count:GL.Size, _ value:UnsafePointer<GL.UInt64EXT>?)
{
    fp_glUniformui64vNV(location, count, value)
}

var fp_glUnlockArraysEXT:@convention(c) () -> () = load_glUnlockArraysEXT
func load_glUnlockArraysEXT()
{
    fp_glUnlockArraysEXT = unsafeBitCast(get_fp("glUnlockArraysEXT", support: [ss134]), to: Swift.type(of: fp_glUnlockArraysEXT))
    fp_glUnlockArraysEXT()
}
public
func glUnlockArraysEXT()
{
    fp_glUnlockArraysEXT()
}

var fp_glUnmapBuffer:@convention(c) (GL.Enum) -> GL.Bool = load_glUnmapBuffer
func load_glUnmapBuffer(target:GL.Enum) -> GL.Bool
{
    fp_glUnmapBuffer = unsafeBitCast(get_fp("glUnmapBuffer", support: [ss351, ss366]), to: Swift.type(of: fp_glUnmapBuffer))
    return fp_glUnmapBuffer(target)
}
public
func glUnmapBuffer(target:GL.Enum) -> GL.Bool
{
    return fp_glUnmapBuffer(target)
}
public
func glUnmapBuffer(_ target:GL.Enum) -> GL.Bool
{
    return fp_glUnmapBuffer(target)
}

var fp_glUnmapBufferARB:@convention(c) (GL.Enum) -> GL.Bool = load_glUnmapBufferARB
func load_glUnmapBufferARB(target:GL.Enum) -> GL.Bool
{
    fp_glUnmapBufferARB = unsafeBitCast(get_fp("glUnmapBufferARB", support: [ss109]), to: Swift.type(of: fp_glUnmapBufferARB))
    return fp_glUnmapBufferARB(target)
}
public
func glUnmapBufferARB(target:GL.Enum) -> GL.Bool
{
    return fp_glUnmapBufferARB(target)
}
public
func glUnmapBufferARB(_ target:GL.Enum) -> GL.Bool
{
    return fp_glUnmapBufferARB(target)
}

var fp_glUnmapBufferOES:@convention(c) (GL.Enum) -> GL.Bool = load_glUnmapBufferOES
func load_glUnmapBufferOES(target:GL.Enum) -> GL.Bool
{
    fp_glUnmapBufferOES = unsafeBitCast(get_fp("glUnmapBufferOES", support: [ss296]), to: Swift.type(of: fp_glUnmapBufferOES))
    return fp_glUnmapBufferOES(target)
}
public
func glUnmapBufferOES(target:GL.Enum) -> GL.Bool
{
    return fp_glUnmapBufferOES(target)
}
public
func glUnmapBufferOES(_ target:GL.Enum) -> GL.Bool
{
    return fp_glUnmapBufferOES(target)
}

var fp_glUnmapNamedBuffer:@convention(c) (GL.UInt) -> GL.Bool = load_glUnmapNamedBuffer
func load_glUnmapNamedBuffer(buffer:GL.UInt) -> GL.Bool
{
    fp_glUnmapNamedBuffer = unsafeBitCast(get_fp("glUnmapNamedBuffer", support: [ss363, ss42]), to: Swift.type(of: fp_glUnmapNamedBuffer))
    return fp_glUnmapNamedBuffer(buffer)
}
public
func glUnmapNamedBuffer(buffer:GL.UInt) -> GL.Bool
{
    return fp_glUnmapNamedBuffer(buffer)
}
public
func glUnmapNamedBuffer(_ buffer:GL.UInt) -> GL.Bool
{
    return fp_glUnmapNamedBuffer(buffer)
}

var fp_glUnmapNamedBufferEXT:@convention(c) (GL.UInt) -> GL.Bool = load_glUnmapNamedBufferEXT
func load_glUnmapNamedBufferEXT(buffer:GL.UInt) -> GL.Bool
{
    fp_glUnmapNamedBufferEXT = unsafeBitCast(get_fp("glUnmapNamedBufferEXT", support: [ss143]), to: Swift.type(of: fp_glUnmapNamedBufferEXT))
    return fp_glUnmapNamedBufferEXT(buffer)
}
public
func glUnmapNamedBufferEXT(buffer:GL.UInt) -> GL.Bool
{
    return fp_glUnmapNamedBufferEXT(buffer)
}
public
func glUnmapNamedBufferEXT(_ buffer:GL.UInt) -> GL.Bool
{
    return fp_glUnmapNamedBufferEXT(buffer)
}

var fp_glUnmapObjectBufferATI:@convention(c) (GL.UInt) -> () = load_glUnmapObjectBufferATI
func load_glUnmapObjectBufferATI(buffer:GL.UInt)
{
    fp_glUnmapObjectBufferATI = unsafeBitCast(get_fp("glUnmapObjectBufferATI", support: [ss119]), to: Swift.type(of: fp_glUnmapObjectBufferATI))
    fp_glUnmapObjectBufferATI(buffer)
}
public
func glUnmapObjectBufferATI(buffer:GL.UInt)
{
    fp_glUnmapObjectBufferATI(buffer)
}
public
func glUnmapObjectBufferATI(_ buffer:GL.UInt)
{
    fp_glUnmapObjectBufferATI(buffer)
}

var fp_glUnmapTexture2DINTEL:@convention(c) (GL.UInt, GL.Int) -> () = load_glUnmapTexture2DINTEL
func load_glUnmapTexture2DINTEL(texture:GL.UInt, level:GL.Int)
{
    fp_glUnmapTexture2DINTEL = unsafeBitCast(get_fp("glUnmapTexture2DINTEL", support: [ss217]), to: Swift.type(of: fp_glUnmapTexture2DINTEL))
    fp_glUnmapTexture2DINTEL(texture, level)
}
public
func glUnmapTexture2DINTEL(texture:GL.UInt, level:GL.Int)
{
    fp_glUnmapTexture2DINTEL(texture, level)
}
public
func glUnmapTexture2DINTEL(_ texture:GL.UInt, _ level:GL.Int)
{
    fp_glUnmapTexture2DINTEL(texture, level)
}

var fp_glUpdateObjectBufferATI:@convention(c) (GL.UInt, GL.UInt, GL.Size, UnsafeRawPointer?, GL.Enum) -> () = load_glUpdateObjectBufferATI
func load_glUpdateObjectBufferATI(buffer:GL.UInt, offset:GL.UInt, size:GL.Size, pointer:UnsafeRawPointer?, preserve:GL.Enum)
{
    fp_glUpdateObjectBufferATI = unsafeBitCast(get_fp("glUpdateObjectBufferATI", support: [ss122]), to: Swift.type(of: fp_glUpdateObjectBufferATI))
    fp_glUpdateObjectBufferATI(buffer, offset, size, pointer, preserve)
}
public
func glUpdateObjectBufferATI(buffer:GL.UInt, offset:GL.UInt, size:GL.Size, pointer:UnsafeRawPointer?, preserve:GL.Enum)
{
    fp_glUpdateObjectBufferATI(buffer, offset, size, pointer, preserve)
}
public
func glUpdateObjectBufferATI(_ buffer:GL.UInt, _ offset:GL.UInt, _ size:GL.Size, _ pointer:UnsafeRawPointer?, _ preserve:GL.Enum)
{
    fp_glUpdateObjectBufferATI(buffer, offset, size, pointer, preserve)
}

var fp_glUseProgram:@convention(c) (GL.UInt) -> () = load_glUseProgram
func load_glUseProgram(program:GL.UInt)
{
    fp_glUseProgram = unsafeBitCast(get_fp("glUseProgram", support: [ss352, ss365]), to: Swift.type(of: fp_glUseProgram))
    fp_glUseProgram(program)
}
public
func glUseProgram(program:GL.UInt)
{
    fp_glUseProgram(program)
}
public
func glUseProgram(_ program:GL.UInt)
{
    fp_glUseProgram(program)
}

var fp_glUseProgramObjectARB:@convention(c) (GL.HandleARB) -> () = load_glUseProgramObjectARB
func load_glUseProgramObjectARB(programObj:GL.HandleARB)
{
    fp_glUseProgramObjectARB = unsafeBitCast(get_fp("glUseProgramObjectARB", support: [ss83]), to: Swift.type(of: fp_glUseProgramObjectARB))
    fp_glUseProgramObjectARB(programObj)
}
public
func glUseProgramObjectARB(programObj:GL.HandleARB)
{
    fp_glUseProgramObjectARB(programObj)
}
public
func glUseProgramObjectARB(_ programObj:GL.HandleARB)
{
    fp_glUseProgramObjectARB(programObj)
}

var fp_glUseProgramStages:@convention(c) (GL.UInt, GL.Bitfield, GL.UInt) -> () = load_glUseProgramStages
func load_glUseProgramStages(pipeline:GL.UInt, stages:GL.Bitfield, program:GL.UInt)
{
    fp_glUseProgramStages = unsafeBitCast(get_fp("glUseProgramStages", support: [ss359, ss367, ss80]), to: Swift.type(of: fp_glUseProgramStages))
    fp_glUseProgramStages(pipeline, stages, program)
}
public
func glUseProgramStages(pipeline:GL.UInt, stages:GL.Bitfield, program:GL.UInt)
{
    fp_glUseProgramStages(pipeline, stages, program)
}
public
func glUseProgramStages(_ pipeline:GL.UInt, _ stages:GL.Bitfield, _ program:GL.UInt)
{
    fp_glUseProgramStages(pipeline, stages, program)
}

var fp_glUseProgramStagesEXT:@convention(c) (GL.UInt, GL.Bitfield, GL.UInt) -> () = load_glUseProgramStagesEXT
func load_glUseProgramStagesEXT(pipeline:GL.UInt, stages:GL.Bitfield, program:GL.UInt)
{
    fp_glUseProgramStagesEXT = unsafeBitCast(get_fp("glUseProgramStagesEXT", support: [ss182]), to: Swift.type(of: fp_glUseProgramStagesEXT))
    fp_glUseProgramStagesEXT(pipeline, stages, program)
}
public
func glUseProgramStagesEXT(pipeline:GL.UInt, stages:GL.Bitfield, program:GL.UInt)
{
    fp_glUseProgramStagesEXT(pipeline, stages, program)
}
public
func glUseProgramStagesEXT(_ pipeline:GL.UInt, _ stages:GL.Bitfield, _ program:GL.UInt)
{
    fp_glUseProgramStagesEXT(pipeline, stages, program)
}

var fp_glUseShaderProgramEXT:@convention(c) (GL.Enum, GL.UInt) -> () = load_glUseShaderProgramEXT
func load_glUseShaderProgramEXT(type:GL.Enum, program:GL.UInt)
{
    fp_glUseShaderProgramEXT = unsafeBitCast(get_fp("glUseShaderProgramEXT", support: [ss182]), to: Swift.type(of: fp_glUseShaderProgramEXT))
    fp_glUseShaderProgramEXT(type, program)
}
public
func glUseShaderProgramEXT(type:GL.Enum, program:GL.UInt)
{
    fp_glUseShaderProgramEXT(type, program)
}
public
func glUseShaderProgramEXT(_ type:GL.Enum, _ program:GL.UInt)
{
    fp_glUseShaderProgramEXT(type, program)
}

var fp_glVDPAUFiniNV:@convention(c) () -> () = load_glVDPAUFiniNV
func load_glVDPAUFiniNV()
{
    fp_glVDPAUFiniNV = unsafeBitCast(get_fp("glVDPAUFiniNV", support: [ss274]), to: Swift.type(of: fp_glVDPAUFiniNV))
    fp_glVDPAUFiniNV()
}
public
func glVDPAUFiniNV()
{
    fp_glVDPAUFiniNV()
}

var fp_glVDPAUGetSurfaceivNV:@convention(c) (GL.VdpauSurfaceNV, GL.Enum, GL.Size, UnsafeMutablePointer<GL.Size>?, UnsafeMutablePointer<GL.Int>?) -> () = load_glVDPAUGetSurfaceivNV
func load_glVDPAUGetSurfaceivNV(surface:GL.VdpauSurfaceNV, pname:GL.Enum, bufSize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, values:UnsafeMutablePointer<GL.Int>?)
{
    fp_glVDPAUGetSurfaceivNV = unsafeBitCast(get_fp("glVDPAUGetSurfaceivNV", support: [ss274]), to: Swift.type(of: fp_glVDPAUGetSurfaceivNV))
    fp_glVDPAUGetSurfaceivNV(surface, pname, bufSize, length, values)
}
public
func glVDPAUGetSurfaceivNV(surface:GL.VdpauSurfaceNV, pname:GL.Enum, bufSize:GL.Size, length:UnsafeMutablePointer<GL.Size>?, values:UnsafeMutablePointer<GL.Int>?)
{
    fp_glVDPAUGetSurfaceivNV(surface, pname, bufSize, length, values)
}
public
func glVDPAUGetSurfaceivNV(_ surface:GL.VdpauSurfaceNV, _ pname:GL.Enum, _ bufSize:GL.Size, _ length:UnsafeMutablePointer<GL.Size>?, _ values:UnsafeMutablePointer<GL.Int>?)
{
    fp_glVDPAUGetSurfaceivNV(surface, pname, bufSize, length, values)
}

var fp_glVDPAUInitNV:@convention(c) (UnsafeRawPointer?, UnsafeRawPointer?) -> () = load_glVDPAUInitNV
func load_glVDPAUInitNV(vdpDevice:UnsafeRawPointer?, getProcAddress:UnsafeRawPointer?)
{
    fp_glVDPAUInitNV = unsafeBitCast(get_fp("glVDPAUInitNV", support: [ss274]), to: Swift.type(of: fp_glVDPAUInitNV))
    fp_glVDPAUInitNV(vdpDevice, getProcAddress)
}
public
func glVDPAUInitNV(vdpDevice:UnsafeRawPointer?, getProcAddress:UnsafeRawPointer?)
{
    fp_glVDPAUInitNV(vdpDevice, getProcAddress)
}
public
func glVDPAUInitNV(_ vdpDevice:UnsafeRawPointer?, _ getProcAddress:UnsafeRawPointer?)
{
    fp_glVDPAUInitNV(vdpDevice, getProcAddress)
}

var fp_glVDPAUIsSurfaceNV:@convention(c) (GL.VdpauSurfaceNV) -> GL.Bool = load_glVDPAUIsSurfaceNV
func load_glVDPAUIsSurfaceNV(surface:GL.VdpauSurfaceNV) -> GL.Bool
{
    fp_glVDPAUIsSurfaceNV = unsafeBitCast(get_fp("glVDPAUIsSurfaceNV", support: [ss274]), to: Swift.type(of: fp_glVDPAUIsSurfaceNV))
    return fp_glVDPAUIsSurfaceNV(surface)
}
public
func glVDPAUIsSurfaceNV(surface:GL.VdpauSurfaceNV) -> GL.Bool
{
    return fp_glVDPAUIsSurfaceNV(surface)
}
public
func glVDPAUIsSurfaceNV(_ surface:GL.VdpauSurfaceNV) -> GL.Bool
{
    return fp_glVDPAUIsSurfaceNV(surface)
}

var fp_glVDPAUMapSurfacesNV:@convention(c) (GL.Size, UnsafePointer<GL.VdpauSurfaceNV>?) -> () = load_glVDPAUMapSurfacesNV
func load_glVDPAUMapSurfacesNV(numSurfaces:GL.Size, surfaces:UnsafePointer<GL.VdpauSurfaceNV>?)
{
    fp_glVDPAUMapSurfacesNV = unsafeBitCast(get_fp("glVDPAUMapSurfacesNV", support: [ss274]), to: Swift.type(of: fp_glVDPAUMapSurfacesNV))
    fp_glVDPAUMapSurfacesNV(numSurfaces, surfaces)
}
public
func glVDPAUMapSurfacesNV(numSurfaces:GL.Size, surfaces:UnsafePointer<GL.VdpauSurfaceNV>?)
{
    fp_glVDPAUMapSurfacesNV(numSurfaces, surfaces)
}
public
func glVDPAUMapSurfacesNV(_ numSurfaces:GL.Size, _ surfaces:UnsafePointer<GL.VdpauSurfaceNV>?)
{
    fp_glVDPAUMapSurfacesNV(numSurfaces, surfaces)
}

var fp_glVDPAURegisterOutputSurfaceNV:@convention(c) (UnsafeRawPointer?, GL.Enum, GL.Size, UnsafePointer<GL.UInt>?) -> GL.VdpauSurfaceNV = load_glVDPAURegisterOutputSurfaceNV
func load_glVDPAURegisterOutputSurfaceNV(vdpSurface:UnsafeRawPointer?, target:GL.Enum, numTextureNames:GL.Size, textureNames:UnsafePointer<GL.UInt>?) -> GL.VdpauSurfaceNV
{
    fp_glVDPAURegisterOutputSurfaceNV = unsafeBitCast(get_fp("glVDPAURegisterOutputSurfaceNV", support: [ss274]), to: Swift.type(of: fp_glVDPAURegisterOutputSurfaceNV))
    return fp_glVDPAURegisterOutputSurfaceNV(vdpSurface, target, numTextureNames, textureNames)
}
public
func glVDPAURegisterOutputSurfaceNV(vdpSurface:UnsafeRawPointer?, target:GL.Enum, numTextureNames:GL.Size, textureNames:UnsafePointer<GL.UInt>?) -> GL.VdpauSurfaceNV
{
    return fp_glVDPAURegisterOutputSurfaceNV(vdpSurface, target, numTextureNames, textureNames)
}
public
func glVDPAURegisterOutputSurfaceNV(_ vdpSurface:UnsafeRawPointer?, _ target:GL.Enum, _ numTextureNames:GL.Size, _ textureNames:UnsafePointer<GL.UInt>?) -> GL.VdpauSurfaceNV
{
    return fp_glVDPAURegisterOutputSurfaceNV(vdpSurface, target, numTextureNames, textureNames)
}

var fp_glVDPAURegisterVideoSurfaceNV:@convention(c) (UnsafeRawPointer?, GL.Enum, GL.Size, UnsafePointer<GL.UInt>?) -> GL.VdpauSurfaceNV = load_glVDPAURegisterVideoSurfaceNV
func load_glVDPAURegisterVideoSurfaceNV(vdpSurface:UnsafeRawPointer?, target:GL.Enum, numTextureNames:GL.Size, textureNames:UnsafePointer<GL.UInt>?) -> GL.VdpauSurfaceNV
{
    fp_glVDPAURegisterVideoSurfaceNV = unsafeBitCast(get_fp("glVDPAURegisterVideoSurfaceNV", support: [ss274]), to: Swift.type(of: fp_glVDPAURegisterVideoSurfaceNV))
    return fp_glVDPAURegisterVideoSurfaceNV(vdpSurface, target, numTextureNames, textureNames)
}
public
func glVDPAURegisterVideoSurfaceNV(vdpSurface:UnsafeRawPointer?, target:GL.Enum, numTextureNames:GL.Size, textureNames:UnsafePointer<GL.UInt>?) -> GL.VdpauSurfaceNV
{
    return fp_glVDPAURegisterVideoSurfaceNV(vdpSurface, target, numTextureNames, textureNames)
}
public
func glVDPAURegisterVideoSurfaceNV(_ vdpSurface:UnsafeRawPointer?, _ target:GL.Enum, _ numTextureNames:GL.Size, _ textureNames:UnsafePointer<GL.UInt>?) -> GL.VdpauSurfaceNV
{
    return fp_glVDPAURegisterVideoSurfaceNV(vdpSurface, target, numTextureNames, textureNames)
}

var fp_glVDPAUSurfaceAccessNV:@convention(c) (GL.VdpauSurfaceNV, GL.Enum) -> () = load_glVDPAUSurfaceAccessNV
func load_glVDPAUSurfaceAccessNV(surface:GL.VdpauSurfaceNV, access:GL.Enum)
{
    fp_glVDPAUSurfaceAccessNV = unsafeBitCast(get_fp("glVDPAUSurfaceAccessNV", support: [ss274]), to: Swift.type(of: fp_glVDPAUSurfaceAccessNV))
    fp_glVDPAUSurfaceAccessNV(surface, access)
}
public
func glVDPAUSurfaceAccessNV(surface:GL.VdpauSurfaceNV, access:GL.Enum)
{
    fp_glVDPAUSurfaceAccessNV(surface, access)
}
public
func glVDPAUSurfaceAccessNV(_ surface:GL.VdpauSurfaceNV, _ access:GL.Enum)
{
    fp_glVDPAUSurfaceAccessNV(surface, access)
}

var fp_glVDPAUUnmapSurfacesNV:@convention(c) (GL.Size, UnsafePointer<GL.VdpauSurfaceNV>?) -> () = load_glVDPAUUnmapSurfacesNV
func load_glVDPAUUnmapSurfacesNV(numSurface:GL.Size, surfaces:UnsafePointer<GL.VdpauSurfaceNV>?)
{
    fp_glVDPAUUnmapSurfacesNV = unsafeBitCast(get_fp("glVDPAUUnmapSurfacesNV", support: [ss274]), to: Swift.type(of: fp_glVDPAUUnmapSurfacesNV))
    fp_glVDPAUUnmapSurfacesNV(numSurface, surfaces)
}
public
func glVDPAUUnmapSurfacesNV(numSurface:GL.Size, surfaces:UnsafePointer<GL.VdpauSurfaceNV>?)
{
    fp_glVDPAUUnmapSurfacesNV(numSurface, surfaces)
}
public
func glVDPAUUnmapSurfacesNV(_ numSurface:GL.Size, _ surfaces:UnsafePointer<GL.VdpauSurfaceNV>?)
{
    fp_glVDPAUUnmapSurfacesNV(numSurface, surfaces)
}

var fp_glVDPAUUnregisterSurfaceNV:@convention(c) (GL.VdpauSurfaceNV) -> () = load_glVDPAUUnregisterSurfaceNV
func load_glVDPAUUnregisterSurfaceNV(surface:GL.VdpauSurfaceNV)
{
    fp_glVDPAUUnregisterSurfaceNV = unsafeBitCast(get_fp("glVDPAUUnregisterSurfaceNV", support: [ss274]), to: Swift.type(of: fp_glVDPAUUnregisterSurfaceNV))
    fp_glVDPAUUnregisterSurfaceNV(surface)
}
public
func glVDPAUUnregisterSurfaceNV(surface:GL.VdpauSurfaceNV)
{
    fp_glVDPAUUnregisterSurfaceNV(surface)
}
public
func glVDPAUUnregisterSurfaceNV(_ surface:GL.VdpauSurfaceNV)
{
    fp_glVDPAUUnregisterSurfaceNV(surface)
}

var fp_glValidateProgram:@convention(c) (GL.UInt) -> () = load_glValidateProgram
func load_glValidateProgram(program:GL.UInt)
{
    fp_glValidateProgram = unsafeBitCast(get_fp("glValidateProgram", support: [ss352, ss365]), to: Swift.type(of: fp_glValidateProgram))
    fp_glValidateProgram(program)
}
public
func glValidateProgram(program:GL.UInt)
{
    fp_glValidateProgram(program)
}
public
func glValidateProgram(_ program:GL.UInt)
{
    fp_glValidateProgram(program)
}

var fp_glValidateProgramARB:@convention(c) (GL.HandleARB) -> () = load_glValidateProgramARB
func load_glValidateProgramARB(programObj:GL.HandleARB)
{
    fp_glValidateProgramARB = unsafeBitCast(get_fp("glValidateProgramARB", support: [ss83]), to: Swift.type(of: fp_glValidateProgramARB))
    fp_glValidateProgramARB(programObj)
}
public
func glValidateProgramARB(programObj:GL.HandleARB)
{
    fp_glValidateProgramARB(programObj)
}
public
func glValidateProgramARB(_ programObj:GL.HandleARB)
{
    fp_glValidateProgramARB(programObj)
}

var fp_glValidateProgramPipeline:@convention(c) (GL.UInt) -> () = load_glValidateProgramPipeline
func load_glValidateProgramPipeline(pipeline:GL.UInt)
{
    fp_glValidateProgramPipeline = unsafeBitCast(get_fp("glValidateProgramPipeline", support: [ss359, ss367, ss80]), to: Swift.type(of: fp_glValidateProgramPipeline))
    fp_glValidateProgramPipeline(pipeline)
}
public
func glValidateProgramPipeline(pipeline:GL.UInt)
{
    fp_glValidateProgramPipeline(pipeline)
}
public
func glValidateProgramPipeline(_ pipeline:GL.UInt)
{
    fp_glValidateProgramPipeline(pipeline)
}

var fp_glValidateProgramPipelineEXT:@convention(c) (GL.UInt) -> () = load_glValidateProgramPipelineEXT
func load_glValidateProgramPipelineEXT(pipeline:GL.UInt)
{
    fp_glValidateProgramPipelineEXT = unsafeBitCast(get_fp("glValidateProgramPipelineEXT", support: [ss182]), to: Swift.type(of: fp_glValidateProgramPipelineEXT))
    fp_glValidateProgramPipelineEXT(pipeline)
}
public
func glValidateProgramPipelineEXT(pipeline:GL.UInt)
{
    fp_glValidateProgramPipelineEXT(pipeline)
}
public
func glValidateProgramPipelineEXT(_ pipeline:GL.UInt)
{
    fp_glValidateProgramPipelineEXT(pipeline)
}

var fp_glVariantArrayObjectATI:@convention(c) (GL.UInt, GL.Enum, GL.Size, GL.UInt, GL.UInt) -> () = load_glVariantArrayObjectATI
func load_glVariantArrayObjectATI(id:GL.UInt, type:GL.Enum, stride:GL.Size, buffer:GL.UInt, offset:GL.UInt)
{
    fp_glVariantArrayObjectATI = unsafeBitCast(get_fp("glVariantArrayObjectATI", support: [ss122]), to: Swift.type(of: fp_glVariantArrayObjectATI))
    fp_glVariantArrayObjectATI(id, type, stride, buffer, offset)
}
public
func glVariantArrayObjectATI(id:GL.UInt, type:GL.Enum, stride:GL.Size, buffer:GL.UInt, offset:GL.UInt)
{
    fp_glVariantArrayObjectATI(id, type, stride, buffer, offset)
}
public
func glVariantArrayObjectATI(_ id:GL.UInt, _ type:GL.Enum, _ stride:GL.Size, _ buffer:GL.UInt, _ offset:GL.UInt)
{
    fp_glVariantArrayObjectATI(id, type, stride, buffer, offset)
}

var fp_glVariantPointerEXT:@convention(c) (GL.UInt, GL.Enum, GL.UInt, UnsafeRawPointer?) -> () = load_glVariantPointerEXT
func load_glVariantPointerEXT(id:GL.UInt, type:GL.Enum, stride:GL.UInt, addr:UnsafeRawPointer?)
{
    fp_glVariantPointerEXT = unsafeBitCast(get_fp("glVariantPointerEXT", support: [ss204]), to: Swift.type(of: fp_glVariantPointerEXT))
    fp_glVariantPointerEXT(id, type, stride, addr)
}
public
func glVariantPointerEXT(id:GL.UInt, type:GL.Enum, stride:GL.UInt, addr:UnsafeRawPointer?)
{
    fp_glVariantPointerEXT(id, type, stride, addr)
}
public
func glVariantPointerEXT(_ id:GL.UInt, _ type:GL.Enum, _ stride:GL.UInt, _ addr:UnsafeRawPointer?)
{
    fp_glVariantPointerEXT(id, type, stride, addr)
}

var fp_glVariantbvEXT:@convention(c) (GL.UInt, UnsafePointer<GL.Byte>?) -> () = load_glVariantbvEXT
func load_glVariantbvEXT(id:GL.UInt, addr:UnsafePointer<GL.Byte>?)
{
    fp_glVariantbvEXT = unsafeBitCast(get_fp("glVariantbvEXT", support: [ss204]), to: Swift.type(of: fp_glVariantbvEXT))
    fp_glVariantbvEXT(id, addr)
}
public
func glVariantbvEXT(id:GL.UInt, addr:UnsafePointer<GL.Byte>?)
{
    fp_glVariantbvEXT(id, addr)
}
public
func glVariantbvEXT(_ id:GL.UInt, _ addr:UnsafePointer<GL.Byte>?)
{
    fp_glVariantbvEXT(id, addr)
}

var fp_glVariantdvEXT:@convention(c) (GL.UInt, UnsafePointer<GL.Double>?) -> () = load_glVariantdvEXT
func load_glVariantdvEXT(id:GL.UInt, addr:UnsafePointer<GL.Double>?)
{
    fp_glVariantdvEXT = unsafeBitCast(get_fp("glVariantdvEXT", support: [ss204]), to: Swift.type(of: fp_glVariantdvEXT))
    fp_glVariantdvEXT(id, addr)
}
public
func glVariantdvEXT(id:GL.UInt, addr:UnsafePointer<GL.Double>?)
{
    fp_glVariantdvEXT(id, addr)
}
public
func glVariantdvEXT(_ id:GL.UInt, _ addr:UnsafePointer<GL.Double>?)
{
    fp_glVariantdvEXT(id, addr)
}

var fp_glVariantfvEXT:@convention(c) (GL.UInt, UnsafePointer<GL.Float>?) -> () = load_glVariantfvEXT
func load_glVariantfvEXT(id:GL.UInt, addr:UnsafePointer<GL.Float>?)
{
    fp_glVariantfvEXT = unsafeBitCast(get_fp("glVariantfvEXT", support: [ss204]), to: Swift.type(of: fp_glVariantfvEXT))
    fp_glVariantfvEXT(id, addr)
}
public
func glVariantfvEXT(id:GL.UInt, addr:UnsafePointer<GL.Float>?)
{
    fp_glVariantfvEXT(id, addr)
}
public
func glVariantfvEXT(_ id:GL.UInt, _ addr:UnsafePointer<GL.Float>?)
{
    fp_glVariantfvEXT(id, addr)
}

var fp_glVariantivEXT:@convention(c) (GL.UInt, UnsafePointer<GL.Int>?) -> () = load_glVariantivEXT
func load_glVariantivEXT(id:GL.UInt, addr:UnsafePointer<GL.Int>?)
{
    fp_glVariantivEXT = unsafeBitCast(get_fp("glVariantivEXT", support: [ss204]), to: Swift.type(of: fp_glVariantivEXT))
    fp_glVariantivEXT(id, addr)
}
public
func glVariantivEXT(id:GL.UInt, addr:UnsafePointer<GL.Int>?)
{
    fp_glVariantivEXT(id, addr)
}
public
func glVariantivEXT(_ id:GL.UInt, _ addr:UnsafePointer<GL.Int>?)
{
    fp_glVariantivEXT(id, addr)
}

var fp_glVariantsvEXT:@convention(c) (GL.UInt, UnsafePointer<GL.Short>?) -> () = load_glVariantsvEXT
func load_glVariantsvEXT(id:GL.UInt, addr:UnsafePointer<GL.Short>?)
{
    fp_glVariantsvEXT = unsafeBitCast(get_fp("glVariantsvEXT", support: [ss204]), to: Swift.type(of: fp_glVariantsvEXT))
    fp_glVariantsvEXT(id, addr)
}
public
func glVariantsvEXT(id:GL.UInt, addr:UnsafePointer<GL.Short>?)
{
    fp_glVariantsvEXT(id, addr)
}
public
func glVariantsvEXT(_ id:GL.UInt, _ addr:UnsafePointer<GL.Short>?)
{
    fp_glVariantsvEXT(id, addr)
}

var fp_glVariantubvEXT:@convention(c) (GL.UInt, UnsafePointer<GL.UByte>?) -> () = load_glVariantubvEXT
func load_glVariantubvEXT(id:GL.UInt, addr:UnsafePointer<GL.UByte>?)
{
    fp_glVariantubvEXT = unsafeBitCast(get_fp("glVariantubvEXT", support: [ss204]), to: Swift.type(of: fp_glVariantubvEXT))
    fp_glVariantubvEXT(id, addr)
}
public
func glVariantubvEXT(id:GL.UInt, addr:UnsafePointer<GL.UByte>?)
{
    fp_glVariantubvEXT(id, addr)
}
public
func glVariantubvEXT(_ id:GL.UInt, _ addr:UnsafePointer<GL.UByte>?)
{
    fp_glVariantubvEXT(id, addr)
}

var fp_glVariantuivEXT:@convention(c) (GL.UInt, UnsafePointer<GL.UInt>?) -> () = load_glVariantuivEXT
func load_glVariantuivEXT(id:GL.UInt, addr:UnsafePointer<GL.UInt>?)
{
    fp_glVariantuivEXT = unsafeBitCast(get_fp("glVariantuivEXT", support: [ss204]), to: Swift.type(of: fp_glVariantuivEXT))
    fp_glVariantuivEXT(id, addr)
}
public
func glVariantuivEXT(id:GL.UInt, addr:UnsafePointer<GL.UInt>?)
{
    fp_glVariantuivEXT(id, addr)
}
public
func glVariantuivEXT(_ id:GL.UInt, _ addr:UnsafePointer<GL.UInt>?)
{
    fp_glVariantuivEXT(id, addr)
}

var fp_glVariantusvEXT:@convention(c) (GL.UInt, UnsafePointer<GL.UShort>?) -> () = load_glVariantusvEXT
func load_glVariantusvEXT(id:GL.UInt, addr:UnsafePointer<GL.UShort>?)
{
    fp_glVariantusvEXT = unsafeBitCast(get_fp("glVariantusvEXT", support: [ss204]), to: Swift.type(of: fp_glVariantusvEXT))
    fp_glVariantusvEXT(id, addr)
}
public
func glVariantusvEXT(id:GL.UInt, addr:UnsafePointer<GL.UShort>?)
{
    fp_glVariantusvEXT(id, addr)
}
public
func glVariantusvEXT(_ id:GL.UInt, _ addr:UnsafePointer<GL.UShort>?)
{
    fp_glVariantusvEXT(id, addr)
}

var fp_glVertex2bOES:@convention(c) (GL.Byte, GL.Byte) -> () = load_glVertex2bOES
func load_glVertex2bOES(x:GL.Byte, y:GL.Byte)
{
    fp_glVertex2bOES = unsafeBitCast(get_fp("glVertex2bOES", support: [ss286]), to: Swift.type(of: fp_glVertex2bOES))
    fp_glVertex2bOES(x, y)
}
public
func glVertex2bOES(x:GL.Byte, y:GL.Byte)
{
    fp_glVertex2bOES(x, y)
}
public
func glVertex2bOES(_ x:GL.Byte, _ y:GL.Byte)
{
    fp_glVertex2bOES(x, y)
}

var fp_glVertex2bvOES:@convention(c) (UnsafePointer<GL.Byte>?) -> () = load_glVertex2bvOES
func load_glVertex2bvOES(coords:UnsafePointer<GL.Byte>?)
{
    fp_glVertex2bvOES = unsafeBitCast(get_fp("glVertex2bvOES", support: [ss286]), to: Swift.type(of: fp_glVertex2bvOES))
    fp_glVertex2bvOES(coords)
}
public
func glVertex2bvOES(coords:UnsafePointer<GL.Byte>?)
{
    fp_glVertex2bvOES(coords)
}
public
func glVertex2bvOES(_ coords:UnsafePointer<GL.Byte>?)
{
    fp_glVertex2bvOES(coords)
}

var fp_glVertex2d:@convention(c) (GL.Double, GL.Double) -> () = load_glVertex2d
func load_glVertex2d(x:GL.Double, y:GL.Double)
{
    fp_glVertex2d = unsafeBitCast(get_fp("glVertex2d", support: [ss346, ss369]), to: Swift.type(of: fp_glVertex2d))
    fp_glVertex2d(x, y)
}
public
func glVertex2d(x:GL.Double, y:GL.Double)
{
    fp_glVertex2d(x, y)
}
public
func glVertex2d(_ x:GL.Double, _ y:GL.Double)
{
    fp_glVertex2d(x, y)
}

var fp_glVertex2dv:@convention(c) (UnsafePointer<GL.Double>?) -> () = load_glVertex2dv
func load_glVertex2dv(v:UnsafePointer<GL.Double>?)
{
    fp_glVertex2dv = unsafeBitCast(get_fp("glVertex2dv", support: [ss346, ss369]), to: Swift.type(of: fp_glVertex2dv))
    fp_glVertex2dv(v)
}
public
func glVertex2dv(v:UnsafePointer<GL.Double>?)
{
    fp_glVertex2dv(v)
}
public
func glVertex2dv(_ v:UnsafePointer<GL.Double>?)
{
    fp_glVertex2dv(v)
}

var fp_glVertex2f:@convention(c) (GL.Float, GL.Float) -> () = load_glVertex2f
func load_glVertex2f(x:GL.Float, y:GL.Float)
{
    fp_glVertex2f = unsafeBitCast(get_fp("glVertex2f", support: [ss346, ss369]), to: Swift.type(of: fp_glVertex2f))
    fp_glVertex2f(x, y)
}
public
func glVertex2f(x:GL.Float, y:GL.Float)
{
    fp_glVertex2f(x, y)
}
public
func glVertex2f(_ x:GL.Float, _ y:GL.Float)
{
    fp_glVertex2f(x, y)
}

var fp_glVertex2fv:@convention(c) (UnsafePointer<GL.Float>?) -> () = load_glVertex2fv
func load_glVertex2fv(v:UnsafePointer<GL.Float>?)
{
    fp_glVertex2fv = unsafeBitCast(get_fp("glVertex2fv", support: [ss346, ss369]), to: Swift.type(of: fp_glVertex2fv))
    fp_glVertex2fv(v)
}
public
func glVertex2fv(v:UnsafePointer<GL.Float>?)
{
    fp_glVertex2fv(v)
}
public
func glVertex2fv(_ v:UnsafePointer<GL.Float>?)
{
    fp_glVertex2fv(v)
}

var fp_glVertex2hNV:@convention(c) (GL.HalfNV, GL.HalfNV) -> () = load_glVertex2hNV
func load_glVertex2hNV(x:GL.HalfNV, y:GL.HalfNV)
{
    fp_glVertex2hNV = unsafeBitCast(get_fp("glVertex2hNV", support: [ss253]), to: Swift.type(of: fp_glVertex2hNV))
    fp_glVertex2hNV(x, y)
}
public
func glVertex2hNV(x:GL.HalfNV, y:GL.HalfNV)
{
    fp_glVertex2hNV(x, y)
}
public
func glVertex2hNV(_ x:GL.HalfNV, _ y:GL.HalfNV)
{
    fp_glVertex2hNV(x, y)
}

var fp_glVertex2hvNV:@convention(c) (UnsafePointer<GL.HalfNV>?) -> () = load_glVertex2hvNV
func load_glVertex2hvNV(v:UnsafePointer<GL.HalfNV>?)
{
    fp_glVertex2hvNV = unsafeBitCast(get_fp("glVertex2hvNV", support: [ss253]), to: Swift.type(of: fp_glVertex2hvNV))
    fp_glVertex2hvNV(v)
}
public
func glVertex2hvNV(v:UnsafePointer<GL.HalfNV>?)
{
    fp_glVertex2hvNV(v)
}
public
func glVertex2hvNV(_ v:UnsafePointer<GL.HalfNV>?)
{
    fp_glVertex2hvNV(v)
}

var fp_glVertex2i:@convention(c) (GL.Int, GL.Int) -> () = load_glVertex2i
func load_glVertex2i(x:GL.Int, y:GL.Int)
{
    fp_glVertex2i = unsafeBitCast(get_fp("glVertex2i", support: [ss346, ss369]), to: Swift.type(of: fp_glVertex2i))
    fp_glVertex2i(x, y)
}
public
func glVertex2i(x:GL.Int, y:GL.Int)
{
    fp_glVertex2i(x, y)
}
public
func glVertex2i(_ x:GL.Int, _ y:GL.Int)
{
    fp_glVertex2i(x, y)
}

var fp_glVertex2iv:@convention(c) (UnsafePointer<GL.Int>?) -> () = load_glVertex2iv
func load_glVertex2iv(v:UnsafePointer<GL.Int>?)
{
    fp_glVertex2iv = unsafeBitCast(get_fp("glVertex2iv", support: [ss346, ss369]), to: Swift.type(of: fp_glVertex2iv))
    fp_glVertex2iv(v)
}
public
func glVertex2iv(v:UnsafePointer<GL.Int>?)
{
    fp_glVertex2iv(v)
}
public
func glVertex2iv(_ v:UnsafePointer<GL.Int>?)
{
    fp_glVertex2iv(v)
}

var fp_glVertex2s:@convention(c) (GL.Short, GL.Short) -> () = load_glVertex2s
func load_glVertex2s(x:GL.Short, y:GL.Short)
{
    fp_glVertex2s = unsafeBitCast(get_fp("glVertex2s", support: [ss346, ss369]), to: Swift.type(of: fp_glVertex2s))
    fp_glVertex2s(x, y)
}
public
func glVertex2s(x:GL.Short, y:GL.Short)
{
    fp_glVertex2s(x, y)
}
public
func glVertex2s(_ x:GL.Short, _ y:GL.Short)
{
    fp_glVertex2s(x, y)
}

var fp_glVertex2sv:@convention(c) (UnsafePointer<GL.Short>?) -> () = load_glVertex2sv
func load_glVertex2sv(v:UnsafePointer<GL.Short>?)
{
    fp_glVertex2sv = unsafeBitCast(get_fp("glVertex2sv", support: [ss346, ss369]), to: Swift.type(of: fp_glVertex2sv))
    fp_glVertex2sv(v)
}
public
func glVertex2sv(v:UnsafePointer<GL.Short>?)
{
    fp_glVertex2sv(v)
}
public
func glVertex2sv(_ v:UnsafePointer<GL.Short>?)
{
    fp_glVertex2sv(v)
}

var fp_glVertex2xOES:@convention(c) (GL.Fixed) -> () = load_glVertex2xOES
func load_glVertex2xOES(x:GL.Fixed)
{
    fp_glVertex2xOES = unsafeBitCast(get_fp("glVertex2xOES", support: [ss292]), to: Swift.type(of: fp_glVertex2xOES))
    fp_glVertex2xOES(x)
}
public
func glVertex2xOES(x:GL.Fixed)
{
    fp_glVertex2xOES(x)
}
public
func glVertex2xOES(_ x:GL.Fixed)
{
    fp_glVertex2xOES(x)
}

var fp_glVertex2xvOES:@convention(c) (UnsafePointer<GL.Fixed>?) -> () = load_glVertex2xvOES
func load_glVertex2xvOES(coords:UnsafePointer<GL.Fixed>?)
{
    fp_glVertex2xvOES = unsafeBitCast(get_fp("glVertex2xvOES", support: [ss292]), to: Swift.type(of: fp_glVertex2xvOES))
    fp_glVertex2xvOES(coords)
}
public
func glVertex2xvOES(coords:UnsafePointer<GL.Fixed>?)
{
    fp_glVertex2xvOES(coords)
}
public
func glVertex2xvOES(_ coords:UnsafePointer<GL.Fixed>?)
{
    fp_glVertex2xvOES(coords)
}

var fp_glVertex3bOES:@convention(c) (GL.Byte, GL.Byte, GL.Byte) -> () = load_glVertex3bOES
func load_glVertex3bOES(x:GL.Byte, y:GL.Byte, z:GL.Byte)
{
    fp_glVertex3bOES = unsafeBitCast(get_fp("glVertex3bOES", support: [ss286]), to: Swift.type(of: fp_glVertex3bOES))
    fp_glVertex3bOES(x, y, z)
}
public
func glVertex3bOES(x:GL.Byte, y:GL.Byte, z:GL.Byte)
{
    fp_glVertex3bOES(x, y, z)
}
public
func glVertex3bOES(_ x:GL.Byte, _ y:GL.Byte, _ z:GL.Byte)
{
    fp_glVertex3bOES(x, y, z)
}

var fp_glVertex3bvOES:@convention(c) (UnsafePointer<GL.Byte>?) -> () = load_glVertex3bvOES
func load_glVertex3bvOES(coords:UnsafePointer<GL.Byte>?)
{
    fp_glVertex3bvOES = unsafeBitCast(get_fp("glVertex3bvOES", support: [ss286]), to: Swift.type(of: fp_glVertex3bvOES))
    fp_glVertex3bvOES(coords)
}
public
func glVertex3bvOES(coords:UnsafePointer<GL.Byte>?)
{
    fp_glVertex3bvOES(coords)
}
public
func glVertex3bvOES(_ coords:UnsafePointer<GL.Byte>?)
{
    fp_glVertex3bvOES(coords)
}

var fp_glVertex3d:@convention(c) (GL.Double, GL.Double, GL.Double) -> () = load_glVertex3d
func load_glVertex3d(x:GL.Double, y:GL.Double, z:GL.Double)
{
    fp_glVertex3d = unsafeBitCast(get_fp("glVertex3d", support: [ss346, ss369]), to: Swift.type(of: fp_glVertex3d))
    fp_glVertex3d(x, y, z)
}
public
func glVertex3d(x:GL.Double, y:GL.Double, z:GL.Double)
{
    fp_glVertex3d(x, y, z)
}
public
func glVertex3d(_ x:GL.Double, _ y:GL.Double, _ z:GL.Double)
{
    fp_glVertex3d(x, y, z)
}

var fp_glVertex3dv:@convention(c) (UnsafePointer<GL.Double>?) -> () = load_glVertex3dv
func load_glVertex3dv(v:UnsafePointer<GL.Double>?)
{
    fp_glVertex3dv = unsafeBitCast(get_fp("glVertex3dv", support: [ss346, ss369]), to: Swift.type(of: fp_glVertex3dv))
    fp_glVertex3dv(v)
}
public
func glVertex3dv(v:UnsafePointer<GL.Double>?)
{
    fp_glVertex3dv(v)
}
public
func glVertex3dv(_ v:UnsafePointer<GL.Double>?)
{
    fp_glVertex3dv(v)
}

var fp_glVertex3f:@convention(c) (GL.Float, GL.Float, GL.Float) -> () = load_glVertex3f
func load_glVertex3f(x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glVertex3f = unsafeBitCast(get_fp("glVertex3f", support: [ss346, ss369]), to: Swift.type(of: fp_glVertex3f))
    fp_glVertex3f(x, y, z)
}
public
func glVertex3f(x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glVertex3f(x, y, z)
}
public
func glVertex3f(_ x:GL.Float, _ y:GL.Float, _ z:GL.Float)
{
    fp_glVertex3f(x, y, z)
}

var fp_glVertex3fv:@convention(c) (UnsafePointer<GL.Float>?) -> () = load_glVertex3fv
func load_glVertex3fv(v:UnsafePointer<GL.Float>?)
{
    fp_glVertex3fv = unsafeBitCast(get_fp("glVertex3fv", support: [ss346, ss369]), to: Swift.type(of: fp_glVertex3fv))
    fp_glVertex3fv(v)
}
public
func glVertex3fv(v:UnsafePointer<GL.Float>?)
{
    fp_glVertex3fv(v)
}
public
func glVertex3fv(_ v:UnsafePointer<GL.Float>?)
{
    fp_glVertex3fv(v)
}

var fp_glVertex3hNV:@convention(c) (GL.HalfNV, GL.HalfNV, GL.HalfNV) -> () = load_glVertex3hNV
func load_glVertex3hNV(x:GL.HalfNV, y:GL.HalfNV, z:GL.HalfNV)
{
    fp_glVertex3hNV = unsafeBitCast(get_fp("glVertex3hNV", support: [ss253]), to: Swift.type(of: fp_glVertex3hNV))
    fp_glVertex3hNV(x, y, z)
}
public
func glVertex3hNV(x:GL.HalfNV, y:GL.HalfNV, z:GL.HalfNV)
{
    fp_glVertex3hNV(x, y, z)
}
public
func glVertex3hNV(_ x:GL.HalfNV, _ y:GL.HalfNV, _ z:GL.HalfNV)
{
    fp_glVertex3hNV(x, y, z)
}

var fp_glVertex3hvNV:@convention(c) (UnsafePointer<GL.HalfNV>?) -> () = load_glVertex3hvNV
func load_glVertex3hvNV(v:UnsafePointer<GL.HalfNV>?)
{
    fp_glVertex3hvNV = unsafeBitCast(get_fp("glVertex3hvNV", support: [ss253]), to: Swift.type(of: fp_glVertex3hvNV))
    fp_glVertex3hvNV(v)
}
public
func glVertex3hvNV(v:UnsafePointer<GL.HalfNV>?)
{
    fp_glVertex3hvNV(v)
}
public
func glVertex3hvNV(_ v:UnsafePointer<GL.HalfNV>?)
{
    fp_glVertex3hvNV(v)
}

var fp_glVertex3i:@convention(c) (GL.Int, GL.Int, GL.Int) -> () = load_glVertex3i
func load_glVertex3i(x:GL.Int, y:GL.Int, z:GL.Int)
{
    fp_glVertex3i = unsafeBitCast(get_fp("glVertex3i", support: [ss346, ss369]), to: Swift.type(of: fp_glVertex3i))
    fp_glVertex3i(x, y, z)
}
public
func glVertex3i(x:GL.Int, y:GL.Int, z:GL.Int)
{
    fp_glVertex3i(x, y, z)
}
public
func glVertex3i(_ x:GL.Int, _ y:GL.Int, _ z:GL.Int)
{
    fp_glVertex3i(x, y, z)
}

var fp_glVertex3iv:@convention(c) (UnsafePointer<GL.Int>?) -> () = load_glVertex3iv
func load_glVertex3iv(v:UnsafePointer<GL.Int>?)
{
    fp_glVertex3iv = unsafeBitCast(get_fp("glVertex3iv", support: [ss346, ss369]), to: Swift.type(of: fp_glVertex3iv))
    fp_glVertex3iv(v)
}
public
func glVertex3iv(v:UnsafePointer<GL.Int>?)
{
    fp_glVertex3iv(v)
}
public
func glVertex3iv(_ v:UnsafePointer<GL.Int>?)
{
    fp_glVertex3iv(v)
}

var fp_glVertex3s:@convention(c) (GL.Short, GL.Short, GL.Short) -> () = load_glVertex3s
func load_glVertex3s(x:GL.Short, y:GL.Short, z:GL.Short)
{
    fp_glVertex3s = unsafeBitCast(get_fp("glVertex3s", support: [ss346, ss369]), to: Swift.type(of: fp_glVertex3s))
    fp_glVertex3s(x, y, z)
}
public
func glVertex3s(x:GL.Short, y:GL.Short, z:GL.Short)
{
    fp_glVertex3s(x, y, z)
}
public
func glVertex3s(_ x:GL.Short, _ y:GL.Short, _ z:GL.Short)
{
    fp_glVertex3s(x, y, z)
}

var fp_glVertex3sv:@convention(c) (UnsafePointer<GL.Short>?) -> () = load_glVertex3sv
func load_glVertex3sv(v:UnsafePointer<GL.Short>?)
{
    fp_glVertex3sv = unsafeBitCast(get_fp("glVertex3sv", support: [ss346, ss369]), to: Swift.type(of: fp_glVertex3sv))
    fp_glVertex3sv(v)
}
public
func glVertex3sv(v:UnsafePointer<GL.Short>?)
{
    fp_glVertex3sv(v)
}
public
func glVertex3sv(_ v:UnsafePointer<GL.Short>?)
{
    fp_glVertex3sv(v)
}

var fp_glVertex3xOES:@convention(c) (GL.Fixed, GL.Fixed) -> () = load_glVertex3xOES
func load_glVertex3xOES(x:GL.Fixed, y:GL.Fixed)
{
    fp_glVertex3xOES = unsafeBitCast(get_fp("glVertex3xOES", support: [ss292]), to: Swift.type(of: fp_glVertex3xOES))
    fp_glVertex3xOES(x, y)
}
public
func glVertex3xOES(x:GL.Fixed, y:GL.Fixed)
{
    fp_glVertex3xOES(x, y)
}
public
func glVertex3xOES(_ x:GL.Fixed, _ y:GL.Fixed)
{
    fp_glVertex3xOES(x, y)
}

var fp_glVertex3xvOES:@convention(c) (UnsafePointer<GL.Fixed>?) -> () = load_glVertex3xvOES
func load_glVertex3xvOES(coords:UnsafePointer<GL.Fixed>?)
{
    fp_glVertex3xvOES = unsafeBitCast(get_fp("glVertex3xvOES", support: [ss292]), to: Swift.type(of: fp_glVertex3xvOES))
    fp_glVertex3xvOES(coords)
}
public
func glVertex3xvOES(coords:UnsafePointer<GL.Fixed>?)
{
    fp_glVertex3xvOES(coords)
}
public
func glVertex3xvOES(_ coords:UnsafePointer<GL.Fixed>?)
{
    fp_glVertex3xvOES(coords)
}

var fp_glVertex4bOES:@convention(c) (GL.Byte, GL.Byte, GL.Byte, GL.Byte) -> () = load_glVertex4bOES
func load_glVertex4bOES(x:GL.Byte, y:GL.Byte, z:GL.Byte, w:GL.Byte)
{
    fp_glVertex4bOES = unsafeBitCast(get_fp("glVertex4bOES", support: [ss286]), to: Swift.type(of: fp_glVertex4bOES))
    fp_glVertex4bOES(x, y, z, w)
}
public
func glVertex4bOES(x:GL.Byte, y:GL.Byte, z:GL.Byte, w:GL.Byte)
{
    fp_glVertex4bOES(x, y, z, w)
}
public
func glVertex4bOES(_ x:GL.Byte, _ y:GL.Byte, _ z:GL.Byte, _ w:GL.Byte)
{
    fp_glVertex4bOES(x, y, z, w)
}

var fp_glVertex4bvOES:@convention(c) (UnsafePointer<GL.Byte>?) -> () = load_glVertex4bvOES
func load_glVertex4bvOES(coords:UnsafePointer<GL.Byte>?)
{
    fp_glVertex4bvOES = unsafeBitCast(get_fp("glVertex4bvOES", support: [ss286]), to: Swift.type(of: fp_glVertex4bvOES))
    fp_glVertex4bvOES(coords)
}
public
func glVertex4bvOES(coords:UnsafePointer<GL.Byte>?)
{
    fp_glVertex4bvOES(coords)
}
public
func glVertex4bvOES(_ coords:UnsafePointer<GL.Byte>?)
{
    fp_glVertex4bvOES(coords)
}

var fp_glVertex4d:@convention(c) (GL.Double, GL.Double, GL.Double, GL.Double) -> () = load_glVertex4d
func load_glVertex4d(x:GL.Double, y:GL.Double, z:GL.Double, w:GL.Double)
{
    fp_glVertex4d = unsafeBitCast(get_fp("glVertex4d", support: [ss346, ss369]), to: Swift.type(of: fp_glVertex4d))
    fp_glVertex4d(x, y, z, w)
}
public
func glVertex4d(x:GL.Double, y:GL.Double, z:GL.Double, w:GL.Double)
{
    fp_glVertex4d(x, y, z, w)
}
public
func glVertex4d(_ x:GL.Double, _ y:GL.Double, _ z:GL.Double, _ w:GL.Double)
{
    fp_glVertex4d(x, y, z, w)
}

var fp_glVertex4dv:@convention(c) (UnsafePointer<GL.Double>?) -> () = load_glVertex4dv
func load_glVertex4dv(v:UnsafePointer<GL.Double>?)
{
    fp_glVertex4dv = unsafeBitCast(get_fp("glVertex4dv", support: [ss346, ss369]), to: Swift.type(of: fp_glVertex4dv))
    fp_glVertex4dv(v)
}
public
func glVertex4dv(v:UnsafePointer<GL.Double>?)
{
    fp_glVertex4dv(v)
}
public
func glVertex4dv(_ v:UnsafePointer<GL.Double>?)
{
    fp_glVertex4dv(v)
}

var fp_glVertex4f:@convention(c) (GL.Float, GL.Float, GL.Float, GL.Float) -> () = load_glVertex4f
func load_glVertex4f(x:GL.Float, y:GL.Float, z:GL.Float, w:GL.Float)
{
    fp_glVertex4f = unsafeBitCast(get_fp("glVertex4f", support: [ss346, ss369]), to: Swift.type(of: fp_glVertex4f))
    fp_glVertex4f(x, y, z, w)
}
public
func glVertex4f(x:GL.Float, y:GL.Float, z:GL.Float, w:GL.Float)
{
    fp_glVertex4f(x, y, z, w)
}
public
func glVertex4f(_ x:GL.Float, _ y:GL.Float, _ z:GL.Float, _ w:GL.Float)
{
    fp_glVertex4f(x, y, z, w)
}

var fp_glVertex4fv:@convention(c) (UnsafePointer<GL.Float>?) -> () = load_glVertex4fv
func load_glVertex4fv(v:UnsafePointer<GL.Float>?)
{
    fp_glVertex4fv = unsafeBitCast(get_fp("glVertex4fv", support: [ss346, ss369]), to: Swift.type(of: fp_glVertex4fv))
    fp_glVertex4fv(v)
}
public
func glVertex4fv(v:UnsafePointer<GL.Float>?)
{
    fp_glVertex4fv(v)
}
public
func glVertex4fv(_ v:UnsafePointer<GL.Float>?)
{
    fp_glVertex4fv(v)
}

var fp_glVertex4hNV:@convention(c) (GL.HalfNV, GL.HalfNV, GL.HalfNV, GL.HalfNV) -> () = load_glVertex4hNV
func load_glVertex4hNV(x:GL.HalfNV, y:GL.HalfNV, z:GL.HalfNV, w:GL.HalfNV)
{
    fp_glVertex4hNV = unsafeBitCast(get_fp("glVertex4hNV", support: [ss253]), to: Swift.type(of: fp_glVertex4hNV))
    fp_glVertex4hNV(x, y, z, w)
}
public
func glVertex4hNV(x:GL.HalfNV, y:GL.HalfNV, z:GL.HalfNV, w:GL.HalfNV)
{
    fp_glVertex4hNV(x, y, z, w)
}
public
func glVertex4hNV(_ x:GL.HalfNV, _ y:GL.HalfNV, _ z:GL.HalfNV, _ w:GL.HalfNV)
{
    fp_glVertex4hNV(x, y, z, w)
}

var fp_glVertex4hvNV:@convention(c) (UnsafePointer<GL.HalfNV>?) -> () = load_glVertex4hvNV
func load_glVertex4hvNV(v:UnsafePointer<GL.HalfNV>?)
{
    fp_glVertex4hvNV = unsafeBitCast(get_fp("glVertex4hvNV", support: [ss253]), to: Swift.type(of: fp_glVertex4hvNV))
    fp_glVertex4hvNV(v)
}
public
func glVertex4hvNV(v:UnsafePointer<GL.HalfNV>?)
{
    fp_glVertex4hvNV(v)
}
public
func glVertex4hvNV(_ v:UnsafePointer<GL.HalfNV>?)
{
    fp_glVertex4hvNV(v)
}

var fp_glVertex4i:@convention(c) (GL.Int, GL.Int, GL.Int, GL.Int) -> () = load_glVertex4i
func load_glVertex4i(x:GL.Int, y:GL.Int, z:GL.Int, w:GL.Int)
{
    fp_glVertex4i = unsafeBitCast(get_fp("glVertex4i", support: [ss346, ss369]), to: Swift.type(of: fp_glVertex4i))
    fp_glVertex4i(x, y, z, w)
}
public
func glVertex4i(x:GL.Int, y:GL.Int, z:GL.Int, w:GL.Int)
{
    fp_glVertex4i(x, y, z, w)
}
public
func glVertex4i(_ x:GL.Int, _ y:GL.Int, _ z:GL.Int, _ w:GL.Int)
{
    fp_glVertex4i(x, y, z, w)
}

var fp_glVertex4iv:@convention(c) (UnsafePointer<GL.Int>?) -> () = load_glVertex4iv
func load_glVertex4iv(v:UnsafePointer<GL.Int>?)
{
    fp_glVertex4iv = unsafeBitCast(get_fp("glVertex4iv", support: [ss346, ss369]), to: Swift.type(of: fp_glVertex4iv))
    fp_glVertex4iv(v)
}
public
func glVertex4iv(v:UnsafePointer<GL.Int>?)
{
    fp_glVertex4iv(v)
}
public
func glVertex4iv(_ v:UnsafePointer<GL.Int>?)
{
    fp_glVertex4iv(v)
}

var fp_glVertex4s:@convention(c) (GL.Short, GL.Short, GL.Short, GL.Short) -> () = load_glVertex4s
func load_glVertex4s(x:GL.Short, y:GL.Short, z:GL.Short, w:GL.Short)
{
    fp_glVertex4s = unsafeBitCast(get_fp("glVertex4s", support: [ss346, ss369]), to: Swift.type(of: fp_glVertex4s))
    fp_glVertex4s(x, y, z, w)
}
public
func glVertex4s(x:GL.Short, y:GL.Short, z:GL.Short, w:GL.Short)
{
    fp_glVertex4s(x, y, z, w)
}
public
func glVertex4s(_ x:GL.Short, _ y:GL.Short, _ z:GL.Short, _ w:GL.Short)
{
    fp_glVertex4s(x, y, z, w)
}

var fp_glVertex4sv:@convention(c) (UnsafePointer<GL.Short>?) -> () = load_glVertex4sv
func load_glVertex4sv(v:UnsafePointer<GL.Short>?)
{
    fp_glVertex4sv = unsafeBitCast(get_fp("glVertex4sv", support: [ss346, ss369]), to: Swift.type(of: fp_glVertex4sv))
    fp_glVertex4sv(v)
}
public
func glVertex4sv(v:UnsafePointer<GL.Short>?)
{
    fp_glVertex4sv(v)
}
public
func glVertex4sv(_ v:UnsafePointer<GL.Short>?)
{
    fp_glVertex4sv(v)
}

var fp_glVertex4xOES:@convention(c) (GL.Fixed, GL.Fixed, GL.Fixed) -> () = load_glVertex4xOES
func load_glVertex4xOES(x:GL.Fixed, y:GL.Fixed, z:GL.Fixed)
{
    fp_glVertex4xOES = unsafeBitCast(get_fp("glVertex4xOES", support: [ss292]), to: Swift.type(of: fp_glVertex4xOES))
    fp_glVertex4xOES(x, y, z)
}
public
func glVertex4xOES(x:GL.Fixed, y:GL.Fixed, z:GL.Fixed)
{
    fp_glVertex4xOES(x, y, z)
}
public
func glVertex4xOES(_ x:GL.Fixed, _ y:GL.Fixed, _ z:GL.Fixed)
{
    fp_glVertex4xOES(x, y, z)
}

var fp_glVertex4xvOES:@convention(c) (UnsafePointer<GL.Fixed>?) -> () = load_glVertex4xvOES
func load_glVertex4xvOES(coords:UnsafePointer<GL.Fixed>?)
{
    fp_glVertex4xvOES = unsafeBitCast(get_fp("glVertex4xvOES", support: [ss292]), to: Swift.type(of: fp_glVertex4xvOES))
    fp_glVertex4xvOES(coords)
}
public
func glVertex4xvOES(coords:UnsafePointer<GL.Fixed>?)
{
    fp_glVertex4xvOES(coords)
}
public
func glVertex4xvOES(_ coords:UnsafePointer<GL.Fixed>?)
{
    fp_glVertex4xvOES(coords)
}

var fp_glVertexArrayAttribBinding:@convention(c) (GL.UInt, GL.UInt, GL.UInt) -> () = load_glVertexArrayAttribBinding
func load_glVertexArrayAttribBinding(vaobj:GL.UInt, attribindex:GL.UInt, bindingindex:GL.UInt)
{
    fp_glVertexArrayAttribBinding = unsafeBitCast(get_fp("glVertexArrayAttribBinding", support: [ss363, ss42]), to: Swift.type(of: fp_glVertexArrayAttribBinding))
    fp_glVertexArrayAttribBinding(vaobj, attribindex, bindingindex)
}
public
func glVertexArrayAttribBinding(vaobj:GL.UInt, attribindex:GL.UInt, bindingindex:GL.UInt)
{
    fp_glVertexArrayAttribBinding(vaobj, attribindex, bindingindex)
}
public
func glVertexArrayAttribBinding(_ vaobj:GL.UInt, _ attribindex:GL.UInt, _ bindingindex:GL.UInt)
{
    fp_glVertexArrayAttribBinding(vaobj, attribindex, bindingindex)
}

var fp_glVertexArrayAttribFormat:@convention(c) (GL.UInt, GL.UInt, GL.Int, GL.Enum, GL.Bool, GL.UInt) -> () = load_glVertexArrayAttribFormat
func load_glVertexArrayAttribFormat(vaobj:GL.UInt, attribindex:GL.UInt, size:GL.Int, type:GL.Enum, normalized:GL.Bool, relativeoffset:GL.UInt)
{
    fp_glVertexArrayAttribFormat = unsafeBitCast(get_fp("glVertexArrayAttribFormat", support: [ss363, ss42]), to: Swift.type(of: fp_glVertexArrayAttribFormat))
    fp_glVertexArrayAttribFormat(vaobj, attribindex, size, type, normalized, relativeoffset)
}
public
func glVertexArrayAttribFormat(vaobj:GL.UInt, attribindex:GL.UInt, size:GL.Int, type:GL.Enum, normalized:GL.Bool, relativeoffset:GL.UInt)
{
    fp_glVertexArrayAttribFormat(vaobj, attribindex, size, type, normalized, relativeoffset)
}
public
func glVertexArrayAttribFormat(_ vaobj:GL.UInt, _ attribindex:GL.UInt, _ size:GL.Int, _ type:GL.Enum, _ normalized:GL.Bool, _ relativeoffset:GL.UInt)
{
    fp_glVertexArrayAttribFormat(vaobj, attribindex, size, type, normalized, relativeoffset)
}

var fp_glVertexArrayAttribIFormat:@convention(c) (GL.UInt, GL.UInt, GL.Int, GL.Enum, GL.UInt) -> () = load_glVertexArrayAttribIFormat
func load_glVertexArrayAttribIFormat(vaobj:GL.UInt, attribindex:GL.UInt, size:GL.Int, type:GL.Enum, relativeoffset:GL.UInt)
{
    fp_glVertexArrayAttribIFormat = unsafeBitCast(get_fp("glVertexArrayAttribIFormat", support: [ss363, ss42]), to: Swift.type(of: fp_glVertexArrayAttribIFormat))
    fp_glVertexArrayAttribIFormat(vaobj, attribindex, size, type, relativeoffset)
}
public
func glVertexArrayAttribIFormat(vaobj:GL.UInt, attribindex:GL.UInt, size:GL.Int, type:GL.Enum, relativeoffset:GL.UInt)
{
    fp_glVertexArrayAttribIFormat(vaobj, attribindex, size, type, relativeoffset)
}
public
func glVertexArrayAttribIFormat(_ vaobj:GL.UInt, _ attribindex:GL.UInt, _ size:GL.Int, _ type:GL.Enum, _ relativeoffset:GL.UInt)
{
    fp_glVertexArrayAttribIFormat(vaobj, attribindex, size, type, relativeoffset)
}

var fp_glVertexArrayAttribLFormat:@convention(c) (GL.UInt, GL.UInt, GL.Int, GL.Enum, GL.UInt) -> () = load_glVertexArrayAttribLFormat
func load_glVertexArrayAttribLFormat(vaobj:GL.UInt, attribindex:GL.UInt, size:GL.Int, type:GL.Enum, relativeoffset:GL.UInt)
{
    fp_glVertexArrayAttribLFormat = unsafeBitCast(get_fp("glVertexArrayAttribLFormat", support: [ss363, ss42]), to: Swift.type(of: fp_glVertexArrayAttribLFormat))
    fp_glVertexArrayAttribLFormat(vaobj, attribindex, size, type, relativeoffset)
}
public
func glVertexArrayAttribLFormat(vaobj:GL.UInt, attribindex:GL.UInt, size:GL.Int, type:GL.Enum, relativeoffset:GL.UInt)
{
    fp_glVertexArrayAttribLFormat(vaobj, attribindex, size, type, relativeoffset)
}
public
func glVertexArrayAttribLFormat(_ vaobj:GL.UInt, _ attribindex:GL.UInt, _ size:GL.Int, _ type:GL.Enum, _ relativeoffset:GL.UInt)
{
    fp_glVertexArrayAttribLFormat(vaobj, attribindex, size, type, relativeoffset)
}

var fp_glVertexArrayBindVertexBufferEXT:@convention(c) (GL.UInt, GL.UInt, GL.UInt, GL.IntPointer, GL.Size) -> () = load_glVertexArrayBindVertexBufferEXT
func load_glVertexArrayBindVertexBufferEXT(vaobj:GL.UInt, bindingindex:GL.UInt, buffer:GL.UInt, offset:GL.IntPointer, stride:GL.Size)
{
    fp_glVertexArrayBindVertexBufferEXT = unsafeBitCast(get_fp("glVertexArrayBindVertexBufferEXT", support: [ss143]), to: Swift.type(of: fp_glVertexArrayBindVertexBufferEXT))
    fp_glVertexArrayBindVertexBufferEXT(vaobj, bindingindex, buffer, offset, stride)
}
public
func glVertexArrayBindVertexBufferEXT(vaobj:GL.UInt, bindingindex:GL.UInt, buffer:GL.UInt, offset:GL.IntPointer, stride:GL.Size)
{
    fp_glVertexArrayBindVertexBufferEXT(vaobj, bindingindex, buffer, offset, stride)
}
public
func glVertexArrayBindVertexBufferEXT(_ vaobj:GL.UInt, _ bindingindex:GL.UInt, _ buffer:GL.UInt, _ offset:GL.IntPointer, _ stride:GL.Size)
{
    fp_glVertexArrayBindVertexBufferEXT(vaobj, bindingindex, buffer, offset, stride)
}

var fp_glVertexArrayBindingDivisor:@convention(c) (GL.UInt, GL.UInt, GL.UInt) -> () = load_glVertexArrayBindingDivisor
func load_glVertexArrayBindingDivisor(vaobj:GL.UInt, bindingindex:GL.UInt, divisor:GL.UInt)
{
    fp_glVertexArrayBindingDivisor = unsafeBitCast(get_fp("glVertexArrayBindingDivisor", support: [ss363, ss42]), to: Swift.type(of: fp_glVertexArrayBindingDivisor))
    fp_glVertexArrayBindingDivisor(vaobj, bindingindex, divisor)
}
public
func glVertexArrayBindingDivisor(vaobj:GL.UInt, bindingindex:GL.UInt, divisor:GL.UInt)
{
    fp_glVertexArrayBindingDivisor(vaobj, bindingindex, divisor)
}
public
func glVertexArrayBindingDivisor(_ vaobj:GL.UInt, _ bindingindex:GL.UInt, _ divisor:GL.UInt)
{
    fp_glVertexArrayBindingDivisor(vaobj, bindingindex, divisor)
}

var fp_glVertexArrayColorOffsetEXT:@convention(c) (GL.UInt, GL.UInt, GL.Int, GL.Enum, GL.Size, GL.IntPointer) -> () = load_glVertexArrayColorOffsetEXT
func load_glVertexArrayColorOffsetEXT(vaobj:GL.UInt, buffer:GL.UInt, size:GL.Int, type:GL.Enum, stride:GL.Size, offset:GL.IntPointer)
{
    fp_glVertexArrayColorOffsetEXT = unsafeBitCast(get_fp("glVertexArrayColorOffsetEXT", support: [ss143]), to: Swift.type(of: fp_glVertexArrayColorOffsetEXT))
    fp_glVertexArrayColorOffsetEXT(vaobj, buffer, size, type, stride, offset)
}
public
func glVertexArrayColorOffsetEXT(vaobj:GL.UInt, buffer:GL.UInt, size:GL.Int, type:GL.Enum, stride:GL.Size, offset:GL.IntPointer)
{
    fp_glVertexArrayColorOffsetEXT(vaobj, buffer, size, type, stride, offset)
}
public
func glVertexArrayColorOffsetEXT(_ vaobj:GL.UInt, _ buffer:GL.UInt, _ size:GL.Int, _ type:GL.Enum, _ stride:GL.Size, _ offset:GL.IntPointer)
{
    fp_glVertexArrayColorOffsetEXT(vaobj, buffer, size, type, stride, offset)
}

var fp_glVertexArrayEdgeFlagOffsetEXT:@convention(c) (GL.UInt, GL.UInt, GL.Size, GL.IntPointer) -> () = load_glVertexArrayEdgeFlagOffsetEXT
func load_glVertexArrayEdgeFlagOffsetEXT(vaobj:GL.UInt, buffer:GL.UInt, stride:GL.Size, offset:GL.IntPointer)
{
    fp_glVertexArrayEdgeFlagOffsetEXT = unsafeBitCast(get_fp("glVertexArrayEdgeFlagOffsetEXT", support: [ss143]), to: Swift.type(of: fp_glVertexArrayEdgeFlagOffsetEXT))
    fp_glVertexArrayEdgeFlagOffsetEXT(vaobj, buffer, stride, offset)
}
public
func glVertexArrayEdgeFlagOffsetEXT(vaobj:GL.UInt, buffer:GL.UInt, stride:GL.Size, offset:GL.IntPointer)
{
    fp_glVertexArrayEdgeFlagOffsetEXT(vaobj, buffer, stride, offset)
}
public
func glVertexArrayEdgeFlagOffsetEXT(_ vaobj:GL.UInt, _ buffer:GL.UInt, _ stride:GL.Size, _ offset:GL.IntPointer)
{
    fp_glVertexArrayEdgeFlagOffsetEXT(vaobj, buffer, stride, offset)
}

var fp_glVertexArrayElementBuffer:@convention(c) (GL.UInt, GL.UInt) -> () = load_glVertexArrayElementBuffer
func load_glVertexArrayElementBuffer(vaobj:GL.UInt, buffer:GL.UInt)
{
    fp_glVertexArrayElementBuffer = unsafeBitCast(get_fp("glVertexArrayElementBuffer", support: [ss363, ss42]), to: Swift.type(of: fp_glVertexArrayElementBuffer))
    fp_glVertexArrayElementBuffer(vaobj, buffer)
}
public
func glVertexArrayElementBuffer(vaobj:GL.UInt, buffer:GL.UInt)
{
    fp_glVertexArrayElementBuffer(vaobj, buffer)
}
public
func glVertexArrayElementBuffer(_ vaobj:GL.UInt, _ buffer:GL.UInt)
{
    fp_glVertexArrayElementBuffer(vaobj, buffer)
}

var fp_glVertexArrayFogCoordOffsetEXT:@convention(c) (GL.UInt, GL.UInt, GL.Enum, GL.Size, GL.IntPointer) -> () = load_glVertexArrayFogCoordOffsetEXT
func load_glVertexArrayFogCoordOffsetEXT(vaobj:GL.UInt, buffer:GL.UInt, type:GL.Enum, stride:GL.Size, offset:GL.IntPointer)
{
    fp_glVertexArrayFogCoordOffsetEXT = unsafeBitCast(get_fp("glVertexArrayFogCoordOffsetEXT", support: [ss143]), to: Swift.type(of: fp_glVertexArrayFogCoordOffsetEXT))
    fp_glVertexArrayFogCoordOffsetEXT(vaobj, buffer, type, stride, offset)
}
public
func glVertexArrayFogCoordOffsetEXT(vaobj:GL.UInt, buffer:GL.UInt, type:GL.Enum, stride:GL.Size, offset:GL.IntPointer)
{
    fp_glVertexArrayFogCoordOffsetEXT(vaobj, buffer, type, stride, offset)
}
public
func glVertexArrayFogCoordOffsetEXT(_ vaobj:GL.UInt, _ buffer:GL.UInt, _ type:GL.Enum, _ stride:GL.Size, _ offset:GL.IntPointer)
{
    fp_glVertexArrayFogCoordOffsetEXT(vaobj, buffer, type, stride, offset)
}

var fp_glVertexArrayIndexOffsetEXT:@convention(c) (GL.UInt, GL.UInt, GL.Enum, GL.Size, GL.IntPointer) -> () = load_glVertexArrayIndexOffsetEXT
func load_glVertexArrayIndexOffsetEXT(vaobj:GL.UInt, buffer:GL.UInt, type:GL.Enum, stride:GL.Size, offset:GL.IntPointer)
{
    fp_glVertexArrayIndexOffsetEXT = unsafeBitCast(get_fp("glVertexArrayIndexOffsetEXT", support: [ss143]), to: Swift.type(of: fp_glVertexArrayIndexOffsetEXT))
    fp_glVertexArrayIndexOffsetEXT(vaobj, buffer, type, stride, offset)
}
public
func glVertexArrayIndexOffsetEXT(vaobj:GL.UInt, buffer:GL.UInt, type:GL.Enum, stride:GL.Size, offset:GL.IntPointer)
{
    fp_glVertexArrayIndexOffsetEXT(vaobj, buffer, type, stride, offset)
}
public
func glVertexArrayIndexOffsetEXT(_ vaobj:GL.UInt, _ buffer:GL.UInt, _ type:GL.Enum, _ stride:GL.Size, _ offset:GL.IntPointer)
{
    fp_glVertexArrayIndexOffsetEXT(vaobj, buffer, type, stride, offset)
}

var fp_glVertexArrayMultiTexCoordOffsetEXT:@convention(c) (GL.UInt, GL.UInt, GL.Enum, GL.Int, GL.Enum, GL.Size, GL.IntPointer) -> () = load_glVertexArrayMultiTexCoordOffsetEXT
func load_glVertexArrayMultiTexCoordOffsetEXT(vaobj:GL.UInt, buffer:GL.UInt, texunit:GL.Enum, size:GL.Int, type:GL.Enum, stride:GL.Size, offset:GL.IntPointer)
{
    fp_glVertexArrayMultiTexCoordOffsetEXT = unsafeBitCast(get_fp("glVertexArrayMultiTexCoordOffsetEXT", support: [ss143]), to: Swift.type(of: fp_glVertexArrayMultiTexCoordOffsetEXT))
    fp_glVertexArrayMultiTexCoordOffsetEXT(vaobj, buffer, texunit, size, type, stride, offset)
}
public
func glVertexArrayMultiTexCoordOffsetEXT(vaobj:GL.UInt, buffer:GL.UInt, texunit:GL.Enum, size:GL.Int, type:GL.Enum, stride:GL.Size, offset:GL.IntPointer)
{
    fp_glVertexArrayMultiTexCoordOffsetEXT(vaobj, buffer, texunit, size, type, stride, offset)
}
public
func glVertexArrayMultiTexCoordOffsetEXT(_ vaobj:GL.UInt, _ buffer:GL.UInt, _ texunit:GL.Enum, _ size:GL.Int, _ type:GL.Enum, _ stride:GL.Size, _ offset:GL.IntPointer)
{
    fp_glVertexArrayMultiTexCoordOffsetEXT(vaobj, buffer, texunit, size, type, stride, offset)
}

var fp_glVertexArrayNormalOffsetEXT:@convention(c) (GL.UInt, GL.UInt, GL.Enum, GL.Size, GL.IntPointer) -> () = load_glVertexArrayNormalOffsetEXT
func load_glVertexArrayNormalOffsetEXT(vaobj:GL.UInt, buffer:GL.UInt, type:GL.Enum, stride:GL.Size, offset:GL.IntPointer)
{
    fp_glVertexArrayNormalOffsetEXT = unsafeBitCast(get_fp("glVertexArrayNormalOffsetEXT", support: [ss143]), to: Swift.type(of: fp_glVertexArrayNormalOffsetEXT))
    fp_glVertexArrayNormalOffsetEXT(vaobj, buffer, type, stride, offset)
}
public
func glVertexArrayNormalOffsetEXT(vaobj:GL.UInt, buffer:GL.UInt, type:GL.Enum, stride:GL.Size, offset:GL.IntPointer)
{
    fp_glVertexArrayNormalOffsetEXT(vaobj, buffer, type, stride, offset)
}
public
func glVertexArrayNormalOffsetEXT(_ vaobj:GL.UInt, _ buffer:GL.UInt, _ type:GL.Enum, _ stride:GL.Size, _ offset:GL.IntPointer)
{
    fp_glVertexArrayNormalOffsetEXT(vaobj, buffer, type, stride, offset)
}

var fp_glVertexArrayParameteriAPPLE:@convention(c) (GL.Enum, GL.Int) -> () = load_glVertexArrayParameteriAPPLE
func load_glVertexArrayParameteriAPPLE(pname:GL.Enum, param:GL.Int)
{
    fp_glVertexArrayParameteriAPPLE = unsafeBitCast(get_fp("glVertexArrayParameteriAPPLE", support: [ss26]), to: Swift.type(of: fp_glVertexArrayParameteriAPPLE))
    fp_glVertexArrayParameteriAPPLE(pname, param)
}
public
func glVertexArrayParameteriAPPLE(pname:GL.Enum, param:GL.Int)
{
    fp_glVertexArrayParameteriAPPLE(pname, param)
}
public
func glVertexArrayParameteriAPPLE(_ pname:GL.Enum, _ param:GL.Int)
{
    fp_glVertexArrayParameteriAPPLE(pname, param)
}

var fp_glVertexArrayRangeAPPLE:@convention(c) (GL.Size, UnsafeMutableRawPointer?) -> () = load_glVertexArrayRangeAPPLE
func load_glVertexArrayRangeAPPLE(length:GL.Size, pointer:UnsafeMutableRawPointer?)
{
    fp_glVertexArrayRangeAPPLE = unsafeBitCast(get_fp("glVertexArrayRangeAPPLE", support: [ss26]), to: Swift.type(of: fp_glVertexArrayRangeAPPLE))
    fp_glVertexArrayRangeAPPLE(length, pointer)
}
public
func glVertexArrayRangeAPPLE(length:GL.Size, pointer:UnsafeMutableRawPointer?)
{
    fp_glVertexArrayRangeAPPLE(length, pointer)
}
public
func glVertexArrayRangeAPPLE(_ length:GL.Size, _ pointer:UnsafeMutableRawPointer?)
{
    fp_glVertexArrayRangeAPPLE(length, pointer)
}

var fp_glVertexArrayRangeNV:@convention(c) (GL.Size, UnsafeRawPointer?) -> () = load_glVertexArrayRangeNV
func load_glVertexArrayRangeNV(length:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glVertexArrayRangeNV = unsafeBitCast(get_fp("glVertexArrayRangeNV", support: [ss275]), to: Swift.type(of: fp_glVertexArrayRangeNV))
    fp_glVertexArrayRangeNV(length, pointer)
}
public
func glVertexArrayRangeNV(length:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glVertexArrayRangeNV(length, pointer)
}
public
func glVertexArrayRangeNV(_ length:GL.Size, _ pointer:UnsafeRawPointer?)
{
    fp_glVertexArrayRangeNV(length, pointer)
}

var fp_glVertexArraySecondaryColorOffsetEXT:@convention(c) (GL.UInt, GL.UInt, GL.Int, GL.Enum, GL.Size, GL.IntPointer) -> () = load_glVertexArraySecondaryColorOffsetEXT
func load_glVertexArraySecondaryColorOffsetEXT(vaobj:GL.UInt, buffer:GL.UInt, size:GL.Int, type:GL.Enum, stride:GL.Size, offset:GL.IntPointer)
{
    fp_glVertexArraySecondaryColorOffsetEXT = unsafeBitCast(get_fp("glVertexArraySecondaryColorOffsetEXT", support: [ss143]), to: Swift.type(of: fp_glVertexArraySecondaryColorOffsetEXT))
    fp_glVertexArraySecondaryColorOffsetEXT(vaobj, buffer, size, type, stride, offset)
}
public
func glVertexArraySecondaryColorOffsetEXT(vaobj:GL.UInt, buffer:GL.UInt, size:GL.Int, type:GL.Enum, stride:GL.Size, offset:GL.IntPointer)
{
    fp_glVertexArraySecondaryColorOffsetEXT(vaobj, buffer, size, type, stride, offset)
}
public
func glVertexArraySecondaryColorOffsetEXT(_ vaobj:GL.UInt, _ buffer:GL.UInt, _ size:GL.Int, _ type:GL.Enum, _ stride:GL.Size, _ offset:GL.IntPointer)
{
    fp_glVertexArraySecondaryColorOffsetEXT(vaobj, buffer, size, type, stride, offset)
}

var fp_glVertexArrayTexCoordOffsetEXT:@convention(c) (GL.UInt, GL.UInt, GL.Int, GL.Enum, GL.Size, GL.IntPointer) -> () = load_glVertexArrayTexCoordOffsetEXT
func load_glVertexArrayTexCoordOffsetEXT(vaobj:GL.UInt, buffer:GL.UInt, size:GL.Int, type:GL.Enum, stride:GL.Size, offset:GL.IntPointer)
{
    fp_glVertexArrayTexCoordOffsetEXT = unsafeBitCast(get_fp("glVertexArrayTexCoordOffsetEXT", support: [ss143]), to: Swift.type(of: fp_glVertexArrayTexCoordOffsetEXT))
    fp_glVertexArrayTexCoordOffsetEXT(vaobj, buffer, size, type, stride, offset)
}
public
func glVertexArrayTexCoordOffsetEXT(vaobj:GL.UInt, buffer:GL.UInt, size:GL.Int, type:GL.Enum, stride:GL.Size, offset:GL.IntPointer)
{
    fp_glVertexArrayTexCoordOffsetEXT(vaobj, buffer, size, type, stride, offset)
}
public
func glVertexArrayTexCoordOffsetEXT(_ vaobj:GL.UInt, _ buffer:GL.UInt, _ size:GL.Int, _ type:GL.Enum, _ stride:GL.Size, _ offset:GL.IntPointer)
{
    fp_glVertexArrayTexCoordOffsetEXT(vaobj, buffer, size, type, stride, offset)
}

var fp_glVertexArrayVertexAttribBindingEXT:@convention(c) (GL.UInt, GL.UInt, GL.UInt) -> () = load_glVertexArrayVertexAttribBindingEXT
func load_glVertexArrayVertexAttribBindingEXT(vaobj:GL.UInt, attribindex:GL.UInt, bindingindex:GL.UInt)
{
    fp_glVertexArrayVertexAttribBindingEXT = unsafeBitCast(get_fp("glVertexArrayVertexAttribBindingEXT", support: [ss143]), to: Swift.type(of: fp_glVertexArrayVertexAttribBindingEXT))
    fp_glVertexArrayVertexAttribBindingEXT(vaobj, attribindex, bindingindex)
}
public
func glVertexArrayVertexAttribBindingEXT(vaobj:GL.UInt, attribindex:GL.UInt, bindingindex:GL.UInt)
{
    fp_glVertexArrayVertexAttribBindingEXT(vaobj, attribindex, bindingindex)
}
public
func glVertexArrayVertexAttribBindingEXT(_ vaobj:GL.UInt, _ attribindex:GL.UInt, _ bindingindex:GL.UInt)
{
    fp_glVertexArrayVertexAttribBindingEXT(vaobj, attribindex, bindingindex)
}

var fp_glVertexArrayVertexAttribDivisorEXT:@convention(c) (GL.UInt, GL.UInt, GL.UInt) -> () = load_glVertexArrayVertexAttribDivisorEXT
func load_glVertexArrayVertexAttribDivisorEXT(vaobj:GL.UInt, index:GL.UInt, divisor:GL.UInt)
{
    fp_glVertexArrayVertexAttribDivisorEXT = unsafeBitCast(get_fp("glVertexArrayVertexAttribDivisorEXT", support: [ss143]), to: Swift.type(of: fp_glVertexArrayVertexAttribDivisorEXT))
    fp_glVertexArrayVertexAttribDivisorEXT(vaobj, index, divisor)
}
public
func glVertexArrayVertexAttribDivisorEXT(vaobj:GL.UInt, index:GL.UInt, divisor:GL.UInt)
{
    fp_glVertexArrayVertexAttribDivisorEXT(vaobj, index, divisor)
}
public
func glVertexArrayVertexAttribDivisorEXT(_ vaobj:GL.UInt, _ index:GL.UInt, _ divisor:GL.UInt)
{
    fp_glVertexArrayVertexAttribDivisorEXT(vaobj, index, divisor)
}

var fp_glVertexArrayVertexAttribFormatEXT:@convention(c) (GL.UInt, GL.UInt, GL.Int, GL.Enum, GL.Bool, GL.UInt) -> () = load_glVertexArrayVertexAttribFormatEXT
func load_glVertexArrayVertexAttribFormatEXT(vaobj:GL.UInt, attribindex:GL.UInt, size:GL.Int, type:GL.Enum, normalized:GL.Bool, relativeoffset:GL.UInt)
{
    fp_glVertexArrayVertexAttribFormatEXT = unsafeBitCast(get_fp("glVertexArrayVertexAttribFormatEXT", support: [ss143]), to: Swift.type(of: fp_glVertexArrayVertexAttribFormatEXT))
    fp_glVertexArrayVertexAttribFormatEXT(vaobj, attribindex, size, type, normalized, relativeoffset)
}
public
func glVertexArrayVertexAttribFormatEXT(vaobj:GL.UInt, attribindex:GL.UInt, size:GL.Int, type:GL.Enum, normalized:GL.Bool, relativeoffset:GL.UInt)
{
    fp_glVertexArrayVertexAttribFormatEXT(vaobj, attribindex, size, type, normalized, relativeoffset)
}
public
func glVertexArrayVertexAttribFormatEXT(_ vaobj:GL.UInt, _ attribindex:GL.UInt, _ size:GL.Int, _ type:GL.Enum, _ normalized:GL.Bool, _ relativeoffset:GL.UInt)
{
    fp_glVertexArrayVertexAttribFormatEXT(vaobj, attribindex, size, type, normalized, relativeoffset)
}

var fp_glVertexArrayVertexAttribIFormatEXT:@convention(c) (GL.UInt, GL.UInt, GL.Int, GL.Enum, GL.UInt) -> () = load_glVertexArrayVertexAttribIFormatEXT
func load_glVertexArrayVertexAttribIFormatEXT(vaobj:GL.UInt, attribindex:GL.UInt, size:GL.Int, type:GL.Enum, relativeoffset:GL.UInt)
{
    fp_glVertexArrayVertexAttribIFormatEXT = unsafeBitCast(get_fp("glVertexArrayVertexAttribIFormatEXT", support: [ss143]), to: Swift.type(of: fp_glVertexArrayVertexAttribIFormatEXT))
    fp_glVertexArrayVertexAttribIFormatEXT(vaobj, attribindex, size, type, relativeoffset)
}
public
func glVertexArrayVertexAttribIFormatEXT(vaobj:GL.UInt, attribindex:GL.UInt, size:GL.Int, type:GL.Enum, relativeoffset:GL.UInt)
{
    fp_glVertexArrayVertexAttribIFormatEXT(vaobj, attribindex, size, type, relativeoffset)
}
public
func glVertexArrayVertexAttribIFormatEXT(_ vaobj:GL.UInt, _ attribindex:GL.UInt, _ size:GL.Int, _ type:GL.Enum, _ relativeoffset:GL.UInt)
{
    fp_glVertexArrayVertexAttribIFormatEXT(vaobj, attribindex, size, type, relativeoffset)
}

var fp_glVertexArrayVertexAttribIOffsetEXT:@convention(c) (GL.UInt, GL.UInt, GL.UInt, GL.Int, GL.Enum, GL.Size, GL.IntPointer) -> () = load_glVertexArrayVertexAttribIOffsetEXT
func load_glVertexArrayVertexAttribIOffsetEXT(vaobj:GL.UInt, buffer:GL.UInt, index:GL.UInt, size:GL.Int, type:GL.Enum, stride:GL.Size, offset:GL.IntPointer)
{
    fp_glVertexArrayVertexAttribIOffsetEXT = unsafeBitCast(get_fp("glVertexArrayVertexAttribIOffsetEXT", support: [ss143]), to: Swift.type(of: fp_glVertexArrayVertexAttribIOffsetEXT))
    fp_glVertexArrayVertexAttribIOffsetEXT(vaobj, buffer, index, size, type, stride, offset)
}
public
func glVertexArrayVertexAttribIOffsetEXT(vaobj:GL.UInt, buffer:GL.UInt, index:GL.UInt, size:GL.Int, type:GL.Enum, stride:GL.Size, offset:GL.IntPointer)
{
    fp_glVertexArrayVertexAttribIOffsetEXT(vaobj, buffer, index, size, type, stride, offset)
}
public
func glVertexArrayVertexAttribIOffsetEXT(_ vaobj:GL.UInt, _ buffer:GL.UInt, _ index:GL.UInt, _ size:GL.Int, _ type:GL.Enum, _ stride:GL.Size, _ offset:GL.IntPointer)
{
    fp_glVertexArrayVertexAttribIOffsetEXT(vaobj, buffer, index, size, type, stride, offset)
}

var fp_glVertexArrayVertexAttribLFormatEXT:@convention(c) (GL.UInt, GL.UInt, GL.Int, GL.Enum, GL.UInt) -> () = load_glVertexArrayVertexAttribLFormatEXT
func load_glVertexArrayVertexAttribLFormatEXT(vaobj:GL.UInt, attribindex:GL.UInt, size:GL.Int, type:GL.Enum, relativeoffset:GL.UInt)
{
    fp_glVertexArrayVertexAttribLFormatEXT = unsafeBitCast(get_fp("glVertexArrayVertexAttribLFormatEXT", support: [ss143]), to: Swift.type(of: fp_glVertexArrayVertexAttribLFormatEXT))
    fp_glVertexArrayVertexAttribLFormatEXT(vaobj, attribindex, size, type, relativeoffset)
}
public
func glVertexArrayVertexAttribLFormatEXT(vaobj:GL.UInt, attribindex:GL.UInt, size:GL.Int, type:GL.Enum, relativeoffset:GL.UInt)
{
    fp_glVertexArrayVertexAttribLFormatEXT(vaobj, attribindex, size, type, relativeoffset)
}
public
func glVertexArrayVertexAttribLFormatEXT(_ vaobj:GL.UInt, _ attribindex:GL.UInt, _ size:GL.Int, _ type:GL.Enum, _ relativeoffset:GL.UInt)
{
    fp_glVertexArrayVertexAttribLFormatEXT(vaobj, attribindex, size, type, relativeoffset)
}

var fp_glVertexArrayVertexAttribLOffsetEXT:@convention(c) (GL.UInt, GL.UInt, GL.UInt, GL.Int, GL.Enum, GL.Size, GL.IntPointer) -> () = load_glVertexArrayVertexAttribLOffsetEXT
func load_glVertexArrayVertexAttribLOffsetEXT(vaobj:GL.UInt, buffer:GL.UInt, index:GL.UInt, size:GL.Int, type:GL.Enum, stride:GL.Size, offset:GL.IntPointer)
{
    fp_glVertexArrayVertexAttribLOffsetEXT = unsafeBitCast(get_fp("glVertexArrayVertexAttribLOffsetEXT", support: [ss143]), to: Swift.type(of: fp_glVertexArrayVertexAttribLOffsetEXT))
    fp_glVertexArrayVertexAttribLOffsetEXT(vaobj, buffer, index, size, type, stride, offset)
}
public
func glVertexArrayVertexAttribLOffsetEXT(vaobj:GL.UInt, buffer:GL.UInt, index:GL.UInt, size:GL.Int, type:GL.Enum, stride:GL.Size, offset:GL.IntPointer)
{
    fp_glVertexArrayVertexAttribLOffsetEXT(vaobj, buffer, index, size, type, stride, offset)
}
public
func glVertexArrayVertexAttribLOffsetEXT(_ vaobj:GL.UInt, _ buffer:GL.UInt, _ index:GL.UInt, _ size:GL.Int, _ type:GL.Enum, _ stride:GL.Size, _ offset:GL.IntPointer)
{
    fp_glVertexArrayVertexAttribLOffsetEXT(vaobj, buffer, index, size, type, stride, offset)
}

var fp_glVertexArrayVertexAttribOffsetEXT:@convention(c) (GL.UInt, GL.UInt, GL.UInt, GL.Int, GL.Enum, GL.Bool, GL.Size, GL.IntPointer) -> () = load_glVertexArrayVertexAttribOffsetEXT
func load_glVertexArrayVertexAttribOffsetEXT(vaobj:GL.UInt, buffer:GL.UInt, index:GL.UInt, size:GL.Int, type:GL.Enum, normalized:GL.Bool, stride:GL.Size, offset:GL.IntPointer)
{
    fp_glVertexArrayVertexAttribOffsetEXT = unsafeBitCast(get_fp("glVertexArrayVertexAttribOffsetEXT", support: [ss143]), to: Swift.type(of: fp_glVertexArrayVertexAttribOffsetEXT))
    fp_glVertexArrayVertexAttribOffsetEXT(vaobj, buffer, index, size, type, normalized, stride, offset)
}
public
func glVertexArrayVertexAttribOffsetEXT(vaobj:GL.UInt, buffer:GL.UInt, index:GL.UInt, size:GL.Int, type:GL.Enum, normalized:GL.Bool, stride:GL.Size, offset:GL.IntPointer)
{
    fp_glVertexArrayVertexAttribOffsetEXT(vaobj, buffer, index, size, type, normalized, stride, offset)
}
public
func glVertexArrayVertexAttribOffsetEXT(_ vaobj:GL.UInt, _ buffer:GL.UInt, _ index:GL.UInt, _ size:GL.Int, _ type:GL.Enum, _ normalized:GL.Bool, _ stride:GL.Size, _ offset:GL.IntPointer)
{
    fp_glVertexArrayVertexAttribOffsetEXT(vaobj, buffer, index, size, type, normalized, stride, offset)
}

var fp_glVertexArrayVertexBindingDivisorEXT:@convention(c) (GL.UInt, GL.UInt, GL.UInt) -> () = load_glVertexArrayVertexBindingDivisorEXT
func load_glVertexArrayVertexBindingDivisorEXT(vaobj:GL.UInt, bindingindex:GL.UInt, divisor:GL.UInt)
{
    fp_glVertexArrayVertexBindingDivisorEXT = unsafeBitCast(get_fp("glVertexArrayVertexBindingDivisorEXT", support: [ss143]), to: Swift.type(of: fp_glVertexArrayVertexBindingDivisorEXT))
    fp_glVertexArrayVertexBindingDivisorEXT(vaobj, bindingindex, divisor)
}
public
func glVertexArrayVertexBindingDivisorEXT(vaobj:GL.UInt, bindingindex:GL.UInt, divisor:GL.UInt)
{
    fp_glVertexArrayVertexBindingDivisorEXT(vaobj, bindingindex, divisor)
}
public
func glVertexArrayVertexBindingDivisorEXT(_ vaobj:GL.UInt, _ bindingindex:GL.UInt, _ divisor:GL.UInt)
{
    fp_glVertexArrayVertexBindingDivisorEXT(vaobj, bindingindex, divisor)
}

var fp_glVertexArrayVertexBuffer:@convention(c) (GL.UInt, GL.UInt, GL.UInt, GL.IntPointer, GL.Size) -> () = load_glVertexArrayVertexBuffer
func load_glVertexArrayVertexBuffer(vaobj:GL.UInt, bindingindex:GL.UInt, buffer:GL.UInt, offset:GL.IntPointer, stride:GL.Size)
{
    fp_glVertexArrayVertexBuffer = unsafeBitCast(get_fp("glVertexArrayVertexBuffer", support: [ss363, ss42]), to: Swift.type(of: fp_glVertexArrayVertexBuffer))
    fp_glVertexArrayVertexBuffer(vaobj, bindingindex, buffer, offset, stride)
}
public
func glVertexArrayVertexBuffer(vaobj:GL.UInt, bindingindex:GL.UInt, buffer:GL.UInt, offset:GL.IntPointer, stride:GL.Size)
{
    fp_glVertexArrayVertexBuffer(vaobj, bindingindex, buffer, offset, stride)
}
public
func glVertexArrayVertexBuffer(_ vaobj:GL.UInt, _ bindingindex:GL.UInt, _ buffer:GL.UInt, _ offset:GL.IntPointer, _ stride:GL.Size)
{
    fp_glVertexArrayVertexBuffer(vaobj, bindingindex, buffer, offset, stride)
}

var fp_glVertexArrayVertexBuffers:@convention(c) (GL.UInt, GL.UInt, GL.Size, UnsafePointer<GL.UInt>?, UnsafePointer<GL.IntPointer>?, UnsafePointer<GL.Size>?) -> () = load_glVertexArrayVertexBuffers
func load_glVertexArrayVertexBuffers(vaobj:GL.UInt, first:GL.UInt, count:GL.Size, buffers:UnsafePointer<GL.UInt>?, offsets:UnsafePointer<GL.IntPointer>?, strides:UnsafePointer<GL.Size>?)
{
    fp_glVertexArrayVertexBuffers = unsafeBitCast(get_fp("glVertexArrayVertexBuffers", support: [ss363, ss42]), to: Swift.type(of: fp_glVertexArrayVertexBuffers))
    fp_glVertexArrayVertexBuffers(vaobj, first, count, buffers, offsets, strides)
}
public
func glVertexArrayVertexBuffers(vaobj:GL.UInt, first:GL.UInt, count:GL.Size, buffers:UnsafePointer<GL.UInt>?, offsets:UnsafePointer<GL.IntPointer>?, strides:UnsafePointer<GL.Size>?)
{
    fp_glVertexArrayVertexBuffers(vaobj, first, count, buffers, offsets, strides)
}
public
func glVertexArrayVertexBuffers(_ vaobj:GL.UInt, _ first:GL.UInt, _ count:GL.Size, _ buffers:UnsafePointer<GL.UInt>?, _ offsets:UnsafePointer<GL.IntPointer>?, _ strides:UnsafePointer<GL.Size>?)
{
    fp_glVertexArrayVertexBuffers(vaobj, first, count, buffers, offsets, strides)
}

var fp_glVertexArrayVertexOffsetEXT:@convention(c) (GL.UInt, GL.UInt, GL.Int, GL.Enum, GL.Size, GL.IntPointer) -> () = load_glVertexArrayVertexOffsetEXT
func load_glVertexArrayVertexOffsetEXT(vaobj:GL.UInt, buffer:GL.UInt, size:GL.Int, type:GL.Enum, stride:GL.Size, offset:GL.IntPointer)
{
    fp_glVertexArrayVertexOffsetEXT = unsafeBitCast(get_fp("glVertexArrayVertexOffsetEXT", support: [ss143]), to: Swift.type(of: fp_glVertexArrayVertexOffsetEXT))
    fp_glVertexArrayVertexOffsetEXT(vaobj, buffer, size, type, stride, offset)
}
public
func glVertexArrayVertexOffsetEXT(vaobj:GL.UInt, buffer:GL.UInt, size:GL.Int, type:GL.Enum, stride:GL.Size, offset:GL.IntPointer)
{
    fp_glVertexArrayVertexOffsetEXT(vaobj, buffer, size, type, stride, offset)
}
public
func glVertexArrayVertexOffsetEXT(_ vaobj:GL.UInt, _ buffer:GL.UInt, _ size:GL.Int, _ type:GL.Enum, _ stride:GL.Size, _ offset:GL.IntPointer)
{
    fp_glVertexArrayVertexOffsetEXT(vaobj, buffer, size, type, stride, offset)
}

var fp_glVertexAttrib1d:@convention(c) (GL.UInt, GL.Double) -> () = load_glVertexAttrib1d
func load_glVertexAttrib1d(index:GL.UInt, x:GL.Double)
{
    fp_glVertexAttrib1d = unsafeBitCast(get_fp("glVertexAttrib1d", support: [ss352]), to: Swift.type(of: fp_glVertexAttrib1d))
    fp_glVertexAttrib1d(index, x)
}
public
func glVertexAttrib1d(index:GL.UInt, x:GL.Double)
{
    fp_glVertexAttrib1d(index, x)
}
public
func glVertexAttrib1d(_ index:GL.UInt, _ x:GL.Double)
{
    fp_glVertexAttrib1d(index, x)
}

var fp_glVertexAttrib1dARB:@convention(c) (GL.UInt, GL.Double) -> () = load_glVertexAttrib1dARB
func load_glVertexAttrib1dARB(index:GL.UInt, x:GL.Double)
{
    fp_glVertexAttrib1dARB = unsafeBitCast(get_fp("glVertexAttrib1dARB", support: [ss110, ss111]), to: Swift.type(of: fp_glVertexAttrib1dARB))
    fp_glVertexAttrib1dARB(index, x)
}
public
func glVertexAttrib1dARB(index:GL.UInt, x:GL.Double)
{
    fp_glVertexAttrib1dARB(index, x)
}
public
func glVertexAttrib1dARB(_ index:GL.UInt, _ x:GL.Double)
{
    fp_glVertexAttrib1dARB(index, x)
}

var fp_glVertexAttrib1dNV:@convention(c) (GL.UInt, GL.Double) -> () = load_glVertexAttrib1dNV
func load_glVertexAttrib1dNV(index:GL.UInt, x:GL.Double)
{
    fp_glVertexAttrib1dNV = unsafeBitCast(get_fp("glVertexAttrib1dNV", support: [ss278]), to: Swift.type(of: fp_glVertexAttrib1dNV))
    fp_glVertexAttrib1dNV(index, x)
}
public
func glVertexAttrib1dNV(index:GL.UInt, x:GL.Double)
{
    fp_glVertexAttrib1dNV(index, x)
}
public
func glVertexAttrib1dNV(_ index:GL.UInt, _ x:GL.Double)
{
    fp_glVertexAttrib1dNV(index, x)
}

var fp_glVertexAttrib1dv:@convention(c) (GL.UInt, UnsafePointer<GL.Double>?) -> () = load_glVertexAttrib1dv
func load_glVertexAttrib1dv(index:GL.UInt, v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttrib1dv = unsafeBitCast(get_fp("glVertexAttrib1dv", support: [ss352]), to: Swift.type(of: fp_glVertexAttrib1dv))
    fp_glVertexAttrib1dv(index, v)
}
public
func glVertexAttrib1dv(index:GL.UInt, v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttrib1dv(index, v)
}
public
func glVertexAttrib1dv(_ index:GL.UInt, _ v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttrib1dv(index, v)
}

var fp_glVertexAttrib1dvARB:@convention(c) (GL.UInt, UnsafePointer<GL.Double>?) -> () = load_glVertexAttrib1dvARB
func load_glVertexAttrib1dvARB(index:GL.UInt, v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttrib1dvARB = unsafeBitCast(get_fp("glVertexAttrib1dvARB", support: [ss110, ss111]), to: Swift.type(of: fp_glVertexAttrib1dvARB))
    fp_glVertexAttrib1dvARB(index, v)
}
public
func glVertexAttrib1dvARB(index:GL.UInt, v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttrib1dvARB(index, v)
}
public
func glVertexAttrib1dvARB(_ index:GL.UInt, _ v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttrib1dvARB(index, v)
}

var fp_glVertexAttrib1dvNV:@convention(c) (GL.UInt, UnsafePointer<GL.Double>?) -> () = load_glVertexAttrib1dvNV
func load_glVertexAttrib1dvNV(index:GL.UInt, v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttrib1dvNV = unsafeBitCast(get_fp("glVertexAttrib1dvNV", support: [ss278]), to: Swift.type(of: fp_glVertexAttrib1dvNV))
    fp_glVertexAttrib1dvNV(index, v)
}
public
func glVertexAttrib1dvNV(index:GL.UInt, v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttrib1dvNV(index, v)
}
public
func glVertexAttrib1dvNV(_ index:GL.UInt, _ v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttrib1dvNV(index, v)
}

var fp_glVertexAttrib1f:@convention(c) (GL.UInt, GL.Float) -> () = load_glVertexAttrib1f
func load_glVertexAttrib1f(index:GL.UInt, x:GL.Float)
{
    fp_glVertexAttrib1f = unsafeBitCast(get_fp("glVertexAttrib1f", support: [ss352, ss365]), to: Swift.type(of: fp_glVertexAttrib1f))
    fp_glVertexAttrib1f(index, x)
}
public
func glVertexAttrib1f(index:GL.UInt, x:GL.Float)
{
    fp_glVertexAttrib1f(index, x)
}
public
func glVertexAttrib1f(_ index:GL.UInt, _ x:GL.Float)
{
    fp_glVertexAttrib1f(index, x)
}

var fp_glVertexAttrib1fARB:@convention(c) (GL.UInt, GL.Float) -> () = load_glVertexAttrib1fARB
func load_glVertexAttrib1fARB(index:GL.UInt, x:GL.Float)
{
    fp_glVertexAttrib1fARB = unsafeBitCast(get_fp("glVertexAttrib1fARB", support: [ss110, ss111]), to: Swift.type(of: fp_glVertexAttrib1fARB))
    fp_glVertexAttrib1fARB(index, x)
}
public
func glVertexAttrib1fARB(index:GL.UInt, x:GL.Float)
{
    fp_glVertexAttrib1fARB(index, x)
}
public
func glVertexAttrib1fARB(_ index:GL.UInt, _ x:GL.Float)
{
    fp_glVertexAttrib1fARB(index, x)
}

var fp_glVertexAttrib1fNV:@convention(c) (GL.UInt, GL.Float) -> () = load_glVertexAttrib1fNV
func load_glVertexAttrib1fNV(index:GL.UInt, x:GL.Float)
{
    fp_glVertexAttrib1fNV = unsafeBitCast(get_fp("glVertexAttrib1fNV", support: [ss278]), to: Swift.type(of: fp_glVertexAttrib1fNV))
    fp_glVertexAttrib1fNV(index, x)
}
public
func glVertexAttrib1fNV(index:GL.UInt, x:GL.Float)
{
    fp_glVertexAttrib1fNV(index, x)
}
public
func glVertexAttrib1fNV(_ index:GL.UInt, _ x:GL.Float)
{
    fp_glVertexAttrib1fNV(index, x)
}

var fp_glVertexAttrib1fv:@convention(c) (GL.UInt, UnsafePointer<GL.Float>?) -> () = load_glVertexAttrib1fv
func load_glVertexAttrib1fv(index:GL.UInt, v:UnsafePointer<GL.Float>?)
{
    fp_glVertexAttrib1fv = unsafeBitCast(get_fp("glVertexAttrib1fv", support: [ss352, ss365]), to: Swift.type(of: fp_glVertexAttrib1fv))
    fp_glVertexAttrib1fv(index, v)
}
public
func glVertexAttrib1fv(index:GL.UInt, v:UnsafePointer<GL.Float>?)
{
    fp_glVertexAttrib1fv(index, v)
}
public
func glVertexAttrib1fv(_ index:GL.UInt, _ v:UnsafePointer<GL.Float>?)
{
    fp_glVertexAttrib1fv(index, v)
}

var fp_glVertexAttrib1fvARB:@convention(c) (GL.UInt, UnsafePointer<GL.Float>?) -> () = load_glVertexAttrib1fvARB
func load_glVertexAttrib1fvARB(index:GL.UInt, v:UnsafePointer<GL.Float>?)
{
    fp_glVertexAttrib1fvARB = unsafeBitCast(get_fp("glVertexAttrib1fvARB", support: [ss110, ss111]), to: Swift.type(of: fp_glVertexAttrib1fvARB))
    fp_glVertexAttrib1fvARB(index, v)
}
public
func glVertexAttrib1fvARB(index:GL.UInt, v:UnsafePointer<GL.Float>?)
{
    fp_glVertexAttrib1fvARB(index, v)
}
public
func glVertexAttrib1fvARB(_ index:GL.UInt, _ v:UnsafePointer<GL.Float>?)
{
    fp_glVertexAttrib1fvARB(index, v)
}

var fp_glVertexAttrib1fvNV:@convention(c) (GL.UInt, UnsafePointer<GL.Float>?) -> () = load_glVertexAttrib1fvNV
func load_glVertexAttrib1fvNV(index:GL.UInt, v:UnsafePointer<GL.Float>?)
{
    fp_glVertexAttrib1fvNV = unsafeBitCast(get_fp("glVertexAttrib1fvNV", support: [ss278]), to: Swift.type(of: fp_glVertexAttrib1fvNV))
    fp_glVertexAttrib1fvNV(index, v)
}
public
func glVertexAttrib1fvNV(index:GL.UInt, v:UnsafePointer<GL.Float>?)
{
    fp_glVertexAttrib1fvNV(index, v)
}
public
func glVertexAttrib1fvNV(_ index:GL.UInt, _ v:UnsafePointer<GL.Float>?)
{
    fp_glVertexAttrib1fvNV(index, v)
}

var fp_glVertexAttrib1hNV:@convention(c) (GL.UInt, GL.HalfNV) -> () = load_glVertexAttrib1hNV
func load_glVertexAttrib1hNV(index:GL.UInt, x:GL.HalfNV)
{
    fp_glVertexAttrib1hNV = unsafeBitCast(get_fp("glVertexAttrib1hNV", support: [ss253]), to: Swift.type(of: fp_glVertexAttrib1hNV))
    fp_glVertexAttrib1hNV(index, x)
}
public
func glVertexAttrib1hNV(index:GL.UInt, x:GL.HalfNV)
{
    fp_glVertexAttrib1hNV(index, x)
}
public
func glVertexAttrib1hNV(_ index:GL.UInt, _ x:GL.HalfNV)
{
    fp_glVertexAttrib1hNV(index, x)
}

var fp_glVertexAttrib1hvNV:@convention(c) (GL.UInt, UnsafePointer<GL.HalfNV>?) -> () = load_glVertexAttrib1hvNV
func load_glVertexAttrib1hvNV(index:GL.UInt, v:UnsafePointer<GL.HalfNV>?)
{
    fp_glVertexAttrib1hvNV = unsafeBitCast(get_fp("glVertexAttrib1hvNV", support: [ss253]), to: Swift.type(of: fp_glVertexAttrib1hvNV))
    fp_glVertexAttrib1hvNV(index, v)
}
public
func glVertexAttrib1hvNV(index:GL.UInt, v:UnsafePointer<GL.HalfNV>?)
{
    fp_glVertexAttrib1hvNV(index, v)
}
public
func glVertexAttrib1hvNV(_ index:GL.UInt, _ v:UnsafePointer<GL.HalfNV>?)
{
    fp_glVertexAttrib1hvNV(index, v)
}

var fp_glVertexAttrib1s:@convention(c) (GL.UInt, GL.Short) -> () = load_glVertexAttrib1s
func load_glVertexAttrib1s(index:GL.UInt, x:GL.Short)
{
    fp_glVertexAttrib1s = unsafeBitCast(get_fp("glVertexAttrib1s", support: [ss352]), to: Swift.type(of: fp_glVertexAttrib1s))
    fp_glVertexAttrib1s(index, x)
}
public
func glVertexAttrib1s(index:GL.UInt, x:GL.Short)
{
    fp_glVertexAttrib1s(index, x)
}
public
func glVertexAttrib1s(_ index:GL.UInt, _ x:GL.Short)
{
    fp_glVertexAttrib1s(index, x)
}

var fp_glVertexAttrib1sARB:@convention(c) (GL.UInt, GL.Short) -> () = load_glVertexAttrib1sARB
func load_glVertexAttrib1sARB(index:GL.UInt, x:GL.Short)
{
    fp_glVertexAttrib1sARB = unsafeBitCast(get_fp("glVertexAttrib1sARB", support: [ss110, ss111]), to: Swift.type(of: fp_glVertexAttrib1sARB))
    fp_glVertexAttrib1sARB(index, x)
}
public
func glVertexAttrib1sARB(index:GL.UInt, x:GL.Short)
{
    fp_glVertexAttrib1sARB(index, x)
}
public
func glVertexAttrib1sARB(_ index:GL.UInt, _ x:GL.Short)
{
    fp_glVertexAttrib1sARB(index, x)
}

var fp_glVertexAttrib1sNV:@convention(c) (GL.UInt, GL.Short) -> () = load_glVertexAttrib1sNV
func load_glVertexAttrib1sNV(index:GL.UInt, x:GL.Short)
{
    fp_glVertexAttrib1sNV = unsafeBitCast(get_fp("glVertexAttrib1sNV", support: [ss278]), to: Swift.type(of: fp_glVertexAttrib1sNV))
    fp_glVertexAttrib1sNV(index, x)
}
public
func glVertexAttrib1sNV(index:GL.UInt, x:GL.Short)
{
    fp_glVertexAttrib1sNV(index, x)
}
public
func glVertexAttrib1sNV(_ index:GL.UInt, _ x:GL.Short)
{
    fp_glVertexAttrib1sNV(index, x)
}

var fp_glVertexAttrib1sv:@convention(c) (GL.UInt, UnsafePointer<GL.Short>?) -> () = load_glVertexAttrib1sv
func load_glVertexAttrib1sv(index:GL.UInt, v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttrib1sv = unsafeBitCast(get_fp("glVertexAttrib1sv", support: [ss352]), to: Swift.type(of: fp_glVertexAttrib1sv))
    fp_glVertexAttrib1sv(index, v)
}
public
func glVertexAttrib1sv(index:GL.UInt, v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttrib1sv(index, v)
}
public
func glVertexAttrib1sv(_ index:GL.UInt, _ v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttrib1sv(index, v)
}

var fp_glVertexAttrib1svARB:@convention(c) (GL.UInt, UnsafePointer<GL.Short>?) -> () = load_glVertexAttrib1svARB
func load_glVertexAttrib1svARB(index:GL.UInt, v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttrib1svARB = unsafeBitCast(get_fp("glVertexAttrib1svARB", support: [ss110, ss111]), to: Swift.type(of: fp_glVertexAttrib1svARB))
    fp_glVertexAttrib1svARB(index, v)
}
public
func glVertexAttrib1svARB(index:GL.UInt, v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttrib1svARB(index, v)
}
public
func glVertexAttrib1svARB(_ index:GL.UInt, _ v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttrib1svARB(index, v)
}

var fp_glVertexAttrib1svNV:@convention(c) (GL.UInt, UnsafePointer<GL.Short>?) -> () = load_glVertexAttrib1svNV
func load_glVertexAttrib1svNV(index:GL.UInt, v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttrib1svNV = unsafeBitCast(get_fp("glVertexAttrib1svNV", support: [ss278]), to: Swift.type(of: fp_glVertexAttrib1svNV))
    fp_glVertexAttrib1svNV(index, v)
}
public
func glVertexAttrib1svNV(index:GL.UInt, v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttrib1svNV(index, v)
}
public
func glVertexAttrib1svNV(_ index:GL.UInt, _ v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttrib1svNV(index, v)
}

var fp_glVertexAttrib2d:@convention(c) (GL.UInt, GL.Double, GL.Double) -> () = load_glVertexAttrib2d
func load_glVertexAttrib2d(index:GL.UInt, x:GL.Double, y:GL.Double)
{
    fp_glVertexAttrib2d = unsafeBitCast(get_fp("glVertexAttrib2d", support: [ss352]), to: Swift.type(of: fp_glVertexAttrib2d))
    fp_glVertexAttrib2d(index, x, y)
}
public
func glVertexAttrib2d(index:GL.UInt, x:GL.Double, y:GL.Double)
{
    fp_glVertexAttrib2d(index, x, y)
}
public
func glVertexAttrib2d(_ index:GL.UInt, _ x:GL.Double, _ y:GL.Double)
{
    fp_glVertexAttrib2d(index, x, y)
}

var fp_glVertexAttrib2dARB:@convention(c) (GL.UInt, GL.Double, GL.Double) -> () = load_glVertexAttrib2dARB
func load_glVertexAttrib2dARB(index:GL.UInt, x:GL.Double, y:GL.Double)
{
    fp_glVertexAttrib2dARB = unsafeBitCast(get_fp("glVertexAttrib2dARB", support: [ss110, ss111]), to: Swift.type(of: fp_glVertexAttrib2dARB))
    fp_glVertexAttrib2dARB(index, x, y)
}
public
func glVertexAttrib2dARB(index:GL.UInt, x:GL.Double, y:GL.Double)
{
    fp_glVertexAttrib2dARB(index, x, y)
}
public
func glVertexAttrib2dARB(_ index:GL.UInt, _ x:GL.Double, _ y:GL.Double)
{
    fp_glVertexAttrib2dARB(index, x, y)
}

var fp_glVertexAttrib2dNV:@convention(c) (GL.UInt, GL.Double, GL.Double) -> () = load_glVertexAttrib2dNV
func load_glVertexAttrib2dNV(index:GL.UInt, x:GL.Double, y:GL.Double)
{
    fp_glVertexAttrib2dNV = unsafeBitCast(get_fp("glVertexAttrib2dNV", support: [ss278]), to: Swift.type(of: fp_glVertexAttrib2dNV))
    fp_glVertexAttrib2dNV(index, x, y)
}
public
func glVertexAttrib2dNV(index:GL.UInt, x:GL.Double, y:GL.Double)
{
    fp_glVertexAttrib2dNV(index, x, y)
}
public
func glVertexAttrib2dNV(_ index:GL.UInt, _ x:GL.Double, _ y:GL.Double)
{
    fp_glVertexAttrib2dNV(index, x, y)
}

var fp_glVertexAttrib2dv:@convention(c) (GL.UInt, UnsafePointer<GL.Double>?) -> () = load_glVertexAttrib2dv
func load_glVertexAttrib2dv(index:GL.UInt, v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttrib2dv = unsafeBitCast(get_fp("glVertexAttrib2dv", support: [ss352]), to: Swift.type(of: fp_glVertexAttrib2dv))
    fp_glVertexAttrib2dv(index, v)
}
public
func glVertexAttrib2dv(index:GL.UInt, v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttrib2dv(index, v)
}
public
func glVertexAttrib2dv(_ index:GL.UInt, _ v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttrib2dv(index, v)
}

var fp_glVertexAttrib2dvARB:@convention(c) (GL.UInt, UnsafePointer<GL.Double>?) -> () = load_glVertexAttrib2dvARB
func load_glVertexAttrib2dvARB(index:GL.UInt, v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttrib2dvARB = unsafeBitCast(get_fp("glVertexAttrib2dvARB", support: [ss110, ss111]), to: Swift.type(of: fp_glVertexAttrib2dvARB))
    fp_glVertexAttrib2dvARB(index, v)
}
public
func glVertexAttrib2dvARB(index:GL.UInt, v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttrib2dvARB(index, v)
}
public
func glVertexAttrib2dvARB(_ index:GL.UInt, _ v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttrib2dvARB(index, v)
}

var fp_glVertexAttrib2dvNV:@convention(c) (GL.UInt, UnsafePointer<GL.Double>?) -> () = load_glVertexAttrib2dvNV
func load_glVertexAttrib2dvNV(index:GL.UInt, v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttrib2dvNV = unsafeBitCast(get_fp("glVertexAttrib2dvNV", support: [ss278]), to: Swift.type(of: fp_glVertexAttrib2dvNV))
    fp_glVertexAttrib2dvNV(index, v)
}
public
func glVertexAttrib2dvNV(index:GL.UInt, v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttrib2dvNV(index, v)
}
public
func glVertexAttrib2dvNV(_ index:GL.UInt, _ v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttrib2dvNV(index, v)
}

var fp_glVertexAttrib2f:@convention(c) (GL.UInt, GL.Float, GL.Float) -> () = load_glVertexAttrib2f
func load_glVertexAttrib2f(index:GL.UInt, x:GL.Float, y:GL.Float)
{
    fp_glVertexAttrib2f = unsafeBitCast(get_fp("glVertexAttrib2f", support: [ss352, ss365]), to: Swift.type(of: fp_glVertexAttrib2f))
    fp_glVertexAttrib2f(index, x, y)
}
public
func glVertexAttrib2f(index:GL.UInt, x:GL.Float, y:GL.Float)
{
    fp_glVertexAttrib2f(index, x, y)
}
public
func glVertexAttrib2f(_ index:GL.UInt, _ x:GL.Float, _ y:GL.Float)
{
    fp_glVertexAttrib2f(index, x, y)
}

var fp_glVertexAttrib2fARB:@convention(c) (GL.UInt, GL.Float, GL.Float) -> () = load_glVertexAttrib2fARB
func load_glVertexAttrib2fARB(index:GL.UInt, x:GL.Float, y:GL.Float)
{
    fp_glVertexAttrib2fARB = unsafeBitCast(get_fp("glVertexAttrib2fARB", support: [ss110, ss111]), to: Swift.type(of: fp_glVertexAttrib2fARB))
    fp_glVertexAttrib2fARB(index, x, y)
}
public
func glVertexAttrib2fARB(index:GL.UInt, x:GL.Float, y:GL.Float)
{
    fp_glVertexAttrib2fARB(index, x, y)
}
public
func glVertexAttrib2fARB(_ index:GL.UInt, _ x:GL.Float, _ y:GL.Float)
{
    fp_glVertexAttrib2fARB(index, x, y)
}

var fp_glVertexAttrib2fNV:@convention(c) (GL.UInt, GL.Float, GL.Float) -> () = load_glVertexAttrib2fNV
func load_glVertexAttrib2fNV(index:GL.UInt, x:GL.Float, y:GL.Float)
{
    fp_glVertexAttrib2fNV = unsafeBitCast(get_fp("glVertexAttrib2fNV", support: [ss278]), to: Swift.type(of: fp_glVertexAttrib2fNV))
    fp_glVertexAttrib2fNV(index, x, y)
}
public
func glVertexAttrib2fNV(index:GL.UInt, x:GL.Float, y:GL.Float)
{
    fp_glVertexAttrib2fNV(index, x, y)
}
public
func glVertexAttrib2fNV(_ index:GL.UInt, _ x:GL.Float, _ y:GL.Float)
{
    fp_glVertexAttrib2fNV(index, x, y)
}

var fp_glVertexAttrib2fv:@convention(c) (GL.UInt, UnsafePointer<GL.Float>?) -> () = load_glVertexAttrib2fv
func load_glVertexAttrib2fv(index:GL.UInt, v:UnsafePointer<GL.Float>?)
{
    fp_glVertexAttrib2fv = unsafeBitCast(get_fp("glVertexAttrib2fv", support: [ss352, ss365]), to: Swift.type(of: fp_glVertexAttrib2fv))
    fp_glVertexAttrib2fv(index, v)
}
public
func glVertexAttrib2fv(index:GL.UInt, v:UnsafePointer<GL.Float>?)
{
    fp_glVertexAttrib2fv(index, v)
}
public
func glVertexAttrib2fv(_ index:GL.UInt, _ v:UnsafePointer<GL.Float>?)
{
    fp_glVertexAttrib2fv(index, v)
}

var fp_glVertexAttrib2fvARB:@convention(c) (GL.UInt, UnsafePointer<GL.Float>?) -> () = load_glVertexAttrib2fvARB
func load_glVertexAttrib2fvARB(index:GL.UInt, v:UnsafePointer<GL.Float>?)
{
    fp_glVertexAttrib2fvARB = unsafeBitCast(get_fp("glVertexAttrib2fvARB", support: [ss110, ss111]), to: Swift.type(of: fp_glVertexAttrib2fvARB))
    fp_glVertexAttrib2fvARB(index, v)
}
public
func glVertexAttrib2fvARB(index:GL.UInt, v:UnsafePointer<GL.Float>?)
{
    fp_glVertexAttrib2fvARB(index, v)
}
public
func glVertexAttrib2fvARB(_ index:GL.UInt, _ v:UnsafePointer<GL.Float>?)
{
    fp_glVertexAttrib2fvARB(index, v)
}

var fp_glVertexAttrib2fvNV:@convention(c) (GL.UInt, UnsafePointer<GL.Float>?) -> () = load_glVertexAttrib2fvNV
func load_glVertexAttrib2fvNV(index:GL.UInt, v:UnsafePointer<GL.Float>?)
{
    fp_glVertexAttrib2fvNV = unsafeBitCast(get_fp("glVertexAttrib2fvNV", support: [ss278]), to: Swift.type(of: fp_glVertexAttrib2fvNV))
    fp_glVertexAttrib2fvNV(index, v)
}
public
func glVertexAttrib2fvNV(index:GL.UInt, v:UnsafePointer<GL.Float>?)
{
    fp_glVertexAttrib2fvNV(index, v)
}
public
func glVertexAttrib2fvNV(_ index:GL.UInt, _ v:UnsafePointer<GL.Float>?)
{
    fp_glVertexAttrib2fvNV(index, v)
}

var fp_glVertexAttrib2hNV:@convention(c) (GL.UInt, GL.HalfNV, GL.HalfNV) -> () = load_glVertexAttrib2hNV
func load_glVertexAttrib2hNV(index:GL.UInt, x:GL.HalfNV, y:GL.HalfNV)
{
    fp_glVertexAttrib2hNV = unsafeBitCast(get_fp("glVertexAttrib2hNV", support: [ss253]), to: Swift.type(of: fp_glVertexAttrib2hNV))
    fp_glVertexAttrib2hNV(index, x, y)
}
public
func glVertexAttrib2hNV(index:GL.UInt, x:GL.HalfNV, y:GL.HalfNV)
{
    fp_glVertexAttrib2hNV(index, x, y)
}
public
func glVertexAttrib2hNV(_ index:GL.UInt, _ x:GL.HalfNV, _ y:GL.HalfNV)
{
    fp_glVertexAttrib2hNV(index, x, y)
}

var fp_glVertexAttrib2hvNV:@convention(c) (GL.UInt, UnsafePointer<GL.HalfNV>?) -> () = load_glVertexAttrib2hvNV
func load_glVertexAttrib2hvNV(index:GL.UInt, v:UnsafePointer<GL.HalfNV>?)
{
    fp_glVertexAttrib2hvNV = unsafeBitCast(get_fp("glVertexAttrib2hvNV", support: [ss253]), to: Swift.type(of: fp_glVertexAttrib2hvNV))
    fp_glVertexAttrib2hvNV(index, v)
}
public
func glVertexAttrib2hvNV(index:GL.UInt, v:UnsafePointer<GL.HalfNV>?)
{
    fp_glVertexAttrib2hvNV(index, v)
}
public
func glVertexAttrib2hvNV(_ index:GL.UInt, _ v:UnsafePointer<GL.HalfNV>?)
{
    fp_glVertexAttrib2hvNV(index, v)
}

var fp_glVertexAttrib2s:@convention(c) (GL.UInt, GL.Short, GL.Short) -> () = load_glVertexAttrib2s
func load_glVertexAttrib2s(index:GL.UInt, x:GL.Short, y:GL.Short)
{
    fp_glVertexAttrib2s = unsafeBitCast(get_fp("glVertexAttrib2s", support: [ss352]), to: Swift.type(of: fp_glVertexAttrib2s))
    fp_glVertexAttrib2s(index, x, y)
}
public
func glVertexAttrib2s(index:GL.UInt, x:GL.Short, y:GL.Short)
{
    fp_glVertexAttrib2s(index, x, y)
}
public
func glVertexAttrib2s(_ index:GL.UInt, _ x:GL.Short, _ y:GL.Short)
{
    fp_glVertexAttrib2s(index, x, y)
}

var fp_glVertexAttrib2sARB:@convention(c) (GL.UInt, GL.Short, GL.Short) -> () = load_glVertexAttrib2sARB
func load_glVertexAttrib2sARB(index:GL.UInt, x:GL.Short, y:GL.Short)
{
    fp_glVertexAttrib2sARB = unsafeBitCast(get_fp("glVertexAttrib2sARB", support: [ss110, ss111]), to: Swift.type(of: fp_glVertexAttrib2sARB))
    fp_glVertexAttrib2sARB(index, x, y)
}
public
func glVertexAttrib2sARB(index:GL.UInt, x:GL.Short, y:GL.Short)
{
    fp_glVertexAttrib2sARB(index, x, y)
}
public
func glVertexAttrib2sARB(_ index:GL.UInt, _ x:GL.Short, _ y:GL.Short)
{
    fp_glVertexAttrib2sARB(index, x, y)
}

var fp_glVertexAttrib2sNV:@convention(c) (GL.UInt, GL.Short, GL.Short) -> () = load_glVertexAttrib2sNV
func load_glVertexAttrib2sNV(index:GL.UInt, x:GL.Short, y:GL.Short)
{
    fp_glVertexAttrib2sNV = unsafeBitCast(get_fp("glVertexAttrib2sNV", support: [ss278]), to: Swift.type(of: fp_glVertexAttrib2sNV))
    fp_glVertexAttrib2sNV(index, x, y)
}
public
func glVertexAttrib2sNV(index:GL.UInt, x:GL.Short, y:GL.Short)
{
    fp_glVertexAttrib2sNV(index, x, y)
}
public
func glVertexAttrib2sNV(_ index:GL.UInt, _ x:GL.Short, _ y:GL.Short)
{
    fp_glVertexAttrib2sNV(index, x, y)
}

var fp_glVertexAttrib2sv:@convention(c) (GL.UInt, UnsafePointer<GL.Short>?) -> () = load_glVertexAttrib2sv
func load_glVertexAttrib2sv(index:GL.UInt, v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttrib2sv = unsafeBitCast(get_fp("glVertexAttrib2sv", support: [ss352]), to: Swift.type(of: fp_glVertexAttrib2sv))
    fp_glVertexAttrib2sv(index, v)
}
public
func glVertexAttrib2sv(index:GL.UInt, v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttrib2sv(index, v)
}
public
func glVertexAttrib2sv(_ index:GL.UInt, _ v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttrib2sv(index, v)
}

var fp_glVertexAttrib2svARB:@convention(c) (GL.UInt, UnsafePointer<GL.Short>?) -> () = load_glVertexAttrib2svARB
func load_glVertexAttrib2svARB(index:GL.UInt, v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttrib2svARB = unsafeBitCast(get_fp("glVertexAttrib2svARB", support: [ss110, ss111]), to: Swift.type(of: fp_glVertexAttrib2svARB))
    fp_glVertexAttrib2svARB(index, v)
}
public
func glVertexAttrib2svARB(index:GL.UInt, v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttrib2svARB(index, v)
}
public
func glVertexAttrib2svARB(_ index:GL.UInt, _ v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttrib2svARB(index, v)
}

var fp_glVertexAttrib2svNV:@convention(c) (GL.UInt, UnsafePointer<GL.Short>?) -> () = load_glVertexAttrib2svNV
func load_glVertexAttrib2svNV(index:GL.UInt, v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttrib2svNV = unsafeBitCast(get_fp("glVertexAttrib2svNV", support: [ss278]), to: Swift.type(of: fp_glVertexAttrib2svNV))
    fp_glVertexAttrib2svNV(index, v)
}
public
func glVertexAttrib2svNV(index:GL.UInt, v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttrib2svNV(index, v)
}
public
func glVertexAttrib2svNV(_ index:GL.UInt, _ v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttrib2svNV(index, v)
}

var fp_glVertexAttrib3d:@convention(c) (GL.UInt, GL.Double, GL.Double, GL.Double) -> () = load_glVertexAttrib3d
func load_glVertexAttrib3d(index:GL.UInt, x:GL.Double, y:GL.Double, z:GL.Double)
{
    fp_glVertexAttrib3d = unsafeBitCast(get_fp("glVertexAttrib3d", support: [ss352]), to: Swift.type(of: fp_glVertexAttrib3d))
    fp_glVertexAttrib3d(index, x, y, z)
}
public
func glVertexAttrib3d(index:GL.UInt, x:GL.Double, y:GL.Double, z:GL.Double)
{
    fp_glVertexAttrib3d(index, x, y, z)
}
public
func glVertexAttrib3d(_ index:GL.UInt, _ x:GL.Double, _ y:GL.Double, _ z:GL.Double)
{
    fp_glVertexAttrib3d(index, x, y, z)
}

var fp_glVertexAttrib3dARB:@convention(c) (GL.UInt, GL.Double, GL.Double, GL.Double) -> () = load_glVertexAttrib3dARB
func load_glVertexAttrib3dARB(index:GL.UInt, x:GL.Double, y:GL.Double, z:GL.Double)
{
    fp_glVertexAttrib3dARB = unsafeBitCast(get_fp("glVertexAttrib3dARB", support: [ss110, ss111]), to: Swift.type(of: fp_glVertexAttrib3dARB))
    fp_glVertexAttrib3dARB(index, x, y, z)
}
public
func glVertexAttrib3dARB(index:GL.UInt, x:GL.Double, y:GL.Double, z:GL.Double)
{
    fp_glVertexAttrib3dARB(index, x, y, z)
}
public
func glVertexAttrib3dARB(_ index:GL.UInt, _ x:GL.Double, _ y:GL.Double, _ z:GL.Double)
{
    fp_glVertexAttrib3dARB(index, x, y, z)
}

var fp_glVertexAttrib3dNV:@convention(c) (GL.UInt, GL.Double, GL.Double, GL.Double) -> () = load_glVertexAttrib3dNV
func load_glVertexAttrib3dNV(index:GL.UInt, x:GL.Double, y:GL.Double, z:GL.Double)
{
    fp_glVertexAttrib3dNV = unsafeBitCast(get_fp("glVertexAttrib3dNV", support: [ss278]), to: Swift.type(of: fp_glVertexAttrib3dNV))
    fp_glVertexAttrib3dNV(index, x, y, z)
}
public
func glVertexAttrib3dNV(index:GL.UInt, x:GL.Double, y:GL.Double, z:GL.Double)
{
    fp_glVertexAttrib3dNV(index, x, y, z)
}
public
func glVertexAttrib3dNV(_ index:GL.UInt, _ x:GL.Double, _ y:GL.Double, _ z:GL.Double)
{
    fp_glVertexAttrib3dNV(index, x, y, z)
}

var fp_glVertexAttrib3dv:@convention(c) (GL.UInt, UnsafePointer<GL.Double>?) -> () = load_glVertexAttrib3dv
func load_glVertexAttrib3dv(index:GL.UInt, v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttrib3dv = unsafeBitCast(get_fp("glVertexAttrib3dv", support: [ss352]), to: Swift.type(of: fp_glVertexAttrib3dv))
    fp_glVertexAttrib3dv(index, v)
}
public
func glVertexAttrib3dv(index:GL.UInt, v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttrib3dv(index, v)
}
public
func glVertexAttrib3dv(_ index:GL.UInt, _ v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttrib3dv(index, v)
}

var fp_glVertexAttrib3dvARB:@convention(c) (GL.UInt, UnsafePointer<GL.Double>?) -> () = load_glVertexAttrib3dvARB
func load_glVertexAttrib3dvARB(index:GL.UInt, v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttrib3dvARB = unsafeBitCast(get_fp("glVertexAttrib3dvARB", support: [ss110, ss111]), to: Swift.type(of: fp_glVertexAttrib3dvARB))
    fp_glVertexAttrib3dvARB(index, v)
}
public
func glVertexAttrib3dvARB(index:GL.UInt, v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttrib3dvARB(index, v)
}
public
func glVertexAttrib3dvARB(_ index:GL.UInt, _ v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttrib3dvARB(index, v)
}

var fp_glVertexAttrib3dvNV:@convention(c) (GL.UInt, UnsafePointer<GL.Double>?) -> () = load_glVertexAttrib3dvNV
func load_glVertexAttrib3dvNV(index:GL.UInt, v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttrib3dvNV = unsafeBitCast(get_fp("glVertexAttrib3dvNV", support: [ss278]), to: Swift.type(of: fp_glVertexAttrib3dvNV))
    fp_glVertexAttrib3dvNV(index, v)
}
public
func glVertexAttrib3dvNV(index:GL.UInt, v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttrib3dvNV(index, v)
}
public
func glVertexAttrib3dvNV(_ index:GL.UInt, _ v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttrib3dvNV(index, v)
}

var fp_glVertexAttrib3f:@convention(c) (GL.UInt, GL.Float, GL.Float, GL.Float) -> () = load_glVertexAttrib3f
func load_glVertexAttrib3f(index:GL.UInt, x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glVertexAttrib3f = unsafeBitCast(get_fp("glVertexAttrib3f", support: [ss352, ss365]), to: Swift.type(of: fp_glVertexAttrib3f))
    fp_glVertexAttrib3f(index, x, y, z)
}
public
func glVertexAttrib3f(index:GL.UInt, x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glVertexAttrib3f(index, x, y, z)
}
public
func glVertexAttrib3f(_ index:GL.UInt, _ x:GL.Float, _ y:GL.Float, _ z:GL.Float)
{
    fp_glVertexAttrib3f(index, x, y, z)
}

var fp_glVertexAttrib3fARB:@convention(c) (GL.UInt, GL.Float, GL.Float, GL.Float) -> () = load_glVertexAttrib3fARB
func load_glVertexAttrib3fARB(index:GL.UInt, x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glVertexAttrib3fARB = unsafeBitCast(get_fp("glVertexAttrib3fARB", support: [ss110, ss111]), to: Swift.type(of: fp_glVertexAttrib3fARB))
    fp_glVertexAttrib3fARB(index, x, y, z)
}
public
func glVertexAttrib3fARB(index:GL.UInt, x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glVertexAttrib3fARB(index, x, y, z)
}
public
func glVertexAttrib3fARB(_ index:GL.UInt, _ x:GL.Float, _ y:GL.Float, _ z:GL.Float)
{
    fp_glVertexAttrib3fARB(index, x, y, z)
}

var fp_glVertexAttrib3fNV:@convention(c) (GL.UInt, GL.Float, GL.Float, GL.Float) -> () = load_glVertexAttrib3fNV
func load_glVertexAttrib3fNV(index:GL.UInt, x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glVertexAttrib3fNV = unsafeBitCast(get_fp("glVertexAttrib3fNV", support: [ss278]), to: Swift.type(of: fp_glVertexAttrib3fNV))
    fp_glVertexAttrib3fNV(index, x, y, z)
}
public
func glVertexAttrib3fNV(index:GL.UInt, x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glVertexAttrib3fNV(index, x, y, z)
}
public
func glVertexAttrib3fNV(_ index:GL.UInt, _ x:GL.Float, _ y:GL.Float, _ z:GL.Float)
{
    fp_glVertexAttrib3fNV(index, x, y, z)
}

var fp_glVertexAttrib3fv:@convention(c) (GL.UInt, UnsafePointer<GL.Float>?) -> () = load_glVertexAttrib3fv
func load_glVertexAttrib3fv(index:GL.UInt, v:UnsafePointer<GL.Float>?)
{
    fp_glVertexAttrib3fv = unsafeBitCast(get_fp("glVertexAttrib3fv", support: [ss352, ss365]), to: Swift.type(of: fp_glVertexAttrib3fv))
    fp_glVertexAttrib3fv(index, v)
}
public
func glVertexAttrib3fv(index:GL.UInt, v:UnsafePointer<GL.Float>?)
{
    fp_glVertexAttrib3fv(index, v)
}
public
func glVertexAttrib3fv(_ index:GL.UInt, _ v:UnsafePointer<GL.Float>?)
{
    fp_glVertexAttrib3fv(index, v)
}

var fp_glVertexAttrib3fvARB:@convention(c) (GL.UInt, UnsafePointer<GL.Float>?) -> () = load_glVertexAttrib3fvARB
func load_glVertexAttrib3fvARB(index:GL.UInt, v:UnsafePointer<GL.Float>?)
{
    fp_glVertexAttrib3fvARB = unsafeBitCast(get_fp("glVertexAttrib3fvARB", support: [ss110, ss111]), to: Swift.type(of: fp_glVertexAttrib3fvARB))
    fp_glVertexAttrib3fvARB(index, v)
}
public
func glVertexAttrib3fvARB(index:GL.UInt, v:UnsafePointer<GL.Float>?)
{
    fp_glVertexAttrib3fvARB(index, v)
}
public
func glVertexAttrib3fvARB(_ index:GL.UInt, _ v:UnsafePointer<GL.Float>?)
{
    fp_glVertexAttrib3fvARB(index, v)
}

var fp_glVertexAttrib3fvNV:@convention(c) (GL.UInt, UnsafePointer<GL.Float>?) -> () = load_glVertexAttrib3fvNV
func load_glVertexAttrib3fvNV(index:GL.UInt, v:UnsafePointer<GL.Float>?)
{
    fp_glVertexAttrib3fvNV = unsafeBitCast(get_fp("glVertexAttrib3fvNV", support: [ss278]), to: Swift.type(of: fp_glVertexAttrib3fvNV))
    fp_glVertexAttrib3fvNV(index, v)
}
public
func glVertexAttrib3fvNV(index:GL.UInt, v:UnsafePointer<GL.Float>?)
{
    fp_glVertexAttrib3fvNV(index, v)
}
public
func glVertexAttrib3fvNV(_ index:GL.UInt, _ v:UnsafePointer<GL.Float>?)
{
    fp_glVertexAttrib3fvNV(index, v)
}

var fp_glVertexAttrib3hNV:@convention(c) (GL.UInt, GL.HalfNV, GL.HalfNV, GL.HalfNV) -> () = load_glVertexAttrib3hNV
func load_glVertexAttrib3hNV(index:GL.UInt, x:GL.HalfNV, y:GL.HalfNV, z:GL.HalfNV)
{
    fp_glVertexAttrib3hNV = unsafeBitCast(get_fp("glVertexAttrib3hNV", support: [ss253]), to: Swift.type(of: fp_glVertexAttrib3hNV))
    fp_glVertexAttrib3hNV(index, x, y, z)
}
public
func glVertexAttrib3hNV(index:GL.UInt, x:GL.HalfNV, y:GL.HalfNV, z:GL.HalfNV)
{
    fp_glVertexAttrib3hNV(index, x, y, z)
}
public
func glVertexAttrib3hNV(_ index:GL.UInt, _ x:GL.HalfNV, _ y:GL.HalfNV, _ z:GL.HalfNV)
{
    fp_glVertexAttrib3hNV(index, x, y, z)
}

var fp_glVertexAttrib3hvNV:@convention(c) (GL.UInt, UnsafePointer<GL.HalfNV>?) -> () = load_glVertexAttrib3hvNV
func load_glVertexAttrib3hvNV(index:GL.UInt, v:UnsafePointer<GL.HalfNV>?)
{
    fp_glVertexAttrib3hvNV = unsafeBitCast(get_fp("glVertexAttrib3hvNV", support: [ss253]), to: Swift.type(of: fp_glVertexAttrib3hvNV))
    fp_glVertexAttrib3hvNV(index, v)
}
public
func glVertexAttrib3hvNV(index:GL.UInt, v:UnsafePointer<GL.HalfNV>?)
{
    fp_glVertexAttrib3hvNV(index, v)
}
public
func glVertexAttrib3hvNV(_ index:GL.UInt, _ v:UnsafePointer<GL.HalfNV>?)
{
    fp_glVertexAttrib3hvNV(index, v)
}

var fp_glVertexAttrib3s:@convention(c) (GL.UInt, GL.Short, GL.Short, GL.Short) -> () = load_glVertexAttrib3s
func load_glVertexAttrib3s(index:GL.UInt, x:GL.Short, y:GL.Short, z:GL.Short)
{
    fp_glVertexAttrib3s = unsafeBitCast(get_fp("glVertexAttrib3s", support: [ss352]), to: Swift.type(of: fp_glVertexAttrib3s))
    fp_glVertexAttrib3s(index, x, y, z)
}
public
func glVertexAttrib3s(index:GL.UInt, x:GL.Short, y:GL.Short, z:GL.Short)
{
    fp_glVertexAttrib3s(index, x, y, z)
}
public
func glVertexAttrib3s(_ index:GL.UInt, _ x:GL.Short, _ y:GL.Short, _ z:GL.Short)
{
    fp_glVertexAttrib3s(index, x, y, z)
}

var fp_glVertexAttrib3sARB:@convention(c) (GL.UInt, GL.Short, GL.Short, GL.Short) -> () = load_glVertexAttrib3sARB
func load_glVertexAttrib3sARB(index:GL.UInt, x:GL.Short, y:GL.Short, z:GL.Short)
{
    fp_glVertexAttrib3sARB = unsafeBitCast(get_fp("glVertexAttrib3sARB", support: [ss110, ss111]), to: Swift.type(of: fp_glVertexAttrib3sARB))
    fp_glVertexAttrib3sARB(index, x, y, z)
}
public
func glVertexAttrib3sARB(index:GL.UInt, x:GL.Short, y:GL.Short, z:GL.Short)
{
    fp_glVertexAttrib3sARB(index, x, y, z)
}
public
func glVertexAttrib3sARB(_ index:GL.UInt, _ x:GL.Short, _ y:GL.Short, _ z:GL.Short)
{
    fp_glVertexAttrib3sARB(index, x, y, z)
}

var fp_glVertexAttrib3sNV:@convention(c) (GL.UInt, GL.Short, GL.Short, GL.Short) -> () = load_glVertexAttrib3sNV
func load_glVertexAttrib3sNV(index:GL.UInt, x:GL.Short, y:GL.Short, z:GL.Short)
{
    fp_glVertexAttrib3sNV = unsafeBitCast(get_fp("glVertexAttrib3sNV", support: [ss278]), to: Swift.type(of: fp_glVertexAttrib3sNV))
    fp_glVertexAttrib3sNV(index, x, y, z)
}
public
func glVertexAttrib3sNV(index:GL.UInt, x:GL.Short, y:GL.Short, z:GL.Short)
{
    fp_glVertexAttrib3sNV(index, x, y, z)
}
public
func glVertexAttrib3sNV(_ index:GL.UInt, _ x:GL.Short, _ y:GL.Short, _ z:GL.Short)
{
    fp_glVertexAttrib3sNV(index, x, y, z)
}

var fp_glVertexAttrib3sv:@convention(c) (GL.UInt, UnsafePointer<GL.Short>?) -> () = load_glVertexAttrib3sv
func load_glVertexAttrib3sv(index:GL.UInt, v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttrib3sv = unsafeBitCast(get_fp("glVertexAttrib3sv", support: [ss352]), to: Swift.type(of: fp_glVertexAttrib3sv))
    fp_glVertexAttrib3sv(index, v)
}
public
func glVertexAttrib3sv(index:GL.UInt, v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttrib3sv(index, v)
}
public
func glVertexAttrib3sv(_ index:GL.UInt, _ v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttrib3sv(index, v)
}

var fp_glVertexAttrib3svARB:@convention(c) (GL.UInt, UnsafePointer<GL.Short>?) -> () = load_glVertexAttrib3svARB
func load_glVertexAttrib3svARB(index:GL.UInt, v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttrib3svARB = unsafeBitCast(get_fp("glVertexAttrib3svARB", support: [ss110, ss111]), to: Swift.type(of: fp_glVertexAttrib3svARB))
    fp_glVertexAttrib3svARB(index, v)
}
public
func glVertexAttrib3svARB(index:GL.UInt, v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttrib3svARB(index, v)
}
public
func glVertexAttrib3svARB(_ index:GL.UInt, _ v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttrib3svARB(index, v)
}

var fp_glVertexAttrib3svNV:@convention(c) (GL.UInt, UnsafePointer<GL.Short>?) -> () = load_glVertexAttrib3svNV
func load_glVertexAttrib3svNV(index:GL.UInt, v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttrib3svNV = unsafeBitCast(get_fp("glVertexAttrib3svNV", support: [ss278]), to: Swift.type(of: fp_glVertexAttrib3svNV))
    fp_glVertexAttrib3svNV(index, v)
}
public
func glVertexAttrib3svNV(index:GL.UInt, v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttrib3svNV(index, v)
}
public
func glVertexAttrib3svNV(_ index:GL.UInt, _ v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttrib3svNV(index, v)
}

var fp_glVertexAttrib4Nbv:@convention(c) (GL.UInt, UnsafePointer<GL.Byte>?) -> () = load_glVertexAttrib4Nbv
func load_glVertexAttrib4Nbv(index:GL.UInt, v:UnsafePointer<GL.Byte>?)
{
    fp_glVertexAttrib4Nbv = unsafeBitCast(get_fp("glVertexAttrib4Nbv", support: [ss352]), to: Swift.type(of: fp_glVertexAttrib4Nbv))
    fp_glVertexAttrib4Nbv(index, v)
}
public
func glVertexAttrib4Nbv(index:GL.UInt, v:UnsafePointer<GL.Byte>?)
{
    fp_glVertexAttrib4Nbv(index, v)
}
public
func glVertexAttrib4Nbv(_ index:GL.UInt, _ v:UnsafePointer<GL.Byte>?)
{
    fp_glVertexAttrib4Nbv(index, v)
}

var fp_glVertexAttrib4NbvARB:@convention(c) (GL.UInt, UnsafePointer<GL.Byte>?) -> () = load_glVertexAttrib4NbvARB
func load_glVertexAttrib4NbvARB(index:GL.UInt, v:UnsafePointer<GL.Byte>?)
{
    fp_glVertexAttrib4NbvARB = unsafeBitCast(get_fp("glVertexAttrib4NbvARB", support: [ss110, ss111]), to: Swift.type(of: fp_glVertexAttrib4NbvARB))
    fp_glVertexAttrib4NbvARB(index, v)
}
public
func glVertexAttrib4NbvARB(index:GL.UInt, v:UnsafePointer<GL.Byte>?)
{
    fp_glVertexAttrib4NbvARB(index, v)
}
public
func glVertexAttrib4NbvARB(_ index:GL.UInt, _ v:UnsafePointer<GL.Byte>?)
{
    fp_glVertexAttrib4NbvARB(index, v)
}

var fp_glVertexAttrib4Niv:@convention(c) (GL.UInt, UnsafePointer<GL.Int>?) -> () = load_glVertexAttrib4Niv
func load_glVertexAttrib4Niv(index:GL.UInt, v:UnsafePointer<GL.Int>?)
{
    fp_glVertexAttrib4Niv = unsafeBitCast(get_fp("glVertexAttrib4Niv", support: [ss352]), to: Swift.type(of: fp_glVertexAttrib4Niv))
    fp_glVertexAttrib4Niv(index, v)
}
public
func glVertexAttrib4Niv(index:GL.UInt, v:UnsafePointer<GL.Int>?)
{
    fp_glVertexAttrib4Niv(index, v)
}
public
func glVertexAttrib4Niv(_ index:GL.UInt, _ v:UnsafePointer<GL.Int>?)
{
    fp_glVertexAttrib4Niv(index, v)
}

var fp_glVertexAttrib4NivARB:@convention(c) (GL.UInt, UnsafePointer<GL.Int>?) -> () = load_glVertexAttrib4NivARB
func load_glVertexAttrib4NivARB(index:GL.UInt, v:UnsafePointer<GL.Int>?)
{
    fp_glVertexAttrib4NivARB = unsafeBitCast(get_fp("glVertexAttrib4NivARB", support: [ss110, ss111]), to: Swift.type(of: fp_glVertexAttrib4NivARB))
    fp_glVertexAttrib4NivARB(index, v)
}
public
func glVertexAttrib4NivARB(index:GL.UInt, v:UnsafePointer<GL.Int>?)
{
    fp_glVertexAttrib4NivARB(index, v)
}
public
func glVertexAttrib4NivARB(_ index:GL.UInt, _ v:UnsafePointer<GL.Int>?)
{
    fp_glVertexAttrib4NivARB(index, v)
}

var fp_glVertexAttrib4Nsv:@convention(c) (GL.UInt, UnsafePointer<GL.Short>?) -> () = load_glVertexAttrib4Nsv
func load_glVertexAttrib4Nsv(index:GL.UInt, v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttrib4Nsv = unsafeBitCast(get_fp("glVertexAttrib4Nsv", support: [ss352]), to: Swift.type(of: fp_glVertexAttrib4Nsv))
    fp_glVertexAttrib4Nsv(index, v)
}
public
func glVertexAttrib4Nsv(index:GL.UInt, v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttrib4Nsv(index, v)
}
public
func glVertexAttrib4Nsv(_ index:GL.UInt, _ v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttrib4Nsv(index, v)
}

var fp_glVertexAttrib4NsvARB:@convention(c) (GL.UInt, UnsafePointer<GL.Short>?) -> () = load_glVertexAttrib4NsvARB
func load_glVertexAttrib4NsvARB(index:GL.UInt, v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttrib4NsvARB = unsafeBitCast(get_fp("glVertexAttrib4NsvARB", support: [ss110, ss111]), to: Swift.type(of: fp_glVertexAttrib4NsvARB))
    fp_glVertexAttrib4NsvARB(index, v)
}
public
func glVertexAttrib4NsvARB(index:GL.UInt, v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttrib4NsvARB(index, v)
}
public
func glVertexAttrib4NsvARB(_ index:GL.UInt, _ v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttrib4NsvARB(index, v)
}

var fp_glVertexAttrib4Nub:@convention(c) (GL.UInt, GL.UByte, GL.UByte, GL.UByte, GL.UByte) -> () = load_glVertexAttrib4Nub
func load_glVertexAttrib4Nub(index:GL.UInt, x:GL.UByte, y:GL.UByte, z:GL.UByte, w:GL.UByte)
{
    fp_glVertexAttrib4Nub = unsafeBitCast(get_fp("glVertexAttrib4Nub", support: [ss352]), to: Swift.type(of: fp_glVertexAttrib4Nub))
    fp_glVertexAttrib4Nub(index, x, y, z, w)
}
public
func glVertexAttrib4Nub(index:GL.UInt, x:GL.UByte, y:GL.UByte, z:GL.UByte, w:GL.UByte)
{
    fp_glVertexAttrib4Nub(index, x, y, z, w)
}
public
func glVertexAttrib4Nub(_ index:GL.UInt, _ x:GL.UByte, _ y:GL.UByte, _ z:GL.UByte, _ w:GL.UByte)
{
    fp_glVertexAttrib4Nub(index, x, y, z, w)
}

var fp_glVertexAttrib4NubARB:@convention(c) (GL.UInt, GL.UByte, GL.UByte, GL.UByte, GL.UByte) -> () = load_glVertexAttrib4NubARB
func load_glVertexAttrib4NubARB(index:GL.UInt, x:GL.UByte, y:GL.UByte, z:GL.UByte, w:GL.UByte)
{
    fp_glVertexAttrib4NubARB = unsafeBitCast(get_fp("glVertexAttrib4NubARB", support: [ss110, ss111]), to: Swift.type(of: fp_glVertexAttrib4NubARB))
    fp_glVertexAttrib4NubARB(index, x, y, z, w)
}
public
func glVertexAttrib4NubARB(index:GL.UInt, x:GL.UByte, y:GL.UByte, z:GL.UByte, w:GL.UByte)
{
    fp_glVertexAttrib4NubARB(index, x, y, z, w)
}
public
func glVertexAttrib4NubARB(_ index:GL.UInt, _ x:GL.UByte, _ y:GL.UByte, _ z:GL.UByte, _ w:GL.UByte)
{
    fp_glVertexAttrib4NubARB(index, x, y, z, w)
}

var fp_glVertexAttrib4Nubv:@convention(c) (GL.UInt, UnsafePointer<GL.UByte>?) -> () = load_glVertexAttrib4Nubv
func load_glVertexAttrib4Nubv(index:GL.UInt, v:UnsafePointer<GL.UByte>?)
{
    fp_glVertexAttrib4Nubv = unsafeBitCast(get_fp("glVertexAttrib4Nubv", support: [ss352]), to: Swift.type(of: fp_glVertexAttrib4Nubv))
    fp_glVertexAttrib4Nubv(index, v)
}
public
func glVertexAttrib4Nubv(index:GL.UInt, v:UnsafePointer<GL.UByte>?)
{
    fp_glVertexAttrib4Nubv(index, v)
}
public
func glVertexAttrib4Nubv(_ index:GL.UInt, _ v:UnsafePointer<GL.UByte>?)
{
    fp_glVertexAttrib4Nubv(index, v)
}

var fp_glVertexAttrib4NubvARB:@convention(c) (GL.UInt, UnsafePointer<GL.UByte>?) -> () = load_glVertexAttrib4NubvARB
func load_glVertexAttrib4NubvARB(index:GL.UInt, v:UnsafePointer<GL.UByte>?)
{
    fp_glVertexAttrib4NubvARB = unsafeBitCast(get_fp("glVertexAttrib4NubvARB", support: [ss110, ss111]), to: Swift.type(of: fp_glVertexAttrib4NubvARB))
    fp_glVertexAttrib4NubvARB(index, v)
}
public
func glVertexAttrib4NubvARB(index:GL.UInt, v:UnsafePointer<GL.UByte>?)
{
    fp_glVertexAttrib4NubvARB(index, v)
}
public
func glVertexAttrib4NubvARB(_ index:GL.UInt, _ v:UnsafePointer<GL.UByte>?)
{
    fp_glVertexAttrib4NubvARB(index, v)
}

var fp_glVertexAttrib4Nuiv:@convention(c) (GL.UInt, UnsafePointer<GL.UInt>?) -> () = load_glVertexAttrib4Nuiv
func load_glVertexAttrib4Nuiv(index:GL.UInt, v:UnsafePointer<GL.UInt>?)
{
    fp_glVertexAttrib4Nuiv = unsafeBitCast(get_fp("glVertexAttrib4Nuiv", support: [ss352]), to: Swift.type(of: fp_glVertexAttrib4Nuiv))
    fp_glVertexAttrib4Nuiv(index, v)
}
public
func glVertexAttrib4Nuiv(index:GL.UInt, v:UnsafePointer<GL.UInt>?)
{
    fp_glVertexAttrib4Nuiv(index, v)
}
public
func glVertexAttrib4Nuiv(_ index:GL.UInt, _ v:UnsafePointer<GL.UInt>?)
{
    fp_glVertexAttrib4Nuiv(index, v)
}

var fp_glVertexAttrib4NuivARB:@convention(c) (GL.UInt, UnsafePointer<GL.UInt>?) -> () = load_glVertexAttrib4NuivARB
func load_glVertexAttrib4NuivARB(index:GL.UInt, v:UnsafePointer<GL.UInt>?)
{
    fp_glVertexAttrib4NuivARB = unsafeBitCast(get_fp("glVertexAttrib4NuivARB", support: [ss110, ss111]), to: Swift.type(of: fp_glVertexAttrib4NuivARB))
    fp_glVertexAttrib4NuivARB(index, v)
}
public
func glVertexAttrib4NuivARB(index:GL.UInt, v:UnsafePointer<GL.UInt>?)
{
    fp_glVertexAttrib4NuivARB(index, v)
}
public
func glVertexAttrib4NuivARB(_ index:GL.UInt, _ v:UnsafePointer<GL.UInt>?)
{
    fp_glVertexAttrib4NuivARB(index, v)
}

var fp_glVertexAttrib4Nusv:@convention(c) (GL.UInt, UnsafePointer<GL.UShort>?) -> () = load_glVertexAttrib4Nusv
func load_glVertexAttrib4Nusv(index:GL.UInt, v:UnsafePointer<GL.UShort>?)
{
    fp_glVertexAttrib4Nusv = unsafeBitCast(get_fp("glVertexAttrib4Nusv", support: [ss352]), to: Swift.type(of: fp_glVertexAttrib4Nusv))
    fp_glVertexAttrib4Nusv(index, v)
}
public
func glVertexAttrib4Nusv(index:GL.UInt, v:UnsafePointer<GL.UShort>?)
{
    fp_glVertexAttrib4Nusv(index, v)
}
public
func glVertexAttrib4Nusv(_ index:GL.UInt, _ v:UnsafePointer<GL.UShort>?)
{
    fp_glVertexAttrib4Nusv(index, v)
}

var fp_glVertexAttrib4NusvARB:@convention(c) (GL.UInt, UnsafePointer<GL.UShort>?) -> () = load_glVertexAttrib4NusvARB
func load_glVertexAttrib4NusvARB(index:GL.UInt, v:UnsafePointer<GL.UShort>?)
{
    fp_glVertexAttrib4NusvARB = unsafeBitCast(get_fp("glVertexAttrib4NusvARB", support: [ss110, ss111]), to: Swift.type(of: fp_glVertexAttrib4NusvARB))
    fp_glVertexAttrib4NusvARB(index, v)
}
public
func glVertexAttrib4NusvARB(index:GL.UInt, v:UnsafePointer<GL.UShort>?)
{
    fp_glVertexAttrib4NusvARB(index, v)
}
public
func glVertexAttrib4NusvARB(_ index:GL.UInt, _ v:UnsafePointer<GL.UShort>?)
{
    fp_glVertexAttrib4NusvARB(index, v)
}

var fp_glVertexAttrib4bv:@convention(c) (GL.UInt, UnsafePointer<GL.Byte>?) -> () = load_glVertexAttrib4bv
func load_glVertexAttrib4bv(index:GL.UInt, v:UnsafePointer<GL.Byte>?)
{
    fp_glVertexAttrib4bv = unsafeBitCast(get_fp("glVertexAttrib4bv", support: [ss352]), to: Swift.type(of: fp_glVertexAttrib4bv))
    fp_glVertexAttrib4bv(index, v)
}
public
func glVertexAttrib4bv(index:GL.UInt, v:UnsafePointer<GL.Byte>?)
{
    fp_glVertexAttrib4bv(index, v)
}
public
func glVertexAttrib4bv(_ index:GL.UInt, _ v:UnsafePointer<GL.Byte>?)
{
    fp_glVertexAttrib4bv(index, v)
}

var fp_glVertexAttrib4bvARB:@convention(c) (GL.UInt, UnsafePointer<GL.Byte>?) -> () = load_glVertexAttrib4bvARB
func load_glVertexAttrib4bvARB(index:GL.UInt, v:UnsafePointer<GL.Byte>?)
{
    fp_glVertexAttrib4bvARB = unsafeBitCast(get_fp("glVertexAttrib4bvARB", support: [ss110, ss111]), to: Swift.type(of: fp_glVertexAttrib4bvARB))
    fp_glVertexAttrib4bvARB(index, v)
}
public
func glVertexAttrib4bvARB(index:GL.UInt, v:UnsafePointer<GL.Byte>?)
{
    fp_glVertexAttrib4bvARB(index, v)
}
public
func glVertexAttrib4bvARB(_ index:GL.UInt, _ v:UnsafePointer<GL.Byte>?)
{
    fp_glVertexAttrib4bvARB(index, v)
}

var fp_glVertexAttrib4d:@convention(c) (GL.UInt, GL.Double, GL.Double, GL.Double, GL.Double) -> () = load_glVertexAttrib4d
func load_glVertexAttrib4d(index:GL.UInt, x:GL.Double, y:GL.Double, z:GL.Double, w:GL.Double)
{
    fp_glVertexAttrib4d = unsafeBitCast(get_fp("glVertexAttrib4d", support: [ss352]), to: Swift.type(of: fp_glVertexAttrib4d))
    fp_glVertexAttrib4d(index, x, y, z, w)
}
public
func glVertexAttrib4d(index:GL.UInt, x:GL.Double, y:GL.Double, z:GL.Double, w:GL.Double)
{
    fp_glVertexAttrib4d(index, x, y, z, w)
}
public
func glVertexAttrib4d(_ index:GL.UInt, _ x:GL.Double, _ y:GL.Double, _ z:GL.Double, _ w:GL.Double)
{
    fp_glVertexAttrib4d(index, x, y, z, w)
}

var fp_glVertexAttrib4dARB:@convention(c) (GL.UInt, GL.Double, GL.Double, GL.Double, GL.Double) -> () = load_glVertexAttrib4dARB
func load_glVertexAttrib4dARB(index:GL.UInt, x:GL.Double, y:GL.Double, z:GL.Double, w:GL.Double)
{
    fp_glVertexAttrib4dARB = unsafeBitCast(get_fp("glVertexAttrib4dARB", support: [ss110, ss111]), to: Swift.type(of: fp_glVertexAttrib4dARB))
    fp_glVertexAttrib4dARB(index, x, y, z, w)
}
public
func glVertexAttrib4dARB(index:GL.UInt, x:GL.Double, y:GL.Double, z:GL.Double, w:GL.Double)
{
    fp_glVertexAttrib4dARB(index, x, y, z, w)
}
public
func glVertexAttrib4dARB(_ index:GL.UInt, _ x:GL.Double, _ y:GL.Double, _ z:GL.Double, _ w:GL.Double)
{
    fp_glVertexAttrib4dARB(index, x, y, z, w)
}

var fp_glVertexAttrib4dNV:@convention(c) (GL.UInt, GL.Double, GL.Double, GL.Double, GL.Double) -> () = load_glVertexAttrib4dNV
func load_glVertexAttrib4dNV(index:GL.UInt, x:GL.Double, y:GL.Double, z:GL.Double, w:GL.Double)
{
    fp_glVertexAttrib4dNV = unsafeBitCast(get_fp("glVertexAttrib4dNV", support: [ss278]), to: Swift.type(of: fp_glVertexAttrib4dNV))
    fp_glVertexAttrib4dNV(index, x, y, z, w)
}
public
func glVertexAttrib4dNV(index:GL.UInt, x:GL.Double, y:GL.Double, z:GL.Double, w:GL.Double)
{
    fp_glVertexAttrib4dNV(index, x, y, z, w)
}
public
func glVertexAttrib4dNV(_ index:GL.UInt, _ x:GL.Double, _ y:GL.Double, _ z:GL.Double, _ w:GL.Double)
{
    fp_glVertexAttrib4dNV(index, x, y, z, w)
}

var fp_glVertexAttrib4dv:@convention(c) (GL.UInt, UnsafePointer<GL.Double>?) -> () = load_glVertexAttrib4dv
func load_glVertexAttrib4dv(index:GL.UInt, v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttrib4dv = unsafeBitCast(get_fp("glVertexAttrib4dv", support: [ss352]), to: Swift.type(of: fp_glVertexAttrib4dv))
    fp_glVertexAttrib4dv(index, v)
}
public
func glVertexAttrib4dv(index:GL.UInt, v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttrib4dv(index, v)
}
public
func glVertexAttrib4dv(_ index:GL.UInt, _ v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttrib4dv(index, v)
}

var fp_glVertexAttrib4dvARB:@convention(c) (GL.UInt, UnsafePointer<GL.Double>?) -> () = load_glVertexAttrib4dvARB
func load_glVertexAttrib4dvARB(index:GL.UInt, v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttrib4dvARB = unsafeBitCast(get_fp("glVertexAttrib4dvARB", support: [ss110, ss111]), to: Swift.type(of: fp_glVertexAttrib4dvARB))
    fp_glVertexAttrib4dvARB(index, v)
}
public
func glVertexAttrib4dvARB(index:GL.UInt, v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttrib4dvARB(index, v)
}
public
func glVertexAttrib4dvARB(_ index:GL.UInt, _ v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttrib4dvARB(index, v)
}

var fp_glVertexAttrib4dvNV:@convention(c) (GL.UInt, UnsafePointer<GL.Double>?) -> () = load_glVertexAttrib4dvNV
func load_glVertexAttrib4dvNV(index:GL.UInt, v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttrib4dvNV = unsafeBitCast(get_fp("glVertexAttrib4dvNV", support: [ss278]), to: Swift.type(of: fp_glVertexAttrib4dvNV))
    fp_glVertexAttrib4dvNV(index, v)
}
public
func glVertexAttrib4dvNV(index:GL.UInt, v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttrib4dvNV(index, v)
}
public
func glVertexAttrib4dvNV(_ index:GL.UInt, _ v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttrib4dvNV(index, v)
}

var fp_glVertexAttrib4f:@convention(c) (GL.UInt, GL.Float, GL.Float, GL.Float, GL.Float) -> () = load_glVertexAttrib4f
func load_glVertexAttrib4f(index:GL.UInt, x:GL.Float, y:GL.Float, z:GL.Float, w:GL.Float)
{
    fp_glVertexAttrib4f = unsafeBitCast(get_fp("glVertexAttrib4f", support: [ss352, ss365]), to: Swift.type(of: fp_glVertexAttrib4f))
    fp_glVertexAttrib4f(index, x, y, z, w)
}
public
func glVertexAttrib4f(index:GL.UInt, x:GL.Float, y:GL.Float, z:GL.Float, w:GL.Float)
{
    fp_glVertexAttrib4f(index, x, y, z, w)
}
public
func glVertexAttrib4f(_ index:GL.UInt, _ x:GL.Float, _ y:GL.Float, _ z:GL.Float, _ w:GL.Float)
{
    fp_glVertexAttrib4f(index, x, y, z, w)
}

var fp_glVertexAttrib4fARB:@convention(c) (GL.UInt, GL.Float, GL.Float, GL.Float, GL.Float) -> () = load_glVertexAttrib4fARB
func load_glVertexAttrib4fARB(index:GL.UInt, x:GL.Float, y:GL.Float, z:GL.Float, w:GL.Float)
{
    fp_glVertexAttrib4fARB = unsafeBitCast(get_fp("glVertexAttrib4fARB", support: [ss110, ss111]), to: Swift.type(of: fp_glVertexAttrib4fARB))
    fp_glVertexAttrib4fARB(index, x, y, z, w)
}
public
func glVertexAttrib4fARB(index:GL.UInt, x:GL.Float, y:GL.Float, z:GL.Float, w:GL.Float)
{
    fp_glVertexAttrib4fARB(index, x, y, z, w)
}
public
func glVertexAttrib4fARB(_ index:GL.UInt, _ x:GL.Float, _ y:GL.Float, _ z:GL.Float, _ w:GL.Float)
{
    fp_glVertexAttrib4fARB(index, x, y, z, w)
}

var fp_glVertexAttrib4fNV:@convention(c) (GL.UInt, GL.Float, GL.Float, GL.Float, GL.Float) -> () = load_glVertexAttrib4fNV
func load_glVertexAttrib4fNV(index:GL.UInt, x:GL.Float, y:GL.Float, z:GL.Float, w:GL.Float)
{
    fp_glVertexAttrib4fNV = unsafeBitCast(get_fp("glVertexAttrib4fNV", support: [ss278]), to: Swift.type(of: fp_glVertexAttrib4fNV))
    fp_glVertexAttrib4fNV(index, x, y, z, w)
}
public
func glVertexAttrib4fNV(index:GL.UInt, x:GL.Float, y:GL.Float, z:GL.Float, w:GL.Float)
{
    fp_glVertexAttrib4fNV(index, x, y, z, w)
}
public
func glVertexAttrib4fNV(_ index:GL.UInt, _ x:GL.Float, _ y:GL.Float, _ z:GL.Float, _ w:GL.Float)
{
    fp_glVertexAttrib4fNV(index, x, y, z, w)
}

var fp_glVertexAttrib4fv:@convention(c) (GL.UInt, UnsafePointer<GL.Float>?) -> () = load_glVertexAttrib4fv
func load_glVertexAttrib4fv(index:GL.UInt, v:UnsafePointer<GL.Float>?)
{
    fp_glVertexAttrib4fv = unsafeBitCast(get_fp("glVertexAttrib4fv", support: [ss352, ss365]), to: Swift.type(of: fp_glVertexAttrib4fv))
    fp_glVertexAttrib4fv(index, v)
}
public
func glVertexAttrib4fv(index:GL.UInt, v:UnsafePointer<GL.Float>?)
{
    fp_glVertexAttrib4fv(index, v)
}
public
func glVertexAttrib4fv(_ index:GL.UInt, _ v:UnsafePointer<GL.Float>?)
{
    fp_glVertexAttrib4fv(index, v)
}

var fp_glVertexAttrib4fvARB:@convention(c) (GL.UInt, UnsafePointer<GL.Float>?) -> () = load_glVertexAttrib4fvARB
func load_glVertexAttrib4fvARB(index:GL.UInt, v:UnsafePointer<GL.Float>?)
{
    fp_glVertexAttrib4fvARB = unsafeBitCast(get_fp("glVertexAttrib4fvARB", support: [ss110, ss111]), to: Swift.type(of: fp_glVertexAttrib4fvARB))
    fp_glVertexAttrib4fvARB(index, v)
}
public
func glVertexAttrib4fvARB(index:GL.UInt, v:UnsafePointer<GL.Float>?)
{
    fp_glVertexAttrib4fvARB(index, v)
}
public
func glVertexAttrib4fvARB(_ index:GL.UInt, _ v:UnsafePointer<GL.Float>?)
{
    fp_glVertexAttrib4fvARB(index, v)
}

var fp_glVertexAttrib4fvNV:@convention(c) (GL.UInt, UnsafePointer<GL.Float>?) -> () = load_glVertexAttrib4fvNV
func load_glVertexAttrib4fvNV(index:GL.UInt, v:UnsafePointer<GL.Float>?)
{
    fp_glVertexAttrib4fvNV = unsafeBitCast(get_fp("glVertexAttrib4fvNV", support: [ss278]), to: Swift.type(of: fp_glVertexAttrib4fvNV))
    fp_glVertexAttrib4fvNV(index, v)
}
public
func glVertexAttrib4fvNV(index:GL.UInt, v:UnsafePointer<GL.Float>?)
{
    fp_glVertexAttrib4fvNV(index, v)
}
public
func glVertexAttrib4fvNV(_ index:GL.UInt, _ v:UnsafePointer<GL.Float>?)
{
    fp_glVertexAttrib4fvNV(index, v)
}

var fp_glVertexAttrib4hNV:@convention(c) (GL.UInt, GL.HalfNV, GL.HalfNV, GL.HalfNV, GL.HalfNV) -> () = load_glVertexAttrib4hNV
func load_glVertexAttrib4hNV(index:GL.UInt, x:GL.HalfNV, y:GL.HalfNV, z:GL.HalfNV, w:GL.HalfNV)
{
    fp_glVertexAttrib4hNV = unsafeBitCast(get_fp("glVertexAttrib4hNV", support: [ss253]), to: Swift.type(of: fp_glVertexAttrib4hNV))
    fp_glVertexAttrib4hNV(index, x, y, z, w)
}
public
func glVertexAttrib4hNV(index:GL.UInt, x:GL.HalfNV, y:GL.HalfNV, z:GL.HalfNV, w:GL.HalfNV)
{
    fp_glVertexAttrib4hNV(index, x, y, z, w)
}
public
func glVertexAttrib4hNV(_ index:GL.UInt, _ x:GL.HalfNV, _ y:GL.HalfNV, _ z:GL.HalfNV, _ w:GL.HalfNV)
{
    fp_glVertexAttrib4hNV(index, x, y, z, w)
}

var fp_glVertexAttrib4hvNV:@convention(c) (GL.UInt, UnsafePointer<GL.HalfNV>?) -> () = load_glVertexAttrib4hvNV
func load_glVertexAttrib4hvNV(index:GL.UInt, v:UnsafePointer<GL.HalfNV>?)
{
    fp_glVertexAttrib4hvNV = unsafeBitCast(get_fp("glVertexAttrib4hvNV", support: [ss253]), to: Swift.type(of: fp_glVertexAttrib4hvNV))
    fp_glVertexAttrib4hvNV(index, v)
}
public
func glVertexAttrib4hvNV(index:GL.UInt, v:UnsafePointer<GL.HalfNV>?)
{
    fp_glVertexAttrib4hvNV(index, v)
}
public
func glVertexAttrib4hvNV(_ index:GL.UInt, _ v:UnsafePointer<GL.HalfNV>?)
{
    fp_glVertexAttrib4hvNV(index, v)
}

var fp_glVertexAttrib4iv:@convention(c) (GL.UInt, UnsafePointer<GL.Int>?) -> () = load_glVertexAttrib4iv
func load_glVertexAttrib4iv(index:GL.UInt, v:UnsafePointer<GL.Int>?)
{
    fp_glVertexAttrib4iv = unsafeBitCast(get_fp("glVertexAttrib4iv", support: [ss352]), to: Swift.type(of: fp_glVertexAttrib4iv))
    fp_glVertexAttrib4iv(index, v)
}
public
func glVertexAttrib4iv(index:GL.UInt, v:UnsafePointer<GL.Int>?)
{
    fp_glVertexAttrib4iv(index, v)
}
public
func glVertexAttrib4iv(_ index:GL.UInt, _ v:UnsafePointer<GL.Int>?)
{
    fp_glVertexAttrib4iv(index, v)
}

var fp_glVertexAttrib4ivARB:@convention(c) (GL.UInt, UnsafePointer<GL.Int>?) -> () = load_glVertexAttrib4ivARB
func load_glVertexAttrib4ivARB(index:GL.UInt, v:UnsafePointer<GL.Int>?)
{
    fp_glVertexAttrib4ivARB = unsafeBitCast(get_fp("glVertexAttrib4ivARB", support: [ss110, ss111]), to: Swift.type(of: fp_glVertexAttrib4ivARB))
    fp_glVertexAttrib4ivARB(index, v)
}
public
func glVertexAttrib4ivARB(index:GL.UInt, v:UnsafePointer<GL.Int>?)
{
    fp_glVertexAttrib4ivARB(index, v)
}
public
func glVertexAttrib4ivARB(_ index:GL.UInt, _ v:UnsafePointer<GL.Int>?)
{
    fp_glVertexAttrib4ivARB(index, v)
}

var fp_glVertexAttrib4s:@convention(c) (GL.UInt, GL.Short, GL.Short, GL.Short, GL.Short) -> () = load_glVertexAttrib4s
func load_glVertexAttrib4s(index:GL.UInt, x:GL.Short, y:GL.Short, z:GL.Short, w:GL.Short)
{
    fp_glVertexAttrib4s = unsafeBitCast(get_fp("glVertexAttrib4s", support: [ss352]), to: Swift.type(of: fp_glVertexAttrib4s))
    fp_glVertexAttrib4s(index, x, y, z, w)
}
public
func glVertexAttrib4s(index:GL.UInt, x:GL.Short, y:GL.Short, z:GL.Short, w:GL.Short)
{
    fp_glVertexAttrib4s(index, x, y, z, w)
}
public
func glVertexAttrib4s(_ index:GL.UInt, _ x:GL.Short, _ y:GL.Short, _ z:GL.Short, _ w:GL.Short)
{
    fp_glVertexAttrib4s(index, x, y, z, w)
}

var fp_glVertexAttrib4sARB:@convention(c) (GL.UInt, GL.Short, GL.Short, GL.Short, GL.Short) -> () = load_glVertexAttrib4sARB
func load_glVertexAttrib4sARB(index:GL.UInt, x:GL.Short, y:GL.Short, z:GL.Short, w:GL.Short)
{
    fp_glVertexAttrib4sARB = unsafeBitCast(get_fp("glVertexAttrib4sARB", support: [ss110, ss111]), to: Swift.type(of: fp_glVertexAttrib4sARB))
    fp_glVertexAttrib4sARB(index, x, y, z, w)
}
public
func glVertexAttrib4sARB(index:GL.UInt, x:GL.Short, y:GL.Short, z:GL.Short, w:GL.Short)
{
    fp_glVertexAttrib4sARB(index, x, y, z, w)
}
public
func glVertexAttrib4sARB(_ index:GL.UInt, _ x:GL.Short, _ y:GL.Short, _ z:GL.Short, _ w:GL.Short)
{
    fp_glVertexAttrib4sARB(index, x, y, z, w)
}

var fp_glVertexAttrib4sNV:@convention(c) (GL.UInt, GL.Short, GL.Short, GL.Short, GL.Short) -> () = load_glVertexAttrib4sNV
func load_glVertexAttrib4sNV(index:GL.UInt, x:GL.Short, y:GL.Short, z:GL.Short, w:GL.Short)
{
    fp_glVertexAttrib4sNV = unsafeBitCast(get_fp("glVertexAttrib4sNV", support: [ss278]), to: Swift.type(of: fp_glVertexAttrib4sNV))
    fp_glVertexAttrib4sNV(index, x, y, z, w)
}
public
func glVertexAttrib4sNV(index:GL.UInt, x:GL.Short, y:GL.Short, z:GL.Short, w:GL.Short)
{
    fp_glVertexAttrib4sNV(index, x, y, z, w)
}
public
func glVertexAttrib4sNV(_ index:GL.UInt, _ x:GL.Short, _ y:GL.Short, _ z:GL.Short, _ w:GL.Short)
{
    fp_glVertexAttrib4sNV(index, x, y, z, w)
}

var fp_glVertexAttrib4sv:@convention(c) (GL.UInt, UnsafePointer<GL.Short>?) -> () = load_glVertexAttrib4sv
func load_glVertexAttrib4sv(index:GL.UInt, v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttrib4sv = unsafeBitCast(get_fp("glVertexAttrib4sv", support: [ss352]), to: Swift.type(of: fp_glVertexAttrib4sv))
    fp_glVertexAttrib4sv(index, v)
}
public
func glVertexAttrib4sv(index:GL.UInt, v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttrib4sv(index, v)
}
public
func glVertexAttrib4sv(_ index:GL.UInt, _ v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttrib4sv(index, v)
}

var fp_glVertexAttrib4svARB:@convention(c) (GL.UInt, UnsafePointer<GL.Short>?) -> () = load_glVertexAttrib4svARB
func load_glVertexAttrib4svARB(index:GL.UInt, v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttrib4svARB = unsafeBitCast(get_fp("glVertexAttrib4svARB", support: [ss110, ss111]), to: Swift.type(of: fp_glVertexAttrib4svARB))
    fp_glVertexAttrib4svARB(index, v)
}
public
func glVertexAttrib4svARB(index:GL.UInt, v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttrib4svARB(index, v)
}
public
func glVertexAttrib4svARB(_ index:GL.UInt, _ v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttrib4svARB(index, v)
}

var fp_glVertexAttrib4svNV:@convention(c) (GL.UInt, UnsafePointer<GL.Short>?) -> () = load_glVertexAttrib4svNV
func load_glVertexAttrib4svNV(index:GL.UInt, v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttrib4svNV = unsafeBitCast(get_fp("glVertexAttrib4svNV", support: [ss278]), to: Swift.type(of: fp_glVertexAttrib4svNV))
    fp_glVertexAttrib4svNV(index, v)
}
public
func glVertexAttrib4svNV(index:GL.UInt, v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttrib4svNV(index, v)
}
public
func glVertexAttrib4svNV(_ index:GL.UInt, _ v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttrib4svNV(index, v)
}

var fp_glVertexAttrib4ubNV:@convention(c) (GL.UInt, GL.UByte, GL.UByte, GL.UByte, GL.UByte) -> () = load_glVertexAttrib4ubNV
func load_glVertexAttrib4ubNV(index:GL.UInt, x:GL.UByte, y:GL.UByte, z:GL.UByte, w:GL.UByte)
{
    fp_glVertexAttrib4ubNV = unsafeBitCast(get_fp("glVertexAttrib4ubNV", support: [ss278]), to: Swift.type(of: fp_glVertexAttrib4ubNV))
    fp_glVertexAttrib4ubNV(index, x, y, z, w)
}
public
func glVertexAttrib4ubNV(index:GL.UInt, x:GL.UByte, y:GL.UByte, z:GL.UByte, w:GL.UByte)
{
    fp_glVertexAttrib4ubNV(index, x, y, z, w)
}
public
func glVertexAttrib4ubNV(_ index:GL.UInt, _ x:GL.UByte, _ y:GL.UByte, _ z:GL.UByte, _ w:GL.UByte)
{
    fp_glVertexAttrib4ubNV(index, x, y, z, w)
}

var fp_glVertexAttrib4ubv:@convention(c) (GL.UInt, UnsafePointer<GL.UByte>?) -> () = load_glVertexAttrib4ubv
func load_glVertexAttrib4ubv(index:GL.UInt, v:UnsafePointer<GL.UByte>?)
{
    fp_glVertexAttrib4ubv = unsafeBitCast(get_fp("glVertexAttrib4ubv", support: [ss352]), to: Swift.type(of: fp_glVertexAttrib4ubv))
    fp_glVertexAttrib4ubv(index, v)
}
public
func glVertexAttrib4ubv(index:GL.UInt, v:UnsafePointer<GL.UByte>?)
{
    fp_glVertexAttrib4ubv(index, v)
}
public
func glVertexAttrib4ubv(_ index:GL.UInt, _ v:UnsafePointer<GL.UByte>?)
{
    fp_glVertexAttrib4ubv(index, v)
}

var fp_glVertexAttrib4ubvARB:@convention(c) (GL.UInt, UnsafePointer<GL.UByte>?) -> () = load_glVertexAttrib4ubvARB
func load_glVertexAttrib4ubvARB(index:GL.UInt, v:UnsafePointer<GL.UByte>?)
{
    fp_glVertexAttrib4ubvARB = unsafeBitCast(get_fp("glVertexAttrib4ubvARB", support: [ss110, ss111]), to: Swift.type(of: fp_glVertexAttrib4ubvARB))
    fp_glVertexAttrib4ubvARB(index, v)
}
public
func glVertexAttrib4ubvARB(index:GL.UInt, v:UnsafePointer<GL.UByte>?)
{
    fp_glVertexAttrib4ubvARB(index, v)
}
public
func glVertexAttrib4ubvARB(_ index:GL.UInt, _ v:UnsafePointer<GL.UByte>?)
{
    fp_glVertexAttrib4ubvARB(index, v)
}

var fp_glVertexAttrib4ubvNV:@convention(c) (GL.UInt, UnsafePointer<GL.UByte>?) -> () = load_glVertexAttrib4ubvNV
func load_glVertexAttrib4ubvNV(index:GL.UInt, v:UnsafePointer<GL.UByte>?)
{
    fp_glVertexAttrib4ubvNV = unsafeBitCast(get_fp("glVertexAttrib4ubvNV", support: [ss278]), to: Swift.type(of: fp_glVertexAttrib4ubvNV))
    fp_glVertexAttrib4ubvNV(index, v)
}
public
func glVertexAttrib4ubvNV(index:GL.UInt, v:UnsafePointer<GL.UByte>?)
{
    fp_glVertexAttrib4ubvNV(index, v)
}
public
func glVertexAttrib4ubvNV(_ index:GL.UInt, _ v:UnsafePointer<GL.UByte>?)
{
    fp_glVertexAttrib4ubvNV(index, v)
}

var fp_glVertexAttrib4uiv:@convention(c) (GL.UInt, UnsafePointer<GL.UInt>?) -> () = load_glVertexAttrib4uiv
func load_glVertexAttrib4uiv(index:GL.UInt, v:UnsafePointer<GL.UInt>?)
{
    fp_glVertexAttrib4uiv = unsafeBitCast(get_fp("glVertexAttrib4uiv", support: [ss352]), to: Swift.type(of: fp_glVertexAttrib4uiv))
    fp_glVertexAttrib4uiv(index, v)
}
public
func glVertexAttrib4uiv(index:GL.UInt, v:UnsafePointer<GL.UInt>?)
{
    fp_glVertexAttrib4uiv(index, v)
}
public
func glVertexAttrib4uiv(_ index:GL.UInt, _ v:UnsafePointer<GL.UInt>?)
{
    fp_glVertexAttrib4uiv(index, v)
}

var fp_glVertexAttrib4uivARB:@convention(c) (GL.UInt, UnsafePointer<GL.UInt>?) -> () = load_glVertexAttrib4uivARB
func load_glVertexAttrib4uivARB(index:GL.UInt, v:UnsafePointer<GL.UInt>?)
{
    fp_glVertexAttrib4uivARB = unsafeBitCast(get_fp("glVertexAttrib4uivARB", support: [ss110, ss111]), to: Swift.type(of: fp_glVertexAttrib4uivARB))
    fp_glVertexAttrib4uivARB(index, v)
}
public
func glVertexAttrib4uivARB(index:GL.UInt, v:UnsafePointer<GL.UInt>?)
{
    fp_glVertexAttrib4uivARB(index, v)
}
public
func glVertexAttrib4uivARB(_ index:GL.UInt, _ v:UnsafePointer<GL.UInt>?)
{
    fp_glVertexAttrib4uivARB(index, v)
}

var fp_glVertexAttrib4usv:@convention(c) (GL.UInt, UnsafePointer<GL.UShort>?) -> () = load_glVertexAttrib4usv
func load_glVertexAttrib4usv(index:GL.UInt, v:UnsafePointer<GL.UShort>?)
{
    fp_glVertexAttrib4usv = unsafeBitCast(get_fp("glVertexAttrib4usv", support: [ss352]), to: Swift.type(of: fp_glVertexAttrib4usv))
    fp_glVertexAttrib4usv(index, v)
}
public
func glVertexAttrib4usv(index:GL.UInt, v:UnsafePointer<GL.UShort>?)
{
    fp_glVertexAttrib4usv(index, v)
}
public
func glVertexAttrib4usv(_ index:GL.UInt, _ v:UnsafePointer<GL.UShort>?)
{
    fp_glVertexAttrib4usv(index, v)
}

var fp_glVertexAttrib4usvARB:@convention(c) (GL.UInt, UnsafePointer<GL.UShort>?) -> () = load_glVertexAttrib4usvARB
func load_glVertexAttrib4usvARB(index:GL.UInt, v:UnsafePointer<GL.UShort>?)
{
    fp_glVertexAttrib4usvARB = unsafeBitCast(get_fp("glVertexAttrib4usvARB", support: [ss110, ss111]), to: Swift.type(of: fp_glVertexAttrib4usvARB))
    fp_glVertexAttrib4usvARB(index, v)
}
public
func glVertexAttrib4usvARB(index:GL.UInt, v:UnsafePointer<GL.UShort>?)
{
    fp_glVertexAttrib4usvARB(index, v)
}
public
func glVertexAttrib4usvARB(_ index:GL.UInt, _ v:UnsafePointer<GL.UShort>?)
{
    fp_glVertexAttrib4usvARB(index, v)
}

var fp_glVertexAttribArrayObjectATI:@convention(c) (GL.UInt, GL.Int, GL.Enum, GL.Bool, GL.Size, GL.UInt, GL.UInt) -> () = load_glVertexAttribArrayObjectATI
func load_glVertexAttribArrayObjectATI(index:GL.UInt, size:GL.Int, type:GL.Enum, normalized:GL.Bool, stride:GL.Size, buffer:GL.UInt, offset:GL.UInt)
{
    fp_glVertexAttribArrayObjectATI = unsafeBitCast(get_fp("glVertexAttribArrayObjectATI", support: [ss123]), to: Swift.type(of: fp_glVertexAttribArrayObjectATI))
    fp_glVertexAttribArrayObjectATI(index, size, type, normalized, stride, buffer, offset)
}
public
func glVertexAttribArrayObjectATI(index:GL.UInt, size:GL.Int, type:GL.Enum, normalized:GL.Bool, stride:GL.Size, buffer:GL.UInt, offset:GL.UInt)
{
    fp_glVertexAttribArrayObjectATI(index, size, type, normalized, stride, buffer, offset)
}
public
func glVertexAttribArrayObjectATI(_ index:GL.UInt, _ size:GL.Int, _ type:GL.Enum, _ normalized:GL.Bool, _ stride:GL.Size, _ buffer:GL.UInt, _ offset:GL.UInt)
{
    fp_glVertexAttribArrayObjectATI(index, size, type, normalized, stride, buffer, offset)
}

var fp_glVertexAttribBinding:@convention(c) (GL.UInt, GL.UInt) -> () = load_glVertexAttribBinding
func load_glVertexAttribBinding(attribindex:GL.UInt, bindingindex:GL.UInt)
{
    fp_glVertexAttribBinding = unsafeBitCast(get_fp("glVertexAttribBinding", support: [ss361, ss367, ss107]), to: Swift.type(of: fp_glVertexAttribBinding))
    fp_glVertexAttribBinding(attribindex, bindingindex)
}
public
func glVertexAttribBinding(attribindex:GL.UInt, bindingindex:GL.UInt)
{
    fp_glVertexAttribBinding(attribindex, bindingindex)
}
public
func glVertexAttribBinding(_ attribindex:GL.UInt, _ bindingindex:GL.UInt)
{
    fp_glVertexAttribBinding(attribindex, bindingindex)
}

var fp_glVertexAttribDivisor:@convention(c) (GL.UInt, GL.UInt) -> () = load_glVertexAttribDivisor
func load_glVertexAttribDivisor(index:GL.UInt, divisor:GL.UInt)
{
    fp_glVertexAttribDivisor = unsafeBitCast(get_fp("glVertexAttribDivisor", support: [ss357, ss366]), to: Swift.type(of: fp_glVertexAttribDivisor))
    fp_glVertexAttribDivisor(index, divisor)
}
public
func glVertexAttribDivisor(index:GL.UInt, divisor:GL.UInt)
{
    fp_glVertexAttribDivisor(index, divisor)
}
public
func glVertexAttribDivisor(_ index:GL.UInt, _ divisor:GL.UInt)
{
    fp_glVertexAttribDivisor(index, divisor)
}

var fp_glVertexAttribDivisorANGLE:@convention(c) (GL.UInt, GL.UInt) -> () = load_glVertexAttribDivisorANGLE
func load_glVertexAttribDivisorANGLE(index:GL.UInt, divisor:GL.UInt)
{
    fp_glVertexAttribDivisorANGLE = unsafeBitCast(get_fp("glVertexAttribDivisorANGLE", support: [ss15]), to: Swift.type(of: fp_glVertexAttribDivisorANGLE))
    fp_glVertexAttribDivisorANGLE(index, divisor)
}
public
func glVertexAttribDivisorANGLE(index:GL.UInt, divisor:GL.UInt)
{
    fp_glVertexAttribDivisorANGLE(index, divisor)
}
public
func glVertexAttribDivisorANGLE(_ index:GL.UInt, _ divisor:GL.UInt)
{
    fp_glVertexAttribDivisorANGLE(index, divisor)
}

var fp_glVertexAttribDivisorARB:@convention(c) (GL.UInt, GL.UInt) -> () = load_glVertexAttribDivisorARB
func load_glVertexAttribDivisorARB(index:GL.UInt, divisor:GL.UInt)
{
    fp_glVertexAttribDivisorARB = unsafeBitCast(get_fp("glVertexAttribDivisorARB", support: [ss61]), to: Swift.type(of: fp_glVertexAttribDivisorARB))
    fp_glVertexAttribDivisorARB(index, divisor)
}
public
func glVertexAttribDivisorARB(index:GL.UInt, divisor:GL.UInt)
{
    fp_glVertexAttribDivisorARB(index, divisor)
}
public
func glVertexAttribDivisorARB(_ index:GL.UInt, _ divisor:GL.UInt)
{
    fp_glVertexAttribDivisorARB(index, divisor)
}

var fp_glVertexAttribDivisorEXT:@convention(c) (GL.UInt, GL.UInt) -> () = load_glVertexAttribDivisorEXT
func load_glVertexAttribDivisorEXT(index:GL.UInt, divisor:GL.UInt)
{
    fp_glVertexAttribDivisorEXT = unsafeBitCast(get_fp("glVertexAttribDivisorEXT", support: [ss163]), to: Swift.type(of: fp_glVertexAttribDivisorEXT))
    fp_glVertexAttribDivisorEXT(index, divisor)
}
public
func glVertexAttribDivisorEXT(index:GL.UInt, divisor:GL.UInt)
{
    fp_glVertexAttribDivisorEXT(index, divisor)
}
public
func glVertexAttribDivisorEXT(_ index:GL.UInt, _ divisor:GL.UInt)
{
    fp_glVertexAttribDivisorEXT(index, divisor)
}

var fp_glVertexAttribDivisorNV:@convention(c) (GL.UInt, GL.UInt) -> () = load_glVertexAttribDivisorNV
func load_glVertexAttribDivisorNV(index:GL.UInt, divisor:GL.UInt)
{
    fp_glVertexAttribDivisorNV = unsafeBitCast(get_fp("glVertexAttribDivisorNV", support: [ss254]), to: Swift.type(of: fp_glVertexAttribDivisorNV))
    fp_glVertexAttribDivisorNV(index, divisor)
}
public
func glVertexAttribDivisorNV(index:GL.UInt, divisor:GL.UInt)
{
    fp_glVertexAttribDivisorNV(index, divisor)
}
public
func glVertexAttribDivisorNV(_ index:GL.UInt, _ divisor:GL.UInt)
{
    fp_glVertexAttribDivisorNV(index, divisor)
}

var fp_glVertexAttribFormat:@convention(c) (GL.UInt, GL.Int, GL.Enum, GL.Bool, GL.UInt) -> () = load_glVertexAttribFormat
func load_glVertexAttribFormat(attribindex:GL.UInt, size:GL.Int, type:GL.Enum, normalized:GL.Bool, relativeoffset:GL.UInt)
{
    fp_glVertexAttribFormat = unsafeBitCast(get_fp("glVertexAttribFormat", support: [ss361, ss367, ss107]), to: Swift.type(of: fp_glVertexAttribFormat))
    fp_glVertexAttribFormat(attribindex, size, type, normalized, relativeoffset)
}
public
func glVertexAttribFormat(attribindex:GL.UInt, size:GL.Int, type:GL.Enum, normalized:GL.Bool, relativeoffset:GL.UInt)
{
    fp_glVertexAttribFormat(attribindex, size, type, normalized, relativeoffset)
}
public
func glVertexAttribFormat(_ attribindex:GL.UInt, _ size:GL.Int, _ type:GL.Enum, _ normalized:GL.Bool, _ relativeoffset:GL.UInt)
{
    fp_glVertexAttribFormat(attribindex, size, type, normalized, relativeoffset)
}

var fp_glVertexAttribFormatNV:@convention(c) (GL.UInt, GL.Int, GL.Enum, GL.Bool, GL.Size) -> () = load_glVertexAttribFormatNV
func load_glVertexAttribFormatNV(index:GL.UInt, size:GL.Int, type:GL.Enum, normalized:GL.Bool, stride:GL.Size)
{
    fp_glVertexAttribFormatNV = unsafeBitCast(get_fp("glVertexAttribFormatNV", support: [ss277]), to: Swift.type(of: fp_glVertexAttribFormatNV))
    fp_glVertexAttribFormatNV(index, size, type, normalized, stride)
}
public
func glVertexAttribFormatNV(index:GL.UInt, size:GL.Int, type:GL.Enum, normalized:GL.Bool, stride:GL.Size)
{
    fp_glVertexAttribFormatNV(index, size, type, normalized, stride)
}
public
func glVertexAttribFormatNV(_ index:GL.UInt, _ size:GL.Int, _ type:GL.Enum, _ normalized:GL.Bool, _ stride:GL.Size)
{
    fp_glVertexAttribFormatNV(index, size, type, normalized, stride)
}

var fp_glVertexAttribI1i:@convention(c) (GL.UInt, GL.Int) -> () = load_glVertexAttribI1i
func load_glVertexAttribI1i(index:GL.UInt, x:GL.Int)
{
    fp_glVertexAttribI1i = unsafeBitCast(get_fp("glVertexAttribI1i", support: [ss354]), to: Swift.type(of: fp_glVertexAttribI1i))
    fp_glVertexAttribI1i(index, x)
}
public
func glVertexAttribI1i(index:GL.UInt, x:GL.Int)
{
    fp_glVertexAttribI1i(index, x)
}
public
func glVertexAttribI1i(_ index:GL.UInt, _ x:GL.Int)
{
    fp_glVertexAttribI1i(index, x)
}

var fp_glVertexAttribI1iEXT:@convention(c) (GL.UInt, GL.Int) -> () = load_glVertexAttribI1iEXT
func load_glVertexAttribI1iEXT(index:GL.UInt, x:GL.Int)
{
    fp_glVertexAttribI1iEXT = unsafeBitCast(get_fp("glVertexAttribI1iEXT", support: [ss279]), to: Swift.type(of: fp_glVertexAttribI1iEXT))
    fp_glVertexAttribI1iEXT(index, x)
}
public
func glVertexAttribI1iEXT(index:GL.UInt, x:GL.Int)
{
    fp_glVertexAttribI1iEXT(index, x)
}
public
func glVertexAttribI1iEXT(_ index:GL.UInt, _ x:GL.Int)
{
    fp_glVertexAttribI1iEXT(index, x)
}

var fp_glVertexAttribI1iv:@convention(c) (GL.UInt, UnsafePointer<GL.Int>?) -> () = load_glVertexAttribI1iv
func load_glVertexAttribI1iv(index:GL.UInt, v:UnsafePointer<GL.Int>?)
{
    fp_glVertexAttribI1iv = unsafeBitCast(get_fp("glVertexAttribI1iv", support: [ss354]), to: Swift.type(of: fp_glVertexAttribI1iv))
    fp_glVertexAttribI1iv(index, v)
}
public
func glVertexAttribI1iv(index:GL.UInt, v:UnsafePointer<GL.Int>?)
{
    fp_glVertexAttribI1iv(index, v)
}
public
func glVertexAttribI1iv(_ index:GL.UInt, _ v:UnsafePointer<GL.Int>?)
{
    fp_glVertexAttribI1iv(index, v)
}

var fp_glVertexAttribI1ivEXT:@convention(c) (GL.UInt, UnsafePointer<GL.Int>?) -> () = load_glVertexAttribI1ivEXT
func load_glVertexAttribI1ivEXT(index:GL.UInt, v:UnsafePointer<GL.Int>?)
{
    fp_glVertexAttribI1ivEXT = unsafeBitCast(get_fp("glVertexAttribI1ivEXT", support: [ss279]), to: Swift.type(of: fp_glVertexAttribI1ivEXT))
    fp_glVertexAttribI1ivEXT(index, v)
}
public
func glVertexAttribI1ivEXT(index:GL.UInt, v:UnsafePointer<GL.Int>?)
{
    fp_glVertexAttribI1ivEXT(index, v)
}
public
func glVertexAttribI1ivEXT(_ index:GL.UInt, _ v:UnsafePointer<GL.Int>?)
{
    fp_glVertexAttribI1ivEXT(index, v)
}

var fp_glVertexAttribI1ui:@convention(c) (GL.UInt, GL.UInt) -> () = load_glVertexAttribI1ui
func load_glVertexAttribI1ui(index:GL.UInt, x:GL.UInt)
{
    fp_glVertexAttribI1ui = unsafeBitCast(get_fp("glVertexAttribI1ui", support: [ss354]), to: Swift.type(of: fp_glVertexAttribI1ui))
    fp_glVertexAttribI1ui(index, x)
}
public
func glVertexAttribI1ui(index:GL.UInt, x:GL.UInt)
{
    fp_glVertexAttribI1ui(index, x)
}
public
func glVertexAttribI1ui(_ index:GL.UInt, _ x:GL.UInt)
{
    fp_glVertexAttribI1ui(index, x)
}

var fp_glVertexAttribI1uiEXT:@convention(c) (GL.UInt, GL.UInt) -> () = load_glVertexAttribI1uiEXT
func load_glVertexAttribI1uiEXT(index:GL.UInt, x:GL.UInt)
{
    fp_glVertexAttribI1uiEXT = unsafeBitCast(get_fp("glVertexAttribI1uiEXT", support: [ss279]), to: Swift.type(of: fp_glVertexAttribI1uiEXT))
    fp_glVertexAttribI1uiEXT(index, x)
}
public
func glVertexAttribI1uiEXT(index:GL.UInt, x:GL.UInt)
{
    fp_glVertexAttribI1uiEXT(index, x)
}
public
func glVertexAttribI1uiEXT(_ index:GL.UInt, _ x:GL.UInt)
{
    fp_glVertexAttribI1uiEXT(index, x)
}

var fp_glVertexAttribI1uiv:@convention(c) (GL.UInt, UnsafePointer<GL.UInt>?) -> () = load_glVertexAttribI1uiv
func load_glVertexAttribI1uiv(index:GL.UInt, v:UnsafePointer<GL.UInt>?)
{
    fp_glVertexAttribI1uiv = unsafeBitCast(get_fp("glVertexAttribI1uiv", support: [ss354]), to: Swift.type(of: fp_glVertexAttribI1uiv))
    fp_glVertexAttribI1uiv(index, v)
}
public
func glVertexAttribI1uiv(index:GL.UInt, v:UnsafePointer<GL.UInt>?)
{
    fp_glVertexAttribI1uiv(index, v)
}
public
func glVertexAttribI1uiv(_ index:GL.UInt, _ v:UnsafePointer<GL.UInt>?)
{
    fp_glVertexAttribI1uiv(index, v)
}

var fp_glVertexAttribI1uivEXT:@convention(c) (GL.UInt, UnsafePointer<GL.UInt>?) -> () = load_glVertexAttribI1uivEXT
func load_glVertexAttribI1uivEXT(index:GL.UInt, v:UnsafePointer<GL.UInt>?)
{
    fp_glVertexAttribI1uivEXT = unsafeBitCast(get_fp("glVertexAttribI1uivEXT", support: [ss279]), to: Swift.type(of: fp_glVertexAttribI1uivEXT))
    fp_glVertexAttribI1uivEXT(index, v)
}
public
func glVertexAttribI1uivEXT(index:GL.UInt, v:UnsafePointer<GL.UInt>?)
{
    fp_glVertexAttribI1uivEXT(index, v)
}
public
func glVertexAttribI1uivEXT(_ index:GL.UInt, _ v:UnsafePointer<GL.UInt>?)
{
    fp_glVertexAttribI1uivEXT(index, v)
}

var fp_glVertexAttribI2i:@convention(c) (GL.UInt, GL.Int, GL.Int) -> () = load_glVertexAttribI2i
func load_glVertexAttribI2i(index:GL.UInt, x:GL.Int, y:GL.Int)
{
    fp_glVertexAttribI2i = unsafeBitCast(get_fp("glVertexAttribI2i", support: [ss354]), to: Swift.type(of: fp_glVertexAttribI2i))
    fp_glVertexAttribI2i(index, x, y)
}
public
func glVertexAttribI2i(index:GL.UInt, x:GL.Int, y:GL.Int)
{
    fp_glVertexAttribI2i(index, x, y)
}
public
func glVertexAttribI2i(_ index:GL.UInt, _ x:GL.Int, _ y:GL.Int)
{
    fp_glVertexAttribI2i(index, x, y)
}

var fp_glVertexAttribI2iEXT:@convention(c) (GL.UInt, GL.Int, GL.Int) -> () = load_glVertexAttribI2iEXT
func load_glVertexAttribI2iEXT(index:GL.UInt, x:GL.Int, y:GL.Int)
{
    fp_glVertexAttribI2iEXT = unsafeBitCast(get_fp("glVertexAttribI2iEXT", support: [ss279]), to: Swift.type(of: fp_glVertexAttribI2iEXT))
    fp_glVertexAttribI2iEXT(index, x, y)
}
public
func glVertexAttribI2iEXT(index:GL.UInt, x:GL.Int, y:GL.Int)
{
    fp_glVertexAttribI2iEXT(index, x, y)
}
public
func glVertexAttribI2iEXT(_ index:GL.UInt, _ x:GL.Int, _ y:GL.Int)
{
    fp_glVertexAttribI2iEXT(index, x, y)
}

var fp_glVertexAttribI2iv:@convention(c) (GL.UInt, UnsafePointer<GL.Int>?) -> () = load_glVertexAttribI2iv
func load_glVertexAttribI2iv(index:GL.UInt, v:UnsafePointer<GL.Int>?)
{
    fp_glVertexAttribI2iv = unsafeBitCast(get_fp("glVertexAttribI2iv", support: [ss354]), to: Swift.type(of: fp_glVertexAttribI2iv))
    fp_glVertexAttribI2iv(index, v)
}
public
func glVertexAttribI2iv(index:GL.UInt, v:UnsafePointer<GL.Int>?)
{
    fp_glVertexAttribI2iv(index, v)
}
public
func glVertexAttribI2iv(_ index:GL.UInt, _ v:UnsafePointer<GL.Int>?)
{
    fp_glVertexAttribI2iv(index, v)
}

var fp_glVertexAttribI2ivEXT:@convention(c) (GL.UInt, UnsafePointer<GL.Int>?) -> () = load_glVertexAttribI2ivEXT
func load_glVertexAttribI2ivEXT(index:GL.UInt, v:UnsafePointer<GL.Int>?)
{
    fp_glVertexAttribI2ivEXT = unsafeBitCast(get_fp("glVertexAttribI2ivEXT", support: [ss279]), to: Swift.type(of: fp_glVertexAttribI2ivEXT))
    fp_glVertexAttribI2ivEXT(index, v)
}
public
func glVertexAttribI2ivEXT(index:GL.UInt, v:UnsafePointer<GL.Int>?)
{
    fp_glVertexAttribI2ivEXT(index, v)
}
public
func glVertexAttribI2ivEXT(_ index:GL.UInt, _ v:UnsafePointer<GL.Int>?)
{
    fp_glVertexAttribI2ivEXT(index, v)
}

var fp_glVertexAttribI2ui:@convention(c) (GL.UInt, GL.UInt, GL.UInt) -> () = load_glVertexAttribI2ui
func load_glVertexAttribI2ui(index:GL.UInt, x:GL.UInt, y:GL.UInt)
{
    fp_glVertexAttribI2ui = unsafeBitCast(get_fp("glVertexAttribI2ui", support: [ss354]), to: Swift.type(of: fp_glVertexAttribI2ui))
    fp_glVertexAttribI2ui(index, x, y)
}
public
func glVertexAttribI2ui(index:GL.UInt, x:GL.UInt, y:GL.UInt)
{
    fp_glVertexAttribI2ui(index, x, y)
}
public
func glVertexAttribI2ui(_ index:GL.UInt, _ x:GL.UInt, _ y:GL.UInt)
{
    fp_glVertexAttribI2ui(index, x, y)
}

var fp_glVertexAttribI2uiEXT:@convention(c) (GL.UInt, GL.UInt, GL.UInt) -> () = load_glVertexAttribI2uiEXT
func load_glVertexAttribI2uiEXT(index:GL.UInt, x:GL.UInt, y:GL.UInt)
{
    fp_glVertexAttribI2uiEXT = unsafeBitCast(get_fp("glVertexAttribI2uiEXT", support: [ss279]), to: Swift.type(of: fp_glVertexAttribI2uiEXT))
    fp_glVertexAttribI2uiEXT(index, x, y)
}
public
func glVertexAttribI2uiEXT(index:GL.UInt, x:GL.UInt, y:GL.UInt)
{
    fp_glVertexAttribI2uiEXT(index, x, y)
}
public
func glVertexAttribI2uiEXT(_ index:GL.UInt, _ x:GL.UInt, _ y:GL.UInt)
{
    fp_glVertexAttribI2uiEXT(index, x, y)
}

var fp_glVertexAttribI2uiv:@convention(c) (GL.UInt, UnsafePointer<GL.UInt>?) -> () = load_glVertexAttribI2uiv
func load_glVertexAttribI2uiv(index:GL.UInt, v:UnsafePointer<GL.UInt>?)
{
    fp_glVertexAttribI2uiv = unsafeBitCast(get_fp("glVertexAttribI2uiv", support: [ss354]), to: Swift.type(of: fp_glVertexAttribI2uiv))
    fp_glVertexAttribI2uiv(index, v)
}
public
func glVertexAttribI2uiv(index:GL.UInt, v:UnsafePointer<GL.UInt>?)
{
    fp_glVertexAttribI2uiv(index, v)
}
public
func glVertexAttribI2uiv(_ index:GL.UInt, _ v:UnsafePointer<GL.UInt>?)
{
    fp_glVertexAttribI2uiv(index, v)
}

var fp_glVertexAttribI2uivEXT:@convention(c) (GL.UInt, UnsafePointer<GL.UInt>?) -> () = load_glVertexAttribI2uivEXT
func load_glVertexAttribI2uivEXT(index:GL.UInt, v:UnsafePointer<GL.UInt>?)
{
    fp_glVertexAttribI2uivEXT = unsafeBitCast(get_fp("glVertexAttribI2uivEXT", support: [ss279]), to: Swift.type(of: fp_glVertexAttribI2uivEXT))
    fp_glVertexAttribI2uivEXT(index, v)
}
public
func glVertexAttribI2uivEXT(index:GL.UInt, v:UnsafePointer<GL.UInt>?)
{
    fp_glVertexAttribI2uivEXT(index, v)
}
public
func glVertexAttribI2uivEXT(_ index:GL.UInt, _ v:UnsafePointer<GL.UInt>?)
{
    fp_glVertexAttribI2uivEXT(index, v)
}

var fp_glVertexAttribI3i:@convention(c) (GL.UInt, GL.Int, GL.Int, GL.Int) -> () = load_glVertexAttribI3i
func load_glVertexAttribI3i(index:GL.UInt, x:GL.Int, y:GL.Int, z:GL.Int)
{
    fp_glVertexAttribI3i = unsafeBitCast(get_fp("glVertexAttribI3i", support: [ss354]), to: Swift.type(of: fp_glVertexAttribI3i))
    fp_glVertexAttribI3i(index, x, y, z)
}
public
func glVertexAttribI3i(index:GL.UInt, x:GL.Int, y:GL.Int, z:GL.Int)
{
    fp_glVertexAttribI3i(index, x, y, z)
}
public
func glVertexAttribI3i(_ index:GL.UInt, _ x:GL.Int, _ y:GL.Int, _ z:GL.Int)
{
    fp_glVertexAttribI3i(index, x, y, z)
}

var fp_glVertexAttribI3iEXT:@convention(c) (GL.UInt, GL.Int, GL.Int, GL.Int) -> () = load_glVertexAttribI3iEXT
func load_glVertexAttribI3iEXT(index:GL.UInt, x:GL.Int, y:GL.Int, z:GL.Int)
{
    fp_glVertexAttribI3iEXT = unsafeBitCast(get_fp("glVertexAttribI3iEXT", support: [ss279]), to: Swift.type(of: fp_glVertexAttribI3iEXT))
    fp_glVertexAttribI3iEXT(index, x, y, z)
}
public
func glVertexAttribI3iEXT(index:GL.UInt, x:GL.Int, y:GL.Int, z:GL.Int)
{
    fp_glVertexAttribI3iEXT(index, x, y, z)
}
public
func glVertexAttribI3iEXT(_ index:GL.UInt, _ x:GL.Int, _ y:GL.Int, _ z:GL.Int)
{
    fp_glVertexAttribI3iEXT(index, x, y, z)
}

var fp_glVertexAttribI3iv:@convention(c) (GL.UInt, UnsafePointer<GL.Int>?) -> () = load_glVertexAttribI3iv
func load_glVertexAttribI3iv(index:GL.UInt, v:UnsafePointer<GL.Int>?)
{
    fp_glVertexAttribI3iv = unsafeBitCast(get_fp("glVertexAttribI3iv", support: [ss354]), to: Swift.type(of: fp_glVertexAttribI3iv))
    fp_glVertexAttribI3iv(index, v)
}
public
func glVertexAttribI3iv(index:GL.UInt, v:UnsafePointer<GL.Int>?)
{
    fp_glVertexAttribI3iv(index, v)
}
public
func glVertexAttribI3iv(_ index:GL.UInt, _ v:UnsafePointer<GL.Int>?)
{
    fp_glVertexAttribI3iv(index, v)
}

var fp_glVertexAttribI3ivEXT:@convention(c) (GL.UInt, UnsafePointer<GL.Int>?) -> () = load_glVertexAttribI3ivEXT
func load_glVertexAttribI3ivEXT(index:GL.UInt, v:UnsafePointer<GL.Int>?)
{
    fp_glVertexAttribI3ivEXT = unsafeBitCast(get_fp("glVertexAttribI3ivEXT", support: [ss279]), to: Swift.type(of: fp_glVertexAttribI3ivEXT))
    fp_glVertexAttribI3ivEXT(index, v)
}
public
func glVertexAttribI3ivEXT(index:GL.UInt, v:UnsafePointer<GL.Int>?)
{
    fp_glVertexAttribI3ivEXT(index, v)
}
public
func glVertexAttribI3ivEXT(_ index:GL.UInt, _ v:UnsafePointer<GL.Int>?)
{
    fp_glVertexAttribI3ivEXT(index, v)
}

var fp_glVertexAttribI3ui:@convention(c) (GL.UInt, GL.UInt, GL.UInt, GL.UInt) -> () = load_glVertexAttribI3ui
func load_glVertexAttribI3ui(index:GL.UInt, x:GL.UInt, y:GL.UInt, z:GL.UInt)
{
    fp_glVertexAttribI3ui = unsafeBitCast(get_fp("glVertexAttribI3ui", support: [ss354]), to: Swift.type(of: fp_glVertexAttribI3ui))
    fp_glVertexAttribI3ui(index, x, y, z)
}
public
func glVertexAttribI3ui(index:GL.UInt, x:GL.UInt, y:GL.UInt, z:GL.UInt)
{
    fp_glVertexAttribI3ui(index, x, y, z)
}
public
func glVertexAttribI3ui(_ index:GL.UInt, _ x:GL.UInt, _ y:GL.UInt, _ z:GL.UInt)
{
    fp_glVertexAttribI3ui(index, x, y, z)
}

var fp_glVertexAttribI3uiEXT:@convention(c) (GL.UInt, GL.UInt, GL.UInt, GL.UInt) -> () = load_glVertexAttribI3uiEXT
func load_glVertexAttribI3uiEXT(index:GL.UInt, x:GL.UInt, y:GL.UInt, z:GL.UInt)
{
    fp_glVertexAttribI3uiEXT = unsafeBitCast(get_fp("glVertexAttribI3uiEXT", support: [ss279]), to: Swift.type(of: fp_glVertexAttribI3uiEXT))
    fp_glVertexAttribI3uiEXT(index, x, y, z)
}
public
func glVertexAttribI3uiEXT(index:GL.UInt, x:GL.UInt, y:GL.UInt, z:GL.UInt)
{
    fp_glVertexAttribI3uiEXT(index, x, y, z)
}
public
func glVertexAttribI3uiEXT(_ index:GL.UInt, _ x:GL.UInt, _ y:GL.UInt, _ z:GL.UInt)
{
    fp_glVertexAttribI3uiEXT(index, x, y, z)
}

var fp_glVertexAttribI3uiv:@convention(c) (GL.UInt, UnsafePointer<GL.UInt>?) -> () = load_glVertexAttribI3uiv
func load_glVertexAttribI3uiv(index:GL.UInt, v:UnsafePointer<GL.UInt>?)
{
    fp_glVertexAttribI3uiv = unsafeBitCast(get_fp("glVertexAttribI3uiv", support: [ss354]), to: Swift.type(of: fp_glVertexAttribI3uiv))
    fp_glVertexAttribI3uiv(index, v)
}
public
func glVertexAttribI3uiv(index:GL.UInt, v:UnsafePointer<GL.UInt>?)
{
    fp_glVertexAttribI3uiv(index, v)
}
public
func glVertexAttribI3uiv(_ index:GL.UInt, _ v:UnsafePointer<GL.UInt>?)
{
    fp_glVertexAttribI3uiv(index, v)
}

var fp_glVertexAttribI3uivEXT:@convention(c) (GL.UInt, UnsafePointer<GL.UInt>?) -> () = load_glVertexAttribI3uivEXT
func load_glVertexAttribI3uivEXT(index:GL.UInt, v:UnsafePointer<GL.UInt>?)
{
    fp_glVertexAttribI3uivEXT = unsafeBitCast(get_fp("glVertexAttribI3uivEXT", support: [ss279]), to: Swift.type(of: fp_glVertexAttribI3uivEXT))
    fp_glVertexAttribI3uivEXT(index, v)
}
public
func glVertexAttribI3uivEXT(index:GL.UInt, v:UnsafePointer<GL.UInt>?)
{
    fp_glVertexAttribI3uivEXT(index, v)
}
public
func glVertexAttribI3uivEXT(_ index:GL.UInt, _ v:UnsafePointer<GL.UInt>?)
{
    fp_glVertexAttribI3uivEXT(index, v)
}

var fp_glVertexAttribI4bv:@convention(c) (GL.UInt, UnsafePointer<GL.Byte>?) -> () = load_glVertexAttribI4bv
func load_glVertexAttribI4bv(index:GL.UInt, v:UnsafePointer<GL.Byte>?)
{
    fp_glVertexAttribI4bv = unsafeBitCast(get_fp("glVertexAttribI4bv", support: [ss354]), to: Swift.type(of: fp_glVertexAttribI4bv))
    fp_glVertexAttribI4bv(index, v)
}
public
func glVertexAttribI4bv(index:GL.UInt, v:UnsafePointer<GL.Byte>?)
{
    fp_glVertexAttribI4bv(index, v)
}
public
func glVertexAttribI4bv(_ index:GL.UInt, _ v:UnsafePointer<GL.Byte>?)
{
    fp_glVertexAttribI4bv(index, v)
}

var fp_glVertexAttribI4bvEXT:@convention(c) (GL.UInt, UnsafePointer<GL.Byte>?) -> () = load_glVertexAttribI4bvEXT
func load_glVertexAttribI4bvEXT(index:GL.UInt, v:UnsafePointer<GL.Byte>?)
{
    fp_glVertexAttribI4bvEXT = unsafeBitCast(get_fp("glVertexAttribI4bvEXT", support: [ss279]), to: Swift.type(of: fp_glVertexAttribI4bvEXT))
    fp_glVertexAttribI4bvEXT(index, v)
}
public
func glVertexAttribI4bvEXT(index:GL.UInt, v:UnsafePointer<GL.Byte>?)
{
    fp_glVertexAttribI4bvEXT(index, v)
}
public
func glVertexAttribI4bvEXT(_ index:GL.UInt, _ v:UnsafePointer<GL.Byte>?)
{
    fp_glVertexAttribI4bvEXT(index, v)
}

var fp_glVertexAttribI4i:@convention(c) (GL.UInt, GL.Int, GL.Int, GL.Int, GL.Int) -> () = load_glVertexAttribI4i
func load_glVertexAttribI4i(index:GL.UInt, x:GL.Int, y:GL.Int, z:GL.Int, w:GL.Int)
{
    fp_glVertexAttribI4i = unsafeBitCast(get_fp("glVertexAttribI4i", support: [ss354, ss366]), to: Swift.type(of: fp_glVertexAttribI4i))
    fp_glVertexAttribI4i(index, x, y, z, w)
}
public
func glVertexAttribI4i(index:GL.UInt, x:GL.Int, y:GL.Int, z:GL.Int, w:GL.Int)
{
    fp_glVertexAttribI4i(index, x, y, z, w)
}
public
func glVertexAttribI4i(_ index:GL.UInt, _ x:GL.Int, _ y:GL.Int, _ z:GL.Int, _ w:GL.Int)
{
    fp_glVertexAttribI4i(index, x, y, z, w)
}

var fp_glVertexAttribI4iEXT:@convention(c) (GL.UInt, GL.Int, GL.Int, GL.Int, GL.Int) -> () = load_glVertexAttribI4iEXT
func load_glVertexAttribI4iEXT(index:GL.UInt, x:GL.Int, y:GL.Int, z:GL.Int, w:GL.Int)
{
    fp_glVertexAttribI4iEXT = unsafeBitCast(get_fp("glVertexAttribI4iEXT", support: [ss279]), to: Swift.type(of: fp_glVertexAttribI4iEXT))
    fp_glVertexAttribI4iEXT(index, x, y, z, w)
}
public
func glVertexAttribI4iEXT(index:GL.UInt, x:GL.Int, y:GL.Int, z:GL.Int, w:GL.Int)
{
    fp_glVertexAttribI4iEXT(index, x, y, z, w)
}
public
func glVertexAttribI4iEXT(_ index:GL.UInt, _ x:GL.Int, _ y:GL.Int, _ z:GL.Int, _ w:GL.Int)
{
    fp_glVertexAttribI4iEXT(index, x, y, z, w)
}

var fp_glVertexAttribI4iv:@convention(c) (GL.UInt, UnsafePointer<GL.Int>?) -> () = load_glVertexAttribI4iv
func load_glVertexAttribI4iv(index:GL.UInt, v:UnsafePointer<GL.Int>?)
{
    fp_glVertexAttribI4iv = unsafeBitCast(get_fp("glVertexAttribI4iv", support: [ss354, ss366]), to: Swift.type(of: fp_glVertexAttribI4iv))
    fp_glVertexAttribI4iv(index, v)
}
public
func glVertexAttribI4iv(index:GL.UInt, v:UnsafePointer<GL.Int>?)
{
    fp_glVertexAttribI4iv(index, v)
}
public
func glVertexAttribI4iv(_ index:GL.UInt, _ v:UnsafePointer<GL.Int>?)
{
    fp_glVertexAttribI4iv(index, v)
}

var fp_glVertexAttribI4ivEXT:@convention(c) (GL.UInt, UnsafePointer<GL.Int>?) -> () = load_glVertexAttribI4ivEXT
func load_glVertexAttribI4ivEXT(index:GL.UInt, v:UnsafePointer<GL.Int>?)
{
    fp_glVertexAttribI4ivEXT = unsafeBitCast(get_fp("glVertexAttribI4ivEXT", support: [ss279]), to: Swift.type(of: fp_glVertexAttribI4ivEXT))
    fp_glVertexAttribI4ivEXT(index, v)
}
public
func glVertexAttribI4ivEXT(index:GL.UInt, v:UnsafePointer<GL.Int>?)
{
    fp_glVertexAttribI4ivEXT(index, v)
}
public
func glVertexAttribI4ivEXT(_ index:GL.UInt, _ v:UnsafePointer<GL.Int>?)
{
    fp_glVertexAttribI4ivEXT(index, v)
}

var fp_glVertexAttribI4sv:@convention(c) (GL.UInt, UnsafePointer<GL.Short>?) -> () = load_glVertexAttribI4sv
func load_glVertexAttribI4sv(index:GL.UInt, v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttribI4sv = unsafeBitCast(get_fp("glVertexAttribI4sv", support: [ss354]), to: Swift.type(of: fp_glVertexAttribI4sv))
    fp_glVertexAttribI4sv(index, v)
}
public
func glVertexAttribI4sv(index:GL.UInt, v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttribI4sv(index, v)
}
public
func glVertexAttribI4sv(_ index:GL.UInt, _ v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttribI4sv(index, v)
}

var fp_glVertexAttribI4svEXT:@convention(c) (GL.UInt, UnsafePointer<GL.Short>?) -> () = load_glVertexAttribI4svEXT
func load_glVertexAttribI4svEXT(index:GL.UInt, v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttribI4svEXT = unsafeBitCast(get_fp("glVertexAttribI4svEXT", support: [ss279]), to: Swift.type(of: fp_glVertexAttribI4svEXT))
    fp_glVertexAttribI4svEXT(index, v)
}
public
func glVertexAttribI4svEXT(index:GL.UInt, v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttribI4svEXT(index, v)
}
public
func glVertexAttribI4svEXT(_ index:GL.UInt, _ v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttribI4svEXT(index, v)
}

var fp_glVertexAttribI4ubv:@convention(c) (GL.UInt, UnsafePointer<GL.UByte>?) -> () = load_glVertexAttribI4ubv
func load_glVertexAttribI4ubv(index:GL.UInt, v:UnsafePointer<GL.UByte>?)
{
    fp_glVertexAttribI4ubv = unsafeBitCast(get_fp("glVertexAttribI4ubv", support: [ss354]), to: Swift.type(of: fp_glVertexAttribI4ubv))
    fp_glVertexAttribI4ubv(index, v)
}
public
func glVertexAttribI4ubv(index:GL.UInt, v:UnsafePointer<GL.UByte>?)
{
    fp_glVertexAttribI4ubv(index, v)
}
public
func glVertexAttribI4ubv(_ index:GL.UInt, _ v:UnsafePointer<GL.UByte>?)
{
    fp_glVertexAttribI4ubv(index, v)
}

var fp_glVertexAttribI4ubvEXT:@convention(c) (GL.UInt, UnsafePointer<GL.UByte>?) -> () = load_glVertexAttribI4ubvEXT
func load_glVertexAttribI4ubvEXT(index:GL.UInt, v:UnsafePointer<GL.UByte>?)
{
    fp_glVertexAttribI4ubvEXT = unsafeBitCast(get_fp("glVertexAttribI4ubvEXT", support: [ss279]), to: Swift.type(of: fp_glVertexAttribI4ubvEXT))
    fp_glVertexAttribI4ubvEXT(index, v)
}
public
func glVertexAttribI4ubvEXT(index:GL.UInt, v:UnsafePointer<GL.UByte>?)
{
    fp_glVertexAttribI4ubvEXT(index, v)
}
public
func glVertexAttribI4ubvEXT(_ index:GL.UInt, _ v:UnsafePointer<GL.UByte>?)
{
    fp_glVertexAttribI4ubvEXT(index, v)
}

var fp_glVertexAttribI4ui:@convention(c) (GL.UInt, GL.UInt, GL.UInt, GL.UInt, GL.UInt) -> () = load_glVertexAttribI4ui
func load_glVertexAttribI4ui(index:GL.UInt, x:GL.UInt, y:GL.UInt, z:GL.UInt, w:GL.UInt)
{
    fp_glVertexAttribI4ui = unsafeBitCast(get_fp("glVertexAttribI4ui", support: [ss354, ss366]), to: Swift.type(of: fp_glVertexAttribI4ui))
    fp_glVertexAttribI4ui(index, x, y, z, w)
}
public
func glVertexAttribI4ui(index:GL.UInt, x:GL.UInt, y:GL.UInt, z:GL.UInt, w:GL.UInt)
{
    fp_glVertexAttribI4ui(index, x, y, z, w)
}
public
func glVertexAttribI4ui(_ index:GL.UInt, _ x:GL.UInt, _ y:GL.UInt, _ z:GL.UInt, _ w:GL.UInt)
{
    fp_glVertexAttribI4ui(index, x, y, z, w)
}

var fp_glVertexAttribI4uiEXT:@convention(c) (GL.UInt, GL.UInt, GL.UInt, GL.UInt, GL.UInt) -> () = load_glVertexAttribI4uiEXT
func load_glVertexAttribI4uiEXT(index:GL.UInt, x:GL.UInt, y:GL.UInt, z:GL.UInt, w:GL.UInt)
{
    fp_glVertexAttribI4uiEXT = unsafeBitCast(get_fp("glVertexAttribI4uiEXT", support: [ss279]), to: Swift.type(of: fp_glVertexAttribI4uiEXT))
    fp_glVertexAttribI4uiEXT(index, x, y, z, w)
}
public
func glVertexAttribI4uiEXT(index:GL.UInt, x:GL.UInt, y:GL.UInt, z:GL.UInt, w:GL.UInt)
{
    fp_glVertexAttribI4uiEXT(index, x, y, z, w)
}
public
func glVertexAttribI4uiEXT(_ index:GL.UInt, _ x:GL.UInt, _ y:GL.UInt, _ z:GL.UInt, _ w:GL.UInt)
{
    fp_glVertexAttribI4uiEXT(index, x, y, z, w)
}

var fp_glVertexAttribI4uiv:@convention(c) (GL.UInt, UnsafePointer<GL.UInt>?) -> () = load_glVertexAttribI4uiv
func load_glVertexAttribI4uiv(index:GL.UInt, v:UnsafePointer<GL.UInt>?)
{
    fp_glVertexAttribI4uiv = unsafeBitCast(get_fp("glVertexAttribI4uiv", support: [ss354, ss366]), to: Swift.type(of: fp_glVertexAttribI4uiv))
    fp_glVertexAttribI4uiv(index, v)
}
public
func glVertexAttribI4uiv(index:GL.UInt, v:UnsafePointer<GL.UInt>?)
{
    fp_glVertexAttribI4uiv(index, v)
}
public
func glVertexAttribI4uiv(_ index:GL.UInt, _ v:UnsafePointer<GL.UInt>?)
{
    fp_glVertexAttribI4uiv(index, v)
}

var fp_glVertexAttribI4uivEXT:@convention(c) (GL.UInt, UnsafePointer<GL.UInt>?) -> () = load_glVertexAttribI4uivEXT
func load_glVertexAttribI4uivEXT(index:GL.UInt, v:UnsafePointer<GL.UInt>?)
{
    fp_glVertexAttribI4uivEXT = unsafeBitCast(get_fp("glVertexAttribI4uivEXT", support: [ss279]), to: Swift.type(of: fp_glVertexAttribI4uivEXT))
    fp_glVertexAttribI4uivEXT(index, v)
}
public
func glVertexAttribI4uivEXT(index:GL.UInt, v:UnsafePointer<GL.UInt>?)
{
    fp_glVertexAttribI4uivEXT(index, v)
}
public
func glVertexAttribI4uivEXT(_ index:GL.UInt, _ v:UnsafePointer<GL.UInt>?)
{
    fp_glVertexAttribI4uivEXT(index, v)
}

var fp_glVertexAttribI4usv:@convention(c) (GL.UInt, UnsafePointer<GL.UShort>?) -> () = load_glVertexAttribI4usv
func load_glVertexAttribI4usv(index:GL.UInt, v:UnsafePointer<GL.UShort>?)
{
    fp_glVertexAttribI4usv = unsafeBitCast(get_fp("glVertexAttribI4usv", support: [ss354]), to: Swift.type(of: fp_glVertexAttribI4usv))
    fp_glVertexAttribI4usv(index, v)
}
public
func glVertexAttribI4usv(index:GL.UInt, v:UnsafePointer<GL.UShort>?)
{
    fp_glVertexAttribI4usv(index, v)
}
public
func glVertexAttribI4usv(_ index:GL.UInt, _ v:UnsafePointer<GL.UShort>?)
{
    fp_glVertexAttribI4usv(index, v)
}

var fp_glVertexAttribI4usvEXT:@convention(c) (GL.UInt, UnsafePointer<GL.UShort>?) -> () = load_glVertexAttribI4usvEXT
func load_glVertexAttribI4usvEXT(index:GL.UInt, v:UnsafePointer<GL.UShort>?)
{
    fp_glVertexAttribI4usvEXT = unsafeBitCast(get_fp("glVertexAttribI4usvEXT", support: [ss279]), to: Swift.type(of: fp_glVertexAttribI4usvEXT))
    fp_glVertexAttribI4usvEXT(index, v)
}
public
func glVertexAttribI4usvEXT(index:GL.UInt, v:UnsafePointer<GL.UShort>?)
{
    fp_glVertexAttribI4usvEXT(index, v)
}
public
func glVertexAttribI4usvEXT(_ index:GL.UInt, _ v:UnsafePointer<GL.UShort>?)
{
    fp_glVertexAttribI4usvEXT(index, v)
}

var fp_glVertexAttribIFormat:@convention(c) (GL.UInt, GL.Int, GL.Enum, GL.UInt) -> () = load_glVertexAttribIFormat
func load_glVertexAttribIFormat(attribindex:GL.UInt, size:GL.Int, type:GL.Enum, relativeoffset:GL.UInt)
{
    fp_glVertexAttribIFormat = unsafeBitCast(get_fp("glVertexAttribIFormat", support: [ss361, ss367, ss107]), to: Swift.type(of: fp_glVertexAttribIFormat))
    fp_glVertexAttribIFormat(attribindex, size, type, relativeoffset)
}
public
func glVertexAttribIFormat(attribindex:GL.UInt, size:GL.Int, type:GL.Enum, relativeoffset:GL.UInt)
{
    fp_glVertexAttribIFormat(attribindex, size, type, relativeoffset)
}
public
func glVertexAttribIFormat(_ attribindex:GL.UInt, _ size:GL.Int, _ type:GL.Enum, _ relativeoffset:GL.UInt)
{
    fp_glVertexAttribIFormat(attribindex, size, type, relativeoffset)
}

var fp_glVertexAttribIFormatNV:@convention(c) (GL.UInt, GL.Int, GL.Enum, GL.Size) -> () = load_glVertexAttribIFormatNV
func load_glVertexAttribIFormatNV(index:GL.UInt, size:GL.Int, type:GL.Enum, stride:GL.Size)
{
    fp_glVertexAttribIFormatNV = unsafeBitCast(get_fp("glVertexAttribIFormatNV", support: [ss277]), to: Swift.type(of: fp_glVertexAttribIFormatNV))
    fp_glVertexAttribIFormatNV(index, size, type, stride)
}
public
func glVertexAttribIFormatNV(index:GL.UInt, size:GL.Int, type:GL.Enum, stride:GL.Size)
{
    fp_glVertexAttribIFormatNV(index, size, type, stride)
}
public
func glVertexAttribIFormatNV(_ index:GL.UInt, _ size:GL.Int, _ type:GL.Enum, _ stride:GL.Size)
{
    fp_glVertexAttribIFormatNV(index, size, type, stride)
}

var fp_glVertexAttribIPointer:@convention(c) (GL.UInt, GL.Int, GL.Enum, GL.Size, UnsafeRawPointer?) -> () = load_glVertexAttribIPointer
func load_glVertexAttribIPointer(index:GL.UInt, size:GL.Int, type:GL.Enum, stride:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glVertexAttribIPointer = unsafeBitCast(get_fp("glVertexAttribIPointer", support: [ss354, ss366]), to: Swift.type(of: fp_glVertexAttribIPointer))
    fp_glVertexAttribIPointer(index, size, type, stride, pointer)
}
public
func glVertexAttribIPointer(index:GL.UInt, size:GL.Int, type:GL.Enum, stride:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glVertexAttribIPointer(index, size, type, stride, pointer)
}
public
func glVertexAttribIPointer(_ index:GL.UInt, _ size:GL.Int, _ type:GL.Enum, _ stride:GL.Size, _ pointer:UnsafeRawPointer?)
{
    fp_glVertexAttribIPointer(index, size, type, stride, pointer)
}

var fp_glVertexAttribIPointerEXT:@convention(c) (GL.UInt, GL.Int, GL.Enum, GL.Size, UnsafeRawPointer?) -> () = load_glVertexAttribIPointerEXT
func load_glVertexAttribIPointerEXT(index:GL.UInt, size:GL.Int, type:GL.Enum, stride:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glVertexAttribIPointerEXT = unsafeBitCast(get_fp("glVertexAttribIPointerEXT", support: [ss279]), to: Swift.type(of: fp_glVertexAttribIPointerEXT))
    fp_glVertexAttribIPointerEXT(index, size, type, stride, pointer)
}
public
func glVertexAttribIPointerEXT(index:GL.UInt, size:GL.Int, type:GL.Enum, stride:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glVertexAttribIPointerEXT(index, size, type, stride, pointer)
}
public
func glVertexAttribIPointerEXT(_ index:GL.UInt, _ size:GL.Int, _ type:GL.Enum, _ stride:GL.Size, _ pointer:UnsafeRawPointer?)
{
    fp_glVertexAttribIPointerEXT(index, size, type, stride, pointer)
}

var fp_glVertexAttribL1d:@convention(c) (GL.UInt, GL.Double) -> () = load_glVertexAttribL1d
func load_glVertexAttribL1d(index:GL.UInt, x:GL.Double)
{
    fp_glVertexAttribL1d = unsafeBitCast(get_fp("glVertexAttribL1d", support: [ss359, ss106]), to: Swift.type(of: fp_glVertexAttribL1d))
    fp_glVertexAttribL1d(index, x)
}
public
func glVertexAttribL1d(index:GL.UInt, x:GL.Double)
{
    fp_glVertexAttribL1d(index, x)
}
public
func glVertexAttribL1d(_ index:GL.UInt, _ x:GL.Double)
{
    fp_glVertexAttribL1d(index, x)
}

var fp_glVertexAttribL1dEXT:@convention(c) (GL.UInt, GL.Double) -> () = load_glVertexAttribL1dEXT
func load_glVertexAttribL1dEXT(index:GL.UInt, x:GL.Double)
{
    fp_glVertexAttribL1dEXT = unsafeBitCast(get_fp("glVertexAttribL1dEXT", support: [ss203]), to: Swift.type(of: fp_glVertexAttribL1dEXT))
    fp_glVertexAttribL1dEXT(index, x)
}
public
func glVertexAttribL1dEXT(index:GL.UInt, x:GL.Double)
{
    fp_glVertexAttribL1dEXT(index, x)
}
public
func glVertexAttribL1dEXT(_ index:GL.UInt, _ x:GL.Double)
{
    fp_glVertexAttribL1dEXT(index, x)
}

var fp_glVertexAttribL1dv:@convention(c) (GL.UInt, UnsafePointer<GL.Double>?) -> () = load_glVertexAttribL1dv
func load_glVertexAttribL1dv(index:GL.UInt, v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttribL1dv = unsafeBitCast(get_fp("glVertexAttribL1dv", support: [ss359, ss106]), to: Swift.type(of: fp_glVertexAttribL1dv))
    fp_glVertexAttribL1dv(index, v)
}
public
func glVertexAttribL1dv(index:GL.UInt, v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttribL1dv(index, v)
}
public
func glVertexAttribL1dv(_ index:GL.UInt, _ v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttribL1dv(index, v)
}

var fp_glVertexAttribL1dvEXT:@convention(c) (GL.UInt, UnsafePointer<GL.Double>?) -> () = load_glVertexAttribL1dvEXT
func load_glVertexAttribL1dvEXT(index:GL.UInt, v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttribL1dvEXT = unsafeBitCast(get_fp("glVertexAttribL1dvEXT", support: [ss203]), to: Swift.type(of: fp_glVertexAttribL1dvEXT))
    fp_glVertexAttribL1dvEXT(index, v)
}
public
func glVertexAttribL1dvEXT(index:GL.UInt, v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttribL1dvEXT(index, v)
}
public
func glVertexAttribL1dvEXT(_ index:GL.UInt, _ v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttribL1dvEXT(index, v)
}

var fp_glVertexAttribL1i64NV:@convention(c) (GL.UInt, GL.Int64EXT) -> () = load_glVertexAttribL1i64NV
func load_glVertexAttribL1i64NV(index:GL.UInt, x:GL.Int64EXT)
{
    fp_glVertexAttribL1i64NV = unsafeBitCast(get_fp("glVertexAttribL1i64NV", support: [ss276]), to: Swift.type(of: fp_glVertexAttribL1i64NV))
    fp_glVertexAttribL1i64NV(index, x)
}
public
func glVertexAttribL1i64NV(index:GL.UInt, x:GL.Int64EXT)
{
    fp_glVertexAttribL1i64NV(index, x)
}
public
func glVertexAttribL1i64NV(_ index:GL.UInt, _ x:GL.Int64EXT)
{
    fp_glVertexAttribL1i64NV(index, x)
}

var fp_glVertexAttribL1i64vNV:@convention(c) (GL.UInt, UnsafePointer<GL.Int64EXT>?) -> () = load_glVertexAttribL1i64vNV
func load_glVertexAttribL1i64vNV(index:GL.UInt, v:UnsafePointer<GL.Int64EXT>?)
{
    fp_glVertexAttribL1i64vNV = unsafeBitCast(get_fp("glVertexAttribL1i64vNV", support: [ss276]), to: Swift.type(of: fp_glVertexAttribL1i64vNV))
    fp_glVertexAttribL1i64vNV(index, v)
}
public
func glVertexAttribL1i64vNV(index:GL.UInt, v:UnsafePointer<GL.Int64EXT>?)
{
    fp_glVertexAttribL1i64vNV(index, v)
}
public
func glVertexAttribL1i64vNV(_ index:GL.UInt, _ v:UnsafePointer<GL.Int64EXT>?)
{
    fp_glVertexAttribL1i64vNV(index, v)
}

var fp_glVertexAttribL1ui64ARB:@convention(c) (GL.UInt, GL.UInt64EXT) -> () = load_glVertexAttribL1ui64ARB
func load_glVertexAttribL1ui64ARB(index:GL.UInt, x:GL.UInt64EXT)
{
    fp_glVertexAttribL1ui64ARB = unsafeBitCast(get_fp("glVertexAttribL1ui64ARB", support: [ss29]), to: Swift.type(of: fp_glVertexAttribL1ui64ARB))
    fp_glVertexAttribL1ui64ARB(index, x)
}
public
func glVertexAttribL1ui64ARB(index:GL.UInt, x:GL.UInt64EXT)
{
    fp_glVertexAttribL1ui64ARB(index, x)
}
public
func glVertexAttribL1ui64ARB(_ index:GL.UInt, _ x:GL.UInt64EXT)
{
    fp_glVertexAttribL1ui64ARB(index, x)
}

var fp_glVertexAttribL1ui64NV:@convention(c) (GL.UInt, GL.UInt64EXT) -> () = load_glVertexAttribL1ui64NV
func load_glVertexAttribL1ui64NV(index:GL.UInt, x:GL.UInt64EXT)
{
    fp_glVertexAttribL1ui64NV = unsafeBitCast(get_fp("glVertexAttribL1ui64NV", support: [ss276]), to: Swift.type(of: fp_glVertexAttribL1ui64NV))
    fp_glVertexAttribL1ui64NV(index, x)
}
public
func glVertexAttribL1ui64NV(index:GL.UInt, x:GL.UInt64EXT)
{
    fp_glVertexAttribL1ui64NV(index, x)
}
public
func glVertexAttribL1ui64NV(_ index:GL.UInt, _ x:GL.UInt64EXT)
{
    fp_glVertexAttribL1ui64NV(index, x)
}

var fp_glVertexAttribL1ui64vARB:@convention(c) (GL.UInt, UnsafePointer<GL.UInt64EXT>?) -> () = load_glVertexAttribL1ui64vARB
func load_glVertexAttribL1ui64vARB(index:GL.UInt, v:UnsafePointer<GL.UInt64EXT>?)
{
    fp_glVertexAttribL1ui64vARB = unsafeBitCast(get_fp("glVertexAttribL1ui64vARB", support: [ss29]), to: Swift.type(of: fp_glVertexAttribL1ui64vARB))
    fp_glVertexAttribL1ui64vARB(index, v)
}
public
func glVertexAttribL1ui64vARB(index:GL.UInt, v:UnsafePointer<GL.UInt64EXT>?)
{
    fp_glVertexAttribL1ui64vARB(index, v)
}
public
func glVertexAttribL1ui64vARB(_ index:GL.UInt, _ v:UnsafePointer<GL.UInt64EXT>?)
{
    fp_glVertexAttribL1ui64vARB(index, v)
}

var fp_glVertexAttribL1ui64vNV:@convention(c) (GL.UInt, UnsafePointer<GL.UInt64EXT>?) -> () = load_glVertexAttribL1ui64vNV
func load_glVertexAttribL1ui64vNV(index:GL.UInt, v:UnsafePointer<GL.UInt64EXT>?)
{
    fp_glVertexAttribL1ui64vNV = unsafeBitCast(get_fp("glVertexAttribL1ui64vNV", support: [ss276]), to: Swift.type(of: fp_glVertexAttribL1ui64vNV))
    fp_glVertexAttribL1ui64vNV(index, v)
}
public
func glVertexAttribL1ui64vNV(index:GL.UInt, v:UnsafePointer<GL.UInt64EXT>?)
{
    fp_glVertexAttribL1ui64vNV(index, v)
}
public
func glVertexAttribL1ui64vNV(_ index:GL.UInt, _ v:UnsafePointer<GL.UInt64EXT>?)
{
    fp_glVertexAttribL1ui64vNV(index, v)
}

var fp_glVertexAttribL2d:@convention(c) (GL.UInt, GL.Double, GL.Double) -> () = load_glVertexAttribL2d
func load_glVertexAttribL2d(index:GL.UInt, x:GL.Double, y:GL.Double)
{
    fp_glVertexAttribL2d = unsafeBitCast(get_fp("glVertexAttribL2d", support: [ss359, ss106]), to: Swift.type(of: fp_glVertexAttribL2d))
    fp_glVertexAttribL2d(index, x, y)
}
public
func glVertexAttribL2d(index:GL.UInt, x:GL.Double, y:GL.Double)
{
    fp_glVertexAttribL2d(index, x, y)
}
public
func glVertexAttribL2d(_ index:GL.UInt, _ x:GL.Double, _ y:GL.Double)
{
    fp_glVertexAttribL2d(index, x, y)
}

var fp_glVertexAttribL2dEXT:@convention(c) (GL.UInt, GL.Double, GL.Double) -> () = load_glVertexAttribL2dEXT
func load_glVertexAttribL2dEXT(index:GL.UInt, x:GL.Double, y:GL.Double)
{
    fp_glVertexAttribL2dEXT = unsafeBitCast(get_fp("glVertexAttribL2dEXT", support: [ss203]), to: Swift.type(of: fp_glVertexAttribL2dEXT))
    fp_glVertexAttribL2dEXT(index, x, y)
}
public
func glVertexAttribL2dEXT(index:GL.UInt, x:GL.Double, y:GL.Double)
{
    fp_glVertexAttribL2dEXT(index, x, y)
}
public
func glVertexAttribL2dEXT(_ index:GL.UInt, _ x:GL.Double, _ y:GL.Double)
{
    fp_glVertexAttribL2dEXT(index, x, y)
}

var fp_glVertexAttribL2dv:@convention(c) (GL.UInt, UnsafePointer<GL.Double>?) -> () = load_glVertexAttribL2dv
func load_glVertexAttribL2dv(index:GL.UInt, v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttribL2dv = unsafeBitCast(get_fp("glVertexAttribL2dv", support: [ss359, ss106]), to: Swift.type(of: fp_glVertexAttribL2dv))
    fp_glVertexAttribL2dv(index, v)
}
public
func glVertexAttribL2dv(index:GL.UInt, v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttribL2dv(index, v)
}
public
func glVertexAttribL2dv(_ index:GL.UInt, _ v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttribL2dv(index, v)
}

var fp_glVertexAttribL2dvEXT:@convention(c) (GL.UInt, UnsafePointer<GL.Double>?) -> () = load_glVertexAttribL2dvEXT
func load_glVertexAttribL2dvEXT(index:GL.UInt, v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttribL2dvEXT = unsafeBitCast(get_fp("glVertexAttribL2dvEXT", support: [ss203]), to: Swift.type(of: fp_glVertexAttribL2dvEXT))
    fp_glVertexAttribL2dvEXT(index, v)
}
public
func glVertexAttribL2dvEXT(index:GL.UInt, v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttribL2dvEXT(index, v)
}
public
func glVertexAttribL2dvEXT(_ index:GL.UInt, _ v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttribL2dvEXT(index, v)
}

var fp_glVertexAttribL2i64NV:@convention(c) (GL.UInt, GL.Int64EXT, GL.Int64EXT) -> () = load_glVertexAttribL2i64NV
func load_glVertexAttribL2i64NV(index:GL.UInt, x:GL.Int64EXT, y:GL.Int64EXT)
{
    fp_glVertexAttribL2i64NV = unsafeBitCast(get_fp("glVertexAttribL2i64NV", support: [ss276]), to: Swift.type(of: fp_glVertexAttribL2i64NV))
    fp_glVertexAttribL2i64NV(index, x, y)
}
public
func glVertexAttribL2i64NV(index:GL.UInt, x:GL.Int64EXT, y:GL.Int64EXT)
{
    fp_glVertexAttribL2i64NV(index, x, y)
}
public
func glVertexAttribL2i64NV(_ index:GL.UInt, _ x:GL.Int64EXT, _ y:GL.Int64EXT)
{
    fp_glVertexAttribL2i64NV(index, x, y)
}

var fp_glVertexAttribL2i64vNV:@convention(c) (GL.UInt, UnsafePointer<GL.Int64EXT>?) -> () = load_glVertexAttribL2i64vNV
func load_glVertexAttribL2i64vNV(index:GL.UInt, v:UnsafePointer<GL.Int64EXT>?)
{
    fp_glVertexAttribL2i64vNV = unsafeBitCast(get_fp("glVertexAttribL2i64vNV", support: [ss276]), to: Swift.type(of: fp_glVertexAttribL2i64vNV))
    fp_glVertexAttribL2i64vNV(index, v)
}
public
func glVertexAttribL2i64vNV(index:GL.UInt, v:UnsafePointer<GL.Int64EXT>?)
{
    fp_glVertexAttribL2i64vNV(index, v)
}
public
func glVertexAttribL2i64vNV(_ index:GL.UInt, _ v:UnsafePointer<GL.Int64EXT>?)
{
    fp_glVertexAttribL2i64vNV(index, v)
}

var fp_glVertexAttribL2ui64NV:@convention(c) (GL.UInt, GL.UInt64EXT, GL.UInt64EXT) -> () = load_glVertexAttribL2ui64NV
func load_glVertexAttribL2ui64NV(index:GL.UInt, x:GL.UInt64EXT, y:GL.UInt64EXT)
{
    fp_glVertexAttribL2ui64NV = unsafeBitCast(get_fp("glVertexAttribL2ui64NV", support: [ss276]), to: Swift.type(of: fp_glVertexAttribL2ui64NV))
    fp_glVertexAttribL2ui64NV(index, x, y)
}
public
func glVertexAttribL2ui64NV(index:GL.UInt, x:GL.UInt64EXT, y:GL.UInt64EXT)
{
    fp_glVertexAttribL2ui64NV(index, x, y)
}
public
func glVertexAttribL2ui64NV(_ index:GL.UInt, _ x:GL.UInt64EXT, _ y:GL.UInt64EXT)
{
    fp_glVertexAttribL2ui64NV(index, x, y)
}

var fp_glVertexAttribL2ui64vNV:@convention(c) (GL.UInt, UnsafePointer<GL.UInt64EXT>?) -> () = load_glVertexAttribL2ui64vNV
func load_glVertexAttribL2ui64vNV(index:GL.UInt, v:UnsafePointer<GL.UInt64EXT>?)
{
    fp_glVertexAttribL2ui64vNV = unsafeBitCast(get_fp("glVertexAttribL2ui64vNV", support: [ss276]), to: Swift.type(of: fp_glVertexAttribL2ui64vNV))
    fp_glVertexAttribL2ui64vNV(index, v)
}
public
func glVertexAttribL2ui64vNV(index:GL.UInt, v:UnsafePointer<GL.UInt64EXT>?)
{
    fp_glVertexAttribL2ui64vNV(index, v)
}
public
func glVertexAttribL2ui64vNV(_ index:GL.UInt, _ v:UnsafePointer<GL.UInt64EXT>?)
{
    fp_glVertexAttribL2ui64vNV(index, v)
}

var fp_glVertexAttribL3d:@convention(c) (GL.UInt, GL.Double, GL.Double, GL.Double) -> () = load_glVertexAttribL3d
func load_glVertexAttribL3d(index:GL.UInt, x:GL.Double, y:GL.Double, z:GL.Double)
{
    fp_glVertexAttribL3d = unsafeBitCast(get_fp("glVertexAttribL3d", support: [ss359, ss106]), to: Swift.type(of: fp_glVertexAttribL3d))
    fp_glVertexAttribL3d(index, x, y, z)
}
public
func glVertexAttribL3d(index:GL.UInt, x:GL.Double, y:GL.Double, z:GL.Double)
{
    fp_glVertexAttribL3d(index, x, y, z)
}
public
func glVertexAttribL3d(_ index:GL.UInt, _ x:GL.Double, _ y:GL.Double, _ z:GL.Double)
{
    fp_glVertexAttribL3d(index, x, y, z)
}

var fp_glVertexAttribL3dEXT:@convention(c) (GL.UInt, GL.Double, GL.Double, GL.Double) -> () = load_glVertexAttribL3dEXT
func load_glVertexAttribL3dEXT(index:GL.UInt, x:GL.Double, y:GL.Double, z:GL.Double)
{
    fp_glVertexAttribL3dEXT = unsafeBitCast(get_fp("glVertexAttribL3dEXT", support: [ss203]), to: Swift.type(of: fp_glVertexAttribL3dEXT))
    fp_glVertexAttribL3dEXT(index, x, y, z)
}
public
func glVertexAttribL3dEXT(index:GL.UInt, x:GL.Double, y:GL.Double, z:GL.Double)
{
    fp_glVertexAttribL3dEXT(index, x, y, z)
}
public
func glVertexAttribL3dEXT(_ index:GL.UInt, _ x:GL.Double, _ y:GL.Double, _ z:GL.Double)
{
    fp_glVertexAttribL3dEXT(index, x, y, z)
}

var fp_glVertexAttribL3dv:@convention(c) (GL.UInt, UnsafePointer<GL.Double>?) -> () = load_glVertexAttribL3dv
func load_glVertexAttribL3dv(index:GL.UInt, v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttribL3dv = unsafeBitCast(get_fp("glVertexAttribL3dv", support: [ss359, ss106]), to: Swift.type(of: fp_glVertexAttribL3dv))
    fp_glVertexAttribL3dv(index, v)
}
public
func glVertexAttribL3dv(index:GL.UInt, v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttribL3dv(index, v)
}
public
func glVertexAttribL3dv(_ index:GL.UInt, _ v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttribL3dv(index, v)
}

var fp_glVertexAttribL3dvEXT:@convention(c) (GL.UInt, UnsafePointer<GL.Double>?) -> () = load_glVertexAttribL3dvEXT
func load_glVertexAttribL3dvEXT(index:GL.UInt, v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttribL3dvEXT = unsafeBitCast(get_fp("glVertexAttribL3dvEXT", support: [ss203]), to: Swift.type(of: fp_glVertexAttribL3dvEXT))
    fp_glVertexAttribL3dvEXT(index, v)
}
public
func glVertexAttribL3dvEXT(index:GL.UInt, v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttribL3dvEXT(index, v)
}
public
func glVertexAttribL3dvEXT(_ index:GL.UInt, _ v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttribL3dvEXT(index, v)
}

var fp_glVertexAttribL3i64NV:@convention(c) (GL.UInt, GL.Int64EXT, GL.Int64EXT, GL.Int64EXT) -> () = load_glVertexAttribL3i64NV
func load_glVertexAttribL3i64NV(index:GL.UInt, x:GL.Int64EXT, y:GL.Int64EXT, z:GL.Int64EXT)
{
    fp_glVertexAttribL3i64NV = unsafeBitCast(get_fp("glVertexAttribL3i64NV", support: [ss276]), to: Swift.type(of: fp_glVertexAttribL3i64NV))
    fp_glVertexAttribL3i64NV(index, x, y, z)
}
public
func glVertexAttribL3i64NV(index:GL.UInt, x:GL.Int64EXT, y:GL.Int64EXT, z:GL.Int64EXT)
{
    fp_glVertexAttribL3i64NV(index, x, y, z)
}
public
func glVertexAttribL3i64NV(_ index:GL.UInt, _ x:GL.Int64EXT, _ y:GL.Int64EXT, _ z:GL.Int64EXT)
{
    fp_glVertexAttribL3i64NV(index, x, y, z)
}

var fp_glVertexAttribL3i64vNV:@convention(c) (GL.UInt, UnsafePointer<GL.Int64EXT>?) -> () = load_glVertexAttribL3i64vNV
func load_glVertexAttribL3i64vNV(index:GL.UInt, v:UnsafePointer<GL.Int64EXT>?)
{
    fp_glVertexAttribL3i64vNV = unsafeBitCast(get_fp("glVertexAttribL3i64vNV", support: [ss276]), to: Swift.type(of: fp_glVertexAttribL3i64vNV))
    fp_glVertexAttribL3i64vNV(index, v)
}
public
func glVertexAttribL3i64vNV(index:GL.UInt, v:UnsafePointer<GL.Int64EXT>?)
{
    fp_glVertexAttribL3i64vNV(index, v)
}
public
func glVertexAttribL3i64vNV(_ index:GL.UInt, _ v:UnsafePointer<GL.Int64EXT>?)
{
    fp_glVertexAttribL3i64vNV(index, v)
}

var fp_glVertexAttribL3ui64NV:@convention(c) (GL.UInt, GL.UInt64EXT, GL.UInt64EXT, GL.UInt64EXT) -> () = load_glVertexAttribL3ui64NV
func load_glVertexAttribL3ui64NV(index:GL.UInt, x:GL.UInt64EXT, y:GL.UInt64EXT, z:GL.UInt64EXT)
{
    fp_glVertexAttribL3ui64NV = unsafeBitCast(get_fp("glVertexAttribL3ui64NV", support: [ss276]), to: Swift.type(of: fp_glVertexAttribL3ui64NV))
    fp_glVertexAttribL3ui64NV(index, x, y, z)
}
public
func glVertexAttribL3ui64NV(index:GL.UInt, x:GL.UInt64EXT, y:GL.UInt64EXT, z:GL.UInt64EXT)
{
    fp_glVertexAttribL3ui64NV(index, x, y, z)
}
public
func glVertexAttribL3ui64NV(_ index:GL.UInt, _ x:GL.UInt64EXT, _ y:GL.UInt64EXT, _ z:GL.UInt64EXT)
{
    fp_glVertexAttribL3ui64NV(index, x, y, z)
}

var fp_glVertexAttribL3ui64vNV:@convention(c) (GL.UInt, UnsafePointer<GL.UInt64EXT>?) -> () = load_glVertexAttribL3ui64vNV
func load_glVertexAttribL3ui64vNV(index:GL.UInt, v:UnsafePointer<GL.UInt64EXT>?)
{
    fp_glVertexAttribL3ui64vNV = unsafeBitCast(get_fp("glVertexAttribL3ui64vNV", support: [ss276]), to: Swift.type(of: fp_glVertexAttribL3ui64vNV))
    fp_glVertexAttribL3ui64vNV(index, v)
}
public
func glVertexAttribL3ui64vNV(index:GL.UInt, v:UnsafePointer<GL.UInt64EXT>?)
{
    fp_glVertexAttribL3ui64vNV(index, v)
}
public
func glVertexAttribL3ui64vNV(_ index:GL.UInt, _ v:UnsafePointer<GL.UInt64EXT>?)
{
    fp_glVertexAttribL3ui64vNV(index, v)
}

var fp_glVertexAttribL4d:@convention(c) (GL.UInt, GL.Double, GL.Double, GL.Double, GL.Double) -> () = load_glVertexAttribL4d
func load_glVertexAttribL4d(index:GL.UInt, x:GL.Double, y:GL.Double, z:GL.Double, w:GL.Double)
{
    fp_glVertexAttribL4d = unsafeBitCast(get_fp("glVertexAttribL4d", support: [ss359, ss106]), to: Swift.type(of: fp_glVertexAttribL4d))
    fp_glVertexAttribL4d(index, x, y, z, w)
}
public
func glVertexAttribL4d(index:GL.UInt, x:GL.Double, y:GL.Double, z:GL.Double, w:GL.Double)
{
    fp_glVertexAttribL4d(index, x, y, z, w)
}
public
func glVertexAttribL4d(_ index:GL.UInt, _ x:GL.Double, _ y:GL.Double, _ z:GL.Double, _ w:GL.Double)
{
    fp_glVertexAttribL4d(index, x, y, z, w)
}

var fp_glVertexAttribL4dEXT:@convention(c) (GL.UInt, GL.Double, GL.Double, GL.Double, GL.Double) -> () = load_glVertexAttribL4dEXT
func load_glVertexAttribL4dEXT(index:GL.UInt, x:GL.Double, y:GL.Double, z:GL.Double, w:GL.Double)
{
    fp_glVertexAttribL4dEXT = unsafeBitCast(get_fp("glVertexAttribL4dEXT", support: [ss203]), to: Swift.type(of: fp_glVertexAttribL4dEXT))
    fp_glVertexAttribL4dEXT(index, x, y, z, w)
}
public
func glVertexAttribL4dEXT(index:GL.UInt, x:GL.Double, y:GL.Double, z:GL.Double, w:GL.Double)
{
    fp_glVertexAttribL4dEXT(index, x, y, z, w)
}
public
func glVertexAttribL4dEXT(_ index:GL.UInt, _ x:GL.Double, _ y:GL.Double, _ z:GL.Double, _ w:GL.Double)
{
    fp_glVertexAttribL4dEXT(index, x, y, z, w)
}

var fp_glVertexAttribL4dv:@convention(c) (GL.UInt, UnsafePointer<GL.Double>?) -> () = load_glVertexAttribL4dv
func load_glVertexAttribL4dv(index:GL.UInt, v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttribL4dv = unsafeBitCast(get_fp("glVertexAttribL4dv", support: [ss359, ss106]), to: Swift.type(of: fp_glVertexAttribL4dv))
    fp_glVertexAttribL4dv(index, v)
}
public
func glVertexAttribL4dv(index:GL.UInt, v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttribL4dv(index, v)
}
public
func glVertexAttribL4dv(_ index:GL.UInt, _ v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttribL4dv(index, v)
}

var fp_glVertexAttribL4dvEXT:@convention(c) (GL.UInt, UnsafePointer<GL.Double>?) -> () = load_glVertexAttribL4dvEXT
func load_glVertexAttribL4dvEXT(index:GL.UInt, v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttribL4dvEXT = unsafeBitCast(get_fp("glVertexAttribL4dvEXT", support: [ss203]), to: Swift.type(of: fp_glVertexAttribL4dvEXT))
    fp_glVertexAttribL4dvEXT(index, v)
}
public
func glVertexAttribL4dvEXT(index:GL.UInt, v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttribL4dvEXT(index, v)
}
public
func glVertexAttribL4dvEXT(_ index:GL.UInt, _ v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttribL4dvEXT(index, v)
}

var fp_glVertexAttribL4i64NV:@convention(c) (GL.UInt, GL.Int64EXT, GL.Int64EXT, GL.Int64EXT, GL.Int64EXT) -> () = load_glVertexAttribL4i64NV
func load_glVertexAttribL4i64NV(index:GL.UInt, x:GL.Int64EXT, y:GL.Int64EXT, z:GL.Int64EXT, w:GL.Int64EXT)
{
    fp_glVertexAttribL4i64NV = unsafeBitCast(get_fp("glVertexAttribL4i64NV", support: [ss276]), to: Swift.type(of: fp_glVertexAttribL4i64NV))
    fp_glVertexAttribL4i64NV(index, x, y, z, w)
}
public
func glVertexAttribL4i64NV(index:GL.UInt, x:GL.Int64EXT, y:GL.Int64EXT, z:GL.Int64EXT, w:GL.Int64EXT)
{
    fp_glVertexAttribL4i64NV(index, x, y, z, w)
}
public
func glVertexAttribL4i64NV(_ index:GL.UInt, _ x:GL.Int64EXT, _ y:GL.Int64EXT, _ z:GL.Int64EXT, _ w:GL.Int64EXT)
{
    fp_glVertexAttribL4i64NV(index, x, y, z, w)
}

var fp_glVertexAttribL4i64vNV:@convention(c) (GL.UInt, UnsafePointer<GL.Int64EXT>?) -> () = load_glVertexAttribL4i64vNV
func load_glVertexAttribL4i64vNV(index:GL.UInt, v:UnsafePointer<GL.Int64EXT>?)
{
    fp_glVertexAttribL4i64vNV = unsafeBitCast(get_fp("glVertexAttribL4i64vNV", support: [ss276]), to: Swift.type(of: fp_glVertexAttribL4i64vNV))
    fp_glVertexAttribL4i64vNV(index, v)
}
public
func glVertexAttribL4i64vNV(index:GL.UInt, v:UnsafePointer<GL.Int64EXT>?)
{
    fp_glVertexAttribL4i64vNV(index, v)
}
public
func glVertexAttribL4i64vNV(_ index:GL.UInt, _ v:UnsafePointer<GL.Int64EXT>?)
{
    fp_glVertexAttribL4i64vNV(index, v)
}

var fp_glVertexAttribL4ui64NV:@convention(c) (GL.UInt, GL.UInt64EXT, GL.UInt64EXT, GL.UInt64EXT, GL.UInt64EXT) -> () = load_glVertexAttribL4ui64NV
func load_glVertexAttribL4ui64NV(index:GL.UInt, x:GL.UInt64EXT, y:GL.UInt64EXT, z:GL.UInt64EXT, w:GL.UInt64EXT)
{
    fp_glVertexAttribL4ui64NV = unsafeBitCast(get_fp("glVertexAttribL4ui64NV", support: [ss276]), to: Swift.type(of: fp_glVertexAttribL4ui64NV))
    fp_glVertexAttribL4ui64NV(index, x, y, z, w)
}
public
func glVertexAttribL4ui64NV(index:GL.UInt, x:GL.UInt64EXT, y:GL.UInt64EXT, z:GL.UInt64EXT, w:GL.UInt64EXT)
{
    fp_glVertexAttribL4ui64NV(index, x, y, z, w)
}
public
func glVertexAttribL4ui64NV(_ index:GL.UInt, _ x:GL.UInt64EXT, _ y:GL.UInt64EXT, _ z:GL.UInt64EXT, _ w:GL.UInt64EXT)
{
    fp_glVertexAttribL4ui64NV(index, x, y, z, w)
}

var fp_glVertexAttribL4ui64vNV:@convention(c) (GL.UInt, UnsafePointer<GL.UInt64EXT>?) -> () = load_glVertexAttribL4ui64vNV
func load_glVertexAttribL4ui64vNV(index:GL.UInt, v:UnsafePointer<GL.UInt64EXT>?)
{
    fp_glVertexAttribL4ui64vNV = unsafeBitCast(get_fp("glVertexAttribL4ui64vNV", support: [ss276]), to: Swift.type(of: fp_glVertexAttribL4ui64vNV))
    fp_glVertexAttribL4ui64vNV(index, v)
}
public
func glVertexAttribL4ui64vNV(index:GL.UInt, v:UnsafePointer<GL.UInt64EXT>?)
{
    fp_glVertexAttribL4ui64vNV(index, v)
}
public
func glVertexAttribL4ui64vNV(_ index:GL.UInt, _ v:UnsafePointer<GL.UInt64EXT>?)
{
    fp_glVertexAttribL4ui64vNV(index, v)
}

var fp_glVertexAttribLFormat:@convention(c) (GL.UInt, GL.Int, GL.Enum, GL.UInt) -> () = load_glVertexAttribLFormat
func load_glVertexAttribLFormat(attribindex:GL.UInt, size:GL.Int, type:GL.Enum, relativeoffset:GL.UInt)
{
    fp_glVertexAttribLFormat = unsafeBitCast(get_fp("glVertexAttribLFormat", support: [ss361, ss107]), to: Swift.type(of: fp_glVertexAttribLFormat))
    fp_glVertexAttribLFormat(attribindex, size, type, relativeoffset)
}
public
func glVertexAttribLFormat(attribindex:GL.UInt, size:GL.Int, type:GL.Enum, relativeoffset:GL.UInt)
{
    fp_glVertexAttribLFormat(attribindex, size, type, relativeoffset)
}
public
func glVertexAttribLFormat(_ attribindex:GL.UInt, _ size:GL.Int, _ type:GL.Enum, _ relativeoffset:GL.UInt)
{
    fp_glVertexAttribLFormat(attribindex, size, type, relativeoffset)
}

var fp_glVertexAttribLFormatNV:@convention(c) (GL.UInt, GL.Int, GL.Enum, GL.Size) -> () = load_glVertexAttribLFormatNV
func load_glVertexAttribLFormatNV(index:GL.UInt, size:GL.Int, type:GL.Enum, stride:GL.Size)
{
    fp_glVertexAttribLFormatNV = unsafeBitCast(get_fp("glVertexAttribLFormatNV", support: [ss276]), to: Swift.type(of: fp_glVertexAttribLFormatNV))
    fp_glVertexAttribLFormatNV(index, size, type, stride)
}
public
func glVertexAttribLFormatNV(index:GL.UInt, size:GL.Int, type:GL.Enum, stride:GL.Size)
{
    fp_glVertexAttribLFormatNV(index, size, type, stride)
}
public
func glVertexAttribLFormatNV(_ index:GL.UInt, _ size:GL.Int, _ type:GL.Enum, _ stride:GL.Size)
{
    fp_glVertexAttribLFormatNV(index, size, type, stride)
}

var fp_glVertexAttribLPointer:@convention(c) (GL.UInt, GL.Int, GL.Enum, GL.Size, UnsafeRawPointer?) -> () = load_glVertexAttribLPointer
func load_glVertexAttribLPointer(index:GL.UInt, size:GL.Int, type:GL.Enum, stride:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glVertexAttribLPointer = unsafeBitCast(get_fp("glVertexAttribLPointer", support: [ss359, ss106]), to: Swift.type(of: fp_glVertexAttribLPointer))
    fp_glVertexAttribLPointer(index, size, type, stride, pointer)
}
public
func glVertexAttribLPointer(index:GL.UInt, size:GL.Int, type:GL.Enum, stride:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glVertexAttribLPointer(index, size, type, stride, pointer)
}
public
func glVertexAttribLPointer(_ index:GL.UInt, _ size:GL.Int, _ type:GL.Enum, _ stride:GL.Size, _ pointer:UnsafeRawPointer?)
{
    fp_glVertexAttribLPointer(index, size, type, stride, pointer)
}

var fp_glVertexAttribLPointerEXT:@convention(c) (GL.UInt, GL.Int, GL.Enum, GL.Size, UnsafeRawPointer?) -> () = load_glVertexAttribLPointerEXT
func load_glVertexAttribLPointerEXT(index:GL.UInt, size:GL.Int, type:GL.Enum, stride:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glVertexAttribLPointerEXT = unsafeBitCast(get_fp("glVertexAttribLPointerEXT", support: [ss203]), to: Swift.type(of: fp_glVertexAttribLPointerEXT))
    fp_glVertexAttribLPointerEXT(index, size, type, stride, pointer)
}
public
func glVertexAttribLPointerEXT(index:GL.UInt, size:GL.Int, type:GL.Enum, stride:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glVertexAttribLPointerEXT(index, size, type, stride, pointer)
}
public
func glVertexAttribLPointerEXT(_ index:GL.UInt, _ size:GL.Int, _ type:GL.Enum, _ stride:GL.Size, _ pointer:UnsafeRawPointer?)
{
    fp_glVertexAttribLPointerEXT(index, size, type, stride, pointer)
}

var fp_glVertexAttribP1ui:@convention(c) (GL.UInt, GL.Enum, GL.Bool, GL.UInt) -> () = load_glVertexAttribP1ui
func load_glVertexAttribP1ui(index:GL.UInt, type:GL.Enum, normalized:GL.Bool, value:GL.UInt)
{
    fp_glVertexAttribP1ui = unsafeBitCast(get_fp("glVertexAttribP1ui", support: [ss357, ss112]), to: Swift.type(of: fp_glVertexAttribP1ui))
    fp_glVertexAttribP1ui(index, type, normalized, value)
}
public
func glVertexAttribP1ui(index:GL.UInt, type:GL.Enum, normalized:GL.Bool, value:GL.UInt)
{
    fp_glVertexAttribP1ui(index, type, normalized, value)
}
public
func glVertexAttribP1ui(_ index:GL.UInt, _ type:GL.Enum, _ normalized:GL.Bool, _ value:GL.UInt)
{
    fp_glVertexAttribP1ui(index, type, normalized, value)
}

var fp_glVertexAttribP1uiv:@convention(c) (GL.UInt, GL.Enum, GL.Bool, UnsafePointer<GL.UInt>?) -> () = load_glVertexAttribP1uiv
func load_glVertexAttribP1uiv(index:GL.UInt, type:GL.Enum, normalized:GL.Bool, value:UnsafePointer<GL.UInt>?)
{
    fp_glVertexAttribP1uiv = unsafeBitCast(get_fp("glVertexAttribP1uiv", support: [ss357, ss112]), to: Swift.type(of: fp_glVertexAttribP1uiv))
    fp_glVertexAttribP1uiv(index, type, normalized, value)
}
public
func glVertexAttribP1uiv(index:GL.UInt, type:GL.Enum, normalized:GL.Bool, value:UnsafePointer<GL.UInt>?)
{
    fp_glVertexAttribP1uiv(index, type, normalized, value)
}
public
func glVertexAttribP1uiv(_ index:GL.UInt, _ type:GL.Enum, _ normalized:GL.Bool, _ value:UnsafePointer<GL.UInt>?)
{
    fp_glVertexAttribP1uiv(index, type, normalized, value)
}

var fp_glVertexAttribP2ui:@convention(c) (GL.UInt, GL.Enum, GL.Bool, GL.UInt) -> () = load_glVertexAttribP2ui
func load_glVertexAttribP2ui(index:GL.UInt, type:GL.Enum, normalized:GL.Bool, value:GL.UInt)
{
    fp_glVertexAttribP2ui = unsafeBitCast(get_fp("glVertexAttribP2ui", support: [ss357, ss112]), to: Swift.type(of: fp_glVertexAttribP2ui))
    fp_glVertexAttribP2ui(index, type, normalized, value)
}
public
func glVertexAttribP2ui(index:GL.UInt, type:GL.Enum, normalized:GL.Bool, value:GL.UInt)
{
    fp_glVertexAttribP2ui(index, type, normalized, value)
}
public
func glVertexAttribP2ui(_ index:GL.UInt, _ type:GL.Enum, _ normalized:GL.Bool, _ value:GL.UInt)
{
    fp_glVertexAttribP2ui(index, type, normalized, value)
}

var fp_glVertexAttribP2uiv:@convention(c) (GL.UInt, GL.Enum, GL.Bool, UnsafePointer<GL.UInt>?) -> () = load_glVertexAttribP2uiv
func load_glVertexAttribP2uiv(index:GL.UInt, type:GL.Enum, normalized:GL.Bool, value:UnsafePointer<GL.UInt>?)
{
    fp_glVertexAttribP2uiv = unsafeBitCast(get_fp("glVertexAttribP2uiv", support: [ss357, ss112]), to: Swift.type(of: fp_glVertexAttribP2uiv))
    fp_glVertexAttribP2uiv(index, type, normalized, value)
}
public
func glVertexAttribP2uiv(index:GL.UInt, type:GL.Enum, normalized:GL.Bool, value:UnsafePointer<GL.UInt>?)
{
    fp_glVertexAttribP2uiv(index, type, normalized, value)
}
public
func glVertexAttribP2uiv(_ index:GL.UInt, _ type:GL.Enum, _ normalized:GL.Bool, _ value:UnsafePointer<GL.UInt>?)
{
    fp_glVertexAttribP2uiv(index, type, normalized, value)
}

var fp_glVertexAttribP3ui:@convention(c) (GL.UInt, GL.Enum, GL.Bool, GL.UInt) -> () = load_glVertexAttribP3ui
func load_glVertexAttribP3ui(index:GL.UInt, type:GL.Enum, normalized:GL.Bool, value:GL.UInt)
{
    fp_glVertexAttribP3ui = unsafeBitCast(get_fp("glVertexAttribP3ui", support: [ss357, ss112]), to: Swift.type(of: fp_glVertexAttribP3ui))
    fp_glVertexAttribP3ui(index, type, normalized, value)
}
public
func glVertexAttribP3ui(index:GL.UInt, type:GL.Enum, normalized:GL.Bool, value:GL.UInt)
{
    fp_glVertexAttribP3ui(index, type, normalized, value)
}
public
func glVertexAttribP3ui(_ index:GL.UInt, _ type:GL.Enum, _ normalized:GL.Bool, _ value:GL.UInt)
{
    fp_glVertexAttribP3ui(index, type, normalized, value)
}

var fp_glVertexAttribP3uiv:@convention(c) (GL.UInt, GL.Enum, GL.Bool, UnsafePointer<GL.UInt>?) -> () = load_glVertexAttribP3uiv
func load_glVertexAttribP3uiv(index:GL.UInt, type:GL.Enum, normalized:GL.Bool, value:UnsafePointer<GL.UInt>?)
{
    fp_glVertexAttribP3uiv = unsafeBitCast(get_fp("glVertexAttribP3uiv", support: [ss357, ss112]), to: Swift.type(of: fp_glVertexAttribP3uiv))
    fp_glVertexAttribP3uiv(index, type, normalized, value)
}
public
func glVertexAttribP3uiv(index:GL.UInt, type:GL.Enum, normalized:GL.Bool, value:UnsafePointer<GL.UInt>?)
{
    fp_glVertexAttribP3uiv(index, type, normalized, value)
}
public
func glVertexAttribP3uiv(_ index:GL.UInt, _ type:GL.Enum, _ normalized:GL.Bool, _ value:UnsafePointer<GL.UInt>?)
{
    fp_glVertexAttribP3uiv(index, type, normalized, value)
}

var fp_glVertexAttribP4ui:@convention(c) (GL.UInt, GL.Enum, GL.Bool, GL.UInt) -> () = load_glVertexAttribP4ui
func load_glVertexAttribP4ui(index:GL.UInt, type:GL.Enum, normalized:GL.Bool, value:GL.UInt)
{
    fp_glVertexAttribP4ui = unsafeBitCast(get_fp("glVertexAttribP4ui", support: [ss357, ss112]), to: Swift.type(of: fp_glVertexAttribP4ui))
    fp_glVertexAttribP4ui(index, type, normalized, value)
}
public
func glVertexAttribP4ui(index:GL.UInt, type:GL.Enum, normalized:GL.Bool, value:GL.UInt)
{
    fp_glVertexAttribP4ui(index, type, normalized, value)
}
public
func glVertexAttribP4ui(_ index:GL.UInt, _ type:GL.Enum, _ normalized:GL.Bool, _ value:GL.UInt)
{
    fp_glVertexAttribP4ui(index, type, normalized, value)
}

var fp_glVertexAttribP4uiv:@convention(c) (GL.UInt, GL.Enum, GL.Bool, UnsafePointer<GL.UInt>?) -> () = load_glVertexAttribP4uiv
func load_glVertexAttribP4uiv(index:GL.UInt, type:GL.Enum, normalized:GL.Bool, value:UnsafePointer<GL.UInt>?)
{
    fp_glVertexAttribP4uiv = unsafeBitCast(get_fp("glVertexAttribP4uiv", support: [ss357, ss112]), to: Swift.type(of: fp_glVertexAttribP4uiv))
    fp_glVertexAttribP4uiv(index, type, normalized, value)
}
public
func glVertexAttribP4uiv(index:GL.UInt, type:GL.Enum, normalized:GL.Bool, value:UnsafePointer<GL.UInt>?)
{
    fp_glVertexAttribP4uiv(index, type, normalized, value)
}
public
func glVertexAttribP4uiv(_ index:GL.UInt, _ type:GL.Enum, _ normalized:GL.Bool, _ value:UnsafePointer<GL.UInt>?)
{
    fp_glVertexAttribP4uiv(index, type, normalized, value)
}

var fp_glVertexAttribParameteriAMD:@convention(c) (GL.UInt, GL.Enum, GL.Int) -> () = load_glVertexAttribParameteriAMD
func load_glVertexAttribParameteriAMD(index:GL.UInt, pname:GL.Enum, param:GL.Int)
{
    fp_glVertexAttribParameteriAMD = unsafeBitCast(get_fp("glVertexAttribParameteriAMD", support: [ss4]), to: Swift.type(of: fp_glVertexAttribParameteriAMD))
    fp_glVertexAttribParameteriAMD(index, pname, param)
}
public
func glVertexAttribParameteriAMD(index:GL.UInt, pname:GL.Enum, param:GL.Int)
{
    fp_glVertexAttribParameteriAMD(index, pname, param)
}
public
func glVertexAttribParameteriAMD(_ index:GL.UInt, _ pname:GL.Enum, _ param:GL.Int)
{
    fp_glVertexAttribParameteriAMD(index, pname, param)
}

var fp_glVertexAttribPointer:@convention(c) (GL.UInt, GL.Int, GL.Enum, GL.Bool, GL.Size, UnsafeRawPointer?) -> () = load_glVertexAttribPointer
func load_glVertexAttribPointer(index:GL.UInt, size:GL.Int, type:GL.Enum, normalized:GL.Bool, stride:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glVertexAttribPointer = unsafeBitCast(get_fp("glVertexAttribPointer", support: [ss352, ss365]), to: Swift.type(of: fp_glVertexAttribPointer))
    fp_glVertexAttribPointer(index, size, type, normalized, stride, pointer)
}
public
func glVertexAttribPointer(index:GL.UInt, size:GL.Int, type:GL.Enum, normalized:GL.Bool, stride:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glVertexAttribPointer(index, size, type, normalized, stride, pointer)
}
public
func glVertexAttribPointer(_ index:GL.UInt, _ size:GL.Int, _ type:GL.Enum, _ normalized:GL.Bool, _ stride:GL.Size, _ pointer:UnsafeRawPointer?)
{
    fp_glVertexAttribPointer(index, size, type, normalized, stride, pointer)
}

var fp_glVertexAttribPointerARB:@convention(c) (GL.UInt, GL.Int, GL.Enum, GL.Bool, GL.Size, UnsafeRawPointer?) -> () = load_glVertexAttribPointerARB
func load_glVertexAttribPointerARB(index:GL.UInt, size:GL.Int, type:GL.Enum, normalized:GL.Bool, stride:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glVertexAttribPointerARB = unsafeBitCast(get_fp("glVertexAttribPointerARB", support: [ss110, ss111]), to: Swift.type(of: fp_glVertexAttribPointerARB))
    fp_glVertexAttribPointerARB(index, size, type, normalized, stride, pointer)
}
public
func glVertexAttribPointerARB(index:GL.UInt, size:GL.Int, type:GL.Enum, normalized:GL.Bool, stride:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glVertexAttribPointerARB(index, size, type, normalized, stride, pointer)
}
public
func glVertexAttribPointerARB(_ index:GL.UInt, _ size:GL.Int, _ type:GL.Enum, _ normalized:GL.Bool, _ stride:GL.Size, _ pointer:UnsafeRawPointer?)
{
    fp_glVertexAttribPointerARB(index, size, type, normalized, stride, pointer)
}

var fp_glVertexAttribPointerNV:@convention(c) (GL.UInt, GL.Int, GL.Enum, GL.Size, UnsafeRawPointer?) -> () = load_glVertexAttribPointerNV
func load_glVertexAttribPointerNV(index:GL.UInt, fsize:GL.Int, type:GL.Enum, stride:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glVertexAttribPointerNV = unsafeBitCast(get_fp("glVertexAttribPointerNV", support: [ss278]), to: Swift.type(of: fp_glVertexAttribPointerNV))
    fp_glVertexAttribPointerNV(index, fsize, type, stride, pointer)
}
public
func glVertexAttribPointerNV(index:GL.UInt, fsize:GL.Int, type:GL.Enum, stride:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glVertexAttribPointerNV(index, fsize, type, stride, pointer)
}
public
func glVertexAttribPointerNV(_ index:GL.UInt, _ fsize:GL.Int, _ type:GL.Enum, _ stride:GL.Size, _ pointer:UnsafeRawPointer?)
{
    fp_glVertexAttribPointerNV(index, fsize, type, stride, pointer)
}

var fp_glVertexAttribs1dvNV:@convention(c) (GL.UInt, GL.Size, UnsafePointer<GL.Double>?) -> () = load_glVertexAttribs1dvNV
func load_glVertexAttribs1dvNV(index:GL.UInt, count:GL.Size, v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttribs1dvNV = unsafeBitCast(get_fp("glVertexAttribs1dvNV", support: [ss278]), to: Swift.type(of: fp_glVertexAttribs1dvNV))
    fp_glVertexAttribs1dvNV(index, count, v)
}
public
func glVertexAttribs1dvNV(index:GL.UInt, count:GL.Size, v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttribs1dvNV(index, count, v)
}
public
func glVertexAttribs1dvNV(_ index:GL.UInt, _ count:GL.Size, _ v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttribs1dvNV(index, count, v)
}

var fp_glVertexAttribs1fvNV:@convention(c) (GL.UInt, GL.Size, UnsafePointer<GL.Float>?) -> () = load_glVertexAttribs1fvNV
func load_glVertexAttribs1fvNV(index:GL.UInt, count:GL.Size, v:UnsafePointer<GL.Float>?)
{
    fp_glVertexAttribs1fvNV = unsafeBitCast(get_fp("glVertexAttribs1fvNV", support: [ss278]), to: Swift.type(of: fp_glVertexAttribs1fvNV))
    fp_glVertexAttribs1fvNV(index, count, v)
}
public
func glVertexAttribs1fvNV(index:GL.UInt, count:GL.Size, v:UnsafePointer<GL.Float>?)
{
    fp_glVertexAttribs1fvNV(index, count, v)
}
public
func glVertexAttribs1fvNV(_ index:GL.UInt, _ count:GL.Size, _ v:UnsafePointer<GL.Float>?)
{
    fp_glVertexAttribs1fvNV(index, count, v)
}

var fp_glVertexAttribs1hvNV:@convention(c) (GL.UInt, GL.Size, UnsafePointer<GL.HalfNV>?) -> () = load_glVertexAttribs1hvNV
func load_glVertexAttribs1hvNV(index:GL.UInt, n:GL.Size, v:UnsafePointer<GL.HalfNV>?)
{
    fp_glVertexAttribs1hvNV = unsafeBitCast(get_fp("glVertexAttribs1hvNV", support: [ss253]), to: Swift.type(of: fp_glVertexAttribs1hvNV))
    fp_glVertexAttribs1hvNV(index, n, v)
}
public
func glVertexAttribs1hvNV(index:GL.UInt, n:GL.Size, v:UnsafePointer<GL.HalfNV>?)
{
    fp_glVertexAttribs1hvNV(index, n, v)
}
public
func glVertexAttribs1hvNV(_ index:GL.UInt, _ n:GL.Size, _ v:UnsafePointer<GL.HalfNV>?)
{
    fp_glVertexAttribs1hvNV(index, n, v)
}

var fp_glVertexAttribs1svNV:@convention(c) (GL.UInt, GL.Size, UnsafePointer<GL.Short>?) -> () = load_glVertexAttribs1svNV
func load_glVertexAttribs1svNV(index:GL.UInt, count:GL.Size, v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttribs1svNV = unsafeBitCast(get_fp("glVertexAttribs1svNV", support: [ss278]), to: Swift.type(of: fp_glVertexAttribs1svNV))
    fp_glVertexAttribs1svNV(index, count, v)
}
public
func glVertexAttribs1svNV(index:GL.UInt, count:GL.Size, v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttribs1svNV(index, count, v)
}
public
func glVertexAttribs1svNV(_ index:GL.UInt, _ count:GL.Size, _ v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttribs1svNV(index, count, v)
}

var fp_glVertexAttribs2dvNV:@convention(c) (GL.UInt, GL.Size, UnsafePointer<GL.Double>?) -> () = load_glVertexAttribs2dvNV
func load_glVertexAttribs2dvNV(index:GL.UInt, count:GL.Size, v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttribs2dvNV = unsafeBitCast(get_fp("glVertexAttribs2dvNV", support: [ss278]), to: Swift.type(of: fp_glVertexAttribs2dvNV))
    fp_glVertexAttribs2dvNV(index, count, v)
}
public
func glVertexAttribs2dvNV(index:GL.UInt, count:GL.Size, v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttribs2dvNV(index, count, v)
}
public
func glVertexAttribs2dvNV(_ index:GL.UInt, _ count:GL.Size, _ v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttribs2dvNV(index, count, v)
}

var fp_glVertexAttribs2fvNV:@convention(c) (GL.UInt, GL.Size, UnsafePointer<GL.Float>?) -> () = load_glVertexAttribs2fvNV
func load_glVertexAttribs2fvNV(index:GL.UInt, count:GL.Size, v:UnsafePointer<GL.Float>?)
{
    fp_glVertexAttribs2fvNV = unsafeBitCast(get_fp("glVertexAttribs2fvNV", support: [ss278]), to: Swift.type(of: fp_glVertexAttribs2fvNV))
    fp_glVertexAttribs2fvNV(index, count, v)
}
public
func glVertexAttribs2fvNV(index:GL.UInt, count:GL.Size, v:UnsafePointer<GL.Float>?)
{
    fp_glVertexAttribs2fvNV(index, count, v)
}
public
func glVertexAttribs2fvNV(_ index:GL.UInt, _ count:GL.Size, _ v:UnsafePointer<GL.Float>?)
{
    fp_glVertexAttribs2fvNV(index, count, v)
}

var fp_glVertexAttribs2hvNV:@convention(c) (GL.UInt, GL.Size, UnsafePointer<GL.HalfNV>?) -> () = load_glVertexAttribs2hvNV
func load_glVertexAttribs2hvNV(index:GL.UInt, n:GL.Size, v:UnsafePointer<GL.HalfNV>?)
{
    fp_glVertexAttribs2hvNV = unsafeBitCast(get_fp("glVertexAttribs2hvNV", support: [ss253]), to: Swift.type(of: fp_glVertexAttribs2hvNV))
    fp_glVertexAttribs2hvNV(index, n, v)
}
public
func glVertexAttribs2hvNV(index:GL.UInt, n:GL.Size, v:UnsafePointer<GL.HalfNV>?)
{
    fp_glVertexAttribs2hvNV(index, n, v)
}
public
func glVertexAttribs2hvNV(_ index:GL.UInt, _ n:GL.Size, _ v:UnsafePointer<GL.HalfNV>?)
{
    fp_glVertexAttribs2hvNV(index, n, v)
}

var fp_glVertexAttribs2svNV:@convention(c) (GL.UInt, GL.Size, UnsafePointer<GL.Short>?) -> () = load_glVertexAttribs2svNV
func load_glVertexAttribs2svNV(index:GL.UInt, count:GL.Size, v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttribs2svNV = unsafeBitCast(get_fp("glVertexAttribs2svNV", support: [ss278]), to: Swift.type(of: fp_glVertexAttribs2svNV))
    fp_glVertexAttribs2svNV(index, count, v)
}
public
func glVertexAttribs2svNV(index:GL.UInt, count:GL.Size, v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttribs2svNV(index, count, v)
}
public
func glVertexAttribs2svNV(_ index:GL.UInt, _ count:GL.Size, _ v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttribs2svNV(index, count, v)
}

var fp_glVertexAttribs3dvNV:@convention(c) (GL.UInt, GL.Size, UnsafePointer<GL.Double>?) -> () = load_glVertexAttribs3dvNV
func load_glVertexAttribs3dvNV(index:GL.UInt, count:GL.Size, v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttribs3dvNV = unsafeBitCast(get_fp("glVertexAttribs3dvNV", support: [ss278]), to: Swift.type(of: fp_glVertexAttribs3dvNV))
    fp_glVertexAttribs3dvNV(index, count, v)
}
public
func glVertexAttribs3dvNV(index:GL.UInt, count:GL.Size, v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttribs3dvNV(index, count, v)
}
public
func glVertexAttribs3dvNV(_ index:GL.UInt, _ count:GL.Size, _ v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttribs3dvNV(index, count, v)
}

var fp_glVertexAttribs3fvNV:@convention(c) (GL.UInt, GL.Size, UnsafePointer<GL.Float>?) -> () = load_glVertexAttribs3fvNV
func load_glVertexAttribs3fvNV(index:GL.UInt, count:GL.Size, v:UnsafePointer<GL.Float>?)
{
    fp_glVertexAttribs3fvNV = unsafeBitCast(get_fp("glVertexAttribs3fvNV", support: [ss278]), to: Swift.type(of: fp_glVertexAttribs3fvNV))
    fp_glVertexAttribs3fvNV(index, count, v)
}
public
func glVertexAttribs3fvNV(index:GL.UInt, count:GL.Size, v:UnsafePointer<GL.Float>?)
{
    fp_glVertexAttribs3fvNV(index, count, v)
}
public
func glVertexAttribs3fvNV(_ index:GL.UInt, _ count:GL.Size, _ v:UnsafePointer<GL.Float>?)
{
    fp_glVertexAttribs3fvNV(index, count, v)
}

var fp_glVertexAttribs3hvNV:@convention(c) (GL.UInt, GL.Size, UnsafePointer<GL.HalfNV>?) -> () = load_glVertexAttribs3hvNV
func load_glVertexAttribs3hvNV(index:GL.UInt, n:GL.Size, v:UnsafePointer<GL.HalfNV>?)
{
    fp_glVertexAttribs3hvNV = unsafeBitCast(get_fp("glVertexAttribs3hvNV", support: [ss253]), to: Swift.type(of: fp_glVertexAttribs3hvNV))
    fp_glVertexAttribs3hvNV(index, n, v)
}
public
func glVertexAttribs3hvNV(index:GL.UInt, n:GL.Size, v:UnsafePointer<GL.HalfNV>?)
{
    fp_glVertexAttribs3hvNV(index, n, v)
}
public
func glVertexAttribs3hvNV(_ index:GL.UInt, _ n:GL.Size, _ v:UnsafePointer<GL.HalfNV>?)
{
    fp_glVertexAttribs3hvNV(index, n, v)
}

var fp_glVertexAttribs3svNV:@convention(c) (GL.UInt, GL.Size, UnsafePointer<GL.Short>?) -> () = load_glVertexAttribs3svNV
func load_glVertexAttribs3svNV(index:GL.UInt, count:GL.Size, v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttribs3svNV = unsafeBitCast(get_fp("glVertexAttribs3svNV", support: [ss278]), to: Swift.type(of: fp_glVertexAttribs3svNV))
    fp_glVertexAttribs3svNV(index, count, v)
}
public
func glVertexAttribs3svNV(index:GL.UInt, count:GL.Size, v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttribs3svNV(index, count, v)
}
public
func glVertexAttribs3svNV(_ index:GL.UInt, _ count:GL.Size, _ v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttribs3svNV(index, count, v)
}

var fp_glVertexAttribs4dvNV:@convention(c) (GL.UInt, GL.Size, UnsafePointer<GL.Double>?) -> () = load_glVertexAttribs4dvNV
func load_glVertexAttribs4dvNV(index:GL.UInt, count:GL.Size, v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttribs4dvNV = unsafeBitCast(get_fp("glVertexAttribs4dvNV", support: [ss278]), to: Swift.type(of: fp_glVertexAttribs4dvNV))
    fp_glVertexAttribs4dvNV(index, count, v)
}
public
func glVertexAttribs4dvNV(index:GL.UInt, count:GL.Size, v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttribs4dvNV(index, count, v)
}
public
func glVertexAttribs4dvNV(_ index:GL.UInt, _ count:GL.Size, _ v:UnsafePointer<GL.Double>?)
{
    fp_glVertexAttribs4dvNV(index, count, v)
}

var fp_glVertexAttribs4fvNV:@convention(c) (GL.UInt, GL.Size, UnsafePointer<GL.Float>?) -> () = load_glVertexAttribs4fvNV
func load_glVertexAttribs4fvNV(index:GL.UInt, count:GL.Size, v:UnsafePointer<GL.Float>?)
{
    fp_glVertexAttribs4fvNV = unsafeBitCast(get_fp("glVertexAttribs4fvNV", support: [ss278]), to: Swift.type(of: fp_glVertexAttribs4fvNV))
    fp_glVertexAttribs4fvNV(index, count, v)
}
public
func glVertexAttribs4fvNV(index:GL.UInt, count:GL.Size, v:UnsafePointer<GL.Float>?)
{
    fp_glVertexAttribs4fvNV(index, count, v)
}
public
func glVertexAttribs4fvNV(_ index:GL.UInt, _ count:GL.Size, _ v:UnsafePointer<GL.Float>?)
{
    fp_glVertexAttribs4fvNV(index, count, v)
}

var fp_glVertexAttribs4hvNV:@convention(c) (GL.UInt, GL.Size, UnsafePointer<GL.HalfNV>?) -> () = load_glVertexAttribs4hvNV
func load_glVertexAttribs4hvNV(index:GL.UInt, n:GL.Size, v:UnsafePointer<GL.HalfNV>?)
{
    fp_glVertexAttribs4hvNV = unsafeBitCast(get_fp("glVertexAttribs4hvNV", support: [ss253]), to: Swift.type(of: fp_glVertexAttribs4hvNV))
    fp_glVertexAttribs4hvNV(index, n, v)
}
public
func glVertexAttribs4hvNV(index:GL.UInt, n:GL.Size, v:UnsafePointer<GL.HalfNV>?)
{
    fp_glVertexAttribs4hvNV(index, n, v)
}
public
func glVertexAttribs4hvNV(_ index:GL.UInt, _ n:GL.Size, _ v:UnsafePointer<GL.HalfNV>?)
{
    fp_glVertexAttribs4hvNV(index, n, v)
}

var fp_glVertexAttribs4svNV:@convention(c) (GL.UInt, GL.Size, UnsafePointer<GL.Short>?) -> () = load_glVertexAttribs4svNV
func load_glVertexAttribs4svNV(index:GL.UInt, count:GL.Size, v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttribs4svNV = unsafeBitCast(get_fp("glVertexAttribs4svNV", support: [ss278]), to: Swift.type(of: fp_glVertexAttribs4svNV))
    fp_glVertexAttribs4svNV(index, count, v)
}
public
func glVertexAttribs4svNV(index:GL.UInt, count:GL.Size, v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttribs4svNV(index, count, v)
}
public
func glVertexAttribs4svNV(_ index:GL.UInt, _ count:GL.Size, _ v:UnsafePointer<GL.Short>?)
{
    fp_glVertexAttribs4svNV(index, count, v)
}

var fp_glVertexAttribs4ubvNV:@convention(c) (GL.UInt, GL.Size, UnsafePointer<GL.UByte>?) -> () = load_glVertexAttribs4ubvNV
func load_glVertexAttribs4ubvNV(index:GL.UInt, count:GL.Size, v:UnsafePointer<GL.UByte>?)
{
    fp_glVertexAttribs4ubvNV = unsafeBitCast(get_fp("glVertexAttribs4ubvNV", support: [ss278]), to: Swift.type(of: fp_glVertexAttribs4ubvNV))
    fp_glVertexAttribs4ubvNV(index, count, v)
}
public
func glVertexAttribs4ubvNV(index:GL.UInt, count:GL.Size, v:UnsafePointer<GL.UByte>?)
{
    fp_glVertexAttribs4ubvNV(index, count, v)
}
public
func glVertexAttribs4ubvNV(_ index:GL.UInt, _ count:GL.Size, _ v:UnsafePointer<GL.UByte>?)
{
    fp_glVertexAttribs4ubvNV(index, count, v)
}

var fp_glVertexBindingDivisor:@convention(c) (GL.UInt, GL.UInt) -> () = load_glVertexBindingDivisor
func load_glVertexBindingDivisor(bindingindex:GL.UInt, divisor:GL.UInt)
{
    fp_glVertexBindingDivisor = unsafeBitCast(get_fp("glVertexBindingDivisor", support: [ss361, ss367, ss107]), to: Swift.type(of: fp_glVertexBindingDivisor))
    fp_glVertexBindingDivisor(bindingindex, divisor)
}
public
func glVertexBindingDivisor(bindingindex:GL.UInt, divisor:GL.UInt)
{
    fp_glVertexBindingDivisor(bindingindex, divisor)
}
public
func glVertexBindingDivisor(_ bindingindex:GL.UInt, _ divisor:GL.UInt)
{
    fp_glVertexBindingDivisor(bindingindex, divisor)
}

var fp_glVertexBlendARB:@convention(c) (GL.Int) -> () = load_glVertexBlendARB
func load_glVertexBlendARB(count:GL.Int)
{
    fp_glVertexBlendARB = unsafeBitCast(get_fp("glVertexBlendARB", support: [ss108]), to: Swift.type(of: fp_glVertexBlendARB))
    fp_glVertexBlendARB(count)
}
public
func glVertexBlendARB(count:GL.Int)
{
    fp_glVertexBlendARB(count)
}
public
func glVertexBlendARB(_ count:GL.Int)
{
    fp_glVertexBlendARB(count)
}

var fp_glVertexBlendEnvfATI:@convention(c) (GL.Enum, GL.Float) -> () = load_glVertexBlendEnvfATI
func load_glVertexBlendEnvfATI(pname:GL.Enum, param:GL.Float)
{
    fp_glVertexBlendEnvfATI = unsafeBitCast(get_fp("glVertexBlendEnvfATI", support: [ss124]), to: Swift.type(of: fp_glVertexBlendEnvfATI))
    fp_glVertexBlendEnvfATI(pname, param)
}
public
func glVertexBlendEnvfATI(pname:GL.Enum, param:GL.Float)
{
    fp_glVertexBlendEnvfATI(pname, param)
}
public
func glVertexBlendEnvfATI(_ pname:GL.Enum, _ param:GL.Float)
{
    fp_glVertexBlendEnvfATI(pname, param)
}

var fp_glVertexBlendEnviATI:@convention(c) (GL.Enum, GL.Int) -> () = load_glVertexBlendEnviATI
func load_glVertexBlendEnviATI(pname:GL.Enum, param:GL.Int)
{
    fp_glVertexBlendEnviATI = unsafeBitCast(get_fp("glVertexBlendEnviATI", support: [ss124]), to: Swift.type(of: fp_glVertexBlendEnviATI))
    fp_glVertexBlendEnviATI(pname, param)
}
public
func glVertexBlendEnviATI(pname:GL.Enum, param:GL.Int)
{
    fp_glVertexBlendEnviATI(pname, param)
}
public
func glVertexBlendEnviATI(_ pname:GL.Enum, _ param:GL.Int)
{
    fp_glVertexBlendEnviATI(pname, param)
}

var fp_glVertexFormatNV:@convention(c) (GL.Int, GL.Enum, GL.Size) -> () = load_glVertexFormatNV
func load_glVertexFormatNV(size:GL.Int, type:GL.Enum, stride:GL.Size)
{
    fp_glVertexFormatNV = unsafeBitCast(get_fp("glVertexFormatNV", support: [ss277]), to: Swift.type(of: fp_glVertexFormatNV))
    fp_glVertexFormatNV(size, type, stride)
}
public
func glVertexFormatNV(size:GL.Int, type:GL.Enum, stride:GL.Size)
{
    fp_glVertexFormatNV(size, type, stride)
}
public
func glVertexFormatNV(_ size:GL.Int, _ type:GL.Enum, _ stride:GL.Size)
{
    fp_glVertexFormatNV(size, type, stride)
}

var fp_glVertexP2ui:@convention(c) (GL.Enum, GL.UInt) -> () = load_glVertexP2ui
func load_glVertexP2ui(type:GL.Enum, value:GL.UInt)
{
    fp_glVertexP2ui = unsafeBitCast(get_fp("glVertexP2ui", support: [ss357, ss112]), to: Swift.type(of: fp_glVertexP2ui))
    fp_glVertexP2ui(type, value)
}
public
func glVertexP2ui(type:GL.Enum, value:GL.UInt)
{
    fp_glVertexP2ui(type, value)
}
public
func glVertexP2ui(_ type:GL.Enum, _ value:GL.UInt)
{
    fp_glVertexP2ui(type, value)
}

var fp_glVertexP2uiv:@convention(c) (GL.Enum, UnsafePointer<GL.UInt>?) -> () = load_glVertexP2uiv
func load_glVertexP2uiv(type:GL.Enum, value:UnsafePointer<GL.UInt>?)
{
    fp_glVertexP2uiv = unsafeBitCast(get_fp("glVertexP2uiv", support: [ss357, ss112]), to: Swift.type(of: fp_glVertexP2uiv))
    fp_glVertexP2uiv(type, value)
}
public
func glVertexP2uiv(type:GL.Enum, value:UnsafePointer<GL.UInt>?)
{
    fp_glVertexP2uiv(type, value)
}
public
func glVertexP2uiv(_ type:GL.Enum, _ value:UnsafePointer<GL.UInt>?)
{
    fp_glVertexP2uiv(type, value)
}

var fp_glVertexP3ui:@convention(c) (GL.Enum, GL.UInt) -> () = load_glVertexP3ui
func load_glVertexP3ui(type:GL.Enum, value:GL.UInt)
{
    fp_glVertexP3ui = unsafeBitCast(get_fp("glVertexP3ui", support: [ss357, ss112]), to: Swift.type(of: fp_glVertexP3ui))
    fp_glVertexP3ui(type, value)
}
public
func glVertexP3ui(type:GL.Enum, value:GL.UInt)
{
    fp_glVertexP3ui(type, value)
}
public
func glVertexP3ui(_ type:GL.Enum, _ value:GL.UInt)
{
    fp_glVertexP3ui(type, value)
}

var fp_glVertexP3uiv:@convention(c) (GL.Enum, UnsafePointer<GL.UInt>?) -> () = load_glVertexP3uiv
func load_glVertexP3uiv(type:GL.Enum, value:UnsafePointer<GL.UInt>?)
{
    fp_glVertexP3uiv = unsafeBitCast(get_fp("glVertexP3uiv", support: [ss357, ss112]), to: Swift.type(of: fp_glVertexP3uiv))
    fp_glVertexP3uiv(type, value)
}
public
func glVertexP3uiv(type:GL.Enum, value:UnsafePointer<GL.UInt>?)
{
    fp_glVertexP3uiv(type, value)
}
public
func glVertexP3uiv(_ type:GL.Enum, _ value:UnsafePointer<GL.UInt>?)
{
    fp_glVertexP3uiv(type, value)
}

var fp_glVertexP4ui:@convention(c) (GL.Enum, GL.UInt) -> () = load_glVertexP4ui
func load_glVertexP4ui(type:GL.Enum, value:GL.UInt)
{
    fp_glVertexP4ui = unsafeBitCast(get_fp("glVertexP4ui", support: [ss357, ss112]), to: Swift.type(of: fp_glVertexP4ui))
    fp_glVertexP4ui(type, value)
}
public
func glVertexP4ui(type:GL.Enum, value:GL.UInt)
{
    fp_glVertexP4ui(type, value)
}
public
func glVertexP4ui(_ type:GL.Enum, _ value:GL.UInt)
{
    fp_glVertexP4ui(type, value)
}

var fp_glVertexP4uiv:@convention(c) (GL.Enum, UnsafePointer<GL.UInt>?) -> () = load_glVertexP4uiv
func load_glVertexP4uiv(type:GL.Enum, value:UnsafePointer<GL.UInt>?)
{
    fp_glVertexP4uiv = unsafeBitCast(get_fp("glVertexP4uiv", support: [ss357, ss112]), to: Swift.type(of: fp_glVertexP4uiv))
    fp_glVertexP4uiv(type, value)
}
public
func glVertexP4uiv(type:GL.Enum, value:UnsafePointer<GL.UInt>?)
{
    fp_glVertexP4uiv(type, value)
}
public
func glVertexP4uiv(_ type:GL.Enum, _ value:UnsafePointer<GL.UInt>?)
{
    fp_glVertexP4uiv(type, value)
}

var fp_glVertexPointer:@convention(c) (GL.Int, GL.Enum, GL.Size, UnsafeRawPointer?) -> () = load_glVertexPointer
func load_glVertexPointer(size:GL.Int, type:GL.Enum, stride:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glVertexPointer = unsafeBitCast(get_fp("glVertexPointer", support: [ss347, ss369, ss364]), to: Swift.type(of: fp_glVertexPointer))
    fp_glVertexPointer(size, type, stride, pointer)
}
public
func glVertexPointer(size:GL.Int, type:GL.Enum, stride:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glVertexPointer(size, type, stride, pointer)
}
public
func glVertexPointer(_ size:GL.Int, _ type:GL.Enum, _ stride:GL.Size, _ pointer:UnsafeRawPointer?)
{
    fp_glVertexPointer(size, type, stride, pointer)
}

var fp_glVertexPointerEXT:@convention(c) (GL.Int, GL.Enum, GL.Size, GL.Size, UnsafeRawPointer?) -> () = load_glVertexPointerEXT
func load_glVertexPointerEXT(size:GL.Int, type:GL.Enum, stride:GL.Size, count:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glVertexPointerEXT = unsafeBitCast(get_fp("glVertexPointerEXT", support: [ss202]), to: Swift.type(of: fp_glVertexPointerEXT))
    fp_glVertexPointerEXT(size, type, stride, count, pointer)
}
public
func glVertexPointerEXT(size:GL.Int, type:GL.Enum, stride:GL.Size, count:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glVertexPointerEXT(size, type, stride, count, pointer)
}
public
func glVertexPointerEXT(_ size:GL.Int, _ type:GL.Enum, _ stride:GL.Size, _ count:GL.Size, _ pointer:UnsafeRawPointer?)
{
    fp_glVertexPointerEXT(size, type, stride, count, pointer)
}

var fp_glVertexPointerListIBM:@convention(c) (GL.Int, GL.Enum, GL.Int, UnsafeMutablePointer<UnsafeRawPointer?>?, GL.Int) -> () = load_glVertexPointerListIBM
func load_glVertexPointerListIBM(size:GL.Int, type:GL.Enum, stride:GL.Int, pointer:UnsafeMutablePointer<UnsafeRawPointer?>?, ptrstride:GL.Int)
{
    fp_glVertexPointerListIBM = unsafeBitCast(get_fp("glVertexPointerListIBM", support: [ss212]), to: Swift.type(of: fp_glVertexPointerListIBM))
    fp_glVertexPointerListIBM(size, type, stride, pointer, ptrstride)
}
public
func glVertexPointerListIBM(size:GL.Int, type:GL.Enum, stride:GL.Int, pointer:UnsafeMutablePointer<UnsafeRawPointer?>?, ptrstride:GL.Int)
{
    fp_glVertexPointerListIBM(size, type, stride, pointer, ptrstride)
}
public
func glVertexPointerListIBM(_ size:GL.Int, _ type:GL.Enum, _ stride:GL.Int, _ pointer:UnsafeMutablePointer<UnsafeRawPointer?>?, _ ptrstride:GL.Int)
{
    fp_glVertexPointerListIBM(size, type, stride, pointer, ptrstride)
}

var fp_glVertexPointervINTEL:@convention(c) (GL.Int, GL.Enum, UnsafeMutablePointer<UnsafeRawPointer?>?) -> () = load_glVertexPointervINTEL
func load_glVertexPointervINTEL(size:GL.Int, type:GL.Enum, pointer:UnsafeMutablePointer<UnsafeRawPointer?>?)
{
    fp_glVertexPointervINTEL = unsafeBitCast(get_fp("glVertexPointervINTEL", support: [ss218]), to: Swift.type(of: fp_glVertexPointervINTEL))
    fp_glVertexPointervINTEL(size, type, pointer)
}
public
func glVertexPointervINTEL(size:GL.Int, type:GL.Enum, pointer:UnsafeMutablePointer<UnsafeRawPointer?>?)
{
    fp_glVertexPointervINTEL(size, type, pointer)
}
public
func glVertexPointervINTEL(_ size:GL.Int, _ type:GL.Enum, _ pointer:UnsafeMutablePointer<UnsafeRawPointer?>?)
{
    fp_glVertexPointervINTEL(size, type, pointer)
}

var fp_glVertexStream1dATI:@convention(c) (GL.Enum, GL.Double) -> () = load_glVertexStream1dATI
func load_glVertexStream1dATI(stream:GL.Enum, x:GL.Double)
{
    fp_glVertexStream1dATI = unsafeBitCast(get_fp("glVertexStream1dATI", support: [ss124]), to: Swift.type(of: fp_glVertexStream1dATI))
    fp_glVertexStream1dATI(stream, x)
}
public
func glVertexStream1dATI(stream:GL.Enum, x:GL.Double)
{
    fp_glVertexStream1dATI(stream, x)
}
public
func glVertexStream1dATI(_ stream:GL.Enum, _ x:GL.Double)
{
    fp_glVertexStream1dATI(stream, x)
}

var fp_glVertexStream1dvATI:@convention(c) (GL.Enum, UnsafePointer<GL.Double>?) -> () = load_glVertexStream1dvATI
func load_glVertexStream1dvATI(stream:GL.Enum, coords:UnsafePointer<GL.Double>?)
{
    fp_glVertexStream1dvATI = unsafeBitCast(get_fp("glVertexStream1dvATI", support: [ss124]), to: Swift.type(of: fp_glVertexStream1dvATI))
    fp_glVertexStream1dvATI(stream, coords)
}
public
func glVertexStream1dvATI(stream:GL.Enum, coords:UnsafePointer<GL.Double>?)
{
    fp_glVertexStream1dvATI(stream, coords)
}
public
func glVertexStream1dvATI(_ stream:GL.Enum, _ coords:UnsafePointer<GL.Double>?)
{
    fp_glVertexStream1dvATI(stream, coords)
}

var fp_glVertexStream1fATI:@convention(c) (GL.Enum, GL.Float) -> () = load_glVertexStream1fATI
func load_glVertexStream1fATI(stream:GL.Enum, x:GL.Float)
{
    fp_glVertexStream1fATI = unsafeBitCast(get_fp("glVertexStream1fATI", support: [ss124]), to: Swift.type(of: fp_glVertexStream1fATI))
    fp_glVertexStream1fATI(stream, x)
}
public
func glVertexStream1fATI(stream:GL.Enum, x:GL.Float)
{
    fp_glVertexStream1fATI(stream, x)
}
public
func glVertexStream1fATI(_ stream:GL.Enum, _ x:GL.Float)
{
    fp_glVertexStream1fATI(stream, x)
}

var fp_glVertexStream1fvATI:@convention(c) (GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glVertexStream1fvATI
func load_glVertexStream1fvATI(stream:GL.Enum, coords:UnsafePointer<GL.Float>?)
{
    fp_glVertexStream1fvATI = unsafeBitCast(get_fp("glVertexStream1fvATI", support: [ss124]), to: Swift.type(of: fp_glVertexStream1fvATI))
    fp_glVertexStream1fvATI(stream, coords)
}
public
func glVertexStream1fvATI(stream:GL.Enum, coords:UnsafePointer<GL.Float>?)
{
    fp_glVertexStream1fvATI(stream, coords)
}
public
func glVertexStream1fvATI(_ stream:GL.Enum, _ coords:UnsafePointer<GL.Float>?)
{
    fp_glVertexStream1fvATI(stream, coords)
}

var fp_glVertexStream1iATI:@convention(c) (GL.Enum, GL.Int) -> () = load_glVertexStream1iATI
func load_glVertexStream1iATI(stream:GL.Enum, x:GL.Int)
{
    fp_glVertexStream1iATI = unsafeBitCast(get_fp("glVertexStream1iATI", support: [ss124]), to: Swift.type(of: fp_glVertexStream1iATI))
    fp_glVertexStream1iATI(stream, x)
}
public
func glVertexStream1iATI(stream:GL.Enum, x:GL.Int)
{
    fp_glVertexStream1iATI(stream, x)
}
public
func glVertexStream1iATI(_ stream:GL.Enum, _ x:GL.Int)
{
    fp_glVertexStream1iATI(stream, x)
}

var fp_glVertexStream1ivATI:@convention(c) (GL.Enum, UnsafePointer<GL.Int>?) -> () = load_glVertexStream1ivATI
func load_glVertexStream1ivATI(stream:GL.Enum, coords:UnsafePointer<GL.Int>?)
{
    fp_glVertexStream1ivATI = unsafeBitCast(get_fp("glVertexStream1ivATI", support: [ss124]), to: Swift.type(of: fp_glVertexStream1ivATI))
    fp_glVertexStream1ivATI(stream, coords)
}
public
func glVertexStream1ivATI(stream:GL.Enum, coords:UnsafePointer<GL.Int>?)
{
    fp_glVertexStream1ivATI(stream, coords)
}
public
func glVertexStream1ivATI(_ stream:GL.Enum, _ coords:UnsafePointer<GL.Int>?)
{
    fp_glVertexStream1ivATI(stream, coords)
}

var fp_glVertexStream1sATI:@convention(c) (GL.Enum, GL.Short) -> () = load_glVertexStream1sATI
func load_glVertexStream1sATI(stream:GL.Enum, x:GL.Short)
{
    fp_glVertexStream1sATI = unsafeBitCast(get_fp("glVertexStream1sATI", support: [ss124]), to: Swift.type(of: fp_glVertexStream1sATI))
    fp_glVertexStream1sATI(stream, x)
}
public
func glVertexStream1sATI(stream:GL.Enum, x:GL.Short)
{
    fp_glVertexStream1sATI(stream, x)
}
public
func glVertexStream1sATI(_ stream:GL.Enum, _ x:GL.Short)
{
    fp_glVertexStream1sATI(stream, x)
}

var fp_glVertexStream1svATI:@convention(c) (GL.Enum, UnsafePointer<GL.Short>?) -> () = load_glVertexStream1svATI
func load_glVertexStream1svATI(stream:GL.Enum, coords:UnsafePointer<GL.Short>?)
{
    fp_glVertexStream1svATI = unsafeBitCast(get_fp("glVertexStream1svATI", support: [ss124]), to: Swift.type(of: fp_glVertexStream1svATI))
    fp_glVertexStream1svATI(stream, coords)
}
public
func glVertexStream1svATI(stream:GL.Enum, coords:UnsafePointer<GL.Short>?)
{
    fp_glVertexStream1svATI(stream, coords)
}
public
func glVertexStream1svATI(_ stream:GL.Enum, _ coords:UnsafePointer<GL.Short>?)
{
    fp_glVertexStream1svATI(stream, coords)
}

var fp_glVertexStream2dATI:@convention(c) (GL.Enum, GL.Double, GL.Double) -> () = load_glVertexStream2dATI
func load_glVertexStream2dATI(stream:GL.Enum, x:GL.Double, y:GL.Double)
{
    fp_glVertexStream2dATI = unsafeBitCast(get_fp("glVertexStream2dATI", support: [ss124]), to: Swift.type(of: fp_glVertexStream2dATI))
    fp_glVertexStream2dATI(stream, x, y)
}
public
func glVertexStream2dATI(stream:GL.Enum, x:GL.Double, y:GL.Double)
{
    fp_glVertexStream2dATI(stream, x, y)
}
public
func glVertexStream2dATI(_ stream:GL.Enum, _ x:GL.Double, _ y:GL.Double)
{
    fp_glVertexStream2dATI(stream, x, y)
}

var fp_glVertexStream2dvATI:@convention(c) (GL.Enum, UnsafePointer<GL.Double>?) -> () = load_glVertexStream2dvATI
func load_glVertexStream2dvATI(stream:GL.Enum, coords:UnsafePointer<GL.Double>?)
{
    fp_glVertexStream2dvATI = unsafeBitCast(get_fp("glVertexStream2dvATI", support: [ss124]), to: Swift.type(of: fp_glVertexStream2dvATI))
    fp_glVertexStream2dvATI(stream, coords)
}
public
func glVertexStream2dvATI(stream:GL.Enum, coords:UnsafePointer<GL.Double>?)
{
    fp_glVertexStream2dvATI(stream, coords)
}
public
func glVertexStream2dvATI(_ stream:GL.Enum, _ coords:UnsafePointer<GL.Double>?)
{
    fp_glVertexStream2dvATI(stream, coords)
}

var fp_glVertexStream2fATI:@convention(c) (GL.Enum, GL.Float, GL.Float) -> () = load_glVertexStream2fATI
func load_glVertexStream2fATI(stream:GL.Enum, x:GL.Float, y:GL.Float)
{
    fp_glVertexStream2fATI = unsafeBitCast(get_fp("glVertexStream2fATI", support: [ss124]), to: Swift.type(of: fp_glVertexStream2fATI))
    fp_glVertexStream2fATI(stream, x, y)
}
public
func glVertexStream2fATI(stream:GL.Enum, x:GL.Float, y:GL.Float)
{
    fp_glVertexStream2fATI(stream, x, y)
}
public
func glVertexStream2fATI(_ stream:GL.Enum, _ x:GL.Float, _ y:GL.Float)
{
    fp_glVertexStream2fATI(stream, x, y)
}

var fp_glVertexStream2fvATI:@convention(c) (GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glVertexStream2fvATI
func load_glVertexStream2fvATI(stream:GL.Enum, coords:UnsafePointer<GL.Float>?)
{
    fp_glVertexStream2fvATI = unsafeBitCast(get_fp("glVertexStream2fvATI", support: [ss124]), to: Swift.type(of: fp_glVertexStream2fvATI))
    fp_glVertexStream2fvATI(stream, coords)
}
public
func glVertexStream2fvATI(stream:GL.Enum, coords:UnsafePointer<GL.Float>?)
{
    fp_glVertexStream2fvATI(stream, coords)
}
public
func glVertexStream2fvATI(_ stream:GL.Enum, _ coords:UnsafePointer<GL.Float>?)
{
    fp_glVertexStream2fvATI(stream, coords)
}

var fp_glVertexStream2iATI:@convention(c) (GL.Enum, GL.Int, GL.Int) -> () = load_glVertexStream2iATI
func load_glVertexStream2iATI(stream:GL.Enum, x:GL.Int, y:GL.Int)
{
    fp_glVertexStream2iATI = unsafeBitCast(get_fp("glVertexStream2iATI", support: [ss124]), to: Swift.type(of: fp_glVertexStream2iATI))
    fp_glVertexStream2iATI(stream, x, y)
}
public
func glVertexStream2iATI(stream:GL.Enum, x:GL.Int, y:GL.Int)
{
    fp_glVertexStream2iATI(stream, x, y)
}
public
func glVertexStream2iATI(_ stream:GL.Enum, _ x:GL.Int, _ y:GL.Int)
{
    fp_glVertexStream2iATI(stream, x, y)
}

var fp_glVertexStream2ivATI:@convention(c) (GL.Enum, UnsafePointer<GL.Int>?) -> () = load_glVertexStream2ivATI
func load_glVertexStream2ivATI(stream:GL.Enum, coords:UnsafePointer<GL.Int>?)
{
    fp_glVertexStream2ivATI = unsafeBitCast(get_fp("glVertexStream2ivATI", support: [ss124]), to: Swift.type(of: fp_glVertexStream2ivATI))
    fp_glVertexStream2ivATI(stream, coords)
}
public
func glVertexStream2ivATI(stream:GL.Enum, coords:UnsafePointer<GL.Int>?)
{
    fp_glVertexStream2ivATI(stream, coords)
}
public
func glVertexStream2ivATI(_ stream:GL.Enum, _ coords:UnsafePointer<GL.Int>?)
{
    fp_glVertexStream2ivATI(stream, coords)
}

var fp_glVertexStream2sATI:@convention(c) (GL.Enum, GL.Short, GL.Short) -> () = load_glVertexStream2sATI
func load_glVertexStream2sATI(stream:GL.Enum, x:GL.Short, y:GL.Short)
{
    fp_glVertexStream2sATI = unsafeBitCast(get_fp("glVertexStream2sATI", support: [ss124]), to: Swift.type(of: fp_glVertexStream2sATI))
    fp_glVertexStream2sATI(stream, x, y)
}
public
func glVertexStream2sATI(stream:GL.Enum, x:GL.Short, y:GL.Short)
{
    fp_glVertexStream2sATI(stream, x, y)
}
public
func glVertexStream2sATI(_ stream:GL.Enum, _ x:GL.Short, _ y:GL.Short)
{
    fp_glVertexStream2sATI(stream, x, y)
}

var fp_glVertexStream2svATI:@convention(c) (GL.Enum, UnsafePointer<GL.Short>?) -> () = load_glVertexStream2svATI
func load_glVertexStream2svATI(stream:GL.Enum, coords:UnsafePointer<GL.Short>?)
{
    fp_glVertexStream2svATI = unsafeBitCast(get_fp("glVertexStream2svATI", support: [ss124]), to: Swift.type(of: fp_glVertexStream2svATI))
    fp_glVertexStream2svATI(stream, coords)
}
public
func glVertexStream2svATI(stream:GL.Enum, coords:UnsafePointer<GL.Short>?)
{
    fp_glVertexStream2svATI(stream, coords)
}
public
func glVertexStream2svATI(_ stream:GL.Enum, _ coords:UnsafePointer<GL.Short>?)
{
    fp_glVertexStream2svATI(stream, coords)
}

var fp_glVertexStream3dATI:@convention(c) (GL.Enum, GL.Double, GL.Double, GL.Double) -> () = load_glVertexStream3dATI
func load_glVertexStream3dATI(stream:GL.Enum, x:GL.Double, y:GL.Double, z:GL.Double)
{
    fp_glVertexStream3dATI = unsafeBitCast(get_fp("glVertexStream3dATI", support: [ss124]), to: Swift.type(of: fp_glVertexStream3dATI))
    fp_glVertexStream3dATI(stream, x, y, z)
}
public
func glVertexStream3dATI(stream:GL.Enum, x:GL.Double, y:GL.Double, z:GL.Double)
{
    fp_glVertexStream3dATI(stream, x, y, z)
}
public
func glVertexStream3dATI(_ stream:GL.Enum, _ x:GL.Double, _ y:GL.Double, _ z:GL.Double)
{
    fp_glVertexStream3dATI(stream, x, y, z)
}

var fp_glVertexStream3dvATI:@convention(c) (GL.Enum, UnsafePointer<GL.Double>?) -> () = load_glVertexStream3dvATI
func load_glVertexStream3dvATI(stream:GL.Enum, coords:UnsafePointer<GL.Double>?)
{
    fp_glVertexStream3dvATI = unsafeBitCast(get_fp("glVertexStream3dvATI", support: [ss124]), to: Swift.type(of: fp_glVertexStream3dvATI))
    fp_glVertexStream3dvATI(stream, coords)
}
public
func glVertexStream3dvATI(stream:GL.Enum, coords:UnsafePointer<GL.Double>?)
{
    fp_glVertexStream3dvATI(stream, coords)
}
public
func glVertexStream3dvATI(_ stream:GL.Enum, _ coords:UnsafePointer<GL.Double>?)
{
    fp_glVertexStream3dvATI(stream, coords)
}

var fp_glVertexStream3fATI:@convention(c) (GL.Enum, GL.Float, GL.Float, GL.Float) -> () = load_glVertexStream3fATI
func load_glVertexStream3fATI(stream:GL.Enum, x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glVertexStream3fATI = unsafeBitCast(get_fp("glVertexStream3fATI", support: [ss124]), to: Swift.type(of: fp_glVertexStream3fATI))
    fp_glVertexStream3fATI(stream, x, y, z)
}
public
func glVertexStream3fATI(stream:GL.Enum, x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glVertexStream3fATI(stream, x, y, z)
}
public
func glVertexStream3fATI(_ stream:GL.Enum, _ x:GL.Float, _ y:GL.Float, _ z:GL.Float)
{
    fp_glVertexStream3fATI(stream, x, y, z)
}

var fp_glVertexStream3fvATI:@convention(c) (GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glVertexStream3fvATI
func load_glVertexStream3fvATI(stream:GL.Enum, coords:UnsafePointer<GL.Float>?)
{
    fp_glVertexStream3fvATI = unsafeBitCast(get_fp("glVertexStream3fvATI", support: [ss124]), to: Swift.type(of: fp_glVertexStream3fvATI))
    fp_glVertexStream3fvATI(stream, coords)
}
public
func glVertexStream3fvATI(stream:GL.Enum, coords:UnsafePointer<GL.Float>?)
{
    fp_glVertexStream3fvATI(stream, coords)
}
public
func glVertexStream3fvATI(_ stream:GL.Enum, _ coords:UnsafePointer<GL.Float>?)
{
    fp_glVertexStream3fvATI(stream, coords)
}

var fp_glVertexStream3iATI:@convention(c) (GL.Enum, GL.Int, GL.Int, GL.Int) -> () = load_glVertexStream3iATI
func load_glVertexStream3iATI(stream:GL.Enum, x:GL.Int, y:GL.Int, z:GL.Int)
{
    fp_glVertexStream3iATI = unsafeBitCast(get_fp("glVertexStream3iATI", support: [ss124]), to: Swift.type(of: fp_glVertexStream3iATI))
    fp_glVertexStream3iATI(stream, x, y, z)
}
public
func glVertexStream3iATI(stream:GL.Enum, x:GL.Int, y:GL.Int, z:GL.Int)
{
    fp_glVertexStream3iATI(stream, x, y, z)
}
public
func glVertexStream3iATI(_ stream:GL.Enum, _ x:GL.Int, _ y:GL.Int, _ z:GL.Int)
{
    fp_glVertexStream3iATI(stream, x, y, z)
}

var fp_glVertexStream3ivATI:@convention(c) (GL.Enum, UnsafePointer<GL.Int>?) -> () = load_glVertexStream3ivATI
func load_glVertexStream3ivATI(stream:GL.Enum, coords:UnsafePointer<GL.Int>?)
{
    fp_glVertexStream3ivATI = unsafeBitCast(get_fp("glVertexStream3ivATI", support: [ss124]), to: Swift.type(of: fp_glVertexStream3ivATI))
    fp_glVertexStream3ivATI(stream, coords)
}
public
func glVertexStream3ivATI(stream:GL.Enum, coords:UnsafePointer<GL.Int>?)
{
    fp_glVertexStream3ivATI(stream, coords)
}
public
func glVertexStream3ivATI(_ stream:GL.Enum, _ coords:UnsafePointer<GL.Int>?)
{
    fp_glVertexStream3ivATI(stream, coords)
}

var fp_glVertexStream3sATI:@convention(c) (GL.Enum, GL.Short, GL.Short, GL.Short) -> () = load_glVertexStream3sATI
func load_glVertexStream3sATI(stream:GL.Enum, x:GL.Short, y:GL.Short, z:GL.Short)
{
    fp_glVertexStream3sATI = unsafeBitCast(get_fp("glVertexStream3sATI", support: [ss124]), to: Swift.type(of: fp_glVertexStream3sATI))
    fp_glVertexStream3sATI(stream, x, y, z)
}
public
func glVertexStream3sATI(stream:GL.Enum, x:GL.Short, y:GL.Short, z:GL.Short)
{
    fp_glVertexStream3sATI(stream, x, y, z)
}
public
func glVertexStream3sATI(_ stream:GL.Enum, _ x:GL.Short, _ y:GL.Short, _ z:GL.Short)
{
    fp_glVertexStream3sATI(stream, x, y, z)
}

var fp_glVertexStream3svATI:@convention(c) (GL.Enum, UnsafePointer<GL.Short>?) -> () = load_glVertexStream3svATI
func load_glVertexStream3svATI(stream:GL.Enum, coords:UnsafePointer<GL.Short>?)
{
    fp_glVertexStream3svATI = unsafeBitCast(get_fp("glVertexStream3svATI", support: [ss124]), to: Swift.type(of: fp_glVertexStream3svATI))
    fp_glVertexStream3svATI(stream, coords)
}
public
func glVertexStream3svATI(stream:GL.Enum, coords:UnsafePointer<GL.Short>?)
{
    fp_glVertexStream3svATI(stream, coords)
}
public
func glVertexStream3svATI(_ stream:GL.Enum, _ coords:UnsafePointer<GL.Short>?)
{
    fp_glVertexStream3svATI(stream, coords)
}

var fp_glVertexStream4dATI:@convention(c) (GL.Enum, GL.Double, GL.Double, GL.Double, GL.Double) -> () = load_glVertexStream4dATI
func load_glVertexStream4dATI(stream:GL.Enum, x:GL.Double, y:GL.Double, z:GL.Double, w:GL.Double)
{
    fp_glVertexStream4dATI = unsafeBitCast(get_fp("glVertexStream4dATI", support: [ss124]), to: Swift.type(of: fp_glVertexStream4dATI))
    fp_glVertexStream4dATI(stream, x, y, z, w)
}
public
func glVertexStream4dATI(stream:GL.Enum, x:GL.Double, y:GL.Double, z:GL.Double, w:GL.Double)
{
    fp_glVertexStream4dATI(stream, x, y, z, w)
}
public
func glVertexStream4dATI(_ stream:GL.Enum, _ x:GL.Double, _ y:GL.Double, _ z:GL.Double, _ w:GL.Double)
{
    fp_glVertexStream4dATI(stream, x, y, z, w)
}

var fp_glVertexStream4dvATI:@convention(c) (GL.Enum, UnsafePointer<GL.Double>?) -> () = load_glVertexStream4dvATI
func load_glVertexStream4dvATI(stream:GL.Enum, coords:UnsafePointer<GL.Double>?)
{
    fp_glVertexStream4dvATI = unsafeBitCast(get_fp("glVertexStream4dvATI", support: [ss124]), to: Swift.type(of: fp_glVertexStream4dvATI))
    fp_glVertexStream4dvATI(stream, coords)
}
public
func glVertexStream4dvATI(stream:GL.Enum, coords:UnsafePointer<GL.Double>?)
{
    fp_glVertexStream4dvATI(stream, coords)
}
public
func glVertexStream4dvATI(_ stream:GL.Enum, _ coords:UnsafePointer<GL.Double>?)
{
    fp_glVertexStream4dvATI(stream, coords)
}

var fp_glVertexStream4fATI:@convention(c) (GL.Enum, GL.Float, GL.Float, GL.Float, GL.Float) -> () = load_glVertexStream4fATI
func load_glVertexStream4fATI(stream:GL.Enum, x:GL.Float, y:GL.Float, z:GL.Float, w:GL.Float)
{
    fp_glVertexStream4fATI = unsafeBitCast(get_fp("glVertexStream4fATI", support: [ss124]), to: Swift.type(of: fp_glVertexStream4fATI))
    fp_glVertexStream4fATI(stream, x, y, z, w)
}
public
func glVertexStream4fATI(stream:GL.Enum, x:GL.Float, y:GL.Float, z:GL.Float, w:GL.Float)
{
    fp_glVertexStream4fATI(stream, x, y, z, w)
}
public
func glVertexStream4fATI(_ stream:GL.Enum, _ x:GL.Float, _ y:GL.Float, _ z:GL.Float, _ w:GL.Float)
{
    fp_glVertexStream4fATI(stream, x, y, z, w)
}

var fp_glVertexStream4fvATI:@convention(c) (GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glVertexStream4fvATI
func load_glVertexStream4fvATI(stream:GL.Enum, coords:UnsafePointer<GL.Float>?)
{
    fp_glVertexStream4fvATI = unsafeBitCast(get_fp("glVertexStream4fvATI", support: [ss124]), to: Swift.type(of: fp_glVertexStream4fvATI))
    fp_glVertexStream4fvATI(stream, coords)
}
public
func glVertexStream4fvATI(stream:GL.Enum, coords:UnsafePointer<GL.Float>?)
{
    fp_glVertexStream4fvATI(stream, coords)
}
public
func glVertexStream4fvATI(_ stream:GL.Enum, _ coords:UnsafePointer<GL.Float>?)
{
    fp_glVertexStream4fvATI(stream, coords)
}

var fp_glVertexStream4iATI:@convention(c) (GL.Enum, GL.Int, GL.Int, GL.Int, GL.Int) -> () = load_glVertexStream4iATI
func load_glVertexStream4iATI(stream:GL.Enum, x:GL.Int, y:GL.Int, z:GL.Int, w:GL.Int)
{
    fp_glVertexStream4iATI = unsafeBitCast(get_fp("glVertexStream4iATI", support: [ss124]), to: Swift.type(of: fp_glVertexStream4iATI))
    fp_glVertexStream4iATI(stream, x, y, z, w)
}
public
func glVertexStream4iATI(stream:GL.Enum, x:GL.Int, y:GL.Int, z:GL.Int, w:GL.Int)
{
    fp_glVertexStream4iATI(stream, x, y, z, w)
}
public
func glVertexStream4iATI(_ stream:GL.Enum, _ x:GL.Int, _ y:GL.Int, _ z:GL.Int, _ w:GL.Int)
{
    fp_glVertexStream4iATI(stream, x, y, z, w)
}

var fp_glVertexStream4ivATI:@convention(c) (GL.Enum, UnsafePointer<GL.Int>?) -> () = load_glVertexStream4ivATI
func load_glVertexStream4ivATI(stream:GL.Enum, coords:UnsafePointer<GL.Int>?)
{
    fp_glVertexStream4ivATI = unsafeBitCast(get_fp("glVertexStream4ivATI", support: [ss124]), to: Swift.type(of: fp_glVertexStream4ivATI))
    fp_glVertexStream4ivATI(stream, coords)
}
public
func glVertexStream4ivATI(stream:GL.Enum, coords:UnsafePointer<GL.Int>?)
{
    fp_glVertexStream4ivATI(stream, coords)
}
public
func glVertexStream4ivATI(_ stream:GL.Enum, _ coords:UnsafePointer<GL.Int>?)
{
    fp_glVertexStream4ivATI(stream, coords)
}

var fp_glVertexStream4sATI:@convention(c) (GL.Enum, GL.Short, GL.Short, GL.Short, GL.Short) -> () = load_glVertexStream4sATI
func load_glVertexStream4sATI(stream:GL.Enum, x:GL.Short, y:GL.Short, z:GL.Short, w:GL.Short)
{
    fp_glVertexStream4sATI = unsafeBitCast(get_fp("glVertexStream4sATI", support: [ss124]), to: Swift.type(of: fp_glVertexStream4sATI))
    fp_glVertexStream4sATI(stream, x, y, z, w)
}
public
func glVertexStream4sATI(stream:GL.Enum, x:GL.Short, y:GL.Short, z:GL.Short, w:GL.Short)
{
    fp_glVertexStream4sATI(stream, x, y, z, w)
}
public
func glVertexStream4sATI(_ stream:GL.Enum, _ x:GL.Short, _ y:GL.Short, _ z:GL.Short, _ w:GL.Short)
{
    fp_glVertexStream4sATI(stream, x, y, z, w)
}

var fp_glVertexStream4svATI:@convention(c) (GL.Enum, UnsafePointer<GL.Short>?) -> () = load_glVertexStream4svATI
func load_glVertexStream4svATI(stream:GL.Enum, coords:UnsafePointer<GL.Short>?)
{
    fp_glVertexStream4svATI = unsafeBitCast(get_fp("glVertexStream4svATI", support: [ss124]), to: Swift.type(of: fp_glVertexStream4svATI))
    fp_glVertexStream4svATI(stream, coords)
}
public
func glVertexStream4svATI(stream:GL.Enum, coords:UnsafePointer<GL.Short>?)
{
    fp_glVertexStream4svATI(stream, coords)
}
public
func glVertexStream4svATI(_ stream:GL.Enum, _ coords:UnsafePointer<GL.Short>?)
{
    fp_glVertexStream4svATI(stream, coords)
}

var fp_glVertexWeightPointerEXT:@convention(c) (GL.Int, GL.Enum, GL.Size, UnsafeRawPointer?) -> () = load_glVertexWeightPointerEXT
func load_glVertexWeightPointerEXT(size:GL.Int, type:GL.Enum, stride:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glVertexWeightPointerEXT = unsafeBitCast(get_fp("glVertexWeightPointerEXT", support: [ss205]), to: Swift.type(of: fp_glVertexWeightPointerEXT))
    fp_glVertexWeightPointerEXT(size, type, stride, pointer)
}
public
func glVertexWeightPointerEXT(size:GL.Int, type:GL.Enum, stride:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glVertexWeightPointerEXT(size, type, stride, pointer)
}
public
func glVertexWeightPointerEXT(_ size:GL.Int, _ type:GL.Enum, _ stride:GL.Size, _ pointer:UnsafeRawPointer?)
{
    fp_glVertexWeightPointerEXT(size, type, stride, pointer)
}

var fp_glVertexWeightfEXT:@convention(c) (GL.Float) -> () = load_glVertexWeightfEXT
func load_glVertexWeightfEXT(weight:GL.Float)
{
    fp_glVertexWeightfEXT = unsafeBitCast(get_fp("glVertexWeightfEXT", support: [ss205]), to: Swift.type(of: fp_glVertexWeightfEXT))
    fp_glVertexWeightfEXT(weight)
}
public
func glVertexWeightfEXT(weight:GL.Float)
{
    fp_glVertexWeightfEXT(weight)
}
public
func glVertexWeightfEXT(_ weight:GL.Float)
{
    fp_glVertexWeightfEXT(weight)
}

var fp_glVertexWeightfvEXT:@convention(c) (UnsafePointer<GL.Float>?) -> () = load_glVertexWeightfvEXT
func load_glVertexWeightfvEXT(weight:UnsafePointer<GL.Float>?)
{
    fp_glVertexWeightfvEXT = unsafeBitCast(get_fp("glVertexWeightfvEXT", support: [ss205]), to: Swift.type(of: fp_glVertexWeightfvEXT))
    fp_glVertexWeightfvEXT(weight)
}
public
func glVertexWeightfvEXT(weight:UnsafePointer<GL.Float>?)
{
    fp_glVertexWeightfvEXT(weight)
}
public
func glVertexWeightfvEXT(_ weight:UnsafePointer<GL.Float>?)
{
    fp_glVertexWeightfvEXT(weight)
}

var fp_glVertexWeighthNV:@convention(c) (GL.HalfNV) -> () = load_glVertexWeighthNV
func load_glVertexWeighthNV(weight:GL.HalfNV)
{
    fp_glVertexWeighthNV = unsafeBitCast(get_fp("glVertexWeighthNV", support: [ss253]), to: Swift.type(of: fp_glVertexWeighthNV))
    fp_glVertexWeighthNV(weight)
}
public
func glVertexWeighthNV(weight:GL.HalfNV)
{
    fp_glVertexWeighthNV(weight)
}
public
func glVertexWeighthNV(_ weight:GL.HalfNV)
{
    fp_glVertexWeighthNV(weight)
}

var fp_glVertexWeighthvNV:@convention(c) (UnsafePointer<GL.HalfNV>?) -> () = load_glVertexWeighthvNV
func load_glVertexWeighthvNV(weight:UnsafePointer<GL.HalfNV>?)
{
    fp_glVertexWeighthvNV = unsafeBitCast(get_fp("glVertexWeighthvNV", support: [ss253]), to: Swift.type(of: fp_glVertexWeighthvNV))
    fp_glVertexWeighthvNV(weight)
}
public
func glVertexWeighthvNV(weight:UnsafePointer<GL.HalfNV>?)
{
    fp_glVertexWeighthvNV(weight)
}
public
func glVertexWeighthvNV(_ weight:UnsafePointer<GL.HalfNV>?)
{
    fp_glVertexWeighthvNV(weight)
}

var fp_glVideoCaptureNV:@convention(c) (GL.UInt, UnsafeMutablePointer<GL.UInt>?, UnsafeMutablePointer<GL.UInt64EXT>?) -> GL.Enum = load_glVideoCaptureNV
func load_glVideoCaptureNV(video_capture_slot:GL.UInt, sequence_num:UnsafeMutablePointer<GL.UInt>?, capture_time:UnsafeMutablePointer<GL.UInt64EXT>?) -> GL.Enum
{
    fp_glVideoCaptureNV = unsafeBitCast(get_fp("glVideoCaptureNV", support: [ss280]), to: Swift.type(of: fp_glVideoCaptureNV))
    return fp_glVideoCaptureNV(video_capture_slot, sequence_num, capture_time)
}
public
func glVideoCaptureNV(video_capture_slot:GL.UInt, sequence_num:UnsafeMutablePointer<GL.UInt>?, capture_time:UnsafeMutablePointer<GL.UInt64EXT>?) -> GL.Enum
{
    return fp_glVideoCaptureNV(video_capture_slot, sequence_num, capture_time)
}
public
func glVideoCaptureNV(_ video_capture_slot:GL.UInt, _ sequence_num:UnsafeMutablePointer<GL.UInt>?, _ capture_time:UnsafeMutablePointer<GL.UInt64EXT>?) -> GL.Enum
{
    return fp_glVideoCaptureNV(video_capture_slot, sequence_num, capture_time)
}

var fp_glVideoCaptureStreamParameterdvNV:@convention(c) (GL.UInt, GL.UInt, GL.Enum, UnsafePointer<GL.Double>?) -> () = load_glVideoCaptureStreamParameterdvNV
func load_glVideoCaptureStreamParameterdvNV(video_capture_slot:GL.UInt, stream:GL.UInt, pname:GL.Enum, params:UnsafePointer<GL.Double>?)
{
    fp_glVideoCaptureStreamParameterdvNV = unsafeBitCast(get_fp("glVideoCaptureStreamParameterdvNV", support: [ss280]), to: Swift.type(of: fp_glVideoCaptureStreamParameterdvNV))
    fp_glVideoCaptureStreamParameterdvNV(video_capture_slot, stream, pname, params)
}
public
func glVideoCaptureStreamParameterdvNV(video_capture_slot:GL.UInt, stream:GL.UInt, pname:GL.Enum, params:UnsafePointer<GL.Double>?)
{
    fp_glVideoCaptureStreamParameterdvNV(video_capture_slot, stream, pname, params)
}
public
func glVideoCaptureStreamParameterdvNV(_ video_capture_slot:GL.UInt, _ stream:GL.UInt, _ pname:GL.Enum, _ params:UnsafePointer<GL.Double>?)
{
    fp_glVideoCaptureStreamParameterdvNV(video_capture_slot, stream, pname, params)
}

var fp_glVideoCaptureStreamParameterfvNV:@convention(c) (GL.UInt, GL.UInt, GL.Enum, UnsafePointer<GL.Float>?) -> () = load_glVideoCaptureStreamParameterfvNV
func load_glVideoCaptureStreamParameterfvNV(video_capture_slot:GL.UInt, stream:GL.UInt, pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glVideoCaptureStreamParameterfvNV = unsafeBitCast(get_fp("glVideoCaptureStreamParameterfvNV", support: [ss280]), to: Swift.type(of: fp_glVideoCaptureStreamParameterfvNV))
    fp_glVideoCaptureStreamParameterfvNV(video_capture_slot, stream, pname, params)
}
public
func glVideoCaptureStreamParameterfvNV(video_capture_slot:GL.UInt, stream:GL.UInt, pname:GL.Enum, params:UnsafePointer<GL.Float>?)
{
    fp_glVideoCaptureStreamParameterfvNV(video_capture_slot, stream, pname, params)
}
public
func glVideoCaptureStreamParameterfvNV(_ video_capture_slot:GL.UInt, _ stream:GL.UInt, _ pname:GL.Enum, _ params:UnsafePointer<GL.Float>?)
{
    fp_glVideoCaptureStreamParameterfvNV(video_capture_slot, stream, pname, params)
}

var fp_glVideoCaptureStreamParameterivNV:@convention(c) (GL.UInt, GL.UInt, GL.Enum, UnsafePointer<GL.Int>?) -> () = load_glVideoCaptureStreamParameterivNV
func load_glVideoCaptureStreamParameterivNV(video_capture_slot:GL.UInt, stream:GL.UInt, pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glVideoCaptureStreamParameterivNV = unsafeBitCast(get_fp("glVideoCaptureStreamParameterivNV", support: [ss280]), to: Swift.type(of: fp_glVideoCaptureStreamParameterivNV))
    fp_glVideoCaptureStreamParameterivNV(video_capture_slot, stream, pname, params)
}
public
func glVideoCaptureStreamParameterivNV(video_capture_slot:GL.UInt, stream:GL.UInt, pname:GL.Enum, params:UnsafePointer<GL.Int>?)
{
    fp_glVideoCaptureStreamParameterivNV(video_capture_slot, stream, pname, params)
}
public
func glVideoCaptureStreamParameterivNV(_ video_capture_slot:GL.UInt, _ stream:GL.UInt, _ pname:GL.Enum, _ params:UnsafePointer<GL.Int>?)
{
    fp_glVideoCaptureStreamParameterivNV(video_capture_slot, stream, pname, params)
}

var fp_glViewport:@convention(c) (GL.Int, GL.Int, GL.Size, GL.Size) -> () = load_glViewport
func load_glViewport(x:GL.Int, y:GL.Int, width:GL.Size, height:GL.Size)
{
    fp_glViewport = unsafeBitCast(get_fp("glViewport", support: [ss346, ss365]), to: Swift.type(of: fp_glViewport))
    fp_glViewport(x, y, width, height)
}
public
func glViewport(x:GL.Int, y:GL.Int, width:GL.Size, height:GL.Size)
{
    fp_glViewport(x, y, width, height)
}
public
func glViewport(_ x:GL.Int, _ y:GL.Int, _ width:GL.Size, _ height:GL.Size)
{
    fp_glViewport(x, y, width, height)
}

var fp_glViewportArrayv:@convention(c) (GL.UInt, GL.Size, UnsafePointer<GL.Float>?) -> () = load_glViewportArrayv
func load_glViewportArrayv(first:GL.UInt, count:GL.Size, v:UnsafePointer<GL.Float>?)
{
    fp_glViewportArrayv = unsafeBitCast(get_fp("glViewportArrayv", support: [ss359, ss113]), to: Swift.type(of: fp_glViewportArrayv))
    fp_glViewportArrayv(first, count, v)
}
public
func glViewportArrayv(first:GL.UInt, count:GL.Size, v:UnsafePointer<GL.Float>?)
{
    fp_glViewportArrayv(first, count, v)
}
public
func glViewportArrayv(_ first:GL.UInt, _ count:GL.Size, _ v:UnsafePointer<GL.Float>?)
{
    fp_glViewportArrayv(first, count, v)
}

var fp_glViewportArrayvNV:@convention(c) (GL.UInt, GL.Size, UnsafePointer<GL.Float>?) -> () = load_glViewportArrayvNV
func load_glViewportArrayvNV(first:GL.UInt, count:GL.Size, v:UnsafePointer<GL.Float>?)
{
    fp_glViewportArrayvNV = unsafeBitCast(get_fp("glViewportArrayvNV", support: [ss281]), to: Swift.type(of: fp_glViewportArrayvNV))
    fp_glViewportArrayvNV(first, count, v)
}
public
func glViewportArrayvNV(first:GL.UInt, count:GL.Size, v:UnsafePointer<GL.Float>?)
{
    fp_glViewportArrayvNV(first, count, v)
}
public
func glViewportArrayvNV(_ first:GL.UInt, _ count:GL.Size, _ v:UnsafePointer<GL.Float>?)
{
    fp_glViewportArrayvNV(first, count, v)
}

var fp_glViewportIndexedf:@convention(c) (GL.UInt, GL.Float, GL.Float, GL.Float, GL.Float) -> () = load_glViewportIndexedf
func load_glViewportIndexedf(index:GL.UInt, x:GL.Float, y:GL.Float, w:GL.Float, h:GL.Float)
{
    fp_glViewportIndexedf = unsafeBitCast(get_fp("glViewportIndexedf", support: [ss359, ss113]), to: Swift.type(of: fp_glViewportIndexedf))
    fp_glViewportIndexedf(index, x, y, w, h)
}
public
func glViewportIndexedf(index:GL.UInt, x:GL.Float, y:GL.Float, w:GL.Float, h:GL.Float)
{
    fp_glViewportIndexedf(index, x, y, w, h)
}
public
func glViewportIndexedf(_ index:GL.UInt, _ x:GL.Float, _ y:GL.Float, _ w:GL.Float, _ h:GL.Float)
{
    fp_glViewportIndexedf(index, x, y, w, h)
}

var fp_glViewportIndexedfNV:@convention(c) (GL.UInt, GL.Float, GL.Float, GL.Float, GL.Float) -> () = load_glViewportIndexedfNV
func load_glViewportIndexedfNV(index:GL.UInt, x:GL.Float, y:GL.Float, w:GL.Float, h:GL.Float)
{
    fp_glViewportIndexedfNV = unsafeBitCast(get_fp("glViewportIndexedfNV", support: [ss281]), to: Swift.type(of: fp_glViewportIndexedfNV))
    fp_glViewportIndexedfNV(index, x, y, w, h)
}
public
func glViewportIndexedfNV(index:GL.UInt, x:GL.Float, y:GL.Float, w:GL.Float, h:GL.Float)
{
    fp_glViewportIndexedfNV(index, x, y, w, h)
}
public
func glViewportIndexedfNV(_ index:GL.UInt, _ x:GL.Float, _ y:GL.Float, _ w:GL.Float, _ h:GL.Float)
{
    fp_glViewportIndexedfNV(index, x, y, w, h)
}

var fp_glViewportIndexedfv:@convention(c) (GL.UInt, UnsafePointer<GL.Float>?) -> () = load_glViewportIndexedfv
func load_glViewportIndexedfv(index:GL.UInt, v:UnsafePointer<GL.Float>?)
{
    fp_glViewportIndexedfv = unsafeBitCast(get_fp("glViewportIndexedfv", support: [ss359, ss113]), to: Swift.type(of: fp_glViewportIndexedfv))
    fp_glViewportIndexedfv(index, v)
}
public
func glViewportIndexedfv(index:GL.UInt, v:UnsafePointer<GL.Float>?)
{
    fp_glViewportIndexedfv(index, v)
}
public
func glViewportIndexedfv(_ index:GL.UInt, _ v:UnsafePointer<GL.Float>?)
{
    fp_glViewportIndexedfv(index, v)
}

var fp_glViewportIndexedfvNV:@convention(c) (GL.UInt, UnsafePointer<GL.Float>?) -> () = load_glViewportIndexedfvNV
func load_glViewportIndexedfvNV(index:GL.UInt, v:UnsafePointer<GL.Float>?)
{
    fp_glViewportIndexedfvNV = unsafeBitCast(get_fp("glViewportIndexedfvNV", support: [ss281]), to: Swift.type(of: fp_glViewportIndexedfvNV))
    fp_glViewportIndexedfvNV(index, v)
}
public
func glViewportIndexedfvNV(index:GL.UInt, v:UnsafePointer<GL.Float>?)
{
    fp_glViewportIndexedfvNV(index, v)
}
public
func glViewportIndexedfvNV(_ index:GL.UInt, _ v:UnsafePointer<GL.Float>?)
{
    fp_glViewportIndexedfvNV(index, v)
}

var fp_glWaitSync:@convention(c) (GL.Sync, GL.Bitfield, GL.UInt64) -> () = load_glWaitSync
func load_glWaitSync(sync:GL.Sync, flags:GL.Bitfield, timeout:GL.UInt64)
{
    fp_glWaitSync = unsafeBitCast(get_fp("glWaitSync", support: [ss356, ss366, ss89]), to: Swift.type(of: fp_glWaitSync))
    fp_glWaitSync(sync, flags, timeout)
}
public
func glWaitSync(sync:GL.Sync, flags:GL.Bitfield, timeout:GL.UInt64)
{
    fp_glWaitSync(sync, flags, timeout)
}
public
func glWaitSync(_ sync:GL.Sync, _ flags:GL.Bitfield, _ timeout:GL.UInt64)
{
    fp_glWaitSync(sync, flags, timeout)
}

var fp_glWaitSyncAPPLE:@convention(c) (GL.Sync, GL.Bitfield, GL.UInt64) -> () = load_glWaitSyncAPPLE
func load_glWaitSyncAPPLE(sync:GL.Sync, flags:GL.Bitfield, timeout:GL.UInt64)
{
    fp_glWaitSyncAPPLE = unsafeBitCast(get_fp("glWaitSyncAPPLE", support: [ss23]), to: Swift.type(of: fp_glWaitSyncAPPLE))
    fp_glWaitSyncAPPLE(sync, flags, timeout)
}
public
func glWaitSyncAPPLE(sync:GL.Sync, flags:GL.Bitfield, timeout:GL.UInt64)
{
    fp_glWaitSyncAPPLE(sync, flags, timeout)
}
public
func glWaitSyncAPPLE(_ sync:GL.Sync, _ flags:GL.Bitfield, _ timeout:GL.UInt64)
{
    fp_glWaitSyncAPPLE(sync, flags, timeout)
}

var fp_glWeightPathsNV:@convention(c) (GL.UInt, GL.Size, UnsafePointer<GL.UInt>?, UnsafePointer<GL.Float>?) -> () = load_glWeightPathsNV
func load_glWeightPathsNV(resultPath:GL.UInt, numPaths:GL.Size, paths:UnsafePointer<GL.UInt>?, weights:UnsafePointer<GL.Float>?)
{
    fp_glWeightPathsNV = unsafeBitCast(get_fp("glWeightPathsNV", support: [ss259]), to: Swift.type(of: fp_glWeightPathsNV))
    fp_glWeightPathsNV(resultPath, numPaths, paths, weights)
}
public
func glWeightPathsNV(resultPath:GL.UInt, numPaths:GL.Size, paths:UnsafePointer<GL.UInt>?, weights:UnsafePointer<GL.Float>?)
{
    fp_glWeightPathsNV(resultPath, numPaths, paths, weights)
}
public
func glWeightPathsNV(_ resultPath:GL.UInt, _ numPaths:GL.Size, _ paths:UnsafePointer<GL.UInt>?, _ weights:UnsafePointer<GL.Float>?)
{
    fp_glWeightPathsNV(resultPath, numPaths, paths, weights)
}

var fp_glWeightPointerARB:@convention(c) (GL.Int, GL.Enum, GL.Size, UnsafeRawPointer?) -> () = load_glWeightPointerARB
func load_glWeightPointerARB(size:GL.Int, type:GL.Enum, stride:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glWeightPointerARB = unsafeBitCast(get_fp("glWeightPointerARB", support: [ss108]), to: Swift.type(of: fp_glWeightPointerARB))
    fp_glWeightPointerARB(size, type, stride, pointer)
}
public
func glWeightPointerARB(size:GL.Int, type:GL.Enum, stride:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glWeightPointerARB(size, type, stride, pointer)
}
public
func glWeightPointerARB(_ size:GL.Int, _ type:GL.Enum, _ stride:GL.Size, _ pointer:UnsafeRawPointer?)
{
    fp_glWeightPointerARB(size, type, stride, pointer)
}

var fp_glWeightPointerOES:@convention(c) (GL.Int, GL.Enum, GL.Size, UnsafeRawPointer?) -> () = load_glWeightPointerOES
func load_glWeightPointerOES(size:GL.Int, type:GL.Enum, stride:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glWeightPointerOES = unsafeBitCast(get_fp("glWeightPointerOES", support: [ss297]), to: Swift.type(of: fp_glWeightPointerOES))
    fp_glWeightPointerOES(size, type, stride, pointer)
}
public
func glWeightPointerOES(size:GL.Int, type:GL.Enum, stride:GL.Size, pointer:UnsafeRawPointer?)
{
    fp_glWeightPointerOES(size, type, stride, pointer)
}
public
func glWeightPointerOES(_ size:GL.Int, _ type:GL.Enum, _ stride:GL.Size, _ pointer:UnsafeRawPointer?)
{
    fp_glWeightPointerOES(size, type, stride, pointer)
}

var fp_glWeightbvARB:@convention(c) (GL.Int, UnsafePointer<GL.Byte>?) -> () = load_glWeightbvARB
func load_glWeightbvARB(size:GL.Int, weights:UnsafePointer<GL.Byte>?)
{
    fp_glWeightbvARB = unsafeBitCast(get_fp("glWeightbvARB", support: [ss108]), to: Swift.type(of: fp_glWeightbvARB))
    fp_glWeightbvARB(size, weights)
}
public
func glWeightbvARB(size:GL.Int, weights:UnsafePointer<GL.Byte>?)
{
    fp_glWeightbvARB(size, weights)
}
public
func glWeightbvARB(_ size:GL.Int, _ weights:UnsafePointer<GL.Byte>?)
{
    fp_glWeightbvARB(size, weights)
}

var fp_glWeightdvARB:@convention(c) (GL.Int, UnsafePointer<GL.Double>?) -> () = load_glWeightdvARB
func load_glWeightdvARB(size:GL.Int, weights:UnsafePointer<GL.Double>?)
{
    fp_glWeightdvARB = unsafeBitCast(get_fp("glWeightdvARB", support: [ss108]), to: Swift.type(of: fp_glWeightdvARB))
    fp_glWeightdvARB(size, weights)
}
public
func glWeightdvARB(size:GL.Int, weights:UnsafePointer<GL.Double>?)
{
    fp_glWeightdvARB(size, weights)
}
public
func glWeightdvARB(_ size:GL.Int, _ weights:UnsafePointer<GL.Double>?)
{
    fp_glWeightdvARB(size, weights)
}

var fp_glWeightfvARB:@convention(c) (GL.Int, UnsafePointer<GL.Float>?) -> () = load_glWeightfvARB
func load_glWeightfvARB(size:GL.Int, weights:UnsafePointer<GL.Float>?)
{
    fp_glWeightfvARB = unsafeBitCast(get_fp("glWeightfvARB", support: [ss108]), to: Swift.type(of: fp_glWeightfvARB))
    fp_glWeightfvARB(size, weights)
}
public
func glWeightfvARB(size:GL.Int, weights:UnsafePointer<GL.Float>?)
{
    fp_glWeightfvARB(size, weights)
}
public
func glWeightfvARB(_ size:GL.Int, _ weights:UnsafePointer<GL.Float>?)
{
    fp_glWeightfvARB(size, weights)
}

var fp_glWeightivARB:@convention(c) (GL.Int, UnsafePointer<GL.Int>?) -> () = load_glWeightivARB
func load_glWeightivARB(size:GL.Int, weights:UnsafePointer<GL.Int>?)
{
    fp_glWeightivARB = unsafeBitCast(get_fp("glWeightivARB", support: [ss108]), to: Swift.type(of: fp_glWeightivARB))
    fp_glWeightivARB(size, weights)
}
public
func glWeightivARB(size:GL.Int, weights:UnsafePointer<GL.Int>?)
{
    fp_glWeightivARB(size, weights)
}
public
func glWeightivARB(_ size:GL.Int, _ weights:UnsafePointer<GL.Int>?)
{
    fp_glWeightivARB(size, weights)
}

var fp_glWeightsvARB:@convention(c) (GL.Int, UnsafePointer<GL.Short>?) -> () = load_glWeightsvARB
func load_glWeightsvARB(size:GL.Int, weights:UnsafePointer<GL.Short>?)
{
    fp_glWeightsvARB = unsafeBitCast(get_fp("glWeightsvARB", support: [ss108]), to: Swift.type(of: fp_glWeightsvARB))
    fp_glWeightsvARB(size, weights)
}
public
func glWeightsvARB(size:GL.Int, weights:UnsafePointer<GL.Short>?)
{
    fp_glWeightsvARB(size, weights)
}
public
func glWeightsvARB(_ size:GL.Int, _ weights:UnsafePointer<GL.Short>?)
{
    fp_glWeightsvARB(size, weights)
}

var fp_glWeightubvARB:@convention(c) (GL.Int, UnsafePointer<GL.UByte>?) -> () = load_glWeightubvARB
func load_glWeightubvARB(size:GL.Int, weights:UnsafePointer<GL.UByte>?)
{
    fp_glWeightubvARB = unsafeBitCast(get_fp("glWeightubvARB", support: [ss108]), to: Swift.type(of: fp_glWeightubvARB))
    fp_glWeightubvARB(size, weights)
}
public
func glWeightubvARB(size:GL.Int, weights:UnsafePointer<GL.UByte>?)
{
    fp_glWeightubvARB(size, weights)
}
public
func glWeightubvARB(_ size:GL.Int, _ weights:UnsafePointer<GL.UByte>?)
{
    fp_glWeightubvARB(size, weights)
}

var fp_glWeightuivARB:@convention(c) (GL.Int, UnsafePointer<GL.UInt>?) -> () = load_glWeightuivARB
func load_glWeightuivARB(size:GL.Int, weights:UnsafePointer<GL.UInt>?)
{
    fp_glWeightuivARB = unsafeBitCast(get_fp("glWeightuivARB", support: [ss108]), to: Swift.type(of: fp_glWeightuivARB))
    fp_glWeightuivARB(size, weights)
}
public
func glWeightuivARB(size:GL.Int, weights:UnsafePointer<GL.UInt>?)
{
    fp_glWeightuivARB(size, weights)
}
public
func glWeightuivARB(_ size:GL.Int, _ weights:UnsafePointer<GL.UInt>?)
{
    fp_glWeightuivARB(size, weights)
}

var fp_glWeightusvARB:@convention(c) (GL.Int, UnsafePointer<GL.UShort>?) -> () = load_glWeightusvARB
func load_glWeightusvARB(size:GL.Int, weights:UnsafePointer<GL.UShort>?)
{
    fp_glWeightusvARB = unsafeBitCast(get_fp("glWeightusvARB", support: [ss108]), to: Swift.type(of: fp_glWeightusvARB))
    fp_glWeightusvARB(size, weights)
}
public
func glWeightusvARB(size:GL.Int, weights:UnsafePointer<GL.UShort>?)
{
    fp_glWeightusvARB(size, weights)
}
public
func glWeightusvARB(_ size:GL.Int, _ weights:UnsafePointer<GL.UShort>?)
{
    fp_glWeightusvARB(size, weights)
}

var fp_glWindowPos2d:@convention(c) (GL.Double, GL.Double) -> () = load_glWindowPos2d
func load_glWindowPos2d(x:GL.Double, y:GL.Double)
{
    fp_glWindowPos2d = unsafeBitCast(get_fp("glWindowPos2d", support: [ss350, ss369]), to: Swift.type(of: fp_glWindowPos2d))
    fp_glWindowPos2d(x, y)
}
public
func glWindowPos2d(x:GL.Double, y:GL.Double)
{
    fp_glWindowPos2d(x, y)
}
public
func glWindowPos2d(_ x:GL.Double, _ y:GL.Double)
{
    fp_glWindowPos2d(x, y)
}

var fp_glWindowPos2dARB:@convention(c) (GL.Double, GL.Double) -> () = load_glWindowPos2dARB
func load_glWindowPos2dARB(x:GL.Double, y:GL.Double)
{
    fp_glWindowPos2dARB = unsafeBitCast(get_fp("glWindowPos2dARB", support: [ss114]), to: Swift.type(of: fp_glWindowPos2dARB))
    fp_glWindowPos2dARB(x, y)
}
public
func glWindowPos2dARB(x:GL.Double, y:GL.Double)
{
    fp_glWindowPos2dARB(x, y)
}
public
func glWindowPos2dARB(_ x:GL.Double, _ y:GL.Double)
{
    fp_glWindowPos2dARB(x, y)
}

var fp_glWindowPos2dMESA:@convention(c) (GL.Double, GL.Double) -> () = load_glWindowPos2dMESA
func load_glWindowPos2dMESA(x:GL.Double, y:GL.Double)
{
    fp_glWindowPos2dMESA = unsafeBitCast(get_fp("glWindowPos2dMESA", support: [ss224]), to: Swift.type(of: fp_glWindowPos2dMESA))
    fp_glWindowPos2dMESA(x, y)
}
public
func glWindowPos2dMESA(x:GL.Double, y:GL.Double)
{
    fp_glWindowPos2dMESA(x, y)
}
public
func glWindowPos2dMESA(_ x:GL.Double, _ y:GL.Double)
{
    fp_glWindowPos2dMESA(x, y)
}

var fp_glWindowPos2dv:@convention(c) (UnsafePointer<GL.Double>?) -> () = load_glWindowPos2dv
func load_glWindowPos2dv(v:UnsafePointer<GL.Double>?)
{
    fp_glWindowPos2dv = unsafeBitCast(get_fp("glWindowPos2dv", support: [ss350, ss369]), to: Swift.type(of: fp_glWindowPos2dv))
    fp_glWindowPos2dv(v)
}
public
func glWindowPos2dv(v:UnsafePointer<GL.Double>?)
{
    fp_glWindowPos2dv(v)
}
public
func glWindowPos2dv(_ v:UnsafePointer<GL.Double>?)
{
    fp_glWindowPos2dv(v)
}

var fp_glWindowPos2dvARB:@convention(c) (UnsafePointer<GL.Double>?) -> () = load_glWindowPos2dvARB
func load_glWindowPos2dvARB(v:UnsafePointer<GL.Double>?)
{
    fp_glWindowPos2dvARB = unsafeBitCast(get_fp("glWindowPos2dvARB", support: [ss114]), to: Swift.type(of: fp_glWindowPos2dvARB))
    fp_glWindowPos2dvARB(v)
}
public
func glWindowPos2dvARB(v:UnsafePointer<GL.Double>?)
{
    fp_glWindowPos2dvARB(v)
}
public
func glWindowPos2dvARB(_ v:UnsafePointer<GL.Double>?)
{
    fp_glWindowPos2dvARB(v)
}

var fp_glWindowPos2dvMESA:@convention(c) (UnsafePointer<GL.Double>?) -> () = load_glWindowPos2dvMESA
func load_glWindowPos2dvMESA(v:UnsafePointer<GL.Double>?)
{
    fp_glWindowPos2dvMESA = unsafeBitCast(get_fp("glWindowPos2dvMESA", support: [ss224]), to: Swift.type(of: fp_glWindowPos2dvMESA))
    fp_glWindowPos2dvMESA(v)
}
public
func glWindowPos2dvMESA(v:UnsafePointer<GL.Double>?)
{
    fp_glWindowPos2dvMESA(v)
}
public
func glWindowPos2dvMESA(_ v:UnsafePointer<GL.Double>?)
{
    fp_glWindowPos2dvMESA(v)
}

var fp_glWindowPos2f:@convention(c) (GL.Float, GL.Float) -> () = load_glWindowPos2f
func load_glWindowPos2f(x:GL.Float, y:GL.Float)
{
    fp_glWindowPos2f = unsafeBitCast(get_fp("glWindowPos2f", support: [ss350, ss369]), to: Swift.type(of: fp_glWindowPos2f))
    fp_glWindowPos2f(x, y)
}
public
func glWindowPos2f(x:GL.Float, y:GL.Float)
{
    fp_glWindowPos2f(x, y)
}
public
func glWindowPos2f(_ x:GL.Float, _ y:GL.Float)
{
    fp_glWindowPos2f(x, y)
}

var fp_glWindowPos2fARB:@convention(c) (GL.Float, GL.Float) -> () = load_glWindowPos2fARB
func load_glWindowPos2fARB(x:GL.Float, y:GL.Float)
{
    fp_glWindowPos2fARB = unsafeBitCast(get_fp("glWindowPos2fARB", support: [ss114]), to: Swift.type(of: fp_glWindowPos2fARB))
    fp_glWindowPos2fARB(x, y)
}
public
func glWindowPos2fARB(x:GL.Float, y:GL.Float)
{
    fp_glWindowPos2fARB(x, y)
}
public
func glWindowPos2fARB(_ x:GL.Float, _ y:GL.Float)
{
    fp_glWindowPos2fARB(x, y)
}

var fp_glWindowPos2fMESA:@convention(c) (GL.Float, GL.Float) -> () = load_glWindowPos2fMESA
func load_glWindowPos2fMESA(x:GL.Float, y:GL.Float)
{
    fp_glWindowPos2fMESA = unsafeBitCast(get_fp("glWindowPos2fMESA", support: [ss224]), to: Swift.type(of: fp_glWindowPos2fMESA))
    fp_glWindowPos2fMESA(x, y)
}
public
func glWindowPos2fMESA(x:GL.Float, y:GL.Float)
{
    fp_glWindowPos2fMESA(x, y)
}
public
func glWindowPos2fMESA(_ x:GL.Float, _ y:GL.Float)
{
    fp_glWindowPos2fMESA(x, y)
}

var fp_glWindowPos2fv:@convention(c) (UnsafePointer<GL.Float>?) -> () = load_glWindowPos2fv
func load_glWindowPos2fv(v:UnsafePointer<GL.Float>?)
{
    fp_glWindowPos2fv = unsafeBitCast(get_fp("glWindowPos2fv", support: [ss350, ss369]), to: Swift.type(of: fp_glWindowPos2fv))
    fp_glWindowPos2fv(v)
}
public
func glWindowPos2fv(v:UnsafePointer<GL.Float>?)
{
    fp_glWindowPos2fv(v)
}
public
func glWindowPos2fv(_ v:UnsafePointer<GL.Float>?)
{
    fp_glWindowPos2fv(v)
}

var fp_glWindowPos2fvARB:@convention(c) (UnsafePointer<GL.Float>?) -> () = load_glWindowPos2fvARB
func load_glWindowPos2fvARB(v:UnsafePointer<GL.Float>?)
{
    fp_glWindowPos2fvARB = unsafeBitCast(get_fp("glWindowPos2fvARB", support: [ss114]), to: Swift.type(of: fp_glWindowPos2fvARB))
    fp_glWindowPos2fvARB(v)
}
public
func glWindowPos2fvARB(v:UnsafePointer<GL.Float>?)
{
    fp_glWindowPos2fvARB(v)
}
public
func glWindowPos2fvARB(_ v:UnsafePointer<GL.Float>?)
{
    fp_glWindowPos2fvARB(v)
}

var fp_glWindowPos2fvMESA:@convention(c) (UnsafePointer<GL.Float>?) -> () = load_glWindowPos2fvMESA
func load_glWindowPos2fvMESA(v:UnsafePointer<GL.Float>?)
{
    fp_glWindowPos2fvMESA = unsafeBitCast(get_fp("glWindowPos2fvMESA", support: [ss224]), to: Swift.type(of: fp_glWindowPos2fvMESA))
    fp_glWindowPos2fvMESA(v)
}
public
func glWindowPos2fvMESA(v:UnsafePointer<GL.Float>?)
{
    fp_glWindowPos2fvMESA(v)
}
public
func glWindowPos2fvMESA(_ v:UnsafePointer<GL.Float>?)
{
    fp_glWindowPos2fvMESA(v)
}

var fp_glWindowPos2i:@convention(c) (GL.Int, GL.Int) -> () = load_glWindowPos2i
func load_glWindowPos2i(x:GL.Int, y:GL.Int)
{
    fp_glWindowPos2i = unsafeBitCast(get_fp("glWindowPos2i", support: [ss350, ss369]), to: Swift.type(of: fp_glWindowPos2i))
    fp_glWindowPos2i(x, y)
}
public
func glWindowPos2i(x:GL.Int, y:GL.Int)
{
    fp_glWindowPos2i(x, y)
}
public
func glWindowPos2i(_ x:GL.Int, _ y:GL.Int)
{
    fp_glWindowPos2i(x, y)
}

var fp_glWindowPos2iARB:@convention(c) (GL.Int, GL.Int) -> () = load_glWindowPos2iARB
func load_glWindowPos2iARB(x:GL.Int, y:GL.Int)
{
    fp_glWindowPos2iARB = unsafeBitCast(get_fp("glWindowPos2iARB", support: [ss114]), to: Swift.type(of: fp_glWindowPos2iARB))
    fp_glWindowPos2iARB(x, y)
}
public
func glWindowPos2iARB(x:GL.Int, y:GL.Int)
{
    fp_glWindowPos2iARB(x, y)
}
public
func glWindowPos2iARB(_ x:GL.Int, _ y:GL.Int)
{
    fp_glWindowPos2iARB(x, y)
}

var fp_glWindowPos2iMESA:@convention(c) (GL.Int, GL.Int) -> () = load_glWindowPos2iMESA
func load_glWindowPos2iMESA(x:GL.Int, y:GL.Int)
{
    fp_glWindowPos2iMESA = unsafeBitCast(get_fp("glWindowPos2iMESA", support: [ss224]), to: Swift.type(of: fp_glWindowPos2iMESA))
    fp_glWindowPos2iMESA(x, y)
}
public
func glWindowPos2iMESA(x:GL.Int, y:GL.Int)
{
    fp_glWindowPos2iMESA(x, y)
}
public
func glWindowPos2iMESA(_ x:GL.Int, _ y:GL.Int)
{
    fp_glWindowPos2iMESA(x, y)
}

var fp_glWindowPos2iv:@convention(c) (UnsafePointer<GL.Int>?) -> () = load_glWindowPos2iv
func load_glWindowPos2iv(v:UnsafePointer<GL.Int>?)
{
    fp_glWindowPos2iv = unsafeBitCast(get_fp("glWindowPos2iv", support: [ss350, ss369]), to: Swift.type(of: fp_glWindowPos2iv))
    fp_glWindowPos2iv(v)
}
public
func glWindowPos2iv(v:UnsafePointer<GL.Int>?)
{
    fp_glWindowPos2iv(v)
}
public
func glWindowPos2iv(_ v:UnsafePointer<GL.Int>?)
{
    fp_glWindowPos2iv(v)
}

var fp_glWindowPos2ivARB:@convention(c) (UnsafePointer<GL.Int>?) -> () = load_glWindowPos2ivARB
func load_glWindowPos2ivARB(v:UnsafePointer<GL.Int>?)
{
    fp_glWindowPos2ivARB = unsafeBitCast(get_fp("glWindowPos2ivARB", support: [ss114]), to: Swift.type(of: fp_glWindowPos2ivARB))
    fp_glWindowPos2ivARB(v)
}
public
func glWindowPos2ivARB(v:UnsafePointer<GL.Int>?)
{
    fp_glWindowPos2ivARB(v)
}
public
func glWindowPos2ivARB(_ v:UnsafePointer<GL.Int>?)
{
    fp_glWindowPos2ivARB(v)
}

var fp_glWindowPos2ivMESA:@convention(c) (UnsafePointer<GL.Int>?) -> () = load_glWindowPos2ivMESA
func load_glWindowPos2ivMESA(v:UnsafePointer<GL.Int>?)
{
    fp_glWindowPos2ivMESA = unsafeBitCast(get_fp("glWindowPos2ivMESA", support: [ss224]), to: Swift.type(of: fp_glWindowPos2ivMESA))
    fp_glWindowPos2ivMESA(v)
}
public
func glWindowPos2ivMESA(v:UnsafePointer<GL.Int>?)
{
    fp_glWindowPos2ivMESA(v)
}
public
func glWindowPos2ivMESA(_ v:UnsafePointer<GL.Int>?)
{
    fp_glWindowPos2ivMESA(v)
}

var fp_glWindowPos2s:@convention(c) (GL.Short, GL.Short) -> () = load_glWindowPos2s
func load_glWindowPos2s(x:GL.Short, y:GL.Short)
{
    fp_glWindowPos2s = unsafeBitCast(get_fp("glWindowPos2s", support: [ss350, ss369]), to: Swift.type(of: fp_glWindowPos2s))
    fp_glWindowPos2s(x, y)
}
public
func glWindowPos2s(x:GL.Short, y:GL.Short)
{
    fp_glWindowPos2s(x, y)
}
public
func glWindowPos2s(_ x:GL.Short, _ y:GL.Short)
{
    fp_glWindowPos2s(x, y)
}

var fp_glWindowPos2sARB:@convention(c) (GL.Short, GL.Short) -> () = load_glWindowPos2sARB
func load_glWindowPos2sARB(x:GL.Short, y:GL.Short)
{
    fp_glWindowPos2sARB = unsafeBitCast(get_fp("glWindowPos2sARB", support: [ss114]), to: Swift.type(of: fp_glWindowPos2sARB))
    fp_glWindowPos2sARB(x, y)
}
public
func glWindowPos2sARB(x:GL.Short, y:GL.Short)
{
    fp_glWindowPos2sARB(x, y)
}
public
func glWindowPos2sARB(_ x:GL.Short, _ y:GL.Short)
{
    fp_glWindowPos2sARB(x, y)
}

var fp_glWindowPos2sMESA:@convention(c) (GL.Short, GL.Short) -> () = load_glWindowPos2sMESA
func load_glWindowPos2sMESA(x:GL.Short, y:GL.Short)
{
    fp_glWindowPos2sMESA = unsafeBitCast(get_fp("glWindowPos2sMESA", support: [ss224]), to: Swift.type(of: fp_glWindowPos2sMESA))
    fp_glWindowPos2sMESA(x, y)
}
public
func glWindowPos2sMESA(x:GL.Short, y:GL.Short)
{
    fp_glWindowPos2sMESA(x, y)
}
public
func glWindowPos2sMESA(_ x:GL.Short, _ y:GL.Short)
{
    fp_glWindowPos2sMESA(x, y)
}

var fp_glWindowPos2sv:@convention(c) (UnsafePointer<GL.Short>?) -> () = load_glWindowPos2sv
func load_glWindowPos2sv(v:UnsafePointer<GL.Short>?)
{
    fp_glWindowPos2sv = unsafeBitCast(get_fp("glWindowPos2sv", support: [ss350, ss369]), to: Swift.type(of: fp_glWindowPos2sv))
    fp_glWindowPos2sv(v)
}
public
func glWindowPos2sv(v:UnsafePointer<GL.Short>?)
{
    fp_glWindowPos2sv(v)
}
public
func glWindowPos2sv(_ v:UnsafePointer<GL.Short>?)
{
    fp_glWindowPos2sv(v)
}

var fp_glWindowPos2svARB:@convention(c) (UnsafePointer<GL.Short>?) -> () = load_glWindowPos2svARB
func load_glWindowPos2svARB(v:UnsafePointer<GL.Short>?)
{
    fp_glWindowPos2svARB = unsafeBitCast(get_fp("glWindowPos2svARB", support: [ss114]), to: Swift.type(of: fp_glWindowPos2svARB))
    fp_glWindowPos2svARB(v)
}
public
func glWindowPos2svARB(v:UnsafePointer<GL.Short>?)
{
    fp_glWindowPos2svARB(v)
}
public
func glWindowPos2svARB(_ v:UnsafePointer<GL.Short>?)
{
    fp_glWindowPos2svARB(v)
}

var fp_glWindowPos2svMESA:@convention(c) (UnsafePointer<GL.Short>?) -> () = load_glWindowPos2svMESA
func load_glWindowPos2svMESA(v:UnsafePointer<GL.Short>?)
{
    fp_glWindowPos2svMESA = unsafeBitCast(get_fp("glWindowPos2svMESA", support: [ss224]), to: Swift.type(of: fp_glWindowPos2svMESA))
    fp_glWindowPos2svMESA(v)
}
public
func glWindowPos2svMESA(v:UnsafePointer<GL.Short>?)
{
    fp_glWindowPos2svMESA(v)
}
public
func glWindowPos2svMESA(_ v:UnsafePointer<GL.Short>?)
{
    fp_glWindowPos2svMESA(v)
}

var fp_glWindowPos3d:@convention(c) (GL.Double, GL.Double, GL.Double) -> () = load_glWindowPos3d
func load_glWindowPos3d(x:GL.Double, y:GL.Double, z:GL.Double)
{
    fp_glWindowPos3d = unsafeBitCast(get_fp("glWindowPos3d", support: [ss350, ss369]), to: Swift.type(of: fp_glWindowPos3d))
    fp_glWindowPos3d(x, y, z)
}
public
func glWindowPos3d(x:GL.Double, y:GL.Double, z:GL.Double)
{
    fp_glWindowPos3d(x, y, z)
}
public
func glWindowPos3d(_ x:GL.Double, _ y:GL.Double, _ z:GL.Double)
{
    fp_glWindowPos3d(x, y, z)
}

var fp_glWindowPos3dARB:@convention(c) (GL.Double, GL.Double, GL.Double) -> () = load_glWindowPos3dARB
func load_glWindowPos3dARB(x:GL.Double, y:GL.Double, z:GL.Double)
{
    fp_glWindowPos3dARB = unsafeBitCast(get_fp("glWindowPos3dARB", support: [ss114]), to: Swift.type(of: fp_glWindowPos3dARB))
    fp_glWindowPos3dARB(x, y, z)
}
public
func glWindowPos3dARB(x:GL.Double, y:GL.Double, z:GL.Double)
{
    fp_glWindowPos3dARB(x, y, z)
}
public
func glWindowPos3dARB(_ x:GL.Double, _ y:GL.Double, _ z:GL.Double)
{
    fp_glWindowPos3dARB(x, y, z)
}

var fp_glWindowPos3dMESA:@convention(c) (GL.Double, GL.Double, GL.Double) -> () = load_glWindowPos3dMESA
func load_glWindowPos3dMESA(x:GL.Double, y:GL.Double, z:GL.Double)
{
    fp_glWindowPos3dMESA = unsafeBitCast(get_fp("glWindowPos3dMESA", support: [ss224]), to: Swift.type(of: fp_glWindowPos3dMESA))
    fp_glWindowPos3dMESA(x, y, z)
}
public
func glWindowPos3dMESA(x:GL.Double, y:GL.Double, z:GL.Double)
{
    fp_glWindowPos3dMESA(x, y, z)
}
public
func glWindowPos3dMESA(_ x:GL.Double, _ y:GL.Double, _ z:GL.Double)
{
    fp_glWindowPos3dMESA(x, y, z)
}

var fp_glWindowPos3dv:@convention(c) (UnsafePointer<GL.Double>?) -> () = load_glWindowPos3dv
func load_glWindowPos3dv(v:UnsafePointer<GL.Double>?)
{
    fp_glWindowPos3dv = unsafeBitCast(get_fp("glWindowPos3dv", support: [ss350, ss369]), to: Swift.type(of: fp_glWindowPos3dv))
    fp_glWindowPos3dv(v)
}
public
func glWindowPos3dv(v:UnsafePointer<GL.Double>?)
{
    fp_glWindowPos3dv(v)
}
public
func glWindowPos3dv(_ v:UnsafePointer<GL.Double>?)
{
    fp_glWindowPos3dv(v)
}

var fp_glWindowPos3dvARB:@convention(c) (UnsafePointer<GL.Double>?) -> () = load_glWindowPos3dvARB
func load_glWindowPos3dvARB(v:UnsafePointer<GL.Double>?)
{
    fp_glWindowPos3dvARB = unsafeBitCast(get_fp("glWindowPos3dvARB", support: [ss114]), to: Swift.type(of: fp_glWindowPos3dvARB))
    fp_glWindowPos3dvARB(v)
}
public
func glWindowPos3dvARB(v:UnsafePointer<GL.Double>?)
{
    fp_glWindowPos3dvARB(v)
}
public
func glWindowPos3dvARB(_ v:UnsafePointer<GL.Double>?)
{
    fp_glWindowPos3dvARB(v)
}

var fp_glWindowPos3dvMESA:@convention(c) (UnsafePointer<GL.Double>?) -> () = load_glWindowPos3dvMESA
func load_glWindowPos3dvMESA(v:UnsafePointer<GL.Double>?)
{
    fp_glWindowPos3dvMESA = unsafeBitCast(get_fp("glWindowPos3dvMESA", support: [ss224]), to: Swift.type(of: fp_glWindowPos3dvMESA))
    fp_glWindowPos3dvMESA(v)
}
public
func glWindowPos3dvMESA(v:UnsafePointer<GL.Double>?)
{
    fp_glWindowPos3dvMESA(v)
}
public
func glWindowPos3dvMESA(_ v:UnsafePointer<GL.Double>?)
{
    fp_glWindowPos3dvMESA(v)
}

var fp_glWindowPos3f:@convention(c) (GL.Float, GL.Float, GL.Float) -> () = load_glWindowPos3f
func load_glWindowPos3f(x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glWindowPos3f = unsafeBitCast(get_fp("glWindowPos3f", support: [ss350, ss369]), to: Swift.type(of: fp_glWindowPos3f))
    fp_glWindowPos3f(x, y, z)
}
public
func glWindowPos3f(x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glWindowPos3f(x, y, z)
}
public
func glWindowPos3f(_ x:GL.Float, _ y:GL.Float, _ z:GL.Float)
{
    fp_glWindowPos3f(x, y, z)
}

var fp_glWindowPos3fARB:@convention(c) (GL.Float, GL.Float, GL.Float) -> () = load_glWindowPos3fARB
func load_glWindowPos3fARB(x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glWindowPos3fARB = unsafeBitCast(get_fp("glWindowPos3fARB", support: [ss114]), to: Swift.type(of: fp_glWindowPos3fARB))
    fp_glWindowPos3fARB(x, y, z)
}
public
func glWindowPos3fARB(x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glWindowPos3fARB(x, y, z)
}
public
func glWindowPos3fARB(_ x:GL.Float, _ y:GL.Float, _ z:GL.Float)
{
    fp_glWindowPos3fARB(x, y, z)
}

var fp_glWindowPos3fMESA:@convention(c) (GL.Float, GL.Float, GL.Float) -> () = load_glWindowPos3fMESA
func load_glWindowPos3fMESA(x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glWindowPos3fMESA = unsafeBitCast(get_fp("glWindowPos3fMESA", support: [ss224]), to: Swift.type(of: fp_glWindowPos3fMESA))
    fp_glWindowPos3fMESA(x, y, z)
}
public
func glWindowPos3fMESA(x:GL.Float, y:GL.Float, z:GL.Float)
{
    fp_glWindowPos3fMESA(x, y, z)
}
public
func glWindowPos3fMESA(_ x:GL.Float, _ y:GL.Float, _ z:GL.Float)
{
    fp_glWindowPos3fMESA(x, y, z)
}

var fp_glWindowPos3fv:@convention(c) (UnsafePointer<GL.Float>?) -> () = load_glWindowPos3fv
func load_glWindowPos3fv(v:UnsafePointer<GL.Float>?)
{
    fp_glWindowPos3fv = unsafeBitCast(get_fp("glWindowPos3fv", support: [ss350, ss369]), to: Swift.type(of: fp_glWindowPos3fv))
    fp_glWindowPos3fv(v)
}
public
func glWindowPos3fv(v:UnsafePointer<GL.Float>?)
{
    fp_glWindowPos3fv(v)
}
public
func glWindowPos3fv(_ v:UnsafePointer<GL.Float>?)
{
    fp_glWindowPos3fv(v)
}

var fp_glWindowPos3fvARB:@convention(c) (UnsafePointer<GL.Float>?) -> () = load_glWindowPos3fvARB
func load_glWindowPos3fvARB(v:UnsafePointer<GL.Float>?)
{
    fp_glWindowPos3fvARB = unsafeBitCast(get_fp("glWindowPos3fvARB", support: [ss114]), to: Swift.type(of: fp_glWindowPos3fvARB))
    fp_glWindowPos3fvARB(v)
}
public
func glWindowPos3fvARB(v:UnsafePointer<GL.Float>?)
{
    fp_glWindowPos3fvARB(v)
}
public
func glWindowPos3fvARB(_ v:UnsafePointer<GL.Float>?)
{
    fp_glWindowPos3fvARB(v)
}

var fp_glWindowPos3fvMESA:@convention(c) (UnsafePointer<GL.Float>?) -> () = load_glWindowPos3fvMESA
func load_glWindowPos3fvMESA(v:UnsafePointer<GL.Float>?)
{
    fp_glWindowPos3fvMESA = unsafeBitCast(get_fp("glWindowPos3fvMESA", support: [ss224]), to: Swift.type(of: fp_glWindowPos3fvMESA))
    fp_glWindowPos3fvMESA(v)
}
public
func glWindowPos3fvMESA(v:UnsafePointer<GL.Float>?)
{
    fp_glWindowPos3fvMESA(v)
}
public
func glWindowPos3fvMESA(_ v:UnsafePointer<GL.Float>?)
{
    fp_glWindowPos3fvMESA(v)
}

var fp_glWindowPos3i:@convention(c) (GL.Int, GL.Int, GL.Int) -> () = load_glWindowPos3i
func load_glWindowPos3i(x:GL.Int, y:GL.Int, z:GL.Int)
{
    fp_glWindowPos3i = unsafeBitCast(get_fp("glWindowPos3i", support: [ss350, ss369]), to: Swift.type(of: fp_glWindowPos3i))
    fp_glWindowPos3i(x, y, z)
}
public
func glWindowPos3i(x:GL.Int, y:GL.Int, z:GL.Int)
{
    fp_glWindowPos3i(x, y, z)
}
public
func glWindowPos3i(_ x:GL.Int, _ y:GL.Int, _ z:GL.Int)
{
    fp_glWindowPos3i(x, y, z)
}

var fp_glWindowPos3iARB:@convention(c) (GL.Int, GL.Int, GL.Int) -> () = load_glWindowPos3iARB
func load_glWindowPos3iARB(x:GL.Int, y:GL.Int, z:GL.Int)
{
    fp_glWindowPos3iARB = unsafeBitCast(get_fp("glWindowPos3iARB", support: [ss114]), to: Swift.type(of: fp_glWindowPos3iARB))
    fp_glWindowPos3iARB(x, y, z)
}
public
func glWindowPos3iARB(x:GL.Int, y:GL.Int, z:GL.Int)
{
    fp_glWindowPos3iARB(x, y, z)
}
public
func glWindowPos3iARB(_ x:GL.Int, _ y:GL.Int, _ z:GL.Int)
{
    fp_glWindowPos3iARB(x, y, z)
}

var fp_glWindowPos3iMESA:@convention(c) (GL.Int, GL.Int, GL.Int) -> () = load_glWindowPos3iMESA
func load_glWindowPos3iMESA(x:GL.Int, y:GL.Int, z:GL.Int)
{
    fp_glWindowPos3iMESA = unsafeBitCast(get_fp("glWindowPos3iMESA", support: [ss224]), to: Swift.type(of: fp_glWindowPos3iMESA))
    fp_glWindowPos3iMESA(x, y, z)
}
public
func glWindowPos3iMESA(x:GL.Int, y:GL.Int, z:GL.Int)
{
    fp_glWindowPos3iMESA(x, y, z)
}
public
func glWindowPos3iMESA(_ x:GL.Int, _ y:GL.Int, _ z:GL.Int)
{
    fp_glWindowPos3iMESA(x, y, z)
}

var fp_glWindowPos3iv:@convention(c) (UnsafePointer<GL.Int>?) -> () = load_glWindowPos3iv
func load_glWindowPos3iv(v:UnsafePointer<GL.Int>?)
{
    fp_glWindowPos3iv = unsafeBitCast(get_fp("glWindowPos3iv", support: [ss350, ss369]), to: Swift.type(of: fp_glWindowPos3iv))
    fp_glWindowPos3iv(v)
}
public
func glWindowPos3iv(v:UnsafePointer<GL.Int>?)
{
    fp_glWindowPos3iv(v)
}
public
func glWindowPos3iv(_ v:UnsafePointer<GL.Int>?)
{
    fp_glWindowPos3iv(v)
}

var fp_glWindowPos3ivARB:@convention(c) (UnsafePointer<GL.Int>?) -> () = load_glWindowPos3ivARB
func load_glWindowPos3ivARB(v:UnsafePointer<GL.Int>?)
{
    fp_glWindowPos3ivARB = unsafeBitCast(get_fp("glWindowPos3ivARB", support: [ss114]), to: Swift.type(of: fp_glWindowPos3ivARB))
    fp_glWindowPos3ivARB(v)
}
public
func glWindowPos3ivARB(v:UnsafePointer<GL.Int>?)
{
    fp_glWindowPos3ivARB(v)
}
public
func glWindowPos3ivARB(_ v:UnsafePointer<GL.Int>?)
{
    fp_glWindowPos3ivARB(v)
}

var fp_glWindowPos3ivMESA:@convention(c) (UnsafePointer<GL.Int>?) -> () = load_glWindowPos3ivMESA
func load_glWindowPos3ivMESA(v:UnsafePointer<GL.Int>?)
{
    fp_glWindowPos3ivMESA = unsafeBitCast(get_fp("glWindowPos3ivMESA", support: [ss224]), to: Swift.type(of: fp_glWindowPos3ivMESA))
    fp_glWindowPos3ivMESA(v)
}
public
func glWindowPos3ivMESA(v:UnsafePointer<GL.Int>?)
{
    fp_glWindowPos3ivMESA(v)
}
public
func glWindowPos3ivMESA(_ v:UnsafePointer<GL.Int>?)
{
    fp_glWindowPos3ivMESA(v)
}

var fp_glWindowPos3s:@convention(c) (GL.Short, GL.Short, GL.Short) -> () = load_glWindowPos3s
func load_glWindowPos3s(x:GL.Short, y:GL.Short, z:GL.Short)
{
    fp_glWindowPos3s = unsafeBitCast(get_fp("glWindowPos3s", support: [ss350, ss369]), to: Swift.type(of: fp_glWindowPos3s))
    fp_glWindowPos3s(x, y, z)
}
public
func glWindowPos3s(x:GL.Short, y:GL.Short, z:GL.Short)
{
    fp_glWindowPos3s(x, y, z)
}
public
func glWindowPos3s(_ x:GL.Short, _ y:GL.Short, _ z:GL.Short)
{
    fp_glWindowPos3s(x, y, z)
}

var fp_glWindowPos3sARB:@convention(c) (GL.Short, GL.Short, GL.Short) -> () = load_glWindowPos3sARB
func load_glWindowPos3sARB(x:GL.Short, y:GL.Short, z:GL.Short)
{
    fp_glWindowPos3sARB = unsafeBitCast(get_fp("glWindowPos3sARB", support: [ss114]), to: Swift.type(of: fp_glWindowPos3sARB))
    fp_glWindowPos3sARB(x, y, z)
}
public
func glWindowPos3sARB(x:GL.Short, y:GL.Short, z:GL.Short)
{
    fp_glWindowPos3sARB(x, y, z)
}
public
func glWindowPos3sARB(_ x:GL.Short, _ y:GL.Short, _ z:GL.Short)
{
    fp_glWindowPos3sARB(x, y, z)
}

var fp_glWindowPos3sMESA:@convention(c) (GL.Short, GL.Short, GL.Short) -> () = load_glWindowPos3sMESA
func load_glWindowPos3sMESA(x:GL.Short, y:GL.Short, z:GL.Short)
{
    fp_glWindowPos3sMESA = unsafeBitCast(get_fp("glWindowPos3sMESA", support: [ss224]), to: Swift.type(of: fp_glWindowPos3sMESA))
    fp_glWindowPos3sMESA(x, y, z)
}
public
func glWindowPos3sMESA(x:GL.Short, y:GL.Short, z:GL.Short)
{
    fp_glWindowPos3sMESA(x, y, z)
}
public
func glWindowPos3sMESA(_ x:GL.Short, _ y:GL.Short, _ z:GL.Short)
{
    fp_glWindowPos3sMESA(x, y, z)
}

var fp_glWindowPos3sv:@convention(c) (UnsafePointer<GL.Short>?) -> () = load_glWindowPos3sv
func load_glWindowPos3sv(v:UnsafePointer<GL.Short>?)
{
    fp_glWindowPos3sv = unsafeBitCast(get_fp("glWindowPos3sv", support: [ss350, ss369]), to: Swift.type(of: fp_glWindowPos3sv))
    fp_glWindowPos3sv(v)
}
public
func glWindowPos3sv(v:UnsafePointer<GL.Short>?)
{
    fp_glWindowPos3sv(v)
}
public
func glWindowPos3sv(_ v:UnsafePointer<GL.Short>?)
{
    fp_glWindowPos3sv(v)
}

var fp_glWindowPos3svARB:@convention(c) (UnsafePointer<GL.Short>?) -> () = load_glWindowPos3svARB
func load_glWindowPos3svARB(v:UnsafePointer<GL.Short>?)
{
    fp_glWindowPos3svARB = unsafeBitCast(get_fp("glWindowPos3svARB", support: [ss114]), to: Swift.type(of: fp_glWindowPos3svARB))
    fp_glWindowPos3svARB(v)
}
public
func glWindowPos3svARB(v:UnsafePointer<GL.Short>?)
{
    fp_glWindowPos3svARB(v)
}
public
func glWindowPos3svARB(_ v:UnsafePointer<GL.Short>?)
{
    fp_glWindowPos3svARB(v)
}

var fp_glWindowPos3svMESA:@convention(c) (UnsafePointer<GL.Short>?) -> () = load_glWindowPos3svMESA
func load_glWindowPos3svMESA(v:UnsafePointer<GL.Short>?)
{
    fp_glWindowPos3svMESA = unsafeBitCast(get_fp("glWindowPos3svMESA", support: [ss224]), to: Swift.type(of: fp_glWindowPos3svMESA))
    fp_glWindowPos3svMESA(v)
}
public
func glWindowPos3svMESA(v:UnsafePointer<GL.Short>?)
{
    fp_glWindowPos3svMESA(v)
}
public
func glWindowPos3svMESA(_ v:UnsafePointer<GL.Short>?)
{
    fp_glWindowPos3svMESA(v)
}

var fp_glWindowPos4dMESA:@convention(c) (GL.Double, GL.Double, GL.Double, GL.Double) -> () = load_glWindowPos4dMESA
func load_glWindowPos4dMESA(x:GL.Double, y:GL.Double, z:GL.Double, w:GL.Double)
{
    fp_glWindowPos4dMESA = unsafeBitCast(get_fp("glWindowPos4dMESA", support: [ss224]), to: Swift.type(of: fp_glWindowPos4dMESA))
    fp_glWindowPos4dMESA(x, y, z, w)
}
public
func glWindowPos4dMESA(x:GL.Double, y:GL.Double, z:GL.Double, w:GL.Double)
{
    fp_glWindowPos4dMESA(x, y, z, w)
}
public
func glWindowPos4dMESA(_ x:GL.Double, _ y:GL.Double, _ z:GL.Double, _ w:GL.Double)
{
    fp_glWindowPos4dMESA(x, y, z, w)
}

var fp_glWindowPos4dvMESA:@convention(c) (UnsafePointer<GL.Double>?) -> () = load_glWindowPos4dvMESA
func load_glWindowPos4dvMESA(v:UnsafePointer<GL.Double>?)
{
    fp_glWindowPos4dvMESA = unsafeBitCast(get_fp("glWindowPos4dvMESA", support: [ss224]), to: Swift.type(of: fp_glWindowPos4dvMESA))
    fp_glWindowPos4dvMESA(v)
}
public
func glWindowPos4dvMESA(v:UnsafePointer<GL.Double>?)
{
    fp_glWindowPos4dvMESA(v)
}
public
func glWindowPos4dvMESA(_ v:UnsafePointer<GL.Double>?)
{
    fp_glWindowPos4dvMESA(v)
}

var fp_glWindowPos4fMESA:@convention(c) (GL.Float, GL.Float, GL.Float, GL.Float) -> () = load_glWindowPos4fMESA
func load_glWindowPos4fMESA(x:GL.Float, y:GL.Float, z:GL.Float, w:GL.Float)
{
    fp_glWindowPos4fMESA = unsafeBitCast(get_fp("glWindowPos4fMESA", support: [ss224]), to: Swift.type(of: fp_glWindowPos4fMESA))
    fp_glWindowPos4fMESA(x, y, z, w)
}
public
func glWindowPos4fMESA(x:GL.Float, y:GL.Float, z:GL.Float, w:GL.Float)
{
    fp_glWindowPos4fMESA(x, y, z, w)
}
public
func glWindowPos4fMESA(_ x:GL.Float, _ y:GL.Float, _ z:GL.Float, _ w:GL.Float)
{
    fp_glWindowPos4fMESA(x, y, z, w)
}

var fp_glWindowPos4fvMESA:@convention(c) (UnsafePointer<GL.Float>?) -> () = load_glWindowPos4fvMESA
func load_glWindowPos4fvMESA(v:UnsafePointer<GL.Float>?)
{
    fp_glWindowPos4fvMESA = unsafeBitCast(get_fp("glWindowPos4fvMESA", support: [ss224]), to: Swift.type(of: fp_glWindowPos4fvMESA))
    fp_glWindowPos4fvMESA(v)
}
public
func glWindowPos4fvMESA(v:UnsafePointer<GL.Float>?)
{
    fp_glWindowPos4fvMESA(v)
}
public
func glWindowPos4fvMESA(_ v:UnsafePointer<GL.Float>?)
{
    fp_glWindowPos4fvMESA(v)
}

var fp_glWindowPos4iMESA:@convention(c) (GL.Int, GL.Int, GL.Int, GL.Int) -> () = load_glWindowPos4iMESA
func load_glWindowPos4iMESA(x:GL.Int, y:GL.Int, z:GL.Int, w:GL.Int)
{
    fp_glWindowPos4iMESA = unsafeBitCast(get_fp("glWindowPos4iMESA", support: [ss224]), to: Swift.type(of: fp_glWindowPos4iMESA))
    fp_glWindowPos4iMESA(x, y, z, w)
}
public
func glWindowPos4iMESA(x:GL.Int, y:GL.Int, z:GL.Int, w:GL.Int)
{
    fp_glWindowPos4iMESA(x, y, z, w)
}
public
func glWindowPos4iMESA(_ x:GL.Int, _ y:GL.Int, _ z:GL.Int, _ w:GL.Int)
{
    fp_glWindowPos4iMESA(x, y, z, w)
}

var fp_glWindowPos4ivMESA:@convention(c) (UnsafePointer<GL.Int>?) -> () = load_glWindowPos4ivMESA
func load_glWindowPos4ivMESA(v:UnsafePointer<GL.Int>?)
{
    fp_glWindowPos4ivMESA = unsafeBitCast(get_fp("glWindowPos4ivMESA", support: [ss224]), to: Swift.type(of: fp_glWindowPos4ivMESA))
    fp_glWindowPos4ivMESA(v)
}
public
func glWindowPos4ivMESA(v:UnsafePointer<GL.Int>?)
{
    fp_glWindowPos4ivMESA(v)
}
public
func glWindowPos4ivMESA(_ v:UnsafePointer<GL.Int>?)
{
    fp_glWindowPos4ivMESA(v)
}

var fp_glWindowPos4sMESA:@convention(c) (GL.Short, GL.Short, GL.Short, GL.Short) -> () = load_glWindowPos4sMESA
func load_glWindowPos4sMESA(x:GL.Short, y:GL.Short, z:GL.Short, w:GL.Short)
{
    fp_glWindowPos4sMESA = unsafeBitCast(get_fp("glWindowPos4sMESA", support: [ss224]), to: Swift.type(of: fp_glWindowPos4sMESA))
    fp_glWindowPos4sMESA(x, y, z, w)
}
public
func glWindowPos4sMESA(x:GL.Short, y:GL.Short, z:GL.Short, w:GL.Short)
{
    fp_glWindowPos4sMESA(x, y, z, w)
}
public
func glWindowPos4sMESA(_ x:GL.Short, _ y:GL.Short, _ z:GL.Short, _ w:GL.Short)
{
    fp_glWindowPos4sMESA(x, y, z, w)
}

var fp_glWindowPos4svMESA:@convention(c) (UnsafePointer<GL.Short>?) -> () = load_glWindowPos4svMESA
func load_glWindowPos4svMESA(v:UnsafePointer<GL.Short>?)
{
    fp_glWindowPos4svMESA = unsafeBitCast(get_fp("glWindowPos4svMESA", support: [ss224]), to: Swift.type(of: fp_glWindowPos4svMESA))
    fp_glWindowPos4svMESA(v)
}
public
func glWindowPos4svMESA(v:UnsafePointer<GL.Short>?)
{
    fp_glWindowPos4svMESA(v)
}
public
func glWindowPos4svMESA(_ v:UnsafePointer<GL.Short>?)
{
    fp_glWindowPos4svMESA(v)
}

var fp_glWriteMaskEXT:@convention(c) (GL.UInt, GL.UInt, GL.Enum, GL.Enum, GL.Enum, GL.Enum) -> () = load_glWriteMaskEXT
func load_glWriteMaskEXT(res:GL.UInt, input:GL.UInt, outX:GL.Enum, outY:GL.Enum, outZ:GL.Enum, outW:GL.Enum)
{
    fp_glWriteMaskEXT = unsafeBitCast(get_fp("glWriteMaskEXT", support: [ss204]), to: Swift.type(of: fp_glWriteMaskEXT))
    fp_glWriteMaskEXT(res, input, outX, outY, outZ, outW)
}
public
func glWriteMaskEXT(res:GL.UInt, input:GL.UInt, outX:GL.Enum, outY:GL.Enum, outZ:GL.Enum, outW:GL.Enum)
{
    fp_glWriteMaskEXT(res, input, outX, outY, outZ, outW)
}
public
func glWriteMaskEXT(_ res:GL.UInt, _ input:GL.UInt, _ outX:GL.Enum, _ outY:GL.Enum, _ outZ:GL.Enum, _ outW:GL.Enum)
{
    fp_glWriteMaskEXT(res, input, outX, outY, outZ, outW)
}

